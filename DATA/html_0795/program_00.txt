
public class FooViewModel : BindableBase
{
    private FooModel _model {get; set;}
    public ReactiveCommand LoadedCommand { get; set; } = new ReactiveCommand();
    public ReactiveProperty&lt;string&gt; Name {get; set;}
    public FooViewModel
    {
        // イベントに反応する
        LoadedCommand.Subscribe(OnLoaded);
    }
    public void OnLoaded()
    {
        // ここでデータベース処理とか
        using(var db = new AppDbContext())
        {
            _model = db.Foos.FirstOrDefault();
        }
        Name = _model.ObserveProperty(x =&gt; x.Name).ToReactiveProperty();
        // プロパティ変更通知しないと新しいReactivePropertyが機能しない
        RaisePropertyChanged(null);
    }
}

