More than 3 years have passed since last update.昨日投稿した「Unityから画像のピクセル情報をネイティブに渡す方法」の続きです。昨日のプロジェクトではOnPostRenderでJavaのメソッドを呼んで、Javaネイティブ側でglReadPixelsを実行させていたのですが、UnityのMultithreaded Renderingに対応していませんでした。
そこで、GL.IssuePluginEventを使ってMultithreaded Renderingに対応させようということなのですが、結果から言えば半分できて半分諦めました。更新したサンプルプロジェクトはこちら
https://bitbucket.org/HoshiyamaTakaaki/pixelreadstestGL.IssuePluginEventはレンダリングスレッドから指定のC++メソッドを呼んでくれる命令です。
なのでそのままではJavaメソッドは呼べません。
そこでいったんC++のメソッドを経由してJNI経由でJavaのstaticメソッドを呼び出します。このような形で、C#からC++のonRenderEventがレンダリングスレッドで呼ばれます。
そしてメソッド内でJavaの目的のメソッドを探してアクセスを行います。
ちなみにJNI_OnLoadが呼ばれるスレッドとは別スレッドとなるので、JavaVM以外のJNIEnvなどの情報は取得し直す必要があるようです。これで一応Javaメソッドの呼び出しは行えるようになりましたが、ここからJava側でOpenGLESの操作を行う場合に、色々とRuntimeエラーが発生しました。
たぶんサンプルコードではJava側のOpenGLESの初期化(UnityConnect.initialize)などが別スレッドで行われているからだと思います。
GL_INVALID_OPERATIONが出まくります。というわけで、スレッドを意識して処理をきちんと整理すれば動くようになるんじゃないかと思いますが、正直もうこれ以上沼にはまる時間はないので、Multithreaded Renderingは諦めようと思います。Androidは本当に沼です。


