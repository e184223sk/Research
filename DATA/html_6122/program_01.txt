
// Copyright(c) 2017 Takahiro Miyaura
// Released under the MIT license
// http://opensource.org/licenses/mit-license.php

using HUX.Utility;
using UnityEngine;

[RequireComponent(typeof(LocalHandInput))]
public class ManupilateCube : MonoBehaviour
{
    /// &lt;summary&gt;
    /// Hand Gesture Component.
    /// &lt;/summary&gt;
    private LocalHandInput input;

    /// &lt;summary&gt;
    /// Initial world position of GameObject field.
    /// &lt;/summary&gt;
    private Vector3 _initializePos;

    /// &lt;summary&gt;
    /// material of GameObject field.
    /// &lt;/summary&gt;
    private Material material;

    // Use this for initialization
    void Start ()
    {
        input = gameObject.GetComponent&lt;LocalHandInput&gt;();
        _initializePos = gameObject.transform.localPosition;
        material = new Material(Shader.Find("Diffuse"));
        gameObject.GetComponent&lt;Renderer&gt;().material = material;
    }

    // Update is called once per frame
    void Update ()
    {

        //if Hand is lost,this gameobject's color is become Red.
        material.color = InputSources.Instance.hands.GetHandState(input.Handedness, input.MinConfidence) == null ? Color.red : new Color(.4f,.4f,1f);

        gameObject.transform.position = _initializePos + input.LocalPosition;
    }
}

