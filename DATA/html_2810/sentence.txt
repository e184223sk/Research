More than 1 year has passed since last update.C#にはフォーマット文字列を扱う手段として、以下の2つが存在する。$"{}"の方が新しい書き方で、C#6.0から使用できる。　
この記法は文字列補間(string interpolation)と呼ばれる。
メリットは以下の通り。このようになる。
注意深く見ると、{0}は文字列、{v}は式として解釈されているのが分かる。
つまりstring interpolationは変数の補完が可能になる。　
これによって変数のindex指定ミスによる順序のズレはかなり起きづらくなる。string.Format()とほとんど変わらない記法でフォーマット指定子を利用することが出来る。従来通り、フォーマット指定子の補間は効かない点に注意すること。そんなまさか...
気になったのでやってみる。
環境は以下の通りベンチマークにはBenchmarkDotNetを使用する思ってた結果と大分違う。
string.Format(string,object)
string.Format(string,string)
で差があるのは、string.Format(string,string)というオーバーロードが存在しないため、
val.ToString()が無駄になっているからだと思われる。際立って早い$"{string}"のILを確認してみる。
確認にはildasm.exeを使用した見ての通り、$"{string}"ではstring.Concat()が呼び出されている。
string.Format(string,string)は最適化がうまく掛からず、
string.Concat()ではなくstring.Format()になってしまうようだ。object型が混じるとうまく最適化されない（string.Formatに置き換えられる）ようなので、
string interpolationに入れる前に、
予め使用する変数を.ToString()しておくと良さそうだ。$"{string}"を使おう。


