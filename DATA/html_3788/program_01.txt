
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

using OpenTK;
using OpenTK.Graphics;
using OpenTK.Graphics.OpenGL;

namespace (入力したプロジェクト名)
{
    /// &lt;summary&gt;
    /// MainWindow.xaml の相互作用ロジック
    /// &lt;/summary&gt;
    public partial class MainWindow : Window
    {

        static GraphicsMode mode = new GraphicsMode(
                                                 GraphicsMode.Default.ColorFormat,
                                                 GraphicsMode.Default.Depth,
                                                 8,//GraphicsMode.Default.Stencil,
                                                 8,//GraphicsMode.Default.Samples,
                                                 GraphicsMode.Default.AccumulatorFormat,
                                                 GraphicsMode.Default.Buffers,
                                                 GraphicsMode.Default.Stereo
                                                 );

        //コンテキストの作成            
        GLControl glControl = new GLControl(mode);

        /// &lt;summary&gt;
        /// コンストラクタ
        /// &lt;/summary&gt;
        public MainWindow()
        {
            InitializeComponent();

            //イベントの追加 
            glControl.Load += glControl_Load;            
            glControl.Paint += glControl_Paint;
            glControl.Resize += glControl_Resize;
            //ホストの子に設定 
            glHost.Child = glControl;

        }

        private void glControl_Load(object sender, EventArgs e)
        {
            // 背景色の設定
            GL.ClearColor(Color4.White);

            // ビューポートの設定
            GL.Viewport(0, 0, glControl.Width, glControl.Height);

            // 視体積の設定
            GL.MatrixMode(MatrixMode.Projection);
            Matrix4 proj = Matrix4.CreatePerspectiveFieldOfView(MathHelper.PiOver4, glControl.AspectRatio, 0.2f, 5);
            GL.LoadMatrix(ref proj);

            // 視界の設定
            GL.MatrixMode(MatrixMode.Modelview);
            Matrix4 look = Matrix4.LookAt(Vector3.One, new Vector3(0, 0, 0.75f), Vector3.UnitZ);
            GL.LoadMatrix(ref look);

            // デプスバッファの使用
            GL.Enable(EnableCap.DepthTest);

            // 光源の使用
            GL.Enable(EnableCap.Lighting);

        }

        private void glControl_Resize(object sender, EventArgs e)
        {
            // ビューポートの設定
            GL.Viewport(0, 0, glControl.Width, glControl.Height);
        }

        private void glControl_Paint(object sender, System.Windows.Forms.PaintEventArgs e)
        {
            GL.Clear(ClearBufferMask.ColorBufferBit | ClearBufferMask.DepthBufferBit);

            GL.Material(MaterialFace.Front, MaterialParameter.Emission, Color4.Blue);
            tube(2, 0.1f, 0.1f);

            glControl.SwapBuffers();
        }

        float rx, ry;
        void tube(float length, float radius1, float radius2)
        {

            GL.PushMatrix();
            GL.Begin(PrimitiveType.TriangleStrip);
            GL.Normal3(Vector3.One);
            for (int deg = 0; deg &lt;= 360; deg = deg + 3)
            {
                rx = (float)Math.Cos((float)Math.PI * deg / 180);
                ry = (float)Math.Sin((float)Math.PI * deg / 180);
                GL.Vertex3(rx * radius2, ry * radius2, length / 2);
                GL.Vertex3(rx * radius1, ry * radius1, -length / 2);

            }
            GL.End();
            GL.PopMatrix();

        }

    }
}

