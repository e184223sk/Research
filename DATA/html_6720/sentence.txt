More than 3 years have passed since last update.エラトステネスの篩の実装メモという記事があって、エラトステネスの篩はLINQが遅延評価だということを実感することができる良い教材だなぁ
と思ったのでLINQを使って素朴な実装をしてみます。みんな知ってると思うけど知らない人はこちら
エラトステネスの篩Nsは二以上の自然数の無限列(実際はInt32.MaxValueまで)を返すメソッドです。
このメソッドはもちろん読めば分かる通り無限ループになっています。
が、Ns()を呼び出しただけではプログラムは問題なく終了します。これはNs()は列挙の仕方を定義しているだけで実際にはまだ列挙していないからです。
だからNs()の中身をすべて出力するようなプログラムは終了しませんが一方で呼び出しただけだと計算をしていないためすぐにこのメソッドは終了することになります。またNs().Take(2)のように先頭の方で処理を打ち切るようなメソッドを挟めば値を取り出すことができます。
Ns().Take(2).ToArray()とすれば先頭の方のみの配列を作ることができます。この用に必要になるまで値を評価しないことを遅延評価と言います。ちなみにBigIntegerじゃないのは十分素数のメソッドが遅かったからです。これは無限列が作れるのでエラトステネスの篩の本質部分をそのままメソッド化しただけです。
psは素数候補のリストになります。（つまりまだ今までの素数で割り切れていない数字の列）
ループの中身はというふうになっています。
もちろんこのメソッドも無限列なので終了しません。
が、今回は別に終了しなくて良いのでそのまま出力しています。Ctrl+Cで止まります。ちなみにですが、このpsは素数の数pnが増えていくに従ってWhereメソッドがpn個連続しているような状態になります。ですので、Firstで先頭要素を取得するタイミングで時間がかかることになります。もちろん空間計算量もO(1)に見えたりしますがそんなことはなくO(n)です。今回はLINQは遅延評価だよというのを確かめたかったのでこんな感じにしましたがもし使うことがあればこのコードを使うことは絶対におすすめしません。
無駄いっぱいあるのですよNsはintにしたんだから結局はRangeメソッドで良かった気がした


