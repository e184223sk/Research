More than 1 year has passed since last update.C#初心者かつunity初心者magicleapのチュートリアルを追っていき，その際に調べたことをメモしていきます．そのため基本的な文法の内容とスクリプトの構造自体についての内容が混在していますのでご注意ください．magicleapのコントローラにはタッチパッドがついていてその入力を受け取ることができます．この入力を受け取ってみましょう．unityエディタでの準備は2.3 タッチパッドジェスチャーUnityの通りやっていくと問題なくできましした．参考にしたのは2.4 Touchpad Gestures - Unityです．この内容を読み解いていきます．できるだけ初歩的なものからメモしていきたいと思います．これはCでいうライブラリヘッダと同じようなものだと考えます．特定のものを宣言することによってそのこに所属するクラスを宣言することができるようになります．これは表記の可読性を上げるためのコードです．これで囲んだ範囲をIDE上で折りたたむことができます．publicによりスクリプトの外側からつける形で宣言された，タッチパッドに入力された状態を表示させるための文字列を格納するクラスです．using UnityEngine.UIを宣言することで使えるようになります．これによりtextゲームオブジェクトを登録することができます．カメラに関する情報を取得するクラスです．通常のゲームオブジェクトをスクリプトから取得するためには多少手間がかかるのですが，カメラはこれにより簡単に操作できるようになります．コントローラの情報を取得するためのクラスです．詳細については調べ次第書きます．Startメソッドは特別なものでこのスクリプトが実行されたときに最初に1回のみ実行されます．これによりmagicleapの入力が開始されます．これにより左側のコントローラーを選択して入力を受け取ることができるようになりました．これもStartメソッドと同様に特殊なメソッドです．このスクリプトが登録されているゲームオブジェクトが破棄されたときに実行されます．これによりmagicleapの入力が終了されます．これも特殊なメソッドで，unityの画面が更新されるごとに実行されるメソッドです．後から宣言されているクラスをUpdateの中で実行するようにしています．ここで内容についても書いておきます．Time.dealtimeは1プレームにかかった時間を取得します．これに数値をかけることで時間を設定しています．3次元のベクトルを用意して，その中にcameraの位置情報に「cameraの位置を原点にしてz方向に1進んだ位置情報」を加えています．平たく言うと前に1だけcameraが進んだ座標を入手ました．ゲームオブジェクトの位置情報を取得して，2点間を球面補完する関数のようです．補間とは2点間を滑らかにつなぐこです．今回はgameObjectの位置からposに格納されたcameraの位置まで向かう道を作っています．特に今回は球面補間なので直線ではなく，球面に沿うような道が作られます．Unity Vectorを一通り理解する，ベクトルの線形補間についてあたりを読んでいただけるとよりわかると思います．Quaternionはゲームオブジェクトの回転を扱うクラスです．詳しい内容は「クォータニオン (Quaternion) を総整理！ ～ 三次元物体の回転と姿勢を鮮やかに扱う ～」をみると参考になると思います．特に，Quaternion.LookRotationはある方向を向かせるためのQuaternionを作成することができます．引数に向きたい方向を取ります．今回はcameraから見たgameObjectの方向を向かせています．他にもゲームオブジェクトにある方向を向かせる方法はありますが，急にその方向を向くことになります．この方法だとゆっくりその方向を向かせることができます．このメソッドではgameObjectのQuaternion値を変更しています．引数に(変更前の値，変更後の値，定数)を取ります．この関数は変更前のQuaternion値から変更後のQuaternion値まで定数の分だけ近づける機能があります．定数は０から１までの値が入力できて1に近づくほど変更後のQuaternion値の値に，0近づくほどQuaternion値に近づきます．上と同様にあとから宣言されているクラスをUpdateの中で十個するようにしています．ここで内容についても書いておきます．stringは文字列を扱う変数です．これは入力されたジェスチャーを表示するために用意しています．Tostringはintやfloatなどの数字を文字列に変換する関数です．左側のコントローラーの入力を受けた_controllerから状態を入手して代入しています．以前のバージョンのnamespaceであると思われるカンファレンスを見つけたので，「Enum MagicLeapInputControllerTouchpadGestureType」を参考にしました．これ以降の2行も同様の内容なので省略します．unity上で表示するために用意したテキストに文字列を代入します．複数の文字列を代入するときは+でつなぐことができます．以上が今回自分が調べた内容です．素人が調べた内容なので正しい情報がであることは証明できませんが，これからも内容に修正する部分を見つけ次第修正しておきます．また，内容に間違いがありましたらコメントいただけると幸いです．


