
    public class Person : IEquatable&lt;Person&gt;
    {
        protected virtual Type EqualityContract
        {
            [System.Runtime.CompilerServices.NullableContext(1)]
            [CompilerGenerated]
            get =&gt; typeof(Person);
        }
        public string Name { get; }
        public DateTime BirthDate { get; }
        public Person(string name, DateTime birthDate)
        {
            Name = name;
            BirthDate = birthDate;
        }

        public override string ToString()
        {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.Append("Person");
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }

        protected virtual bool PrintMembers(StringBuilder builder)
        {
            builder.Append("Name");
            builder.Append(" = ");
            builder.Append((object?)Name);
            builder.Append(", ");
            builder.Append("BirthDate");
            builder.Append(" = ");
            builder.Append(BirthDate.ToString());
            return true;
        }

        [System.Runtime.CompilerServices.NullableContext(2)]
        public static bool operator !=(Person? r1, Person? r2) =&gt; !(r1 == r2);

        [System.Runtime.CompilerServices.NullableContext(2)]
        public static bool operator ==(Person? r1, Person? r2) =&gt; (object)r1 == r2 || (r1?.Equals(r2) ?? false);

        public override int GetHashCode() =&gt; (EqualityComparer&lt;Type&gt;.Default.GetHashCode(EqualityContract) * -1521134295 + EqualityComparer&lt;string&gt;.Default.GetHashCode(Name)) * -1521134295 + EqualityComparer&lt;DateTime&gt;.Default.GetHashCode(BirthDate);
        public override bool Equals(object? obj) =&gt; Equals(obj as Person);
        public virtual bool Equals(Person? other) =&gt; (object)other != null &amp;&amp; EqualityContract == other!.EqualityContract &amp;&amp; EqualityComparer&lt;string&gt;.Default.Equals(Name, other!.Name) &amp;&amp; EqualityComparer&lt;DateTime&gt;.Default.Equals(BirthDate, other!.BirthDate);
        public virtual Person&lt;Clone&gt;$() =&gt; new Person(this); // Clone系の何からしいが不明

        protected Person(Person original)
        {
            Name = original.Name;
            BirthDate = original.BirthDate;
        }
    }


