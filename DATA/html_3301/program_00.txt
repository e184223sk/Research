using System;
using System.IO;
using System.Text.RegularExpressions;
using System.Web;

namespace StripHTMLs
{
    class Program
    {
        static void Main(string[] args)
        {
            StreamReader reader = new StreamReader(new FileStream(args[0], FileMode.Open, FileAccess.Read));
            String motoData = reader.ReadToEnd();
            Console.WriteLine("FileName: " + args[0]);
            Console.WriteLine("Input Data is: ");
            Console.WriteLine(motoData);
            Console.WriteLine("========================");
            Console.WriteLine("ans is");

            // まずは、HTMLエンコードをする(既にエンコード済の文字が再エンコードされないように「&lt;」「&gt;」「"」だけエンコードする)
            motoData = motoData.Replace("&lt;","&amp;lt;").Replace("&gt;","&amp;gt;").Replace("\"","&amp;quot;");

            // &lt;b&gt;&lt;/b&gt;&lt;i&gt;&lt;/i&gt;&lt;br&gt;&lt;/font&gt;など属性のない許可タグ(と閉じタグ)を元に戻す
            // &amp;lt;(((/)?((b)|(i)))|(br)|(/font))&amp;gt;
            // →
            // &amp;lt;
            //  (
            //     (
            //       (/)?((b)|(i))
            //     )
            //   |
            //     (br)
            //   |
            //     (/font)
            //  )
            // &amp;gt;
            Regex regex0 = new Regex("&amp;lt;(((/)?((b)|(i)))|(br)|(/font))&amp;gt;", RegexOptions.IgnoreCase | RegexOptions.Singleline);
            motoData = regex0.Replace(motoData, m =&gt;  HttpUtility.HtmlDecode(m.Value) );

            // fontタグのsizeとcolorだけ許可する
            // &amp;lt;font(( size=&amp;quot;[0-9]+&amp;quot;)|( color=&amp;quot;[a-z0-9#]+&amp;quot;))+&amp;gt;
            // →
            // &amp;lt;font
            //    (
            //        ( size=&amp;quot;[0-9]+&amp;quot;)
            //      |
            //        ( color=&amp;quot;[a-z0-9#]+&amp;quot;)
            //    )+
            // &amp;gt;
            Regex regex1 = new Regex("&amp;lt;font(( size=&amp;quot;[0-9]+&amp;quot;)|( color=&amp;quot;[a-z0-9#]+&amp;quot;))+&amp;gt;", RegexOptions.IgnoreCase | RegexOptions.Singleline);
            motoData = regex1.Replace(motoData, m =&gt; HttpUtility.HtmlDecode(m.Value));

            Console.WriteLine(motoData);
        }
    }
}

