More than 1 year has passed since last update.これまでC#とPythonの連携について似たようなネタをいくつか書いてきた。「C# GUIアプリケーションからPythonスクリプトを実行する」では、Pythonスクリプトを実行し、処理が終了するまで進捗状況を確認できるようにした。「C# GUIからPythonのコードを実行する」では、Pythonスクリプトではなく、画面上からPythonコードを入力できるようにしてみた。そして「C# GUIからバックグラウンドでプロセスを実行し管理する」では、Pythonを実行した後、終了まで待たずに別の作業をしつつ、気になったときに実行状況を確認できる方法について調べた。そこで、今回がこのシリーズ最後のネタになる。そもそもGUIなんかいらんから、Pythonのスクリプトを実行して、その処理結果を受け取るようなメソッドとか作りたいんだけど、どうすんの？要するにGUIを介さず、Pythonスクリプトを開始し、実行が終わるまで次の処理に行かずにそこで待ち（同期をとる）、その後結果を取得するという形の呼び出しだ。はい、どん。目新しいことはなく、プロセスを開始したらそのままWaitForExit()を実行しているだけ。そうするとプロセスが終了するまで次にいかない。これにより同期的な呼び出しが実現できる。実行終了後、終了コードや標準出力のデータをプロパティから取得できるようにしている。以下はスクリプトの標準入力にデータを与え、標準出力に出力された結果を受け取る例である。プロセスを2回スタートさせるという致命的バグがあったため以下の通り修正。ご迷惑おかけしました。// Process p = Process.Start(psInfo);
Process p = new System.Diagnostics.Process();
p.StartInfo = psInfo;要するに、今までに出てきた全ての呼び出し方に対応したコンポーネントをいい加減作れよという話。後、タイトルはPythonスクリプトにしているが、コマンドラインから実行できるものであれば同じですね。


