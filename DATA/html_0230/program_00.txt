using Cysharp.Threading.Tasks;
using System.Threading;
using UnityEngine;

public class Main : MonoBehaviour
{
    [SerializeField] private PlayerController m_PlayerController = null;
    [SerializeField] private AudioManager m_AudioManager = null;
    [SerializeField] private DataManager m_DataManager = null;
    [SerializeField] private InputManager m_InputManager = null;
    [SerializeField] private UIManager m_UIManager = null;
    [SerializeField] private XRManager m_XRManager = null;

    /// &lt;summary&gt;
    /// エントリーポイントです。
    /// &lt;/summary&gt;
    private async UniTask Start()
    {
        await InitializeAsync();

        UpdateLoop(this.GetCancellationTokenOnDestroy()).Forget();
    }

    /// &lt;summary&gt;
    /// 初期化処理を実行します。
    /// &lt;/summary&gt;
    private async UniTask InitializeAsync()
    {
        m_PlayerController.Initialize();
        m_AudioManager.Initialize();
        m_DataManager.Initialize();
        m_InputManager.Initialize();
        m_UIManager.Initialize();
        m_XRManager.Initialize();

        await UniTask.Yield();
    }

    /// &lt;summary&gt;
    /// Update処理を実行します。
    /// &lt;/summary&gt;
    private async UniTaskVoid UpdateLoop(CancellationToken cancellationToken)
    {
        while (true)
        {
            // Updateで実行する処理をここに記述します。

            await UniTask.Yield(PlayerLoopTiming.Update, cancellationToken);
        }
    }
}


