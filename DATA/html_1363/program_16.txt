
using System.Threading;
using Cysharp.Threading.Tasks;
using UnityEngine;
using UnityEngine.AddressableAssets;
using UnityEngine.UI;

public class AsyncOperationHandleAwaitSample : MonoBehaviour
{
    /// &lt;summary&gt;
    /// 読み込む対象のAssetReference
    /// &lt;/summary&gt;
    [SerializeField] AssetReference _target;

    [SerializeField] private RawImage _image;

    private void Start()
    {
        var token = this.GetCancellationTokenOnDestroy();
        InitializeAsync(_target, token).Forget();
    }

    private async UniTaskVoid InitializeAsync(
        AssetReference target,
        CancellationToken token)
    {
        // Addressables.LoadAssetAsyncをawaitで待ち受ける
        var texture = await Addressables.LoadAssetAsync&lt;Texture&gt;(target)
            .WithCancellation(token);

        _image.texture = texture;
    }
}

