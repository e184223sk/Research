using System;
using System.Collections.Generic;

namespace Permutation
{
    class Program
    {
        static void Main(string[] args)
        {
            new Program();
        }

        public Program()
        {
            List&lt;int&gt; data = new List&lt;int&gt; { 1, 2, 3, 4 };
            List&lt;List&lt;int&gt;&gt; perm = GetPermutation(data);
            foreach (List&lt;int&gt; p in perm) {
                Console.WriteLine(string.Join(",", p));
            }
        }

        private List&lt;List&lt;int&gt;&gt; GetPermutation(List&lt;int&gt; data)
        {
            List&lt;List&lt;int&gt;&gt; perm = new List&lt;List&lt;int&gt;&gt;();
            if (data.Count == 0) {
                perm.Add(data);
                return perm;
            }

            for (int i = 0; i &lt; data.Count; i++) {
                int head = data[i];

                List&lt;int&gt; dataCopy = new List&lt;int&gt;(data);
                dataCopy.RemoveAt(i);
                List&lt;List&lt;int&gt;&gt; childPerm = GetPermutation(dataCopy);
                foreach (List&lt;int&gt; child in childPerm) {
                    child.Insert(0, head);
                    perm.Add(child);
                }
            }
            return perm;
        }
    }
}

