この記事は、こちらの記事を参考にお互いが正面向き合ってる状態で、判定する内容になります。
内積、Vector3.Dot、normarizedについての説明は、参考記事内にあるため省略します。
【Unity(C#)】Rayではなく内積(Vector3.Dot)で視線判定を行う記述が増えてしまう為、お互いの頭のゲームオブジェクトは今回Inspecterからアタッチしてます。
概ね頭のある場所は、キャラクターオブジェクト&gt;Root&gt;Hips&gt;Spine_1&gt;Spine_2&gt;Neck&gt;Headと言った感じの階層です。
取り敢えず、どんなもんか気になる人向けに先にコードを出します。
・一定距離にいて
・顔も向き合っている以上の状態であると？マークが表示されるようになります。Transform.InverseTransformPoint
ワールド空間からローカル空間へ position を変換します。これにより、プレイヤーの頭が対象の頭にとってローカル空間にpositionが変換され
前方側(z &gt;= 0 )にいる状態になります。
Vector3.Dot(targetToCharaDirection, targetHead.transform.forward.normalized) &gt; 0.9　    //正規化したベクトルの内積が相手の頭から一定以上
によりあまりいらない気もします。Vector3.magnitude
ベクトルの長さ（読み取り専用）
ベクトルの (x x+y y+z* z) の平方根の長さを返します。今回の使い方としては、対象の頭の位置とプレイヤーの頭の位置を差し引いた時の距離の値が
distanceに設定した値より小さければ距離の判定を満たす形になっています。
そうしないと、数百m離れても判定する事に・・・


