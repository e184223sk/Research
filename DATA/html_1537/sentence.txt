もくじ
→https://qiita.com/tera1707/items/4fda73d86eded283ec4f画像に対していろいろやるシリーズWPFアプリで、画像ファイルやアプリの表示画像を取り込んで、そこに四角やテキストを書き込んで、画面に表示したりファイルに保存したりしたい。以前、'System.Drawing.Bitmap'を使用してそういうことをしたことがある(こちら)が、'System.Drawing.Bitmap'はWinFormで使われていた少々古いやり方だという個人の認識があるので、WPFっぽい'System.Windows.Imaging'をつかったやり方でやってみたい。下記のようなことをする。上のやり方では、元画像にいろいろ書き込むのはDrawingVisualを使ってやっている。
が、別のやり方もあるようなので、下に挙げておく。最初例ではDrawingVisualのdv.RenderOpen()で、DrawingContextを作成していたが、こっちはDrawingGroupのdrawingGroup.Open()でDrawingContextを作成している。Visualとつくので、なにかUI部品の先祖クラスだから重たそう、というイメージだったが、下記をみるとそうではなさそう、なのか？
→https://docs.microsoft.com/ja-jp/dotnet/framework/wpf/graphics-multimedia/using-drawingvisual-objectsあと、以前の記事でもちょっとメモした、System.Windows.Imagingの画像関係のクラス(BitmapSourceとそれを継承したクラス)の親戚のようなクラスで、DrawingImageというのが出てきた。こいつも、BitmapSourceと同じImageSourceを継承しているので、ImageのSourceにセットして画面表示に使うことができる。不思議なのが、BitmapSource側には、ファイルの保存に使える「BitmapFrame」というクラスがあるが、DrawingImage側にはそういうのがない。
そのため、一旦、上のコードでいうところのDrawingVisualに変換して、そこからRenderTargetBitmapに直して、そこからBitmapFrameを使ってファイル保存、ということをしないと、ファイル保存できない。
(いまのところ、そういうやり方しか見つけられていない)
もっとシンプルに画像を保存することはできないのか？クラスの継承関係がよくわからなくなったので、下記にまとめてみた。
まとめてみると、少しだけわかりやすくなった気がした。自分の実験コード
https://github.com/tera1707/WPF-/tree/master/034_AboutBitmapDotNetCoreWriteableBitmapに文字を書き込んで画面に表示する方法
http://kskhsn15.hatenadiary.jp/entry/20130318/1363622850Convert DrawingImage to BitmapImage
https://stackoverflow.com/questions/14387350/convert-drawingimage-to-bitmapimageDrawingVisual
https://docs.microsoft.com/ja-jp/dotnet/framework/wpf/graphics-multimedia/using-drawingvisual-objects
https://docs.microsoft.com/ja-jp/dotnet/api/system.windows.media.drawingvisual?view=netframework-4.8DrawingImage
https://docs.microsoft.com/ja-jp/dotnet/api/system.windows.media.drawingimage?view=netframework-4.8
https://docs.microsoft.com/ja-jp/dotnet/framework/wpf/graphics-multimedia/how-to-use-a-drawing-as-an-image-source


