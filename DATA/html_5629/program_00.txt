/// &lt;summary&gt;
/// メイン関数
/// &lt;/summary&gt;
/// &lt;param name="args"&gt;コマンドライン引数&lt;/param&gt;
static void Main(string[] args)
{
    // テストケース
    var nameList = new List&lt;string&gt; {
        "Tokyo", "Osaka", "Aichi", "America", "London", "Australia",
    };

    //-----------------------------------------
    // リスト内から6文字以上の文字列を探す場合
    //-----------------------------------------

    // パターン１
    var nameBuf1 = nameList.Where(s =&gt; 6 &lt;= s.Length);
    Print(nameBuf1);

    // パターン２
    Func&lt;string, bool&gt; func2 = (s) =&gt; 6 &lt;= s.Length;
    var nameBuf2 = nameList.Where(func2);
    Print(nameBuf2);

    // パターン３
    Func&lt;string, bool&gt; func3 = (s) =&gt; { return 6 &lt;= s.Length; };
    var nameBuf3 = nameList.Where(func3);
    Print(nameBuf3);

    // パターン４
    Func&lt;string, bool&gt; func4 = Judge;
    var nameBuf4 = nameList.Where(func4);
    Print(nameBuf4);
}

/// &lt;summary&gt;
/// パターン４確認用メソッド
/// &lt;/summary&gt;
/// &lt;param name="s"&gt;判定文字列&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
static bool Judge(string s)
{
    return 6 &lt;= s.Length;
}

/// &lt;summary&gt;
/// 結果確認
/// &lt;/summary&gt;
/// &lt;param name="v"&gt;出力対象&lt;/param&gt;
static void Print(IEnumerable&lt;string&gt; v)
{
    foreach (var name in v)
    {
        Console.WriteLine(name);
    }
    Console.WriteLine("---");
}

