using System;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// unsafe が必要です
unsafe class Program
{
    // ネイティブ関数の宣言
    // nint はネイティブ整数の意味である、IntPtr にコンパイルされます
    [DllImport("./foo.dll", EntryPoint = "foo")]
    static extern string Foo(delegate* unmanaged[Cdecl]&lt;int, nint&gt; gen, int count);

    // UnmanagedCallersOnly でマークされたメソッドには次の制限があります：
    // * "static" に設定する
    // * マネージコードから呼び出すことはダメ
    // * Blittable パラメータのみ
    [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl) })]
    static nint Generate(int count)
    {
        // count 個 'w' を含む文字列の生成
        var str = Enumerable.Repeat("w", count).Aggregate((a, b) =&gt; $"{a}{b}");
        return Marshal.StringToHGlobalAnsi(str);
    }

    static void Main(string[] args)
    {
        // 関数ポインタの作成
        var f = (delegate* unmanaged[Cdecl]&lt;int, nint&gt;)(delegate*&lt;int, nint&gt;)&amp;Generate;
        // 呼び出す
        var result = Foo(f, 5);
        Console.WriteLine(result);
    }
}

