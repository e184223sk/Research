
public DelegateCommand ExecuteDelegateCommand { get; }
public DelegateCommand&lt;string&gt; ExecuteGenericDelegateCommand { get; }
public DelegateCommand DelegateCommandObservesProperty { get; }
public DelegateCommand DelegateCommandObservesCanExecute { get; }

public MainWindowViewModel()
{
    ExecuteDelegateCommand =
        new DelegateCommand(Execute, CanExecute);

    DelegateCommandObservesProperty =
        new DelegateCommand(Execute, CanExecute).ObservesProperty(() =&gt; IsEnabled);

    DelegateCommandObservesCanExecute =
        new DelegateCommand(Execute).ObservesCanExecute(() =&gt; IsEnabled);

    ExecuteGenericDelegateCommand =
        new DelegateCommand&lt;string&gt;(ExecuteGeneric).ObservesCanExecute(() =&gt; IsEnabled);
}   

