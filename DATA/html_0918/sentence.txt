More than 1 year has passed since last update.テキスト ファイルを操作するコンソール アプリを作成していて、ファイルの文字コード指定方法をオプション化するために、Encoding.GetEncoding()で指定可能な主要な表記を調べてみた。上記の表は改行点の制御のために見せるために、を一部使用しています。
(要約：コピペ注意)一般的な表記が一応対応しており、大文字小文字も吸収してくれるので、コンソールが受け取った引き数をそのまま直接Encoding.GetEncoding()に渡しても良さそう。アプリ側で特にフィルタリングする場合、場合によってはパラメータを制限することになるので、フィルタリングする必要がなく丸投げできるのはありがたい。特に UTF-16LE UTF-16BE の表記は普通に使いたかったので。ただ、BOMの有無の吸収については悩みどころ。。。最近私がjavascriptナイズされており、無名関数まわりがあまりC#らしくない書き方になっています。
callback関数を関数の引数に取りたい、 即時実行関数を書きたい などの参考にもなるかもです。また、ラムダ式 のありがたみを体感するために、あえて delegate で記述しています。
ぶっちゃけjavascript同様、タイプ数が大幅に減るわけではなく、厳密な動作の違いや可読性面の方が気になる感じです。個人的には予約語があることで関数である自己主張の高い delegate も結構良いと感じております。尚、三項演算子 型推論 は 宗教上の理由 で使えません。Encoding.GetEncoding メソッド (System.Text) | Microsoft Docs
https://docs.microsoft.com/ja-jp/dotnet/api/system.text.encoding.getencoding?view=netframework-4.5Encoding.WebName プロパティ (System.Text) | Microsoft Docs
https://docs.microsoft.com/ja-jp/dotnet/api/system.text.encoding.webname?view=netframework-4.5#System_Text_Encoding_WebNameEncodingInfo.GetEncoding メソッド (System.Text) | Microsoft Docs
https://docs.microsoft.com/ja-jp/dotnet/api/system.text.encodinginfo.getencoding?view=netframework-4.5ISO/IEC 10646#文字符号化方式 - Wikipedia
https://ja.wikipedia.org/wiki/ISO/IEC_10646#%E6%96%87%E5%AD%97%E7%AC%A6%E5%8F%B7%E5%8C%96%E6%96%B9%E5%BC%8F


