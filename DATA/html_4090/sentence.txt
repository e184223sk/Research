More than 1 year has passed since last update.このエントリは.NET Core2.1でスマートメーターと戯れる Part1の続きです。ECHONET Lite規格書 Ver.1.13をもとにプロトコル上要求される全機能を実装しています。GitHub
こちらがメインとなるクラスで、ECHONETLiteのノードとして振る舞うことができます。
ECHONETLite通信ネットワーク上の他ノードを識別し各種イベントを発生させます。
他ノードに対して、各種サービス(書き込み要求や、読み出し要求)を送信できます。GitHubECHONET機器オブジェクト詳細規定の定義を表すJSONファイル、およびそれを読み取るクラス群
APPENDIX ECHONET機器オブジェクト詳細規定 Release K （日本語版）をもとに生成しています。
（プロファイルオブジェクトも含めています）APPENDIX ECHONET機器オブジェクト詳細規定ってPDFでしか一般公開されてなくて、手こずりました。
PDF-&gt;Word-&gt;Excel-&gt;Jsonと段階を踏みまくって、なんとか手でコピペみたいなことは避けられましたが、、
エコーネットコンソーシアムの会員だとPDF版以外の仕様書も入手できるんですかね…？散々手こずって出来上がった後に、
神奈川工科大学のスマートハウス研究センターが以下を公開していることに気づきましたが、後の祭り。。
ECHONET-APPENDIXECHONET Liteは下位(1-4(5))プロトコルを規定しておらず、任意に適用できます。
EchoDotNetLiteとしては、下位プロトコルとのやり取りをするインターフェースIPANAClient名前がおかしいを公開しており、
そのインターフェースを実装して下位プロトコルに渡すブリッジ的なアセンブリを別途作成する必要があります。今回は、Bルート用といわゆるLAN用のブリッジを作成しています。サンプル的なアプリケーションを作成して公開しています。
いずれもRaspberryPi上での動作を確認しています。以下ソースを抜粋BルートなのでECHONET上の他ノードは１個だけの想定で実装。
インスタンスリスト通知要求の応答を受けたら、スマートメーターのプロパティマップの読み取り通知がEchoDotNetLite内で送信されるので、終わるまで待機します。ECHONETLiteプロトコル的には全プロパティを一括で要求できるのですが、なぜかうちのスマートメーターは不可応答を返すので、１個づつプロパティ値を読んでます。取れました！！！GitHub EchoDotNetLiteLANBridge.ExampleプロジェクトEchoDotNetLiteの実装の確認をするために、実装してみました。我が家にはLANにつながる家電がないので、機器オブジェクトエミュレーター:MoekadenRoomを使って
いろいろ値を読み出した後、エアコンをONにして黙り込むアプリです。スマートメーターから瞬間電力量を取りたいは実現できた。
ECHONET Liteプロトコルまわりは(たぶん/なんとなく)それなりに実装できている気がする。実用的なアプリをつくるには、ECHONET Lite規格だけではなく、
ECHONET Lite AIF(アプリケーションインターフェース仕様)仕様を満たす必要があると思われる。ECHONET Lite システム設計指針の第６章スマート電力量メータ AIF 仕様に関する実装事例と指針を見ると、
ECHONET Lite規格に定義されたシーケンスだけでは分かりえない、
スマートメーター機器固有のふるまいがあることが見受けられる。ちなみに、AIF仕様はエコーネットコンソーシアム非会員には公開されてない。
＃エコーネットコンソーシアムは企業と教育機関が会員になれます
AIF仕様を公開してほしいマジ。なんで公開されてないんでしょうね…？実は大穴空いたスマメが出回ってて、公開すると大問題になるから公開できないんじゃ とか勘ぐってしまう
どなたか理由がわかれば教えてください。今回作ったプログラムはMITライセンスですべてGitHubに公開しています。
ご利用は法律とか規格とか規約とかライセンスとかに従って、自己責任でお願いします。.NET Coreで作ったので、RaspberryPiで動かして、Azureへ連携するようなアプリを作ろうと思っています。
IoTEdgeを試してみようかと。でも、IoTEdge(Dockerコンテナ)から、SerialPortにアクセスするハードルを越えないとだめで、
なんか GitHubにIssue Azure/iotedge Read serialport on Linux #71があったり。


