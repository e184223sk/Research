using System;
using System.Drawing;
using System.Windows.Forms;

namespace WindowsFormsApp6
{
    public partial class Form1 : Form
    {
        FontDialog fontDialog1 { get; set; } = new FontDialog();

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            // 必要に応じて初期値を設定

            //初期のフォントを設定
            fontDialog1.Font = richTextBox1.Font;
            // 初期の色を設定
            fontDialog1.Color = richTextBox1.ForeColor;
            // ユーザーが選択できるポイントサイズの最大値を設定する
            fontDialog1.MaxSize = 15;
            fontDialog1.MinSize = 10;
            // 存在しないフォントやスタイルをユーザーが選択すると
            // エラーメッセージを表示する
            fontDialog1.FontMustExist = true;
            // 横書きフォントだけを表示する
            fontDialog1.AllowVerticalFonts = false;
            // 色を選択できるようにする
            fontDialog1.ShowColor = true;
            // 取り消し線、下線、テキストの色などのオプションを指定可能にする
            // デフォルトがTrueのため必要はない
            fontDialog1.ShowEffects = true;
            // 固定ピッチフォント以外も表示する
            // デフォルトがFalseのため必要はない
            fontDialog1.FixedPitchOnly = false;
            // ベクタ フォントを選択できるようにする
            // デフォルトがTrueのため必要はない
            fontDialog1.AllowVectorFonts = true;
        }

        // フォントダイアログボックス呼び出しボタン
        private void tsbFontSetting_Click(object sender, EventArgs e)
        {
            if (fontDialog1.ShowDialog() == DialogResult.OK)
            {
                //OKボタンが押されたら、フォントを設定する
                richTextBox1.SelectionFont = fontDialog1.Font;
                richTextBox1.SelectionColor = fontDialog1.Color;
            }
        }

        // フォントを大きくするボタン
        private void tsbIncreaseFontSize_Click(object sender, EventArgs e)
        {
            var currentSize = richTextBox1.SelectionFont.Size;
            currentSize += 2.0F;
            richTextBox1.SelectionFont = new Font(
                richTextBox1.SelectionFont.Name,
                currentSize,
                richTextBox1.SelectionFont.Style,
                richTextBox1.SelectionFont.Unit);
        }

        // フォントを小さくするボタン
        private void tsbDecreaseFontSize_Click(object sender, EventArgs e)
        {
            var currentSize = richTextBox1.SelectionFont.Size;
            currentSize -= 1;
            richTextBox1.SelectionFont = new Font(
                richTextBox1.SelectionFont.Name,
                currentSize,
                richTextBox1.SelectionFont.Style);
        }

        // フォントを太字にするボタン
        private void tsbBold_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionFont = new Font(richTextBox1.SelectionFont.FontFamily,
                richTextBox1.SelectionFont.Size,
                richTextBox1.SelectionFont.Style ^ FontStyle.Bold);
        }

        // フォントを斜字にするボタン
        private void tsbItalic_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionFont = new Font(richTextBox1.SelectionFont.FontFamily,
                richTextBox1.SelectionFont.Size,
                richTextBox1.SelectionFont.Style ^ FontStyle.Italic);
        }

        // テキストに下線を引くボタン
        private void tsbUnderline_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionFont = new Font(richTextBox1.SelectionFont.FontFamily,
                richTextBox1.SelectionFont.Size,
                richTextBox1.SelectionFont.Style ^ FontStyle.Underline);
        }

        // テキストに取り消し線を付けるボタン
        private void tsbStrikeout_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionFont = new Font(richTextBox1.SelectionFont.FontFamily,
                richTextBox1.SelectionFont.Size,
                richTextBox1.SelectionFont.Style ^ FontStyle.Strikeout);
        }

        // 左寄せボタン
        private void tsbTextLeft_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionAlignment = HorizontalAlignment.Left;
        }

        // 中央寄せボタン
        private void tsbTextCenter_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionAlignment = HorizontalAlignment.Center;
        }

        // 右寄せボタン
        private void tsbTextRight_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionAlignment = HorizontalAlignment.Right;
        }

        // 箇条書きボタン
        private void tsbBullet_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionBullet = !richTextBox1.SelectionBullet;
        }

        // 右インデントボタン
        private void tsbIndent_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionIndent += 16;
        }

        // 左インデントボタン
        private void tsbOutdent_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionIndent -= 16;
        }
    }
}

