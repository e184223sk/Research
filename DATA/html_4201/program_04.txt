
public class ChatComponent : MonoBehaviour, IChatHubReceiver
{
    private Channel _channel;
    private IChatHub _chutHub;
    private bool _isJoin;

    //受信メッセージ
    public Text ChatText;

    //入室・退室UI
    public Button JoinOrLeaveButton;
    public Text JoinOrLeaveButtonText;

    //テキスト送信UI
    public Button SendMessageButton;
    public InputField Input;

    // Start is called before the first frame update
    void Start()
    {
        this._isJoin = false;

        //Client側のHubの初期化
        this._channel = new Channel("localhost:12345", ChannelCredentials.Insecure);
        this._chutHub = StreamingHubClient.Connect&lt;IChatHub, IChatHubReceiver&gt;(this._channel, this);

        //メッセージ送信ボタンはデフォルト非表示
        this.SendMessageButton.gameObject.SetActive(false);
    }

    // Update is called once per frame
    void Update()
    {

    }

    async void OnDestroy()
    {
        await this._chutHub.DisposeAsync();
        await this._channel.ShutdownAsync();
    }

    #region Client -&gt; Server

    /// &lt;summary&gt;
    /// 参加してなかったら参加する。
    /// 参加してたら退室する。
    /// &lt;/summary&gt;
    public async void JoinOrLeave()
    {
        if (this._isJoin)
        {
            await this._chatHub.LeaveAsync();
            this._isJoin = false;
            this.JoinOrLeaveButtonText.text = "入室する";
            //メッセージ送信ボタンを非表示に
            this.SendMessageButton.gameObject.SetActive(false);
        }
        else
        {
            await this._chatHub.JoinAsync(this.Input.text);
            this._isJoin = true;
            this.JoinOrLeaveButtonText.text = "退室する";
            //メッセージ送信ボタンを表示
            this.SendMessageButton.gameObject.SetActive(true);
        }
    }

    /// &lt;summary&gt;
    /// メッセージを送信
    /// &lt;/summary&gt;
    public async void SendMessage()
    {
        //入室してなかったら何もしない
        if (!this._isJoin)
            return;

        await this._chatHub.SendMessageAsync(this.Input.text);
    }


    #endregion  

    #region Client &lt;- Server

    public void OnJoin(string name)
    {
        this.ChatText.text += $"\n{name}さんが入室しました";
    }

    public void OnLeave(string name)
    {
        this.ChatText.text += $"\n{name}さんが退室しました";
    }

    public void OnSendMessage(string name, string message)
    {
        this.ChatText.text += $"\n{name}：{message}";
    }
    #endregion
}

public interface IChatHubReceiver
{
    void OnJoin(string name);
    void OnLeave(string name);
    void OnSendMessage(string name, string message);
}

public interface IChatHub : IStreamingHub&lt;IChatHub, IChatHubReceiver&gt;
{
    Task JoinAsync(string userName);
    Task LeaveAsync();
    Task SendMessageAsync(string message);
}

