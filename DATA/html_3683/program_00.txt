using System;
using System.Collections.Generic;
using System.IO;
using System.IO.Compression;
using System.Linq;

namespace CsTest
{
    class Program
    {
        static byte[] CompressGZip(byte[] input)
        {
            using (var ms = new MemoryStream())
            {
                using (var compressStream = new GZipStream(ms, CompressionMode.Compress))
                    compressStream.Write(input, 0, input.Length);
                return ms.ToArray();
            }
        }
        static byte[] CompressDeflate(byte[] input)
        {
            using (var ms = new MemoryStream())
            {
                using (var compressStream = new DeflateStream(ms, CompressionMode.Compress))
                    compressStream.Write(input, 0, input.Length);
                return ms.ToArray();
            }
        }
        static void Main(string[] args)
        {
            var random = new Random(0);
            var binaries = new byte[][]{
                Enumerable.Range(0, 200).Select(i =&gt; (byte)i).ToArray(),
                Enumerable.Range(0, 100).SelectMany(i =&gt; new byte[]{ 0, (byte)i }).ToArray(),
                Enumerable.Repeat(0, 200).Select(_ =&gt; (byte)random.Next(byte.MaxValue)).ToArray(),
                Enumerable.Repeat(new byte[]{ 0, 20, 250, 24 }, 50).SelectMany(b =&gt; b).ToArray(),
            };

            foreach (var binary in binaries)
            {
                var gzResult = CompressGZip(binary);
                var deflateResult = CompressDeflate(binary);
                Console.WriteLine($"Original Length:{binary.Length} GZip Length: {gzResult.Length,3} Deflate Lengths: {deflateResult.Length,3}");
            }
        }
    }
}

