
internal List&lt;string&gt; Export()
{
    var contents = new List&lt;string&gt;();
    using (var ppt = new ComWrapper&lt;PowerPoint.Presentation&gt;(
        ppts.Open(file,
            ReadOnly: Microsoft.Office.Core.MsoTriState.msoTrue,
            WithWindow: Microsoft.Office.Core.MsoTriState.msoFalse)
        ))
    {
        var tempFiles = new string[2];
        var success = false;
        try
        {
            tempFiles[0] = Path.GetTempFileName();
            tempFiles[1] = Path.GetTempFileName();

            //Text in PPT
            //Save as rich text file.
            ppt.ComObject.SaveAs(tempFiles[0], FileFormat: PowerPoint.PpSaveAsFileType.ppSaveAsRTF);
            //Read and save as a text file.
            string richText = File.ReadAllText(tempFiles[0], Encoding.Default);
            //Cheep trick to convert text from rtf.
            RichTextBox richTextBox = new RichTextBox();
            richTextBox.Rtf = richText;
            File.WriteAllText(tempFiles[0], richTextBox.Text, Encoding.Default);

            //Text in shapes &amp; comments
            var slideContents = new List&lt;string&gt;();
            foreach (PowerPoint.Slide slide in ppt.ComObject.Slides)
            {
                foreach (PowerPoint.Shape shape in slide.Shapes)
                {
                    ExtractShapeContents(slideContents, shape);
                }
                foreach (PowerPoint.Comment comment in slide.Comments)
                {
                    slideContents.Add(comment.Author + ":" + comment.Text);
                }
                slideContents.Add(slide.NotesPage.Shapes.Placeholders[2].TextFrame.TextRange.Text);//placefolders[1] is slide itself.
            }
            File.WriteAllLines(tempFiles[1], slideContents, Encoding.Default);
            success = true;
        }
        finally
        {
            ppt.ComObject.Close();
            //merge contents after closing ppt.
            if(success)
            {
                contents = FileUtils.MergeTextContents(tempFiles);
            }
            FileUtils.DeleteFiles(tempFiles);
        }
        return contents;
    }
}


