
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class OVRInputShapeKey : MonoBehaviour{
    public HumanoidHandPose.HandPose _LeftShape = 0;
    public HumanoidHandPose.HandPose _RightShape = 0;
    [SerializeField] protected OVRInput.Controller _LeftController = (OVRInput.Controller)OVRPlugin.Controller.LTouch;
    [SerializeField] protected OVRInput.Controller _RightController = (OVRInput.Controller)OVRPlugin.Controller.RTouch;
    void Update(){
        UpdateHandPose();
    }

    private void UpdateHandPose(){
        _LeftShape = GetHandPose(_LeftController);
        _RightShape = GetHandPose(_RightController);
    }
    private HumanoidHandPose.HandPose GetHandPose(OVRInput.Controller controller){
        if(OVRInput.Get(OVRInput.Touch.PrimaryThumbstick,controller)){
            if(OVRInput.Get(OVRInput.Button.PrimaryIndexTrigger,controller)){
                if(OVRInput.Get(OVRInput.Button.PrimaryHandTrigger,controller)){
                    return HumanoidHandPose.HandPose.Fist;
                }
            }
            if(OVRInput.Get(OVRInput.Touch.PrimaryIndexTrigger,controller)){
                return HumanoidHandPose.HandPose.Neutral;
            }else{
                if(OVRInput.Get(OVRInput.Button.PrimaryHandTrigger,controller)){
                    return HumanoidHandPose.HandPose.FingerPoint;
                }else{
                    return HumanoidHandPose.HandPose.Victory;
                }
            }
        }else{
            if(OVRInput.Get(OVRInput.Button.PrimaryIndexTrigger,controller)){
                if(OVRInput.Get(OVRInput.Button.PrimaryHandTrigger,controller)){
                    return HumanoidHandPose.HandPose.ThumbUp;
                }else{
                    return HumanoidHandPose.HandPose.Neutral;
                }
            }else if(OVRInput.Get(OVRInput.Touch.PrimaryIndexTrigger,controller)){
                return HumanoidHandPose.HandPose.Neutral;
            }else{
                if(OVRInput.Get(OVRInput.Button.PrimaryHandTrigger,controller)){
                    return HumanoidHandPose.HandPose.HandGun;
                }else{
                    return HumanoidHandPose.HandPose.Neutral;
                }
            }
        }
    }
}

