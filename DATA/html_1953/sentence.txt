More than 1 year has passed since last update.Happy hacking!
初投稿記事です。突然ですが、こんな図形を描画するプログラム、カワイイと思いませんか？カワイイですよね、ありがとうございます。
今回は皆様に摩訶不思議なセル・オートマトンの世界をご紹介したいと思います。それでは、いってみましょ～！🐕セル・オートマトン（英: cellular automaton、略称：CA）とは、格子状のセルと単純な規則による、離散的計算モデルである。Wikipediaより引用なるほど、わからんまず、無限に広がる方眼紙を想定します。Excelでもいいです。 無限……？
その方眼紙におけるマス目がセルにあたります。
各セルは2つの状態(0, 1)のうちいずれかに決定されます。
各セルは単純なルールに従って、離散的な――つまり分断された非連続的な時間経過とともに変化していきます。
その変化の様を観察していくと、冒頭のような幾何学模様を描き出す 単純なルール が存在することに気が付きます。
気が付いたんです、昔のすごいヒトが。
すごいですよね。今回は 1次元 のセル・オートマトンにフォーカスしていきます。
高次のセル・オートマトンについてはまたの機会に！さて、先程から話しているこの魔法のような単純なルールって一体何なんでしょうね。
まず、用語として 近傍 (neighbourhood, neighborhood)という言葉が出てきます。
ここでは、隣接するセル群のことだと理解してください。1次元というくらいですから、セルは線状に並んでいます。こんな感じに。🐕 &lt; 有限の計算をする際、両端には常に0の状態を持つセルを想定するワン🐾両端の亜空間を除いた5マスの方眼紙に、0の状態を持つセルが2つと、1の状態を持つセルが3つ並んでいます。
例えば、真ん中の1の状態を持つセルを中心に考えると、近傍は両隣の0の状態を持つセルです。
全てのセルについてそれぞれの近傍を見ていくと、次のようになります。5マスの方眼紙なので、中心とその近傍のグループは当然5つ存在します。
このグループの状態をもとに、次の世代におけるセルの状態を決定していきます。
具体的なルールを例に、その状態変化の過程を見てみましょう。フラクタル図形のひとつであるシェルピンスキーのギャスケットと呼ばれる図形を生成する、ルール90を例にして1次元セル・オートマトンにおけるルールを理解してみます。これは、中心とその近傍の状態をもとに、その中心セルが次世代においてどのような状態に決定されるかを表したものです。次のようなセルの初期状態を想定します。
(記載していませんが、両端は0です。)先程の状態遷移表に従って次世代のセルの状態を表してみると、こんな感じになります。さらに次の世代を見てみましょう。このような変化を無限に繰り返すわけです。
この変化を下方向に積み上げるかたちで描画すると、こんな興味深い図形が生成されるんですね～！はい、記事冒頭の図形はルール90によって生成されたものでした。ところで、ルール90における 90 って何なんでしょう。
先程の、ルール90についての状態遷移表における 次世代における中央セルの状態 を下から順に並べてみます。01011010これを2進数として捉え、10進数に変換したものをルールの名称として使っているのです！01011010(2) = 90(10)つまり、逆算するとルールの番号から状態遷移表が導き出せます。
ルール30の状態遷移表をつくってみましょう。30(10) = 00011110(2)次のような初期状態を与えて、3世代分の変化を見てみます。ルール30は次のような図形を生成します。
これまたカワイイ……。前述したように、各セルは2つの状態(0, 1)のうちいずれかに決定されます。
先程の状態遷移表を見ても分かるように、1次元セル・オートマトンにおける中心と近傍は3つのセルによって構成されるので、8つのパターン(23 = 8)をとります。
中心と近傍によって決定される 次世代における中央セルの状態 もまた2つの状態をとるので、ルールは全部で 256種類 (28 = 256)存在することが分かります。ルールに与えられた0から255までの番号を ウルフラム・コード と呼びます。
これは、イギリスの理論物理学者スティーブン・ウルフラムが考案したことに由来します。すきな言語でつくってみよう！🐕 &lt; イヌはC#がすき！以下は抜粋したソースです。
ソースのフルバージョンはイヌの GitHub にありますので、是非遊んでみてください！セル・オートマトンは様々な研究に用いられています。
今回のテーマである1次元セル・オートマトンにおける最も有名であろう利用方法として、一車線の高速道路における交通流シミュレーションが挙げられます。
ルール184 がこのシミュレーションをするためのモデルとして利用できます。実際に適当な初期状態を与えてルール184を動かしてみると、交通渋滞の様子を再現できます。
この素晴らしいインターネッツで検索してみるとたくさんの論文を読むことができるので、興味のある方は是非！イモガイの一種であるタガヤサンミナシという貝は、ルール30が生成する模様によく似た貝殻を持つことで知られています。何故キミはその模様を選んだのだ……？
何に対して都合が良かったのだ……？生命 という現象の謎を解き明かすために考案され、発展してきたセル・オートマトン。
この深淵の先に見えるものとは？
たとえそれが、呪いだったとしても……。


