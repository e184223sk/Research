Unityに限らず、開発においてデバッグツールは必須です。
特にXR系の開発だと、実機で動かしながらあれこれパラメータを調整したい、このタイミングでこのイベント発火させたい、となることが多いと思います。
デバッグ用のUI作って、DebugManagerとか作って、設定ファイルパースして読み込んで、デバッグビルドのときだけ有効になるようにして……。
「そんなもん増えたり減ったりするのに毎回追従して作るのめんどくさくない……？」とわたしは常々思っていました。3段階も必要なのは正直言って苦痛です。「便利 &gt; 手間」であるべきデバッグツールが、「手間 &gt; 便利」になって、結果、デバッグツールを作った人くらいしかメンテをしなくなるか、誰も使わなくなるか、ということがよくあります。というわけで、それを解決するためのデバッグツールを作りました。EasyHttpRpcアプリ内にサーバを立ててAPIを叩くことで、任意の引数を渡して任意のメソッドを実行し、ログを取得したりとかパラメータ変更したりとか、その他いろいろの操作ができるやつです。EasyHttpRpcExample
サンプルのリポジトリです。
クラスも3つ、なにひとつ難しいことはしていないので、中身を見てもらえれば雰囲気はわかると思います。VSCodeのプラグインREST Clientをインストールします。
REST Client
VSCodeのプラグインをインストールします。これ自体は名前の通りREST APIを実行するためのツールなので、curlが実行できる環境があれば入れなくても大丈夫です。2このリポジトリをクローンします。Assets/Scenes/EasyHttpRPCExample.unityを開いて実行します。

実行するとGameタブの左上とDebuggerにくっついているDebuggerPrimitiveSupplierにサーバのアドレスが表示されます。http/rest.httpをVSCodeで開きます。画面に表示されたアドレスをrest.httpに入力します。  先程のスクリーンショットの環境をもとに入力するならこんな感じです。RPCって堂々と言うのは憚られるのでかんたんRPCって書きました。
任意のタイミングで実行できて返り値も出せるのでRPCっぽいなにかと名乗っても許してほしいところです。基本的にGETを想定しています。引数に=?が含まれているとか改行コードがあるとかそういう面倒な問題に出くわしたときの回避策としてPOSTもいちおう入れてありますが、ほんとに入れただけです。
引数も返り値もstringで、使うところで使う人がパースする、と割り切りました。jsonはなにげに書くの面倒なのでGETのパラメータをそのままNameValueCollectionとして出しています。これくらいプリミティブにしておいたほうが変更に強いでしょう。EasyHttpRpcはパラメータも込みでcurl叩ければなんでもいいので、htmlとかも返すようにしてやると、ブラウザから操作できるようになるので、非エンジニアの人でも操作できるようになっていいかもしれません。UIメンテナンス問題が復活しますが、UnityのGUIいじるよりはhtmlを適当にぽちぽちするほうがまだましでしょう。容赦なく非UIスレッドから実行されるので、そこだけは気をつけてください。
どうせ現代のアプリにおいて非同期処理は必須なので、とりあえずUniTask使ったらいいと思います。ちくちく夜なべして作った甲斐あって、少なくとも自分が今使っている分にはいい感じです。
XRデバイスでの文字入力、つらい。おしまい。スマホ実機でデバグ用のhttpサーバを動かしてみる
C# による簡易 HTTP サーバの実装
[VSCode] REST Client は変数を使うとAPIの環境やパラメータ変更が楽になる！
【Unity】カラーコードとColor型を変換する【C#】
GUIのフォントサイズ変更など特にVRゴーグルやARグラスはデバッグに使える視野が限られている、いわば「画面が狭い」デバイスなのでデバッグメニュー作るのほんとつらい ↩余談ですがこのツールThis is itって感じでめちゃくちゃ使いやすいです。IntelliJのやつとほぼ一緒なのがポイント。HoppscotchとかPostmanとかいろいろありますが、API叩きたいだけなのにアカウント要求やらなんやらされると、めんどくさくてイヤ。 ↩


