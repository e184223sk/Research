More than 1 year has passed since last update.ラムダ式の初歩を踏み外して進んできてしまった事に割と最近気づいた、と言う恥ずかしい話です。
今時点のまとめを。
もし同じような悩みにぶつかった人の助けになることを願って。ラムダ式をAction/Funcの指定をしないで書くときの引数や返り値の理解が曖昧でした。2019.02.02 @sdkei 様 のご指摘から匿名型の記述を変更私は「_」が特別なものと思い込んでおりちょっと混乱しました。
@albireo 様からの指摘がありました。
C#7.0以降では明確に制限を付けることが出来ます。ラムダ式の引数の「_」はコンパイラに「これは使うつもりのない引数です」と教えることでエラーチェックするためのもので、もし「_を右辺で参照していてもエラー扱いしない」というコンパイラオプションがあれば実行時には普通のパラメータ変数とまったく同じ扱いになる。と言う事でコンパイラオプションで「_ 」を使うとエラーにすることも出来るようです。
よって明確に「使わない」と言う意思を持って「_」にしましょう。と言うことですか。引数を「,」で区切ればOKです。必ず返り値が必要。
式形式の場合はreturn不要
ステートメント形式の場合はreturn句が必要です。Func&lt;TResult&gt; 型にしなければなりません。Func&lt;T1,T2,･･･,Tresult&gt; ですね。例えば IObserveble&lt;TResult&gt;.Subscribe() で使う場合は、
引数にAction&lt;TResult&gt;が指定されるので引数が必要です。私が躓いたのはReactiveCommand.Subscribe()でした。一見引数なしでいけそうですが、ReactiveCommandはIObservable&lt;object&gt;なので引数が必要なのです。因みにこのobjectに何が入ってくるのか・・・？と調べてみたらExecuteした時の引数のようです。ReactiveCommand&lt;T&gt; もあるので混乱してしまいました。因みにばっちり↓にもはまっていたので余計に混乱してました。
https://blog.kazuakix.jp/entry/2015/06/28/233439


