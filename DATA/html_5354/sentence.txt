More than 3 years have passed since last update.ミニゲームを作ってUnityを学ぶ！[3Dマインスイーパー編]前回まででとりあえずマインスイーパーを一通りプレイすることができるようになりました。
今回はいくつかの機能を追加してより遊びやすくなった「3Dマインスイーパー」を完成させます。今の段階ではまだEASYでしかプレイできない難易度に新しくNORMALとHARDを追加し、それを切り替える機能を実装します。まずはGameControllerにプロパティを追加して現在のゲーム難易度を保持できるようにします。GameControllerのプロパティ追加にあわせてSceneMainを修正し、同時に難易度を変更するための新しいメソッドを追加します。難易度の変更や取得はmGameのプロパティGameLevelを利用するよう修正しています。
また難易度の変更の際に実行されるOnSelectLevel()では引数のDropdownからvalueの値を取得して、それによって処理を分岐させています。プレイヤーの操作で難易度を変更するためのUIとしてドロップダウンメニューを設置します。プロジェクトを実行して、左上に表示されたドロップダウンメニューから難易度を選択することでそれに対応したフィールドが再生成されることを確認してください。新しい難易度を加えたことでフィールドが最大で30x16のブロックで埋め尽くされるようになりました。
それによって以下2つの問題が発生してしまいましたので、次はそれを修正していきます。フィールドが大きくなったことによって固定カメラではどうしても押せないブロックが出てきてしまいました。
この問題を解消するために、カメラに移動機能を実装します。CheckInput()ではWASDキーいずれかが押されている場合にベクトルの値を増減させ、そのベクトルの長さが0より大きい（つまり移動する方向が決定している）場合にMove()を実行します。そしてMove()ではカメラ自身のTransformポジションを移動させることで視点の移動を行います。
この際にカメラがフィールドを全く映さないような状況を避けるために予めSetLimit()によってカメラが移動できる範囲を設定しています。続いて、CameraControllerの追加にあわせてSceneMainを修正します。1: 「Main Camera」をインスペクタから設定Update()にて、プレイ中にカメラ操作の入力を受け付けるよう修正しています。
またLoadStage()のタイミングで難易度に合わせたカメラの移動範囲を設定しています。↑ 難易度Normalのプレイ中にカメラを左下に寄せた図続いて、UIをクリックしたはずが下のブロックまで反応してしまう状態を解消します。この問題はプレイヤーの「クリック」という1つのアクションをボタンやドロップダウンといったUIを管理しているEventSystemとブロックを管理しているBlockManagerの両方が受け取ってしまうことが原因ですので、EventSystemがすでに入力を受け取っている場合はBlockManagerに対する入力を無効化するという方法で対応します。最初にEventSysem.currentで現在のシーンに配置されているEventSystemの参照を取得し、IsPointerOverGameObject()によってマウスポインターがUIオブジェクトに重なっているかどうかを判定しています。
この結果がtrueだった場合はすでにEventSystemが入力を受け取っていますので、以降のブロックに対する処理をキャンセルします。参考： コンポーネントのイベント実行順についてのTips
参考： EventSystemのExecutionOrderに勝つ難易度を増やしたことによって発生した問題は解消できました。
続いて、プレイ開始から終了までのタイムを計測する機能を実装していきます。ボタンオブジェクトを代用してプレイからの経過時間を示すUIを作成します。新しく作成したButtonTimeに対応できるよう、UiManagerにコードを追加します。1: 「ButtonTime/Text」をインスペクタから設定RenewTimeText()ではint型で受け取った経過時間を「TIME: 2桁の分:2桁の秒」の文字列に加工してButtonTimeのテキスト部分に反映しています。経過時間を管理するためのスクリプト「GameTimer」を新しく作成します。GameTimerを制御して実際にタイム計測ができるよう、SceneMainにコードを追加します。今回のタイマーにはコルーチンの仕組みを利用しています。参考： Unityにおけるコルーチンの性質まとめ計測を開始するタイミングでコルーチンをスタートさせて1秒毎に経過時間を表すButtonTimerのテキストを更新し、終了する場合はStopAllCoroutines()で現在動いている全てのコルーチンを止めています。最後に、画面下部に操作方法を表示するUIを設置して3Dマインスイーパーを完成させます。6回にわたって解説を行ってきた3Dマインスイーパーは以上で完成となります。前回のタンクウォーズ編に続いて至らない点も多々ありますが、本記事が少しでも参考になれば幸いでございます。
またコードやテキストの不備などございましたら、ぜひぜひお知らせくださいませ。それでは最後に、プロジェクトを実行して3Dマインスイーパーが完成していることを確認します。ご覧いただき、ありがとうございました。


