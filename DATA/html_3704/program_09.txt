
/*
OwnerHandler.cs

Copyright (c) 2021 Dango

This software is released under the MIT License.
http://opensource.org/licenses/mit-license.php
*/

using System.Collections.Generic;
using MonobitEngine;
using UnityEngine;
using MonoBehaviour = UnityEngine.MonoBehaviour;

namespace MunCommunication {
    /// &lt;summary&gt;
    /// Configure MonoBehavior.enabled by ownership of attached object.
    /// &lt;/summary&gt;
    public class OwnerHandler : MunMonoBehaviour {
        [SerializeField] private List&lt;MonoBehaviour&gt; enableIfOwner;
        [SerializeField] private List&lt;MonoBehaviour&gt; disableIfOwner;

        // Start is called before the first frame update
        void Start() {
            configComponents();
        }

        /// &lt;summary&gt;
        /// Check ownership, and configure "enabled" property.
        /// &lt;/summary&gt;
        void configComponents() {
            bool isOwner = monobitView.isMine;
            enableIfOwner.ForEach(behaviour =&gt; { behaviour.enabled = isOwner;});
            disableIfOwner.ForEach(behaviour =&gt; { behaviour.enabled = !isOwner;});
        }
    }
}


