using Microsoft.Practices.Unity;
using System;

namespace ConsoleApp10
{
    class Program
    {
        static void Main(string[] args)
        {
            // DI コンテナを生成
            UnityContainer container = new UnityContainer();

            Console.WriteLine("[Main] 名前を指定してインスタンスを登録する。");

            // 名前を指定してインスタンスを登録(RegisterType()) //ここではDogやCatのコンストラクタは呼ばれない(newしてないから、注入されるときにnewされる)
            container.RegisterType&lt;IAnimal, Cat&gt;();
            container.RegisterType&lt;IAnimal, Dog&gt;();

            // 依存性を注入する
            Console.WriteLine("[Main] 依存性を注入する。");
            var person = container.BuildUp&lt;Person&gt;(new Person());

            // ペットを呼ぶ
            Console.WriteLine("[Main] ペットを呼ぶ。");
            person.CallPet();

            Console.ReadLine();
        }
    }

    // 動物インターフェース
    public interface IAnimal
    {
        void Cry();// 鳴き声を出力する
    }

    // ネコ(IAnimalインターフェースの実装)
    public class Cat : IAnimal
    {
        public Cat() =&gt; Console.WriteLine(" 猫 コンストラクタ");
        public void Cry() =&gt; Console.WriteLine("ニャ～");
    }

    // イヌ(IAnimalインターフェースの実装)
    public class Dog : IAnimal
    {
        public void Cry() =&gt; Console.WriteLine("バウ！");
        public Dog() =&gt; Console.WriteLine(" 犬 コンストラクタ");
    }

    // 依存性を注入されるクラス
    public class Person
    {
        [Dependency]
        public IAnimal Pet { get; set; }

        // ペットを呼ぶ
        public void CallPet() =&gt; Pet.Cry();
    }
}


