Unity3Dにて、あるゲームオブジェクトを追いかけるカメラをスクリプトで表現する方法を記します。なお、本記事ではこのような追従するカメラを便宜的に「相対カメラ」と呼ぶことにします（オブジェクトとの相対的な位置を保っているから）。Unityバージョン：Unity 2019.4.14f1
使用言語：C#本記事で扱う相対カメラの特徴：サンプルコードは以下の通りです。再生時のカメラとゲームオブジェクトの距離を保つようなカメラの動きを表現しました。そのため、Start()内で再生時のカメラとゲームオブジェクトの距離をoffsetに代入し、
それを使ってLateUpdate()内で相対カメラの位置を更新し続けるようにしました。中身は、単純なベクトルの足し算引き算を使っています。Start()内では、としてoffsetを計算しています。同様にして、LateUpdate()内では、として相対カメラの位置ベクトルtransform.positionを計算しています。また、カメラ移動のスクリプトをLateUpdate()内に書きました。これは画面のカクつきを防ぐためです。両者ともUpdate()内に書いてしまうと、カメラ移動がゲームオブジェクト移動に先走ってしまい、
画面が変にカクついてしまう恐れがあります。そのため、ゲームオブジェクト移動のスクリプトはUpdate()内に書くことを
想定して、
カメラ移動のスクリプトはLateUpdate()内に書きました。カメラをゲームオブジェクトの子オブジェクトにする方法もありますが、これは以下のようなメリットとデメリットがあります。メリット：楽ちん
デメリット：ゲームオブジェクトの回転にも連動してしまう例えば、ゲームオブジェクトが回転しながら移動するボールの場合、カメラもグルグルと回転してしまうわけです。
もしこれでも問題がないのなら、この方法を採用してもいいかもしれません。プレイヤーに追従するカメラ（カクつかない方法、滑らかに追従する方法） - ゆーじのUnity開発日記
【Unity C#】カメラの自動追従 | フタバゼミ


