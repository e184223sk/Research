using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Linq;

namespace PiTest2.Model.Helper
{
    /// &lt;summary&gt;
    /// GPIO操作をヘルプするクラス
    /// ------------------------------
    /// FixMe:規模が大きくなってきたら、ピンの状態管理させてコントローラクラスにしたい。
    /// 現在のままだと、存在しないGPIOであったりデータ方向が適正でない場合に良い制御ができない。
    /// &lt;/summary&gt;
    class GpioOperationHelper
    {
        /// &lt;summary&gt;
        /// 指定したGPIOピンをオープンします。
        /// &lt;/summary&gt;
        /// &lt;param name="gpio"&gt;&lt;/param&gt;
        public static void Open(int gpio)
        {
            //gpioがオープン済みでない場合のみ
            if(!IsOpen(gpio))
            {
                File.WriteAllText("/sys/class/gpio/export", gpio.ToString());
            }
        }

        /// &lt;summary&gt;
        /// 指定したGPIOピンをクローズします。
        /// &lt;/summary&gt;
        /// &lt;param name="gpio"&gt;&lt;/param&gt;
        public static void Close(int gpio)
        {
            File.WriteAllText("/sys/class/gpio/unexport", gpio.ToString());
        }

        /// &lt;summary&gt;
        /// 指定したGPIOピンがオープン済みかを確認します。
        /// &lt;/summary&gt;
        /// &lt;param name="gpio"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static bool IsOpen(int gpio)
        {
            return Directory.Exists($"/sys/class/gpio/gpio{gpio}");
        }

        /// &lt;summary&gt;
        /// 指定したGPIOピンの信号方向を取得します。
        /// &lt;/summary&gt;
        /// &lt;param name="direction"&gt;&lt;/param&gt;
        public static string GetDirection(int gpio)
        {
            return File.ReadAllText($"/sys/class/gpio/gpio{gpio}/direction",Encoding.Default);
        }

        /// &lt;summary&gt;
        /// 指定したGPIOピンに信号方向を設定します。
        /// &lt;/summary&gt;
        /// &lt;param name="gpio"&gt;&lt;/param&gt;
        /// &lt;param name="direction"&gt;&lt;/param&gt;
        public static void SetDirection(int gpio, GpioDirection direction)
        {
            if(direction == GpioDirection.In)
                File.WriteAllText($"/sys/class/gpio/gpio{gpio}/direction", "in");
            else
                File.WriteAllText($"/sys/class/gpio/gpio{gpio}/direction", "out");
        }

        /// &lt;summary&gt;
        /// 指定したGPIOピンのvalueを取得します。
        /// &lt;/summary&gt;
        /// &lt;param name="gpio"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static int GetValue(int gpio)
        {
            return Convert.ToInt32(File.ReadAllText($"/sys/class/gpio/gpio{gpio}/value", Encoding.Default));
        }

        /// &lt;summary&gt;
        /// 指定したGPIOピンのvalueを設定します。
        /// &lt;/summary&gt;
        /// &lt;param name="gpio"&gt;&lt;/param&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        public static void SetValue(int gpio, int value)
        {
            File.WriteAllText($"/sys/class/gpio/gpio{gpio}/value", value.ToString());
        }
    }

    /// &lt;summary&gt;
    /// GPIOの信号方向
    /// &lt;/summary&gt;
    public enum GpioDirection
    {
        In,Out
    }
}

