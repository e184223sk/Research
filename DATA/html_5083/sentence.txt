More than 3 years have passed since last update.ASP.NET Coreアプリケーションを開発していて、メインの処理に行く前にHTTPミドルウェアやフィルターなどでHTTPリクエストのBodyを読み込みたいなんてことがあるとき、注意して開発しないとメインの処理でBodyが受け取れなくなります。例えば以下のようなコードを実行してみたとき、2回目にリクエストBodyを読み込んだ時に空になっているのがわかります。上記では簡単なASP.NET Coreアプリケーションで試してみましたが、ASP.NET Core MVCアプリケーションで以下のようなアクションメソッドを追加して事前にリクエストBodyを読み込んでおくと、モデルバインディングの結果がnullになっているのが確認できます。リクエストBodyを複数回読み込むためには、いくつか設定しておかなければいけないことがあります。それを順を追って説明していきます。最初はHTTPリクエストに対して複数回リクエストBodyを読み込ませられるようにします。これはHttpRequestクラスの拡張メソッドであるEnableRewindメソッドを呼び出すだけで可能になります。HttpRequestクラスはMicrosoft.AspNetCore.Http名前空間にありますが、この拡張メソッドはMicrosoft.AspNetCore.Http.Internalにあるため、名前空間のインポートが必要になります。このメソッドはドキュメントコメントがないため詳細は分からないのですが、読み込み時のバッファーの設定が出来るオプション引数があるようですが、特に設定しなくても大丈夫そうなので引数なしで呼び出しておきます。このメソッドは1回呼び出しておけば、以降複数回リクエストBodyを読み込むときは呼び出さなくても大丈夫なようになっています。2つ目はリクエストBodyのStreamをStreamReaderを使用して読み込むときに、破棄しないようにしておく必要があります。.NETのライブラリではIDisposableを実装したクラスがIDisposableを実装したインスタンスを受け取る時に、受け取ったインスタンスを破棄するかどうかを設定できる引数が大抵用意されていて、StreamReaderもコンストラクタで読み込むStreamを受け取れるようになっているのですが、何も設定せずにStreamReaderを破棄すると受け取ったStreamを破棄するようになっています。リクエストBodyのStreamを一旦破棄してしまうとそれ以降読み込むことができなくなってしまうため、StreamReaderに渡すときに破棄しないように設定するにはStreamReaderのコンストラクタでleaveOpen引数をtrueにしておきますが、引数順として最後に用意されているため、それまでの引数も全て設定する必要があります。この設定はEnableRewindメソッドの呼び出しと違って、リクエストBodyを読み込むときに毎回設定する必要があります。リクエストBodyのStreamを読み込むと読み込み位置が最後まで到達してしまうため、再度読み込めるようにするには読み込み位置を先頭にする必要があります。方法は2つあってPositionプロパティを0にするか、Seekメソッドを呼び出します。この設定も読み込むときに毎回呼び出しておく必要があります。これまでの設定を反映すると最初のコードは以下のようになります。このコードを実行してみると2回目のリクエストBodyでちゃんと値が取得できているのが確認できます。この3つを設定しておけばリクエストBodyを複数回読み込むことができるようになります。本文でASP.NET Core MVCのコードでは試しませんでしたが、上記3つを設定したうえで最初に掲載したASP.NET Core MVCのコードを実行すると、アクションメソッドで引数がちゃんとモデルバインディングされて値が入ってきていることが確認できます。


