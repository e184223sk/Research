
public static void Main(string[] args)
{
    // 100までの素数を順次出力する
    foreach (var prime in PrimeNumbers(100))
    {
        Console.WriteLine(prime);
    }
}

/// &lt;summary&gt;
/// 指定した整数値以下の素数を列挙する。
/// &lt;/summary&gt;
/// &lt;param name="max"&gt;取得する素数の最大値&lt;/param&gt;
/// &lt;returns&gt;素数&lt;/returns&gt;
private static IEnumerable&lt;int&gt; PrimeNumbers(int max)
{
    // 2未満の場合は空(素数なし)
    if (max &lt; 2)
    {
        yield break;
    }

    // 素数リスト(判定済)
    var primeList = new List&lt;int&gt;();

    // 指定数値が素数であるか判定する関数
    bool isPrime(int v)
    {
        // 素数で割り切れるか判断
        foreach (var prime in primeList)
        {
            // 対象数値の平方根未満の素数で割り切れるものが無ければ、素数
            if (prime * prime &gt; v)
            {
                break;
            }
            // 対象数値未満の素数で割り切れたら、素数ではない
            if (v % prime == 0)
            {
                return false;
            }
        }
        // 素数
        primeList.Add(v);
        return true;
    }

    // 2 ～ 最大値 までの数値について素数のみ返す
    foreach (var prime in Enumerable.Range(2, max - 1).Where(isPrime))
    {
        yield return prime;
    }
}

