
public static void Main(string[] args)
{
    // 1 ～ 100 の FizzBuzz配列 を作成
    var list = CreateFizzBuzzArray(1, 100);

    // FizzBuzz問題の解を順に出力する
    foreach (var fz in list)
    {
        Console.WriteLine(fz);
    }
}

/// &lt;summary&gt;
/// 指定した 開始値 から 終了値 までの整数値を元に FizzBuzzインスタンス を作成し、配列で返す。
/// &lt;/summary&gt;
/// &lt;param name="min"&gt;開始値&lt;/param&gt;
/// &lt;param name="max"&gt;終了値&lt;/param&gt;
/// &lt;returns&gt;FizzBuzzインスタンス配列&lt;/returns&gt;
private static FizzBuzz[] CreateFizzBuzzArray(int min, int max)
{
    // min ～ max の連番Sequenceを作成し、新規FizzBuzzインスタンスに射影して配列で返す
    return Enumerable.Range(min, max - min + 1).Select(i =&gt; new FizzBuzz(i)).ToArray();
}

/// &lt;summary&gt;
/// FizzBuzzクラス
/// &lt;/summary&gt;
private class FizzBuzz
{
    /// &lt;summary&gt;
    /// 対象とする数値
    /// &lt;/summary&gt;
    private readonly int i;

    /// &lt;summary&gt;
    /// Fizzを出力する条件を満たす
    /// &lt;/summary&gt;
    public bool IsFizz =&gt; this.i % 3 == 0;

    /// &lt;summary&gt;
    /// Buzzを出力する条件を満たす
    /// &lt;/summary&gt;
    public bool IsBuzz =&gt; this.i % 5 == 0;

    /// &lt;summary&gt;
    /// 数値を出力する条件を満たす
    /// &lt;/summary&gt;
    public bool IsNumeric =&gt; !(this.IsFizz || this.IsBuzz);

    /// &lt;summary&gt;
    /// Fizzを出力する条件を満たす場合 "Fizz"、そうでない場合は空文字列
    /// &lt;/summary&gt;
    public string Fizz =&gt; this.IsFizz ? "Fizz" : string.Empty;

    /// &lt;summary&gt;
    /// Buzzを出力する条件を満たす場合 "Buzz"、そうでない場合は空文字列
    /// &lt;/summary&gt;
    public string Buzz =&gt; this.IsBuzz ? "Buzz" : string.Empty;

    /// &lt;summary&gt;
    /// コンストラクタ
    /// &lt;/summary&gt;
    /// &lt;param name="i"&gt;FizzBuzz問題の対象とする数値&lt;/param&gt;
    public FizzBuzz(int i)
    {
        this.i = i;
    }

    /// &lt;summary&gt;
    /// このインスタンスに設定された数値を、それと等価な"FizzBuzz"文字列形式に変換します。
    /// &lt;/summary&gt;
    /// &lt;returns&gt;FizzBuzz問題の解&lt;/returns&gt;
    public override string ToString()
    {
        if (this.IsNumeric)
        {
            return this.i.ToString();
        }
        return $"{this.Fizz} {this.Buzz}".Trim();
    }
}

