More than 3 years have passed since last update.C# を書いているときに、記録に残しておこうと思ったので個人的なメモとして書きます。ポリシーとしては自分が 検索エンジンに頼ったり、レビューを受けて学びを得たことを検証して理解して、次回からスピードアップできることを意図とししています。Chris がレビューで、List のコンストラクタの数字は指定すること。指定しない場合、毎回領域を拡張するから遅いとのこと。実際コードを見てみる。確かにそのとおりだ。デフォルトは empty の配列になっている。実際ためしてみよう。こんな感じでテストを実施。結果は以下の通り。小さいとそこまでインパクトありませんが、これぐらい回すと差が明確になるようです。あるasyncメソッドがあり、そのメソッドの実態はフラグが on の時だけ内部で async コールをするのだが、実体は型変換というメソッドがありました。わたしはその部分を読んでいなかったので単純に、Task.WhenAll で並列処理させて早く終わらせようと考えました。このメソッドは1000程度のデータは来ることが想定されるのですが、彼から、メソッドスタベーションがおこるのでは？と指摘をうけました。結局のところ、リファクタリングして、型変換だけのメソッド抽出を行って解決したのですが、スレッドスタベーションが起こるかを試したくなりました。これぐらいの並列処理でもさして時間かからず終了しました。これぐらいの並列でもスレッドスタベーションは起こりません。この理由ですが、呼ばれる対象のメソッドがこんな感じです。async/awaitは賢いので、別スレッドを大量に作るとかはしないようです。本件はですので杞憂なのですが、よい知識の確認になりました。（むしろリファクタリングの問題w)結果そういえば過去にブログ書いてた


