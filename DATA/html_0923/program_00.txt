using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.JSInterop;

namespace LoginTest.Service
{
    public class CookieService
    {
        #region フィールド
        private readonly IJSRuntime _jsRuntime;
        #endregion

        #region コンストラクタ
        public CookieService(IJSRuntime jsRuntime)
        {
            _jsRuntime = jsRuntime;
        }
        #endregion

        #region メソッド
        /// &lt;summary&gt;
        /// クッキーへの書き込み
        /// &lt;/summary&gt;
        /// &lt;param name="key"&gt;&lt;/param&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public async Task WriteCookieAsync(string key, string value)
        {
            await _jsRuntime.InvokeVoidAsync("blazorExtensions.WriteCookie", key, value).ConfigureAwait(false);
        }
        /// &lt;summary&gt;
        /// クッキーの読み込み
        /// &lt;/summary&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public async Task&lt;Dictionary&lt;string, string&gt;&gt; ReadCookieAsync()
        {
            var cookieDictionary = new Dictionary&lt;string, string&gt;();
            var cookie = await _jsRuntime.InvokeAsync&lt;string&gt;("blazorExtensions.ReadCookie").ConfigureAwait(false);

            var cookieSplit = cookie.Split(";");
            for (var i = 0; i &lt; cookieSplit.Length; ++i)
            {
                var cookieKeyValue = cookie.Split("=");
                cookieDictionary.TryAdd(cookieKeyValue[0], cookieKeyValue[1]);
            }

            return cookieDictionary;
        }
        #endregion
    }
}

