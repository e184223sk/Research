DI関連の記事をいくつか読んで、大体の使い方はわかったが、
自分で書かないと腑に落ちない部分もあったため、書いてみたサンプルです。
そのためDIの説明的なものは特に触れません。以下コンストラクターインジェクションのサンプル
https://qiita.com/takmot/items/babc1590a3f9789553a4ベースはdotnet new consoleで生成したプロジェクトになります。
以下のようにinterfacesフォルダにインターフェースクラスを定義したファイルを、
servicesフォルダにインターフェースを継承したサービスクラスを定義したファイルを作成しています。├─interfaces 
│    └──IMessageService.cs
└─services
│    └──MessageService.cs
│
└─application.cs
└─Program.csサービスは同じインターフェースを継承したものを2個作っています。
サービス区別用にプロパティにNameを持っています。以下でDIコンテナを生成し、IMessageServiceインターフェースを持つクラス2つを登録します。以下で、サービスの取り出し、サービスの区別、サービスの持つ関数コールを行います。ちなみに、サービス（MessageServiceMorning, MessageServiceAfternoon）のコンストラクタは、
サービスを取り出すタイミング（Services = provider.GetServices&lt;IMessageService&gt;();）でコールされます。using Microsoft.Extensions.DependencyInjection;
にはパッケージの追加が必要です。
https://www.nuget.org/packages/Microsoft.Extensions.DependencyInjectionコンストラクターインジェクションを使用したサンプルも書こうと思います。https://qiita.com/TsuyoshiUshio@github/items/20412b36fe63f05671c9
https://qiita.com/saeki4n/items/22a276dcac9ef537ee25


