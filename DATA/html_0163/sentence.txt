Visual Studio/C#でWindows、Macとくれば「次はAndroidからEV3を制御してみよう！」ということでやってみました。
【関連記事】
【EV3 x C#】lejos-server/clientを使ってC#でEV3を制御する(Windows編)
【EV3 x C#】lejos-server/clientを使ってC#でEV3を制御する(Mac編)
本記事は、上記Windows編での準備およびlejos-serverの転送・実行ができている状態を前提とします。スマホアプリは今回が初めてという私ですら、Xamarin.Formsを使用して簡単にAndroidからEV3の制御ができましたのでご紹介します。Visual Studioインストーラーを実行し、[.NETによるモバイル開発]にチェックしてインストールしておきます。
「Xamarin を使用して Android 向けの開発を始める」を参考にしながら以下の手順を実施します。Visual Studioを起動し、新規プロジェクトの作成から[モバイルアプリ(Xamarin.Forms)]を選択して[次へ]

次の画面で任意のプロジェクト名を入力して[作成]をクリック。[新しいモバイルアプリ]画面が表示されるので、し、[作成]をクリック
「Android デバイスまたはエミュレーターでテストする」を参考にしながら、以下の手順を実施します。
(一部文言はOPPOの場合)ここまでの手順を実施すると、接続した実機名で実行できそうな状態になります。

プログラムは何も変更せずに、とりあえず実行してみます。
おぉ！実機上にこんな画面が表示された！！（もうこの時点で感動）
「Xamarin.Forms XAML ページのレイアウトをカスタマイズする」を参考に、MainPage.xamlファイルの内容を次のように書き換えます。
ラベル部分を「EV3 Controller」に書き換えたのと、3x3のグリッドにボタンを配置しました。【補足】
Android開発に合わせて、lejos-clientは.NET Standard2.0にも対応しました。MainPage.xamlを右クリックし、[コードの表示]を選択します。MainPage.xaml.csに次のように記述します。
ボタンのイベント処理で各EV3のコマンドを実行(パラメータは適当)するシンプルなものです。デバッグ実行の前に、EV3が「READY」の状態になっていることを確認してください。
実行すると、簡易的にグリッドに配置したボタンがこのように表示されました。

ボタンをタップして動きを確認します。
AndroidxC#でEV3を制御してみた。 pic.twitter.com/qd9Lx2m4NT一度スマホでデバッグ実行すると、アプリがスマホ内に入るのでUSBケーブルを抜いても動作します。スマホの傾きで直感的に操作できるようにしてみました。
「Orientation Mode」を追加し、ONの場合はスマホの傾きがそのまま動きとなるようにします。
MainPage.xamlを次のように変更します。グリッドに２行追加し、SwitchとOrientation表示用のLabelを追加しました。スマホの各種センサー値を取得するには@shuheyさんの記事から「Xamarin.Essentials」を使うと良いらしいことがわかったので、NuGetから「Xamarin.Esssentials」をインストールします。
上記各サイトを参考にしながらMainPage.xaml.csを以下のように修正します。こんな感じで動作します。
スマホの傾きとEV3が連動するようにした。 pic.twitter.com/M6dQMsKcNnGitHubにアップしましたのでよろしければどうぞ。
https://github.com/teonsen/lejosAndroidXamarin.Formsで各種センサーの値を取得するには
Xamarin.Essentials
Xamarin.Essentials:OrientationSensor


