
namespace UniNativeLinq
{
  public readonly partial struct SelectEnumerable&lt;TPrevEnumerable, TPrevEnumerator, TPrev, T, TAction&gt;
    : IRefEnumerable&lt;SelectEnumerable&lt;TPrevEnumerable, TPrevEnumerator, TPrev, T, TAction&gt;.Enumerator, T&gt;
    where TPrevEnumerable : IRefEnumerable&lt;TPrevEnumerator, TPrev&gt;
    where TPrevEnumerator : IRefEnumerator&lt;TPrev&gt;
    where TAction : IRefAction&lt;TPrev, T&gt;
  {
    private readonly TPrevEnumerable enumerable;
    private readonly TAction action;

    public SelectEnumerable(in TPrevEnumerable enumerable)
    {
      this.enumerable = enumerable;
      action = default;
    }
    public SelectEnumerable(in TPrevEnumerable enumerable, in TAction action)
    {
      this.enumerable = enumerable;
      this.action = action;
    }

    public Enumerator GetEnumerator() =&gt; new Enumerator(ref Unsafe.AsRef(in enumerable), action);
    System.Collections.Generic.IEnumerator&lt;T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() =&gt; GetEnumerator();
    System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() =&gt; GetEnumerator();
  }
}

