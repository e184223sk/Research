この内容は Blazor Advent Calendar 2020の20日目の記事ですBlazorはSPAフレームワークです。SPAは通常OGP対策が必要です。OGPとは簡単に言えばFacebookやTwitterにURLを貼った場合にサムネイルの画像と簡単な説明を出してくれるあの機能です。Blazorで作った場合、index.htmlにOGPの設定をしてページ毎にjsでその設定を書き換えても、OGPクローラーはjsの書き換えを解釈してくれないので、結局全てのページがindex.htmlの情報として扱われてしまいます。SPAでもう一つ問題になるのがSEOです。SEOは簡単に言えばGoogleの検索結果を上位にするための技術です。実はSEOに関しては、jsでtitleを書き換えてさえいれば、Googleクローラは対応してくれるようです。自分のサイトもtitleなどの書き換えだけしてそれ以外特に何もしていないですが、ちゃんとtitleなどがページ毎に書き換わって検索にヒットしました。有難うGoogle。残念、Facebook、Twitter他。さて、BlazorのOGP対策についてピンポイントでやり方が書いてあるサイトは見つかりませんでした。自分でもどうしたものかなと持っている時に丁度Qittaでバズっている記事を見ました。SNS映えするWebアプリを...！FirebaseとVue.jsでSPAのOGP画像の動的生成をやってみたら案外楽だったです。Vue.jsの記事ですが、これを元に考えていけば何とかなりそうな気がしました。(20/12/23追記)@jsakamoto さんより情報頂きました！ちゃんと日本語で情報ありました。有難う御座います！Blazor で、タイトルや OGP 用メタ要素を設定する
クライアントサイド Blazor でも、SEO 対策のためにサーバーサイドレンダリングしたい先ずポイントとしてOGPを動的に生成したいパスのみ、Hostingの設定でFunctionsを呼び出すを参考に考えました。特に図はかなり何度も見ました。書かれている通りのアプローチもあると思いますが、突き詰めるとサーバサイドでjsによるリダイレクトを使って、人間とクローラーで処理を分けさえすれば他の方法でも行けそうと思いました。Blazorは、テンプレート通りに作ればclientとserverが分かれます。サーバ側はページルーティングはなく、クライアントでページルーティングします。テンプレートにないだけでサーバでもページルーティングは書けるので、それを使うことにしました。試しにサーバとクライアントで同名のルーティングを書くと、ブラウザで直接URLを書いた場合はサーバに行きました。但し、クライアント内で移動した場合はサーバに同名があってもサーバにいかずクライアントのままでルーティングされました。別の言い方をするとサーバもクライアントも同名の状態ではサーバからリダイレクトしてクライアントには行けません。サーバから別名のクライアントへのリダイレクトは当然クライアントに行けます。そこでまたVueのrouterで"元URL+α"を元URLに書き戻すを参考にしました。クライアントに別名でリダイレクトして、さらにクライアントで同名に再リダイレクトすれば目的が達成できそうです。自分のサイトで説明すると、ブラウザでhttp://manga-yonda.com/mangaにアクセスされた場合、まずサーバサイドに飛びます。そこですぐにjsでhttp://manga-yonda.com/_manga(mangaではなく、_manga)にリダイレクトします。するとこれはクライアントに行きます。クライアントの最初の処理でURLにアンダーバーが入っているかをチェックします。_mangaなので、チェックにかかり、ここで_を消したURLにリダイレクトします。クライアントのリダイレクトなので、晴れてクライアントのhttp://manga-yonda.com/mangaに行きます。つまり↑に書いた状態でサーバのページにOGPの設定をしれやれば、jsを解釈できる人間の操作の場合はクライアントに飛び、OGPクローラーの場合はjsを解釈出来ないのでサーバを見ます。具体的にはServerのコントローラーに以下のようなメソッドを用意します。次にルーティングを書きます。で、対応したViewを作ります。共通の_Layout.cshtmlにもViewDataを記述します。これでページ毎の正しいOPGが設定できます。クライアントのapp.razorには以下のようなメソッドを用意します。これで人間は目的としているページに飛ぶので、BlazorのOGP対策が完成です！マンガ読んだ！！はマンガのページをFacebookやTwitterに貼った場合、ちゃんとそのページのOGPが表示され、人間はSPAのページに移動します！BlazorでもOGPやSEOの簡単な対策は出来ました。OGPについてはBlazor Advent Calendar 2020の17日書かれたASP.NET Core Blazor WebAssembly のプリレンダリングを試してみようの手法でも対応が出来るかなと思います。ただ、SEOはGoogleの検索結果に出ているというだけで、必ずしも望んだ形では出ていないこともあり、ちゃんとやるならもっと深い技術が必要になってくるのかなと思います。また最近読んだNext.js 4年目の知見：SSRはもう古い、VercelにAPIサーバを置くなではSSR自体に対して意見を投げているので、こういった対応は今後変わってくるのかなとも思いました。SNS映えするWebアプリを...！FirebaseとVue.jsでSPAのOGP画像の動的生成をやってみたら案外楽だった
Next.js 4年目の知見：SSRはもう古い、VercelにAPIサーバを置くな
ASP.NET Core Blazor WebAssembly のプリレンダリングを試してみよう


