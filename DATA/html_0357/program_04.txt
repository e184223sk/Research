
using System;
using System.Reflection;
using UnityEngine;
using UnityEditor;

/// &lt;summary&gt;
/// ロックされたInspectorウインドウを開くエディタ拡張。
/// &lt;/summary&gt;
public class LockedInspectorOpener
{
    /// &lt;summary&gt;
    /// 選択中のオブジェクトに対して、Inspectorウインドウを開く。
    /// command + shift + iのキーボードショートカットでも実行できる。
    /// &lt;/summary&gt;
    [MenuItem("Locked Inspector/Open Selected Objects #%i")]
    static void OpenSelectedObjects()
    {
        var inspectorWindowType = Assembly.Load("UnityEditor").GetType("UnityEditor.InspectorWindow");

        int selecedObjectsCount = Selection.objects.Length;
        var originalSelectedObjects = new UnityEngine.Object[selecedObjectsCount]; // 選択中のオブジェクトを保存しておく。
        Array.Copy(Selection.objects, originalSelectedObjects, selecedObjectsCount);

        for (int i = 0; i &lt; selecedObjectsCount; ++i)
        {
            var selectedObject = originalSelectedObjects[i];
            var inspectorWindow = EditorWindow.CreateInstance(inspectorWindowType) as EditorWindow;

            var isLockedPropertyInfo = inspectorWindowType.GetProperty("isLocked", BindingFlags.Public | BindingFlags.Instance);
            Selection.objects = new UnityEngine.Object[] { selectedObject }; // Inspectorウインドウに表示するオブジェクトを切り替える。
            isLockedPropertyInfo.SetValue(inspectorWindow, true); // 現在のInspectorウインドウの表示をロックする。

            inspectorWindow.Show(true);
        }

        Selection.objects = originalSelectedObjects; // 操作前の選択状態に戻す。
    }
}

