More than 1 year has passed since last update.Blazor向けのUIフレームワークであるRadzen Blazor Componentsを導入して試すまでのメモ。Demo
https://nobu17.github.io/RadzenBlazorTest/
ソース
https://github.com/nobu17/RadzenBlazorTest/Blazor単体にはSPA用のUIフレームワークは用意されていないので別途インストールが必要です。
Boootstrap等の一般的なHTML,css用のフレームワークを使用してゴリゴリHTMLを書く方法も考えられますが、今回はBlazorに特化されたものを使用してみようと思います。使用している.NET Core及びBlazorのテンプレートのバージョン等は下記です。Visual Studio 2019 PreviewRadzen.Blazor 0.0.52まずは、公式サイトの手順に沿ってテンプレートから新規Blazorプロジェクトを作成します。
今回はclient-side版を使用します。
公式ドキュメントRadzenのページに紹介されている手順に沿ってインストールしてみます。NugetからRadzen.blazorをインストールします。
ソリューションエクスプローラの依存関係を右クリック→NuGetパッケージの管理　を選択します。
Radzen.blazorで検索してインストールします。
インストールが終わったら、プロジェクト内の_Imports.razorにRadzen.blazorの参照を追加します。テーマファイルを公式サイトからDLしてインストール
https://github.com/akorchev/blazor.radzen.com/raw/master/Radzen.Blazor.Themes.zipdistフォルダ以下にfontsフォルダとcssフォルダがあるので、
Blazorのプロジェクト内のwwwrootルートフォルダ内にコピー＆ペーストします。次に、_Host.cshtml file (server-side Blazor) or wwwroot/index.html (client-side Blazor) 
を開いてcssの参照を追加します。今回はClientSideなのでindex.htmlになります。ClientSideのプロジェクトの場合、csprojファイルを開いて、
RazorLangVersionの後にBlazorLinkOnBuildにfalseに設定した要素を追加するセットアップは終了です。
まずはここまででビルドが通るか確認します。何点かコンポーネントを紹介してみます。定番のボタン。Clickイベントを渡す、おなじみの使い方です。
IconプロパティでMaterial iconsのアイコン名を指定すると使えます。これも、NET開発者ならおなじみのやつです。日付のみのものから時刻まで選択可能なものまで揃っています。
（日付、時刻両方入力可能な形式もあり）.NET開発者ならよく使う、みんな大好きDataGrid。XAMLとかで記述するのと同じように設定できます。これもよく使うやつです。
ダイアログの中身もrazorコンポーネントとして作成します。ダイアログ表示は一手間かかるので順に手順を説明します。ダイアログを表示するためのサービスをDIする必要があるため、まずはStartup.csにDialogServiceを追加します。(ネームスペースはRadzen)次にDialog自体のレイアウトのレイアウトを定義したコンポーネントを作成します。
Dialogserviceをindjectしてボタン押下時にダイアログを閉じて結果を返すようにしています。次にダイアログを表示するページを作成します。
ボタンを押下したらダイアログを表示させるとします。テキストボックスやチェックボックス、数値入力、タブ等々、よく見る入力コントールはそろっている感じです。
気になる方は公式サイトを見てみてください。ということでBlazorのUIフレームワークのRadzen.Blazorを紹介してみました。
まだまだ発展途上ということで、詳細なドキュメントや機能自体が少なく、一般的なSPAのUIフレームワークと比較すると実装するべき点が多く大変ですが、様々なUIのコンポーネントが用意されているのは良いですね。現状はドキュメントが無いため、GitHub上のサンプルのソースコードを見ながら実装という形ですが、ドキュメントが充実する事を期待したいですね。Angular,React,Vue等のSPAフレームワークといえば、豊富なUIコンポーネント群がセットで使えることがメリットなのでBlazorにも今後こういったフレームワークが充実する事を期待したいですね。Demo
https://nobu17.github.io/RadzenBlazorTest/
ソース
https://github.com/nobu17/RadzenBlazorTest/Radzen Blazor Components公式サイトBlazorで作成したウェブサイトをGitHub Pagesで公開する
Blazorで作成したウェブサイトをFirebaseで公開する


