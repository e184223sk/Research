
class MyTaskMethodBuilder&lt;T&gt;
{
    public static MyTaskMethodBuilder&lt;T&gt; Create();

    public void Start&lt;TStateMachine&gt;(ref TStateMachine stateMachine)
        where TStateMachine : IAsyncStateMachine;

    public void SetStateMachine(IAsyncStateMachine stateMachine);
    public void SetException(Exception exception);
    public void SetResult(T result);

    public void AwaitOnCompleted&lt;TAwaiter, TStateMachine&gt;(
        ref TAwaiter awaiter, ref TStateMachine stateMachine)
        where TAwaiter : INotifyCompletion
        where TStateMachine : IAsyncStateMachine;
    public void AwaitUnsafeOnCompleted&lt;TAwaiter, TStateMachine&gt;(
        ref TAwaiter awaiter, ref TStateMachine stateMachine)
        where TAwaiter : ICriticalNotifyCompletion
        where TStateMachine : IAsyncStateMachine;

    public MyTask&lt;T&gt; Task { get; }
}

