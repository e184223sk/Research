More than 1 year has passed since last update.揃っていないコードのインデントや改行などのフォーマットは、フォーマッタを使えば整えることができます。ところで、C#においてなどのスタイルが統一されていない場合、どうすればいいでしょうか？.NET向けJetBrains IDEである「Rider」では、Code Cleanupを使えば、フォーマットもスタイルも整えることができます。また、余分なパラメーターや余分なコードも削除することができます。この投稿では、RiderのCode Cleanupを紹介します。公式ドキュメント Code Cleanupより、JetBrains Rider allows you to apply formatting and other code style preferences in a bulk mode to instantly eliminate code style violations in one or more files, in a project or in the entire solution.Code Cleanupは、対象のコードのフォーマット・スタイルを規約・設定にそって整える機能です。例えば、以下のコードはCode Cleanupによって次のようなコードになります。Code Cleanupによって、フォーマットが整えられ、getter onlyの自動実装プロパティに書き換えられました。公式ドキュメント Code Cleanupより、一部を紹介します。JetBrains Rider allows you to apply formatting and other code style preferences in a bulk mode to instantly eliminate code style violations in one or more files, in a project or in the entire solution.この一文からは、フォーマットとスタイルだけを変えるという想像をしますが、ガッツリコードを書き換える点に注意してください。（原則、同じ動作はするコードに書き換えます。）同じような動作はしますがコンパイル後のMSILとしては、全く別のコードになります。メニューから、Code | Code Cleanup ...を選択すると、以下のウィンドウが開きます。Code Cleanupの対象と設定をそれぞれ選択してOKボタンを押すと、Code Cleanupが実行されます。または、Show Reformat Code Dialogから、Code Cleanupの有無を選択することもできます。Code Cleanupは、ソリューション全体、プロジェクト全体、コミットされていないファイル、カスタムスコープ、開いているファイルから選択できます。また、テキストを選択し、選択したテキストの中身に対してCode Cleanupをかけることもできます。Code Cleanupしたいテキストを選択し、アクションリストを表示し（Alt + Enter）、リストの中から、Cleanup selectionを選んでください。Code Cleanupの設定は、Built-inでいくつか設定が作成されています。Preference | Editor | Code Cleanupにおいて、その設定を編集したり、コピーして編集したりできます。また、自分で0から作ることも可能です。自分のプロジェクトに合った設定を作ってみてください。Riderからgit commitをした際に、Code Cleanupを実行するよう、設定できます。Unityにおける、Code Cleanupに関する問題として、次のようなコードが次のようなコードに変更されてしまうというものがありました。普通のC#としては問題がないのですが、Unityとしてはバッキングフィールドの名前が大事なので、こうなってしまうCode Cleanupの項目が使えませんでした。この問題は、Rider 2019.3で解消される予定です。


