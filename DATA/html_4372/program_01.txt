
using System.Windows.Forms;
using ExtensionsLibrary.Extensions;

namespace TestProject {
    public partial class FormEditText : Form {
        public FormEditText() {
            InitializeComponent();
        }

        /// &lt;summary&gt;
        /// コマンド キーを処理します。(オーバーライド)
        /// &lt;/summary&gt;
        /// &lt;param name="msg"&gt;処理する Win32 メッセージを表す、参照渡しされた &lt;see cref="T:System.Windows.Forms.Message" /&gt;。&lt;/param&gt;
        /// &lt;param name="keyData"&gt;処理するキーを表す &lt;see cref="T:System.Windows.Forms.Keys" /&gt; 値の 1 つ。&lt;/param&gt;
        /// &lt;returns&gt;
        /// キーストロークがコントロールによって処理および使用された場合は true。キーストロークをさらに処理できるようにする場合は false。
        /// &lt;/returns&gt;
        protected override bool ProcessCmdKey(ref Message msg, Keys keyData) {
            var tbx = this.GetActiveControl() as TextBoxBase;
            if (tbx != null) {
                switch (keyData) {
                case Keys.Control | Keys.A:// Ctrl + A
                    tbx.SelectAll();
                    return true;
                case Keys.Control | Keys.C:// Ctrl + C
                    tbx.Copy();
                    return true;
                case Keys.Control | Keys.X:// Ctrl + X
                    tbx.Cut();
                    return true;
                case Keys.Control | Keys.V:// Ctrl + V
                    tbx.Paste();
                    return true;
                case Keys.Control | Keys.Z:// Ctrl + Z
                    tbx.Undo();
                    return true;
                default:
                    break;
                }
            }

            return base.ProcessCmdKey(ref msg, keyData);
        }
    }
}

