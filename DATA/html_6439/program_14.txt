
using System;
using System.Collections.Generic;
using System.Windows;

namespace Listview_checkbox
{
    /// &lt;summary&gt;
    /// MainWindow.xaml の相互作用ロジック
    /// &lt;/summary&gt;
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            //ListView
            List&lt;ListViewItems&gt; items = new List&lt;ListViewItems&gt;();
            items.Add(new ListViewItems() { /*items = "000",*/ Selected = true, items1 = "111", items2 = "222", items3 = "333" });
            items.Add(new ListViewItems() { /*items = "aaa",*/ Selected = false, items1 = "bbb", items2 = "ccc", items3 = "ddd" });
            items.Add(new ListViewItems() { /*items = "AAA",*/ Selected = true, items1 = "BBB", items2 = "CCC", items3 = "DDD" });
            ListViewName.ItemsSource = items;
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {

        }

        private void chkSelectAll_Checked(object sender, RoutedEventArgs e)
        {

            foreach (ListViewItems item in ListViewName.ItemsSource)
            {

                ListViewName.SelectedItems.Add(item);
            }
        }

        private void chkSelectAll_Unchecked(object sender, RoutedEventArgs e)
        {

            foreach (ListViewItems item in ListViewName.ItemsSource)
            {

                ListViewName.SelectedItems.Remove(item);
            }

        }

        private void ListViewName_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (e.AddedItems.Count &gt; 0)
            {
                //------------
                ListViewItems user = (ListViewItems)e.AddedItems[0];
                ListViewItem lvi = (ListViewItem)ListViewName.ItemContainerGenerator.ContainerFromItem(user);
                CheckBox chkBx = FindVisualChild&lt;CheckBox&gt;(lvi);
                if (chkBx != null)
                    chkBx.IsChecked = true;
                //------------              
            }
            else // Remove Select All chkBox
            {
                ListViewItems user = (ListViewItems)e.RemovedItems[0];
                ListViewItem lvi = (ListViewItem)ListViewName.ItemContainerGenerator.ContainerFromItem(user);
                CheckBox chkBx = FindVisualChild&lt;CheckBox&gt;(lvi);
                if (chkBx != null)
                    chkBx.IsChecked = false;
            }

        }

        public static T FindVisualChild&lt;T&gt;(DependencyObject depObj) where T : DependencyObject
        {
            if (depObj != null)
            {
                for (int i = 0; i &lt; VisualTreeHelper.GetChildrenCount(depObj); i++)
                {
                    DependencyObject child = VisualTreeHelper.GetChild(depObj, i);
                    if (child != null &amp;&amp; child is T)
                    {
                        return (T)child;
                    }

                    T childItem = FindVisualChild&lt;T&gt;(child);
                    if (childItem != null) return childItem;
                }
            }
            return null;
        }


    }

    public class ListViewItems
    {
        //public string items { get; set; }
        public bool Selected { get; set; }
        public string items1 { get; set; }
        public string items2 { get; set; }
        public string items3 { get; set; }
    }
}



