More than 1 year has passed since last update.前回はAndroidのビルドを行いましたが、今回はiOSビルドです。コマンドラインでビルドを行った後、Archive処理を進め、
最終的にipaファイルを生成するのが目的となります。Debugビルド &amp; プロビジョニングを自分で設定するパターンで進めていきます。Unityだと、Xcodeのプロジェクトビルドまでしか行われず、
Xcodeのビルドは別途自分で書かないといけないみたいので、
Anrdroidと比べて、結構手数が多くなります。Mac : 10.14.5 (Mojave)
Unity : 2018.3.0f2
Xcode : 10.2.1Androidでは、直接Unity側に成果物のパスを指定してましたが
iOSの場合、Xcodeビルド時に、成果物のパスが必要になる為、
コマンドラインからUnityにパスを受け渡せる様にしています。GetParameterFrom関数にargの引数を指定して続くパラメータを取得しています。
（最近swiftでの開発が多かったので、関数名の付け方とかがちょっとswift脳になってます・・・stringのOptionalほしい・・ 
（C# 8.0からクラスのオプショナルも対応するらしいですXcodeビルドもあるため、シェルスクリプトが長めになるので、
UnityビルドとXcodeビルドでシェルスクリプトファイルを分割しています。unityiOSBuild.sh、xcodeBuild.sh両ファイルとも、
Unityのプロジェクトフォルダ直下に作成してください。-output-dirでXcodeプロジェクトの出力先を指定してます。また unityのビルドが完了したら引き続きPROJECT_DIR=$PROJECT_DIR sh xcodeBuild.shで
Xcodeのビルドに処理を引き継いでいます。ちなみに、変数は明示的に指定しないと引き継げないみたいです。
（なんかもっとスマートなやり方がありそうな気もしますが・・・xcodebuildのシェルスクリプトです。最終的にほしいのはipaファイル一旦Archiveファイル(xcarchive)を生成し、それを元に
ipaファイルを生成します。ただし、ビルドするためにprovisioning profileのUUIDが必要となり、
ipaファイルの作成にExportOptions.plistが必要となります。こちらはプロビジョニングプロファイルのファイルをテキストエディタ等で開くことで確認できます。中身はXml形式で記述されているので keyがUUIDの部分のstringから値を確認して
PROVISIONING_PROFILEに指定してください。このplistはipaファイルをビルドする際の設定情報を記述するファイルになります。
正直記述するのが面倒なので、Xcodeのプロジェクトファイルができたら、
一旦XcodeからArchiveビルドを行ってipaファイルを吐き出しましょう。そうすると、ipaファイルが生成されたフォルダ内にExportOptions.plistが生成されてるので
それをUnityのプロジェクトフォルダ直下にコピペって来るだけでOKです。以下、xcodeBuildのビルド手続きです。
PROJECT_DIRはunityiOSBuild.shより引き継いでいます。以下コマンドをターミナルから実行します。
Unityが起動した状態で行うと、うまくビルドができないので、
Unityは終了させた状態で実行します。実行後正常に完了したら、ipaファイルがプロジェクトフォルダは以下の
./build/iOS/archive/output_ipaに生成されているはずです。ipaファイルをXcodeから実機にインストールして動作を確認しましょう。ちなみに、ExportOptions.plistの中身はこんな感じでした。 
(認証情報が含まれるので一部 !!! で囲んで伏せ字にしてます


