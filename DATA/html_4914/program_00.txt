using System;
using NUnit.Framework;
using UnityEngine;

public class MyClassTest
{
    private MyClass _myClass;

    // クラス内の最初のテストが実行される前に一度だけ実行される
    [OneTimeSetUp]
    public void OneTimeSetUp()
    {
        Debug.LogWarning("OnetimeSetUp");
        MyClass.StaticInitialize();
    }

    // 各テスト実行前にそれぞれ実行される
    [SetUp]
    public void SetUp()
    {
        Debug.Log("SetUp");
        _myClass = new MyClass();
    }

    [Test]
    public void AdditionTest()
    {
        Assert.AreEqual(3, _myClass.Addition(1, 2));
    }

    [Test]
    public void MultiplicationTest()
    {
        Assert.AreEqual(6, _myClass.Multiplication(2, 3));
    }

    // 各テスト実行後にそれぞれ実行される
    [TearDown]
    public void TearDown()
    {
        Debug.Log("TearDown");
        _myClass.Dispose();
    }

    // クラス内の最後のテストが実行された後に一度だけ実行される
    [OneTimeTearDown]
    public void OneTimeTearDown()
    {
        Debug.LogWarning("OnetimeTearDown");
        MyClass.StaticReset();
    }
}

public class MyClass : IDisposable
{
    public static void StaticInitialize(){}
    public static void StaticReset(){}

    public int Addition(int a, int b) =&gt; a + b;
    public int Multiplication(int a, int b) =&gt; a * b;
    public void Dispose(){}
}

