private void Convert(Color[] colors, int width, int height)
{
    int halfWidth = width / 2;
    int halfHeight = height / 2;

    Texture2D tex = new Texture2D(width, height);
    Color[] newColors = new Color[colors.Length];
    GameObject quad = GameObject.CreatePrimitive(PrimitiveType.Quad);
    quad.name = "PolarCoord";

    for (int y = 0; y &lt; height; y++)
    {
        for (int x = 0; x &lt; width; x++)
        {
            int dx = x - halfWidth;
            int dy = halfHeight - y;

            int X = (int)Mathf.Floor(Mathf.Atan2(dy, dx) * (width / 360f) * (180f / Mathf.PI));
            int Y = (int)Mathf.Floor(Mathf.Sqrt(dx * dx + dy * dy));

            int idx = (Y * width) + X;
            Color color = colors[idx];

            int newIdx = (y * width) + x;
            newColors[newIdx] = color;
        }
    }

    tex.SetPixels(newColors);
    tex.Apply();

    Renderer ren = quad.GetComponent&lt;Renderer&gt;();
    ren.material.mainTexture = tex;
}

