More than 1 year has passed since last update.ゴール：Unity(iOS/Android)でgRPCを動かす開発環境：macOS Sierra + Unity 2017.3.0f3
開発環境：macOS Mojave + Unity 2019.1.5f1今回はその２です。その１でVisual Studio for Macをインストールしていると思いますので、Unityと連携しておいてください。"Unity + Visual Studio for Mac"で検索すると、色々出てくると思います。以下、簡単に手順を記載しておきます。メニューから"File - Build Settings"を選択する。"Player Settings ..."ボタンをクリックして、Inspectorを表示する。"Configuration - Scripting Runtime Version*"から".NET 4.x Equivalent"を選択する。Unity再起動の確認が出た時には、はいと答えてUnityを再起動する。Unity用のサンプルプロジェクトが用意されています。/grpc/examples/csharp/HelloworldUnityさらにこのディレクトリの中にあるREADME.mdに動かし方が書いてあります。基本はこのドキュメントに書かれている通りにすれば動作します。HelloworldUnity.slnをUnityエディターで開くには、Unity HubでHelloworldUnityディレクトリをリストに追加してください。Unityで実行すると、画面上に緑色のボタンが表示されます。ボタンを押すたびに通信が発生してボタン上の文字列が更新されます。ボタンが表示されない場合は、シーンが選ばれていない可能性があります。Assets/Scenes/SampleSceneをダブルクリックして、Hierarchy上のルートがSampleSceneになっていることを確認してください。このサンプルプロジェクトでは、Unityプロジェクトの中にサーバーとクライアントが両方用意されています。まずは、オリジナルのソースから、サーバーサイドの処理を削除します。上記のソースコードの「ここから〜ここまで」のコメント内のコードをすべて削除します。次にUnityでgRPCを動かす #1 コンソールアプリで説明したGreeting Serverを起動します。Visual Studioは複数のソリューションを開けないので、HelloworldUnityソリューションは閉じられてしまいますが、大丈夫です。サーバーの処理が使われていることを確認するために、GreeterImpl.SayHelloメソッドを少し書き換えておきましょう。もう一度Unityを起動します。ボタンの文字列が今編集した内容で更新されることを確認します。次は、iOSで動かしてみます。


