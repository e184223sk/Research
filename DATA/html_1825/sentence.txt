More than 1 year has passed since last update..NET Core の場合はデフォルトでモデルの検証処理が入っています。 .NET Framework の場合は入っていません。 .NET Framework から .NET Core に移行するときなどに注意する必要があります。どちらも Web API を使用します。それぞれで同じものを使えるモデルクラスと、今回の比較対象の Web API Post Method のサンプルコードです。いくつか検証エラーになりそうなパターンで Shell から Request してみると違いがわかります。.NET Core の場合はステータスコード 400 と RFC 7807 仕様に準拠したエラーの内容が返ってきます。 .NET Framework の場合はステータスコード 200 と "null" が返ってきます。何も設定しない場合と同じステータスコードが返ってきます。エラーの内容は変わっていて、モデルクラスの Required エラーになっています。先程試した {} を設定した場合と同じステータスコードとエラー内容が返ってきます。.NET Core には ApiController に対して ModelStateInvalidFilter がデフォルト動作するようになっています。
これによって .NET Framework では自分で用意する必要があった ModelState.IsValid と null のチェックが実装不要になっています。
僕たち開発者にとっては .NET Core のほうが検証処理をデフォルト実装していて便利だと思います。恐らくそういう意見が多くて .NET Core に実装されたのだと考えています。お互いの動作を合わせるようなコードも載せておきます。細かい複雑な部分など完全な一致ではないので、参考程度にしてください。Startup.cs で options.SuppressModelStateInvalidFilter = true を設定すれば検証しなくなります。ActionFilterAttribute を継承した ModelState と null のチェックをするフィルタークラスを自作して、 WebApiConfig のフィルターに追加します。ASP.NET Core を使って Web API を作成する | Microsoft Docsaspnetcore/ModelStateInvalidFilter.cs at master · dotnet/aspnetcore · GitHub


