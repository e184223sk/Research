    class Program
    {
        static void Main(string[] args)
        {
            var context = new TestContext();
            var sw = new Stopwatch();

            var _studentReposiroty = new StudentsRepository(context);
            var _classReposiroty = new ClassesRepository(context);
            var _clabReposiroty = new ClabsRepository(context);
            var _userReposiroty = new UsersRepository(context);

            var viewList = new List&lt;TestViewModel&gt;();

            // プログラムでデータ成型
            sw.Start();

            // 特定の生徒データ取得
            var students = _studentReposiroty.List();

            // クラブとかのIdを取得
            var clabIds = students.Select(x =&gt; x.ClabId).ToList();
            var classIds = students.Select(x =&gt; x.ClassId).ToList();
            var userIds = students.Select(x =&gt; x.CreatedByUserId).ToList();

            // IDに紐づく名称のリストを(ID, Name)のタプルで取得
            var classes = _classReposiroty.ListNameById(classIds);
            var clabs = _clabReposiroty.ListNameById(clabIds);
            var users = _userReposiroty.ListNameById(userIds);

            // データ内にあるIDをNameに置き換える。対応するものがなかったら空文字。
            students.ForEach(r =&gt;
            {
                var className = !string.IsNullOrEmpty(classes.Find(x =&gt; x.Item1.Equals(r.ClassId)).Item2) 
                    ? classes.Find(x =&gt; x.Item1.Equals(r.ClassId)).Item2 : string.Empty;

                var clabName = !string.IsNullOrEmpty(clabs.Find(x =&gt; x.Item1.Equals(r.ClabId)).Item2)
                    ? clabs.Find(x =&gt; x.Item1.Equals(r.ClabId)).Item2 : string.Empty;

                var userName = !string.IsNullOrEmpty(users.Find(x =&gt; x.Item1.Equals(r.CreatedByUserId)).Item2)
                    ? users.Find(x =&gt; x.Item1.Equals(r.CreatedByUserId)).Item2 : string.Empty;

                var testViewModel = new TestViewModel
                {
                    Id = r.Id,
                    Name = r.Name,
                    ClassName = className,
                    ClabName = clabName,
                    CreatedByUserName = userName,
                    Age = r.Age
                };

                viewList.Add(testViewModel);
            });

            sw.Stop();

            Console.WriteLine($"処理時間: {sw.ElapsedMilliseconds}ミリ秒");
            Console.WriteLine();


