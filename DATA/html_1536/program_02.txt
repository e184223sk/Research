
        public List&lt;TestViewModel&gt; GetTestViewModels()
        {
            var returnList = _testContext.Students.GroupJoin(
                _testContext.Classes, s =&gt; s.ClassId, c =&gt; c.Id,
                (s, c) =&gt; new
                {
                    s = s,
                    c = c
                }
            ).SelectMany(
                x =&gt; x.c.DefaultIfEmpty(),
                (s, c) =&gt; new { s = s.s, c }
                )

            .GroupJoin(_testContext.Clabs, sc =&gt; sc.s.ClabId, clab =&gt; clab.Id, (sc, clab) =&gt; new { sc, clab })
            .SelectMany(x =&gt; x.clab.DefaultIfEmpty(), (sc, clab) =&gt; new { sc = sc.sc, clab })
            .GroupJoin(_testContext.Users, scc =&gt; scc.sc.s.CreatedByUserId, u =&gt; u.Id, (scc, u) =&gt; new { scc, u })
            .SelectMany(x =&gt; x.u.DefaultIfEmpty(), (scc, u) =&gt; new TestViewModel
            {
                Id = scc.scc.sc.s.Id,
                Name = scc.scc.sc.s.Name,
                ClabName = scc.scc.clab.Name ?? string.Empty,
                ClassName = scc.scc.sc.c.Name ?? string.Empty,
                CreatedByUserName = u.Name ?? string.Empty,
                Age = scc.scc.sc.s.Age
            }).ToList();

            return returnList;
        }


