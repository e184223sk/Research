
private async Task&lt;string&gt; writeRec(string pin,WriteData rec)
{
    string result = "";
    try {
        result = await Task&lt;string&gt;.Run(async () =&gt; {
            byte[] challenge = System.Text.Encoding.ASCII.GetBytes("this is challenge");

            byte[] userid = new byte[] { rec.recno, rec.filler };
            userid = userid.ToList().Concat(rec.data1).ToArray();

            string username = (rec.data2 == null) ? "" : gebo.CTAP2.Common.BytesToHexString(rec.data2);
            string userdisplayname = (rec.data3 == null) ? "" : gebo.CTAP2.Common.BytesToHexString(rec.data3);

            string json =
                    "{" +
                        @"rp : {" +
                            string.Format($"id : 'GeboSig.gebo.com',") +
                        @"}," +
                        @"user : {" +
                            string.Format($"id_bytearray:[{string.Join(",", userid)}],") +
                            string.Format($"name :'{username}',") +
                            string.Format($"displayName :'{userdisplayname}',") +
                        @"}," +
                        @"pubKeyCredParams: [{type: 'public-key',alg: -7}]," +
                        @"attestation: 'direct'," +
                        @"timeout: 60000," +
                        @"authenticatorSelection : {" +
                            string.Format($"requireResidentKey : true,") +
                            @"authenticatorAttachment : 'cross-platform'," +
                            string.Format($"userVerification : 'discouraged'") +
                        @"}," +
                        string.Format($"challenge:[{string.Join(",", challenge)}],") +
                    "}";

            var ret = await gebo.CTAP2.WebAuthnModokiDesktop.Credentials.Create(gebo.CTAP2.DevParam.GetDefaultParams(), json, pin);
            if (ret.isSuccess == false) {
                return ret.msg;
            }
            return ("Success");
        });

    } catch (Exception ex) {
        result = ex.Message;
    } finally {

    }
    return result;
}


