一般的にDLLを呼び出す場合はDLLImportを使用しますが、実行時にDLLが無いと起動出来なくなってしまうので、プラグイン的な使い方をする場合は、DLLを動的に呼び出したい場合があります。DLLを動的に呼び出すには、LoadLibrary+GetProcAddressで関数ポインタを取得し、定義済みのDelegateに変換して呼び出す昔ながらの方法もありますが、今回紹介する方法は、TypeBuilder.DefinePInvokeMethod を使用して後から動的にDLLImport相当のメソッドを作成し、それを呼び出します。この方法の利点としては、事前にDelegateを定義する必要が無いため、パラメータ設定次第で引数の数、型すらも自由に変更することが可能です。（そんな機会があるかと言えば、殆ど無いかもしれないが…）同じDLLから複数のメソッドを定義したり、同じメソッドを何度も使う場合は、作成済みのTypeBuilderやMethodInfoをDictionaryでキャッシュしておく等した方が良いかもしれません。


