
public interface IRequestAllHandler&lt;in TRequest, out TResponse&gt;
{
    TResponse[] InvokeAll(TRequest request);
    IEnumerable&lt;TResponse&gt; InvokeAllLazy(TRequest request);
}

public interface IAsyncRequestAllHandler&lt;in TRequest, TResponse&gt;
{
    ValueTask&lt;TResponse[]&gt; InvokeAllAsync(TRequest request, CancellationToken cancellationToken = default);
    ValueTask&lt;TResponse[]&gt; InvokeAllAsync(TRequest request, AsyncPublishStrategy publishStrategy, CancellationToken cancellationToken = default);
    IAsyncEnumerable&lt;TResponse&gt; InvokeAllLazyAsync(TRequest request, CancellationToken cancellationToken = default);
}

