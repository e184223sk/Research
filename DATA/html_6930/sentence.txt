More than 3 years have passed since last update.僕は以前 Delphi で Windows のシェル拡張（Shell Extension）を使ってエクスプローラに機能を追加するアプリを作りました。
簡単エクスプローラ拡張 EzExpEx
これは残念なことに 64 ビット Windows のエクスプローラで動かないんですよね。僕が持っている Delphi では 64 ビット Windows アプリを作れないんです。
これを VB.NET で作り直したいとずっと思っていました。そのために調べていると次の記事がありました。
How to Write Windows Shell Extension with .NET Languages - CodeProject
これを参考にしてプログラムを書いてみました。エクスプローラで右クリックするとコンテキストメニューが表示されます。このメニューに独自の項目を追加します。まず、「クラスライブラリ」のプロジェクトを新規作成します。ここではプロジェクト名を「ContextMenuExtension」にします。次に、プロジェクトの「参照」設定に以下のアセンブリを追加します。IDE が作成したソースファイル「Class1.cs」または「Class1.vb」を「ContextMenuExtension.cs」または「ContextMenuExtension.vb」にリネームします。* 好きなファイル名で構いません。「ContextMenuExtension」クラスを「IShellExtInit」「IContextMenu」から派生するよう書換します。IDE が「インターフェイスの実装」を助言してくるので従って以下のメソッドを実装します。必要な定数やメソッドを用意します。選択されたファイル／フォルダを取得して変数にセットしておきます。コンテキストメニューに項目を追加します。エクスプローラのステータスバーに表示されるメッセージを設定します。メニュー項目が選択されると呼出されます。主な機能は「DoShowFileName」。選択したファイルの名称を表示します。作成しているクラスライブラリが COM サーバとして登録できるようにします。まず、アセンブリを COM 参照可能にします。以下の手順で作業します。プロジェクトの「プロパティ」を開く。
「アプリケーション」タブを選択。
「アセンブリ情報」を押下。
ダイアログボックスで「アセンブリを COM 参照可能にする」にチェック。次に、アセンブリに署名します。以下の手順で作業します。プロジェクトの「プロパティ」を開く。
「署名」タブを選択。
「アセンブリに署名する」をチェック。
「厳密な名前のキーファイルを選択」で「新規作成」を選択。
ダイアログボックスで「キーファイル名」に任意のファイル名を指定。
「キーファイルをパスワードで保護する」は必須ではない。クラスに属性を設定します。GUID はクラスごとに新規作成して下さい。登録および解除のためのメソッドを実装します。ここで対象となるファイルの拡張子を指定します。ビルドするとアセンブリファイルが作成されます。これを COM サーバとして Windows に登録します。C# または VB.NET で作成したアセンブリファイルを COM サーバとして登録するには、.NET Framework に同梱されている「regasm」ツールを使います。以下の記事も書いています。
.NET で Windows エクスプローラのコンテキストメニューを拡張 - Qiita
上記のコードの大半をライブラリにした SharpShell を使用しています。


