More than 1 year has passed since last update.Microsoftのサイトにはこう書いてありますCodeDOM には一般的なさまざま種類のソース コード要素を表す型が用意されています。 オブジェクト グラフをアセンブルする CodeDOM 要素を使用すると、ソース コード モデルを構築するプログラムをデザインできます。 このオブジェクト グラフは、サポートされているプログラミング言語用の CodeDOM コード ジェネレーターを使用して、ソース コードとしてレンダリングできます。 また、CodeDOM を使用して、ソース コードをバイナリ アセンブリにコンパイルすることもできます。
CodeDOM の一般的な使用方法の例は次のとおりです。
・テンプレートを使ったコード生成。ASP.NET、XML Web サービス クライアント プロキシ、コード ウィザード、デザイナー、またはその他のコード出力機構のためのコードを生成します。
・動的コンパイル。1 つ以上の言語でのコードのコンパイルをサポートします。要はテンプレートから実行ファイルを作れるたり、コードを動的にコンパイルできるわけです今回はコンパイルする方法について説明します。余談ですがテンプレートからコード生成する方法も動的コンパイラを使っています。
そのため、実際はテンプレートからソースコードを生成しコンパイルしています。今回生成するときに使うコードコードコードこのようにしてコードを生成できますDLLの設定をする必要があります
DLLの設定をされていないと実行できませんCodeDomを使うとGUIプログラミングツールを簡単に作ることができます。
また、IDEを自作する際にも役に立つと思います。
さらにreplaceを使うことで独自の言語のなんちゃってコンパイラを作ることも可能だと思います


