More than 3 years have passed since last update.(a == 1 &amp;&amp; a == 2 &amp;&amp; a == 3) を常に真にできますか？ が話題になっていたような気がしたのでC#で解いてみます。
getterで++使えば一瞬やで！…と思ったら先人がいたので別解を目指します。C#も演算子のオーバーロードを使うことができるのでこちらを用います。とりあえず次のようなクラスを作成します。このMagicNumberに常にtrueとなる==演算子を実装すれば何とかなるわけです。
演算子はpublic static int operator +(MagicNumber a, int b)のような形で実装できます。しかし==演算子は単独では実装できません。
!=演算子も一緒に実装してやる必要があります。これで==でも!=でも常にtrueを返す演算子が作れました。…といいたいところですが、このままでは警告が出ます。

==演算子と!=演算子を実装するにはEquals()とGetHashCode()も実装することが推奨されるようです。そんなわけで最終的にはこうなりました。
やったね。演算子のオーバーロード (++C++; // 未確認飛行 C)
Equals() と演算子 == のオーバーロードに関するガイドライン (C# プログラミング ガイド)


