    public static class Bezier
    {
        public static Vector3 Get(float t, params Vector3[] points)
            =&gt; Get(t, points.AsSpan());

        public static Vector3 Get(float t, ReadOnlySpan&lt;Vector3&gt; points)
            =&gt; (points.Length, t) switch
            {
                _ when t &lt; 0 || t &gt; 1 =&gt; throw new Exception(""),
                var (i, _) when i &lt; 2 =&gt; throw new Exception("Points must be &gt;= 2"),

                var (i, _) when i == 2 =&gt; points[0] + t * (points[1] - points[0]),
                var (i, _) =&gt; Get(t, points.Slice(0, i - 1)) 
                              + t * (Get(t, points.Slice(1, i - 1)) - Get(t, points.Slice(0, i - 1))),
            };
    }

