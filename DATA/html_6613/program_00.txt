class MainWindowViewModel
{
    public ReactiveProperty&lt;bool&gt; IsBusy1 { get; }
        = new ReactiveProperty&lt;bool&gt;(false);
    public ReactiveProperty&lt;bool&gt; IsBusy2 { get; }
        = new ReactiveProperty&lt;bool&gt;(false);

    public ReactiveCommand ButtonClickAsyncCommand1 { get; }
    public ReactiveCommand ButtonClickAsyncCommand2 { get; }

    public MainWindowViewModel()
    {
        ButtonClickAsyncCommand1 = IsBusy1.Select(x =&gt; !x).ToReactiveCommand();
        ButtonClickAsyncCommand2 = IsBusy2.Select(x =&gt; !x).ToReactiveCommand();

        ButtonClickAsyncCommand1.Subscribe(async _ =&gt;
        {
            IsBusy1.Value = true;
            Debug.WriteLine("Clicked ASync 1");
            await Task.Delay(500);
            IsBusy1.Value = false;

        });
        ButtonClickAsyncCommand2.Subscribe(async _ =&gt;
        {
            IsBusy2.Value = true;
            Debug.WriteLine("Clicked ASync 2");
            await Task.Delay(500);
            IsBusy2.Value = false;

        });
    }
}

