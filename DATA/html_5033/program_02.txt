

    void Update()
    {

↓CheckInputMouse()はもう必要ないので削除する

        CheckInputMouse();

        switch (State)
        {
            case STATE.IDLE:
            case STATE.RUN:
                CheckInputMove();
                break;
        }
    }

        void FixedUpdate()
        {
            switch (State)
            {
                case STATE.IDLE:
                case STATE.RUN:
                    UpdateMove();
                    break;
追加            case STATE.ROLL:
                    UpdateRoll();
                    break;
            }
        }

追加    private readonly string TAG_CHASER = "Chaser";

        void OnTriggerEnter(Collider other)
        {
            if (State != STATE.IDLE &amp;&amp; State != STATE.RUN) return;

            // ポップアップポイントに接触した
            if (other.tag == TAG_POPUP_POINT) TakeFollower(other.GetComponent&lt;PopupPoint&gt;());

            // ゴールエリアに到達した
            if (other.tag == TAG_GOAL_AREA) ReleaseFollower();

            // 敵と接触した
追加        if (other.tag == TAG_CHASER) OnRoll();
        }

        //---------------
        // 回転・ダウン //
        //---------------------------------------------------------------------------------

        /// &lt;summary&gt;
        /// その場で回転を開始し、一定秒後にダウン状態へ遷移する
        /// &lt;/summary&gt;
        public void OnRoll()
        {
            if (State == STATE.ROLL || State == STATE.DOWN) return;
            State = STATE.ROLL;
            mAnim.Play(PlayerAnimation.ANIM_ID.IDLE);
            mRigid.velocity = Vector3.zero;
            mRigid.angularVelocity = Vector3.zero;
            StartCoroutine(DelayMethod(1.0f, () =&gt; OnDown()));
        }

        private void UpdateRoll()
        {
            Vector3 angle = new Vector3(0.0f, 540.0f, 0.0f) * Time.deltaTime;
            mTrans.Rotate(angle);
        }

↓OnDown()はすでに実装済

        /// &lt;summary&gt;
        /// ダウンアニメーションの初期化
        /// &lt;/summary&gt;
        public void OnDown()
        {
            State = STATE.DOWN;
            mRigid.velocity = Vector3.zero;
            mRigid.angularVelocity = Vector3.zero;
            mAnim.Play(PlayerAnimation.ANIM_ID.DOWN);
        }


