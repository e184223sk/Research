More than 1 year has passed since last update..NET、もっと限定すればC#で数値解析できるライブラリが欲しくてIvyFEMを作っています。
- 図面作成
- 図面ファイルの読み書き
- 計算
- 結果表示
の一連の流れをこのライブラリを使って実装することができます。
基本機能は次の通りです。
　 ☑ 単純な2D(ポリゴン)の図面作成
　 ☑ 有限要素（三角形要素）分割
　 ☑ 有限要素行列の作成 （*1）
　 ☑ リニアシステムを解く（LAPACKE, Lis、独自実装）（*1）
　 ☑ サーモグラフィーのような分布図
　
　 *1 いま用意しているのは
　　　　　 電磁気学：H面導波管の伝達問題
　　　　　 力学： 弾性体の構造解析
　　　　　　　　　 線形弾性体
　　　　　　　　　 超弾性体
　　　　　　　　　　 Saint Venant Kirchhoff
　　　　　　　　　　 Mooney-Rivlin (非圧縮、微圧縮)
　　　　　　　　　　 Ogden (非圧縮、微圧縮)
　　　　　　　　　 多点拘束(Multipoint Constraint, MPC)(直線)
　　　　　　　　　 剛体との接触(直線、円)　　IvyFEM
　　　　https://github.com/ryujimiya/IvyFEM　　サンプルアプリケーション　IvyFEMProtoApp
　　　　https://github.com/ryujimiya/IvyFEMProtoApp/　　プロジェクトに追加したライブラリ一式は、出力ディレクトリに常にコピーするように設定します。　　IvyFEMライブラリで描画する対象、OpenTK.GLControl(名前glControl)を追加します。GLControlが無いと警告がでますが、Visual Studioの自動修正機能を使って修正できます。修正すると、が追加されると思います。　　glControlのイベントハンドラなどを実装します。DrawerArrayとFieldDrawerArrayがIvyFEMで実装されている描画ライブラリの実体で、DrawerArrayは図面(CAD)描画用、FieldDrawerArrayは計算結果描画用となります。弾性体の曲げの実装の前に、CADの実装例を示します。
CadObject2D（名前cad2D)を生成し、頂点を追加していきます。
次に生成したcad2Dに対応するCadObject2DDrawer(名前drawer)を生成し、最後にDrawerArrayに追加すれば完了です。
あとはMainWindowで実装したglControl_Paint()イベントが発生すればDrawerArray.Draw()が実行されて図面が描画されます【描画結果】
【計算結果】
　　CadObject2D　　Mesher2D　　FEWorld　　線形材料オブジェクトLinearElasticMaterialを指定します。　　FixedCad　　World.MakeElements()　　FieldValue　　場の描画オブジェクトFieldDrawerの生成(FaceFieldDrawer, EdgeFieldDrawer, etc)し、場の描画用アレイ(FieldDrawerArray)に追加します。　　問題に応じた有限要素法オブジェクトを生成します。
　　今回は弾性体の変位計算用のElastic2DFEM(名前FEM)を使います。　　IEquationSolver(FEM.Solverにセットする)
　　IvyFEM独自の実装のほかにLapackやLisを使用することができます。(問題によって適用できる計算方法とそうでないものがあるので注意が必要です）　　FEM.Solve()　　World.UpdateFieldValueValuesFromNodeValues() と FieldDrawer.Update()　　glControlのInvalidate()とUpdate()を実行します。IvyFEMを用いて弾性体の曲げのシミュレーションをしました。
ここではすでにIvyFEMに用意されているシミュレーションルーチンを使って計算しましたが、シミュレーションの現場では独自に計算方法を実装したいと思われることもあると思います。その場合は、IvyFEMのコアな部分にも触れる必要があります。IvyFEMの一連のFEM群が参考になると思います。


