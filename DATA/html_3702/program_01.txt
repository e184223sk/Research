
        public void MakeBluePrint(MainWindow mainWindow)
        {
            double WaveguideWidth = 1.0;
            double InputWGLength = 1.0 * WaveguideWidth;
            CadObject2D cad2D = new CadObject2D();
            {
                IList&lt;OpenTK.Vector2d&gt; pts = new List&lt;OpenTK.Vector2d&gt;();
                pts.Add(new OpenTK.Vector2d(0.0, WaveguideWidth));  // 頂点1
                pts.Add(new OpenTK.Vector2d(0.0, 0.0)); // 頂点2
                pts.Add(new OpenTK.Vector2d(InputWGLength, 0.0)); // 頂点3
                pts.Add(new OpenTK.Vector2d(InputWGLength, (-InputWGLength))); // 頂点4
                pts.Add(new OpenTK.Vector2d((InputWGLength + WaveguideWidth), (-InputWGLength))); // 頂点5
                pts.Add(new OpenTK.Vector2d((InputWGLength + WaveguideWidth), WaveguideWidth)); // 頂点6
                var res = cad2D.AddPolygon(pts);

                var resCircle = cad2D.AddCircle(new OpenTK.Vector2d(
                    InputWGLength + 0.5 * WaveguideWidth, 0.5 * WaveguideWidth),
                    0.25 * WaveguideWidth,
                    res.AddLId);
            }

            mainWindow.IsFieldDraw = false;
            var drawerArray = mainWindow.DrawerArray;
            drawerArray.Clear();
            IDrawer drawer = new CadObject2DDrawer(cad2D);
            mainWindow.DrawerArray.Add(drawer);
            mainWindow.Camera.Fit(drawerArray.GetBoundingBox(mainWindow.Camera.RotMatrix33()));
            mainWindow.glControl_ResizeProc();
            mainWindow.glControl.Invalidate();
            mainWindow.glControl.Update();
        }

