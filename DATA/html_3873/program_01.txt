
using System;
namespace EightQueensGame
{
    class Controller : IObserver&lt;Board&gt;
    {
        private IPlayer _player1;
        private IPlayer _player2;
        private IPlayer _winner;
        private Board _board;

        // 試合の開始
        public void Run()
        {
            DecideFirstPlayer();
            _board = new Board();
            var game = new Game(_player1, _player2, _board);
            // 購読者は自分自身
            game.Subscribe(this);
            _winner = game.Start();
        }

        // 先手を決める
        private void DecideFirstPlayer()
        {
            var b = Confirm("Are you first?");
            if (b)
            {
                _player1 = new HumanPlayer();
                _player2 = new ComputerPlayer();
            }
            else
            {
                _player1 = new ComputerPlayer();
                _player2 = new HumanPlayer();
            }
        }

        private IPlayer GetHumanPlayer() =&gt;
             _player1 is HumanPlayer ? _player1 : _player2;

        // 盤面を表示
        private void Print(Board board)
        {
            Console.Clear();
            Console.WriteLine("  1 2 3 4 5 6 7 8 ");
            Console.WriteLine("  ----------------");
            for (int y = 1; y &lt;= 8; y++)
            {
                Console.Write($"{y}|");
                for (int x = 1; x &lt;= 8; x++)
                {
                    var val = board[x, y].Value;
                    if (val == '_')
                        val = '.';
                    Console.Write(val + " ");
                }
                Console.WriteLine();
            }
        }

        // 終了した 
        public void OnCompleted()
        {
            var winner = _player1.IsWin ? _player1 : _player2;
            //var human = GetHumanPlayer();
            // このゲームには引き分けはない
            if (_winner is HumanPlayer)
                Console.WriteLine("You Win");
            else
                Console.WriteLine("You Lose");
        }

        // エラー発生
        public void OnError(Exception error)
        {
            Console.WriteLine(error.Message);
        }

        // 状況変化
        public void OnNext(Board value)
        {
            Print(value);
        }

        // (y/n)の確認
        public static bool Confirm(string message)
        {
            Console.Write(message);
            var left = Console.CursorLeft;
            var top = Console.CursorTop;
            try
            {
                while (true)
                {
                    var key = Console.ReadKey();
                    if (key.KeyChar == 'y')
                        return true;
                    if (key.KeyChar == 'n')
                        return false;
                    Console.CursorLeft = left;
                    Console.CursorTop = top;
                }
            }
            finally
            {
                Console.WriteLine();
            }
        }
    }
}

