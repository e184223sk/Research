More than 3 years have passed since last update.このレポートはSkype勉強会での活動を「書面としてアウトプットする」こと、「電気系の学生の成果物を作るための意識高い系のレポート」です。完全初心者なので、勉強会参加者の先輩たちから様々なツッコミを頂きながら書いております。それゆえに先輩たちの目から外れた誤字脱字等ございますが、ぜひともツッコミいただいて、私の勉強にさせていただければと思います。ここまで無視されてきたコンストラクタですが、フィールドの初期化や、クラス内部で利用する外部リソースの準備といった、処理を記述するのが一般的なようです。このコンストラクターにはルールがあります。
１.指定出来る修飾子はアクセス修飾子
2．戻り値はもたない
voidとはちがい、戻り値の型そのものを指定してはならない！
3．名前はクラス名と一致する事。こんな感じにコードを書きました。このように、すると、出力はこんなふうに出てきました。コンストラクターでは、引数FirstName,LastNameの値をそれぞれ、対応するフィールドにセットしています。自動で空のデフォルトコンストラクターが、生成されていたから！
ただし、これに頼り切っていると、あとから引き数付きのコンストラクターを追加した場合は、っデフォルトコンストラクターに頼ったコードは軒並み、エラーとなる訳です。
この様な場合、まずは空であっても、明示的にコンストラクターを定義するのが無難です。コンストラクタも、メソッドと同じく、複数のシグニチャー（名前以外の引数の型・並びのこと）を持つ事が可能です。これをコンストラクタのオーバーロードといいます。例えば、はオーバーロードできるわけですね。（名前が同じでも、引数の中身（型、並び）が違うから。＝　シグニチャが違うから）以下のコードは、PersonクラスのFirstName/LastNameフィールドを、コンストラクターで初期化する例です。FirstName/LastNameフィールドを明示させるコンストラクターとこれらを省略できる、デフォルトコンストラクターを定義しています。そうすると、以下のように出力されました。コンストラクターというものを原理的に理解しないと恐らくこんがらがっちゃいますね・・・最近、筋トレをしながら、ほどよく疲れておくことを意識しています。
というのも、運動不足で体重がやばくて・・・（笑）VSCodeの動かしかたにも少し慣れて来ました。今度は、pythonなども動かせるようになりたいです！初日


