More than 1 year has passed since last update.Unity(C#)のクラスやGameObject、Componentの呼び出しでよく使うパターンをまとめています。まず知らないと困りそうな手法達です。Unityスクリプトの基本ですが、GameObjectやComponent、画像などのリソースをインスペクタを介してフィールドで受ける方法です。
GameObjectとComponentはインスペクタ上の指定方法は同じですが、スクリプト側は区別するので注意してください。ちなみに配列も可能です。可変的にデータを参照したい場合や、大量のデータを名前で管理したいような状況では、「リソース」として取得する方法があります。「Resources」フォルダに入っているデータがリソースとして扱われます。
リソースはビルド時にゲームデータとして使用されるデータとして扱われます。通常は、シーン上で使用されていないデータはビルド時に除外されるようになっており、アセットのサンプルデータなどのような不要なデータとして扱われます。リソースの場合は、シーン上から直接使われていなくても必ずビルドデータに含まれるようになります。UnityDoc - https://docs.unity3d.com/jp/540/ScriptReference/Resources.Load.htmlフィールドなどからGameObjectを取得したあとに、内包しているComponentを取得する方法です。
実行中にComponentが追加されるようなAssetsで連携する場合は必須です。インスタンスではなくクラスそのものを使いたい場合があります。
特にAssetsのコンポーネントを参照したい、生成したいなどはスクリプトが同じ名前空間にないとアクセスできないので、usingします。サンプルとして、MyGameAssetという名前空間にMyGameObjectクラスを作ったとします。このクラスを外部のスクリプトからアクセスする場合は、次のようになります。なお、名前空間はProjectViewの階層とかは関係なく、あくまでもnamespaceで決まるので注意してください。パフォーマンスや可読性の観点からあまり使いたくない手法です。動的に生成されたGameObjectなどのシーン上のGameObjectを手軽に取得する方法です。文字列で名前指定するだけで取得できますが、結構重い処理なのでUpdate()内などで定期的に取得し直すとボトルネックになる可能性があります。いろいろ不十分な部分あると思います。
指摘あれば修正加筆するかもなので、よろしくお願いします。


