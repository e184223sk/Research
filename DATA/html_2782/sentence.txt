More than 1 year has passed since last update.画面にボタンつけて、ボタンをダブルクリックするとイベントが自動で作られます。
開発者はそのあたりをあまり意識せずにプログラミングできます。
イベントを自作する必要があったり、UIとロジックを分離するなど、ひと手間かける必要があると
イベントを送信（発生）する方法や、イベントを受信（通知を受取）する方法の理解が必須になります。深くなると、eventやdelegateといった単語が必要になりますが、今回はそのあたりはスルーした初級編です。
知りたい方はqiitaや公式にあると思いますのでどうぞ。画面上にボタン１、ボタン２があり、テキスト１、テキスト２にどちらのボタンが押されたか分かるように出力するとします。このように書けば、テキストボックスにどちらのボタンイベントで通知されたか分かります。デザイナーファイルは以下のようになっています。ここに注目です。「this.button1.Click」に対して「+=」を使っています。
そして「this.button1_Click」メソッドがイベントハンドラーの引数にあります。つまり、ボタン２のクリックも「this.button1_Click」にすると、ボタン1でもボタン２でも同じメソッドが呼ばれます。
私はこれをイベント受信の集約と呼んでます。以下のように変更すると、発生元の「sender」で判断が可能に。使いどころとして、
異なる機能からそれぞれの機能のデータを送り、統一した処理を行うもの。例えばテーブル違いのデータ登録。こちらはちょっと特殊ケースです。
１つのボタンクリックでAとBそれぞれに通知したい場合です。
ボタン１のクリックはテキスト１に、ボタン２のクリックはテキスト２に出力するように変更します。ボタン１クリックでもテキスト２に出力したい場合、「button2_Click」をイベントに追加します。
ボタン２クリックでもテキスト１に出力したい場合、「button1_Click」をイベントに追加します。下記はコンストラクタで追加してますが、デザイナーでも問題ないです。ボタン１をクリックすると、button1_Clickとbutton2_Clickに通知されます。
私はこれをイベント送信の分配と呼んでます。使いどころとして、
１つの通知元から複数の機能へ通知をあげて処理を行うもの。例えばボタン１つ押すと各画面の初期化を行う。


