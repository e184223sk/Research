/// &lt;summary&gt;
/// ExpressionTree経由でTargetMethodを呼び出すだけのサンプル
/// &lt;/summary&gt;
public class Test
{
    /// &lt;summary&gt;
    /// ExpressionTree経由でTargetMethodを呼び出して結果を出力する
    /// &lt;/summary&gt;
    public void InvokeTargetMethodWithExpressionTree()
    {
        // 呼び出すメソッド情報を取得
        MethodInfo methodInfo = typeof(Test).GetMethod(nameof(TargetMethod));

        // out引数を定義(MakeByRefTypeを使う)
        ParameterExpression valueArg = Expression.Parameter(typeof(int).MakeByRefType());

        // ExpressionTreeでdelegateを作成
        TestDelegate compiled = Expression.Lambda&lt;TestDelegate&gt;(
            Expression.Call(
                Expression.Constant(this),
                methodInfo,
                valueArg
            ),
            valueArg
        ).Compile();

        // 呼び出して結果を出力
        compiled.Invoke(out int intValue);
        Console.WriteLine($"intValue={intValue}");
    }

    /// &lt;summary&gt;
    /// ExpressionTreeで呼び出されるメソッド
    /// &lt;/summary&gt;
    public void TargetMethod(out int value)
    {
        value = 100;
    }

    private delegate void TestDelegate(out int value);
}

