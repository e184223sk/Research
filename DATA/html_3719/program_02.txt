

private static readonly Func&lt;int, int&gt; Fib = CreateFib();
private static Func&lt;int, int&gt; CreateFib()
{
    Func&lt;Dictionary&lt;int, int&gt;, int, int&gt; fib = (cache, n) =&gt;
    {
        int result;
        if (cache.TryGetValue(n, out result))
        {
            return result;
        }

        if (n == 0)
        {
            result = 0;
        }
        else if (n == 1)
        {
            result = 1;
        }
        else
        {
            result = Fib(n - 1) + Fib(n - 2);
        }

        cache.Add(n, result);
        return result;
    };

    return val =&gt; fib(new Dictionary&lt;int, int&gt;(), val);
}


