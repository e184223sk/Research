using System.Collections.Generic;
using UnityEngine;
using System.Collections;
using Photon.Pun;
using Photon.Realtime;
using UnityEngine.UI;

[RequireComponent(typeof(PhotonView))]
public class InRoomChat : MonoBehaviourPunCallbacks
{
    public Rect GuiRect = new Rect(0, 0, 250, 300);
    public bool IsVisible = true;
    public bool AlignBottom = false;
    public List&lt;string&gt; messages = new List&lt;string&gt;();
    private string inputLine = "";
    private Vector2 scrollPos = Vector2.zero;
    public Text showText;
    public InputField inputField;
    public static readonly string ChatRPC = "Chat";

    public void OnSend()
    {
        Debug.Log("送信");
        this.photonView.RPC("Chat", RpcTarget.All, inputField.text);
        inputField.text = "";
    }

    // ChatRPC RPC呼出側：送信者　RPC受信g側：受信者
    [PunRPC]
    //Vector3 senderposition,
    public void Chat(string newLine, PhotonMessageInfo mi)
    {
        //送信者の名前用変数
        string senderName = "anonymous";

        if (mi.Sender != null)
        {
            //送信者の名前があれば、、、IsNullOrEmptyはNullか空でTrue
            if (!string.IsNullOrEmpty(mi.Sender.NickName))
            {
                senderName = mi.Sender.NickName;
            }
            else
            {
                senderName = "player " + mi.Sender.UserId;
            }
        }
        //受信したチャットをログに追加
        showText.text = senderName + ": " + newLine;
    }
}


