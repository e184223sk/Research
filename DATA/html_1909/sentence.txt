オブジェクトを移動させる方法はいろいろとありますが、代表的な方法をまとめたいと思います。
Unityでオブジェクトを移動させるには、大きく2つの方法があります。
1つは、座標を変更して移動させる方法。もう1つは、オブジェクトに力を加えて移動させる方法です。transformを使用して座標を直接変更します。オブジェクトを移動させるのに一番簡単で単純な方法です。ただし物理演算を無視した座標の変更は自然な動きに反しますので注意しましょう。直接座標を変えて移動するシンプルな方法です。👍ポイント
transform.position（transform.position.x または y, z）には直接値を代入出来ないので注意が必要です。
Vector3(Vector2)の変数を介してtransform.positionを変更します。または下記のように変更します。transform.Translate(x, y, z)を使用してオブジェクトの現在の位置を基準に移動する方法です。
Translate()の引数で指定したベクトルx・y・z分だけオブジェクトの位置を移動させることができます。Vector3クラスにMoveTowards関数があります。MoveTowards関数は現在地から目的地まで一定速度で移動させてくれる関数です。引数には順番に “current” に現在地（Vector3）、”target” に目的地（Vector3）、”maxDistanceDelta” に１フレームの距離(一定速度)をfloatで指定します。Vector3クラスにはLerp関数もあり、これを使用してオブジェクトを移動させることができます。
Lerp(a, b, t)関数の引数は　a : 始まりの位置, b : 終わりの位置, t : aからの現在の位置の割合です。👍ポイント
tが0の時はaの地点、tが1の時はbの地点です。オブジェクトにRigidbody(リジッドボディ)コンポーネントを追加することで、物理演算で移動させることができます。InspectorウインドウでAdd Componentボタンを押して検索窓でRigidbodyを検索して追加しましょう。※2Dの場合はRigidbody 2Dを選びます。👍ポイント
RigidbodyにはUse Gravity、Rigidbody2DにはGravity Scaleのパラメータがあり、重力の影響を調節できます。一定の速度でオブジェクトを移動させたり、移動する速度を制限することができます。オブジェクトに力を加えて物理演算を元に移動させることができます。現実世界と同じようにオブジェクトを自然な動きで移動させることができます。衝突のふるまいなど物理現象を使用している場合はこのAddForce関数を使いましょう。👍ポイント
加える力が小さいとオブジェクトがうまく動かない場合があります。この場合はオブジェクトの質量を軽くするか、与える力を大きくすることで、オブジェクトを移動させることができます。


