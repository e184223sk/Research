using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
//
using System.IO;
using System.Globalization;
using System.Data;
using System.Collections.ObjectModel;

namespace _170612_t1420_addRecord
{
    /// &lt;summary&gt;
    /// MainWindow.xaml の相互作用ロジック
    /// &lt;/summary&gt;
    public partial class MainWindow : Window
    { 
        private ObservableCollection&lt;Person&gt; myList;

        public MainWindow()
        {
            InitializeComponent();
        }

        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            myList = new ObservableCollection&lt;Person&gt;();
            myList.Add(new Person { Checked = true, Name = "7of9", Race = "Borg", Codename = "seven" });
            myList.Add(new Person { Checked = false, Name = "Janeway", Race = "Human", Codename = "Captain" });
            myList.Add(new Person { Checked = true, Name = "Odo", Race = "Unknown", Codename = "Odo" });
            this.DataContext = myList;
        }

        private void dg1_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            if (e.Column.Header.ToString() == "Checked")
            {
                //e.Cancel = true; // 非表示
                e.Column.IsReadOnly = false;
                e.Column.Header = "";
            } else
            {
                e.Column.IsReadOnly = true;
            }
        }

        private void uxDelete_Click(object sender, RoutedEventArgs e)
        {
            var removeList = myList.Where(x =&gt; x.Checked).ToList();
            foreach (var item in removeList)
            {
                myList.Remove(item);
            }
        }

        private void uxAdd_Click(object sender, RoutedEventArgs e)
        {
            //if (uxName.Text is null || 
            //    uxRace.Text is null ||
            //    uxCodename.Text is null)
            //{
            //    return; // error
            //}

            if (uxName.Text.Length == 0 ||
                uxRace.Text.Length == 0 ||
                uxCodename.Text.Length == 0) {
                return; // error
            }

            var data = new Person
            {
                Checked = false,
                Name = uxName.Text,
                Race = uxRace.Text,
                Codename = uxCodename.Text
            };
            myList.Add(data);
        }
    }


    // Name, Race, Codename
    public class Person
    {
        public bool Checked { get; set; }
        public string Name { get; set; }
        public string Race { get; set; }
        private string codename;
        public string Codename {
            get { return codename; }
            set { codename = value.ToUpper(); }
        }
    }

}

