More than 3 years have passed since last update.既出の情報ばかりですが、個人的な備忘録も兼ねて載せておきます。
Unity 5.3.2のバグについても多少触れておりますので、皆様のご参考になれば幸いです。UnityからXCodeプロジェクト出力後、[ Build Settings ]や[ Framework ]の追加・・・面倒ですよね。大抵、XCodeのフレームワークを利用する場合、CocoaPodsを利用していますが、Unity Cloud Buildとの連携が出来ませんでしたので、今回は別の方法を取りました。
（どなたか方法ご存知でしたら、、、）
Unity 5からはframeworkの導入が改善されたようで、Assets/Plugin/iOS/配下などに*.frameworkを置くだけでXCode向けビルド出力時に、XCodeプロジェクトのFrameworkに追加されます。
例) UnityAdsを追加した場合
  次にXCodeの[ BuildSettings ]です。
これだけであれば、標準のUnityEditor.iOS.Xcode.PBXProjectを利用するだけで実現できました。ただし、私の環境ではUnityEditor.iOS.Xcodeのnamespaceが見つからない現象に陥りました。結果的にUnity 5.3.2p1のパッチが必要との事だったため、こちらからパッチを当てて解決しました・・・がっ!!
今度は、XCodeからビルドしたプロジェクトがスプラッシュから先に進まない（フリーズ）する不具合に直面しました。Unity 5.3.2p2のリリースノートを google翻y・・ 見てみると、730441にどうやら該当するバグがあったため、Unity 5.3.2p2のパッチをあてまして、この現象は解決しました。脱線してしまいましたが、ようやく本題に戻ります、コードで説明します。
以下のファイルをAssets/Editor/配下に作成します。クラス名は任意です。
OnPostprocessBuild()は、XCodeビルド直後に呼ばれるイベントです。ここでproj.SetBuildProperty()の第２引数で指定する名前は、XCode上で確認できます。
注意手順
上記プラグインを落として、Assets/Editor配下におき、
後は、こちらの方のコードを参考にして実装してみましたが、私の環境では出来ませんでした。暫定対応次のウィンドウは、そのままLocalizeを押します
これでローカライズ向けにファイルが変換されるため、日本語のローカライズを追加し、CFBundleDisplayName（日本向けのアプリ名）を日本語に変更します。
完全自動化とまではいきませんでしたが、現状はここまでが精一杯でした・・・  いやぁ〜、Qiitaって本当に良いものですね、さよなら、さよなら


