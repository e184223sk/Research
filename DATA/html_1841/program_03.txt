
public class UserUtil
{
    private int _userId;

    public UserUtil(int userId)
    {
        _userId = userId;
    }

    // 指定したユーザのフルネームを取得する
    // 今回の例題ではこのメソッドが使われている
    public string GetFullName()
    {
        var firstName = GetFirstName();
        var lastName = GetLastName();
        return $"{lastName} {firstName}";
    }

    // 指定したユーザの名前を取得する
    public string GetFirstName()
    {
        return Find()["first_name"].ToString();
    }

    // 指定したユーザの名字を取得する
    public string GetLastName()
    {
        return Find()["last_name"].ToString();
    }

    // キャッシュするためにFindUsingCacheメソッドで作られるクロージャに処理を移動した
    private Dictionary&lt;string, object&gt; Find()
    {
        return FindUsingCache().Invoke();
    }

    // usersテーブルから指定されたユーザIDに紐づくレコードを取得する
    // キャッシュ対応版
    private Func&lt;Dictionary&lt;string, object&gt;&gt; FindUsingCache()
    {
        // キャッシュ用の変数を用意する
        Dictionary&lt;string, object&gt; _cache = null;

        // クロージャを作る
        Func&lt;Dictionary&lt;string, object&gt;&gt; f = () =&gt; {

            if(_cache != null)
            {
                // キャッシュにすでにユーザ情報があればキャッシュを返す
                return _cache;
            }

            var connection = new DBConnection();
            connection.Open();

            // SQLを作成し、DBにアクセスする
            // ここで時間がかかる!!
            Dictionary&lt;string, object&gt; record = connection.FindBySql(
                "SELECT * FROM users WHERE id = ?"
                , _userId);

            connection.Close();

            // キャッシュに入れておく
            _cache = record;

            return record;
        };

        // クロージャを返す
        return f;
    }
}

