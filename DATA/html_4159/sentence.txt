More than 1 year has passed since last update.この記事はUnity #2 Advent Calender 2018 21日目の記事です。先にECSを紹介された方がいたが、多忙につき取り上げられず。申し訳ないです。Entity Component Systemの略です。引用：Unity-Technologies/EntityComponentSystemSamplesOffers a better approach to game design that allows you to concentrate on the actual problems you are solving: the data and behavior that make up your game. It leverages the C# Job System and Burst Compiler enabling you to take full advantage of today's multicore processors. By moving from object-oriented to data-oriented design it will be easier for you to reuse the code and easier for others to understand and work on itThe Entity Component System ships as an experimental package in 2018.1 and later, and we’ll continue to develop and release new versions of the package in the 2018.x cycle. It is important to stress that the Entity Component System is not production ready意訳→ GameObjectの上位互換になりうる新しい技術ということかな？
BurstCompilerと組み合わせれば飛躍的にパフォーマンスが向上するようです。他記事にも沢山説明があるので、より詳しく知りたい方は以下を読んでみるといいかも。
【Unity】Unity 2018のEntity Component System（通称ECS）について（１）まずECSとは何か？ECSは 何か凄い機能 というよりは、コンポーネント志向に変わる新しいアーキテクチャパターンです。
要するに、(目標としては)GameObject / Componentを差し替えるモノです。ECSはGameObject / MonoBehaviourと較べて、膨大なオブジェクトを処理しやすい設計になっています。ECSはUnityのコンポーネント志向と用語的には似ており、ECSはUnity的な視点から言えば「コンパクトな GameObject &amp; Monobehaviourのようなモノ」とも言えなくはないです。今後エンジニアとして生きていくなら、絶対勉強しておかないとダメ！といった記事も目に入り、今回はこのネタを選びました。
と言っても、他の記事を読んでもふんわりとしか分からず、初級者向けに、何かに例えながら紹介させてもらいます。Unity-Technologies/EntityComponentSystemSamplesをgit clone。動作環境はUnity2018.2.3f1　サンプルの中にはPureECS（現行のGameObjectやComponentを使用しないECSのみでの実装）、HybridECS（現行のComponent等とECSを組み合わせたハイブリットと呼ばれる実装）と色々なものがありました。魚の大群が現れました。すごい...(語彙力)ヒエラルキーは上記のように組まれてます。この中で、BoidFishSpawnerと生成する魚(prefab)にECSが実装されていました。
BoidFishSpawnerには、魚を生成するためのComponentDataが、生成する魚(prefab)にはその魚を制御するComponentDataがアタッチされています。魚の挙動は複雑だったので、魚を生成する方のComponentDataだけ紹介します。Boidコンポーネントデータには、魚群の生成範囲、魚の数、魚プレハブを持たせています。
これらをComponentSystemに渡し、生成するという事ですね。Positionコンポーネントデータは、 float3 Value を持つのみですね。
座標など、生成位置以外にも使える汎用的なComponentDataは、使いまわして使用してます。例えばここでは、生成位置以外にも、移動する座標（魚の挙動）にもPositionコンポーネントデータが使われていました。上述のComponentData(SpawnRandomInSphereComponent)はComponentSystem(SpawnRandomInSphereSystem)にて使われています。どうやらこの中で、ComponentSystemの他、Groupの定義もしているようです。公式サンプルを眺めてみたが、なんとなくしか分からない。やはり習うより慣れろだろうということで、簡単なサンプル作ってみようと思います。決められた長方形の範囲内にCubeを生成するものを作ります。動作環境につきましては、公式と同じです。(Unity2018.2.3f1)まずは生成するためには、生成する物（Prefab）、生成数、生成範囲、生成場所が必要なので、以下の２つのComponentDataをSpawnerにアタッチします。Positionコンポーネントデータについては、先ほど使った魚の生成位置と同じのを使い回します。データを元にどのような挙動をす流のか決めるCompoonentSystemを作成します。100x100の正方形内に、50,000個のCubeがビッシリ生成されました！
MonoBehaviorだったらこの時点で激重なのでは...？
これでは公式サンプルのままで寂しいので、もう少し手を加えます。
生成した Cube Prefab に波のような挙動を追加してみます。Cubeの挙動なので、Prefabに持たせるコンポーネントデータが必要です。
今回は従来からあるPositionComponent(コンポーネントデータ)を使い回し、アタッチします。
また、UpDownコンポーネントデータを用意します。さて、ComponentDataを用意し、Prefabへアタッチしたら、今度はComponentSystemを作成します。こんな感じで再生できました！...従来のGameObjectとMonoBehaviorなら激重間違いなしECSは下記のように使えば動くと分かった
ブログ等の説明を読んで分からなかったのですが、実際手を動かしてみると案外シンプルだなと思いました。
他、Unity JobSystemとBurst Compilerについて、今後勉強しなくてはと思いました。私は常日頃３Dシューティングゲームを作りたいと考えていて、弾丸や敵のスポーンにECSを活用してみる予定です。明日はUnity #2 Advent Calender 2018 22日目、投稿者はchroskeさんです！


