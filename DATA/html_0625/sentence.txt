MaterialDesign ToolKit for xamlを使っていて、標準ダイアログでは我慢できなかった。
Snackbarはちょっと物足りないし、Windows10の通知みたいなものも使いたい。調べたところ、MaterialDesignになじみそうなNotifications.Wpfと、名前がよく似ている（というかフォーク）のNotification.Wpfが見つかった。2017年から更新されていない前者に対し、ProgressBarとかを追加して2020年現在メンテされてる模様。
いずれもNuGetからインストールできる。ただMDに馴染むがWindowsの通知機能ではないので、そちらも使える方法を探すことにした。GitHubにサンプルが動画であがっているので、そちらを参考にした。
完成系がこちら↓  ここで通知を押すとさらに↓画面右下に以下のような通知が出る。
日曜研究室さんの情報、およびリンク先で紹介されているWinRTの参照方法を参考にした。みかづきメモによると8種類ほどテンプレートをWindowsが用意してくれていて、独自にToastをカスタマイズするにはXMLで行う模様。完成系がこちら↓Windowsでの通知なのでアクションセンターで履歴も表示される。（Livetのプロジェクトで開発しはじめたのに、普通にコードビハインドつかってたりするのは無視してください…）Windows通知Toastを利用するにはWindowsSDKが必要な様子。はいってなければインストールする。WinRTを読みこむため元情報にあるようにVisualStudio外でcsprojを編集した。
続いてVisualStudioで、「プロジェクト→プロジェクト参照の追加」で参照マネージャよりSystem.Runtime.WindowsRuntimeとWindows.winmdの参照の追加を行った。 1
下のソースでなんとなく読み取れると思うが、それぞれProgramFiles(x86)以下のフォルダをたどって、直接指定している。またNuGetでNotication.Wpfをインストールした。 2ボタン２こおいて、通知エリア用にすこしウィンドウを広くしている。
一番したの controles:NotificationArea が完成系の青い通知に相当。Notification.WpfはCaliburn.Microに依存しているらしく、サンプルコピペでビルドしたらdependエラーとなった。
csprojにあるように、NuGetでCaliburn.Micro.Coreを追加でインストールしている。かっこよさをとるか、標準仕様をとるかという選択肢があっていいですね。
はい/いいえ等ユーザからのフォードバックもとれそうなので、ダイアログ替わりにも使えそう。.NET5からは楽になるみたい ↩Notification.Wpfが求めてくるのでCaliburn.Micro.Coreもインストールした。 ↩


