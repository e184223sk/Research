
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using WebApp2.Models;

namespace WebApp2.VIEWS
{
    public partial class TEST001 : System.Web.UI.Page
    {
        private List&lt;Book&gt; books = new List&lt;Book&gt;();

        private Dictionary&lt;int, string&gt; dicPublish = new Dictionary&lt;int, string&gt;();

        private int cnt;

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                // 出版社情報定義
                dicPublish.Add(1, "日経BP社");
                dicPublish.Add(2, "技術評論社");
                dicPublish.Add(3, "翔泳社");
                dicPublish.Add(4, "秀和システム");

                Session["GridPublish"] = dicPublish;

                // 書籍情報定義
                books.Add(new Book("978-4-8222-9644-5", "アプリを作ろう! Android入門", 2000, 1, DateTime.ParseExact("2015/08/21", "yyyy/MM/dd", null), false));
                books.Add(new Book("978-4-7741-7568-3", "Angular JSアプリケーションプログラミング", 3700, 2, DateTime.ParseExact("2015/08/19", "yyyy/MM/dd", null), true));
                books.Add(new Book("978-4-7981-4034-6", "10日でおぼえるJSP&amp;サーブレット入門教室", 2800, 3, DateTime.ParseExact("2015/03/16", "yyyy/MM/dd", null), false));
                books.Add(new Book("978-4-7741-7078-7", "サーブレット&amp;JSPポケットリファレンス", 2680, 2, DateTime.ParseExact("2015/01/08", "yyyy/MM/dd", null), false));
                books.Add(new Book("978-4-7980-4179-7", "ASP.NET MVC5 実践プログラミング", 3500, 4, DateTime.ParseExact("2014/09/20", "yyyy/MM/dd", null), true));
                books.Add(new Book("978-4-7981-3546-5", "JavaScript逆引きレシピ", 3000, 3, DateTime.ParseExact("2014/08/28", "yyyy/MM/dd", null), false));
                books.Add(new Book("978-4-7741-6566-0", "PHPライブラリ&amp;サンプル実践活用", 2480, 2, DateTime.ParseExact("2014/06/24", "yyyy/MM/dd", null), false));

                Session["BookInfo"] = books;

                Grid.DataSource = books;
                Grid.DataBind();

            }
            else
            {

            }
        }

        protected void Grid_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                cnt++;
                var lblNo = e.Row.FindControl("lblNo") as Label;
                lblNo.Text = cnt.ToString();

                var ddlPublish = e.Row.FindControl("ddlPublish") as DropDownList;
                ddlPublish.DataSource = this.dicPublish;
                ddlPublish.DataTextField = "Value";
                ddlPublish.DataValueField = "Key";
                ddlPublish.DataBind();
            }
        }

        protected void DDLPublish_SelectedIndexChanged(object sender, EventArgs e)
        {
            //senderオブジェクトよりコントロールを取得
            var ddlPublish = (DropDownList)sender;
            var selectedValue = ddlPublish.SelectedValue;

            books = (List&lt;Book&gt;)Session["BookInfo"];
            var BookInfo = books.AsEnumerable().Where(p =&gt; p.PublishCd.ToString() == selectedValue).Select(p =&gt; new { p.Isbn, p.Title }).ToList();

            //ddlPublishの親コントロールを取得する
            var ddlBook = ddlPublish.Parent.FindControl("ddlBook") as DropDownList;
            ddlBook.DataSource = BookInfo;
            ddlBook.DataTextField = "Title";
            ddlBook.DataValueField = "Isbn";
            ddlBook.DataBind();
        }
    }
}

