More than 1 year has passed since last update.業務システムでは他システム連携や実績データ集計などを夜間バッチで運用することが比較的多いです。システムの規模に比例して夜間バッチアプリケーションの数も多くなり、ジョブ管理ソフトを導入したりするわけですが、決して安いものではありません。また、ソフトがサポートしている全ての機能が必要かというとそうでもないケースが少なくありません。
そこで、シンプルなワークフローの仕組みを作ってみます。なお、プロセス呼び出しには .NET の Process クラスではなく、先日公開されたOSSの ProcessX を使ってみます。C#8.0 の非同期ストリームを用いて標準出力を受け取ることができたり、async-await なプロセス呼び出しが可能になります。
ProcessX - C#でProcessを C# 8.0非同期ストリームで簡単に扱うライブラリコンソールアプリケーションの終了コードによる分岐を実現します。終了コードが 0 のときは成功、0 でないときは失敗とみなします。ワークフロー上の処理単位を「ワークフローアイテム」と考え、次のメンバを定義します。一つのコンソールアプリケーションを実行する処理を「コマンド」と考え、次のメンバを定義します。ワークフローアイテムの中にコマンドを複数格納し、直列実行します。ワークフローアイテムの中にコマンドを複数格納するのは直列実行と同じです。
Task.WhenAll メソッドを用いて並列実行します。ワークフローアイテム内で複数のコマンド（＝プロセス呼び出し）を実行する場合、それぞれのコマンドの終了コードからワークフローアイテム単位の終了コードを決定できる仕組みを実装します。前述のワークフローアイテム、コマンド、終了コード制御の設定値を設定ファイルから読み込み、ワークフローを組み立てられるようにします。現時点のソースコードは GitHub で見ることができます。但し、検討初期段階のため、破壊的変更を含む大幅な変更を行う可能性が非常に高いです。ワークフローアイテムのリンクリスト構造を組み立て、起点となるワークフローアイテムを実行します。
次のコードではコード上でワークフローアイテムを組み立てていますが、設定ファイル読み込みによって同等の内容を実現できるように検討しています。


