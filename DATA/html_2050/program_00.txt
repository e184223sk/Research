// 変換表
static readonly string map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

public static string Encode(byte[] source)
{
    // エンコード後の長さを計算し、余る長さを求める
    var encodedLength = source.Length * 8 / 6;
    var remain = 0;
    if ((source.Length * 8 % 6) &gt; 0)
    {
        encodedLength++;
        remain = (4 - encodedLength % 4);
        encodedLength += remain;
    }
    var encoded = new char[encodedLength];
    int offset = 0;
    byte next = 0;
    var n = 0;
    var m = 0;
    int i;
    // 変換の本体
    while (n &lt; source.Length)
    {
        next = 0;
        for (i = 0; i &lt; 3 &amp;&amp; n &lt; source.Length; ++i, ++n)
        {
            offset = (i + 1) * 2;
            encoded[m++] = map[(next | (source[n] &gt;&gt; offset)) &amp; 0b111111];
            next = (byte)((source[n] &lt;&lt; (6 - offset)) &amp; 0b111111);
        }
        encoded[m++] = map[next];
    }
    if (remain &gt; 0)
    {
        for (var p = encodedLength - remain; p &lt; encodedLength; ++p)
        {
            encoded[p] = '=';
        }
    }

    return new string(encoded);

}

