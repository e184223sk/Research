

using System.Collections.Generic;
using System.Linq;
using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Running;


namespace IterationSurvey
{

    public class IterationBenchmark
    {
        private static readonly List&lt;int&gt; TargetList = Enumerable.Range(0, 100000).ToList();

        [Benchmark]
        public int UseFor()
        {
            var accum = 0;

            for (var i = 0; i &lt; TargetList.Count; i++) accum += TargetList[i];

            return accum;
        }

        [Benchmark]
        public int UseExtForEach()
        {
            var accum = 0;

            foreach (var i in TargetList) accum += i;

            return accum;
        }


        [Benchmark]
        public int UseIntForEach()
        {
            var accum = 0;

            TargetList.ForEach(i =&gt; accum += i);

            return accum;
        }
    }



    internal class Program
    {
        private static void Main(string[] args)
        {
            BenchmarkRunner.Run&lt;IterationBenchmark&gt;();

        }

    }
}


