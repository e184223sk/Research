
var o = Observable.Merge(
    _button1.OnClickAsObservable().Select(_ =&gt; _button1),
    _button2.OnClickAsObservable().Select(_ =&gt; _button2),
    _button3.OnClickAsObservable().Select(_ =&gt; _button3));

o.Scan(0, (step, button) =&gt;
{
    switch (step)
    {
        case 0: // はじめに _button1 を押したか
            if (button == _button1)
            {
                _button1.GetComponent&lt;Image&gt;().color = Color.gray;
                return 1; // 次のステップへ
            }
            break;

        case 1: // つぎに _button3 を押したか
            if (button == _button3)
            {
                _button3.GetComponent&lt;Image&gt;().color = Color.gray;
                return 2; // 次のステップへ
            }
            break;

        case 2: // さいごに _button2 を押したか
            if (button == _button2)
            {
                _button2.GetComponent&lt;Image&gt;().color = Color.gray;
                return 3; // Where でフィルタリングする値
            }
            break;
    }

    // 誤ったボタンが押されたときは、ボタンの色を初期値に戻す
    foreach (var b in new[] { _button1, _button2, _button3 })
        b.GetComponent&lt;Image&gt;().color = Color.white;

    return 0; // 最初のステップにもどる
}).Where(e =&gt; e == 3).First().Subscribe(e =&gt; Debug.Log("1, 3, 2 の順番にボタンが押されました"));

