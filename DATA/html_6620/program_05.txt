

//例：処理は順番に1回だけ行いたい場合 

//タイトル追加Interface
public interface IScheduleAdd 
{ 
    IScheduleDay Addタイトル(string title); 
} 

//日付追加Interface
public interface IScheduleDay 
{ 
    IScheduleFrom 日付(DateTime date); 
} 

//開始時刻追加Interface
public interface IScheduleFrom 
{ 
    IScheduleDuration 開始時間(string startTime); 
} 

//期間追加Interface
public interface IScheduleDuration 
{ 
    IScheduleAt 期間(TimeSpan duration); 
} 

//場所追加Interface
public interface IScheduleAt 
{ 
    IScheduleAdd 場所(string area); 
} 

//スケジュールクラス
public class Schedule: IScheduleAdd, IScheduleDay, IScheduleFrom, IScheduleDuration, IScheduleAt 
{ 
    public static IScheduleAdd Create() 
    { 
        return new Schedule(); 
    } 

    public IScheduleDay Addタイトル(string title) 
    { 
        return this; 
    } 

    public IScheduleFrom 日付(DateTime date) 
    { 
        return this; 
    } 

    public IScheduleDuration 開始時間(string startTime) 
    { 
        return this; 
    } 

    public IScheduleAt 期間(TimeSpan duration) 
    { 
        return this; 
    } 

    public IScheduleAdd 場所(string area) 
    { 
        return this; 
    } 
} 

