More than 5 years have passed since last update.ASP.NET Core が RTM になったので試しに Riot.js を使ってみます。
今回はプロジェクトを作成して Riot.js を使って Hello World するところまでやります。Windows 10 Pro
Visual Studio Code以下のツールが必要ですのでインストールしておいてください。Web API アプリケーションのプロジェクトを作成します。作成したプロジェクトのディレクトリに移動して Visual Studio Code で開きます。Visual Studio Code が起動したら、ショートカットキーか  [表示] - [Toggle Integrated Terminal] で エディタ内にターミナルを開いておきます。実行時に html ファイルを表示したいので  project.json の dependencies に Microsoft.AspNetCore.StaticFiles を追加します。保存したらターミナルで以下のコマンドを入力してパッケージを入手します。静的ファイルを扱うように Startup.cs を変更します。UseDefaultFiles() 拡張メソッドで実行時に index.html を呼び出すようにして UseStaticFiles() 拡張メソッドを呼んで静的コンテンツを扱えるようにしています。wwwroot フォルダに index.html を追加します。app タグを追加して title 属性に値をセットしています。タグを作成する場合は script タグの type 属性に "riot/tag" を指定します。上記 script タグ にタグとして展開する内容を記述します。html 内で タグを定義する場合はタグ内の script タグは省略します。省略しないで記述する場合は以下のようになります。属性に設定されている値は opts でアクセスします。テンプレートへの値のバインディングは {...} でおこないます。とりあえずこの状態で実行します。ターミナルから以下のコマンドを入力します。実行した状態でブラウザから localhost に接続するとHello ASP.NET Core with RiotJSと表示されます。localhost を停止するときはターミナル上で Ctrl + C すれば停止できます。tag はindex.html 内だけではなくて、別のファイルに定義して使用することもできます。
試しに index.html 内で定義している app タグを app.tag ファイルを作成して移動してみます。wwwroot フォルダに app.tag を追加します。合わせてapp.tag を読込むように index.html を修正します。app.tag を読込むように script タグを追加しています。tag ファイルの読込は riot+compiler.min.js ファイルよりも先となるようにしておきます。この状態で実行して localhost に接続すると何も表示されないと思います。ブラウザコンソールを開くとHTTP404: 見つかりません - 要求された URI (Uniform Resource Identifier) に一致するものがサーバーに見つかりませんでした。と表示されるかと思います。デフォルトの状態だと tag ファイルを静的コンテンツとして扱ってもらえないので Startup.cs に tag ファイル を扱えるように処理を追加する必要があります。FileExtensionContentTypeProvider インスタンスを作成して .tag 拡張子のファイルをマッピングしてあげます。次に、 StaticFileOptions インスタンスを作成して ContentTypeProvider プロパティ に先ほど作成した provider を設定して    UseStaticFiles() に引数で渡してあげれば .tag ファイルを静的コンテンツとして扱えるようになります。これでエラーなく最初に実行したときに表示された内容が表示されるようになります。Web API から データを取得して一覧を表示するところをやります。


