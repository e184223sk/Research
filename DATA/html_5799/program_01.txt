
using Microsoft.Practices.Prism.Mvvm;
using System.Collections.ObjectModel;
using System.Windows;

namespace DataGridTest
{
    // DataGridに表示するデータ
    public class Person : BindableBase
    {
        private ObservableCollection&lt;Person&gt; _Child;
        private ObservableCollection&lt;Person&gt; _Parent;

        // 名前
        public string Name { get; set; }

        // 年齢
        private int _Age;
        public int Age
        {
            get =&gt; _Age;
            set
            {
                if (value &lt; 0)
                {
                    MessageBox.Show("範囲外の値が設定されました。");
                    OnPropertyChanged("Age");
                }
                else
                {
                    SetProperty(ref _Age, value);
                }
            }
        }

        // 階層を展開するためのボタンの表示状態
        public Visibility VisibleGroup { get; set; } = Visibility.Collapsed;

        // 子階層を表示しているか否か
        private bool _IsOpen = false;
        public bool IsOpen
        {
            get =&gt; _IsOpen;
            set
            {
                _IsOpen = value;
                if (null != _Child)
                {
                    // 子階層があれば、表示／非表示に応じて、データを挿入／削除する
                    if (_IsOpen)
                    {
                        int index = _Parent.IndexOf(this) + 1;
                        foreach (Person item in _Child)
                        {
                            _Parent.Insert(index, item);
                        }
                    }
                    else
                    {
                        int index = _Parent.IndexOf(this) + 1;
                        foreach (Person item in _Child)
                        {
                            _Parent.RemoveAt(index);
                        }
                    }
                }
            }
        }

        public Person() { }

        // 子階層と親階層を設定する
        public Person(ObservableCollection&lt;Person&gt; child, ObservableCollection&lt;Person&gt; parent)
        {
            _Child = child;
            _Parent = parent;
        }
    }
}

