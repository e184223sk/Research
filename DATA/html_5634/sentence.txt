More than 3 years have passed since last update.C#でビンパッキング問題を解く(1)
C#でビンパッキング問題を解く(2)
C#でビンパッキング問題を解く(3)と続けてきましたが、いよいよ最終版のプログラムです。前回のコードをさらに、改良し、より良い結果を得られるようにしたいと思います。最終版のプログラムは、簡単に書けば、BinPackingMixedSolverで解を求めて、一番空きの少ないビンを最終回答として、残りの荷物に対して、BinPackingMixedSolverで解を求める。これを繰り返す、という処理です。もう少し詳しく書くと、以下のような手順になります。これをコードにしたのが、以下のコードです。再帰処理でも書けますが、ここでは、上記手順で示したようにループ処理にしました。
このシリーズの最初に示したコードにくらべて、随分と効率が悪いアルゴリズムですが、今のコンピュータのパワーならば、問題ないと思います。どれくらい改良されたのか確かめたいと思います。
ここでは、前回で示したコード（4つのアルゴリズムの最善解を採用するコード）BinPackingMixedSolverと比較します。ランダムに生成したデータで検証しています。以下、この結果です。おおっ、確かに良い結果が得られました。
BinPackingSolverの中では、BinPackingMixedSolverを使っていますから、当たり前なのですが、改良版のBinPackingSolverが負けることはありません。C#でビンパッキング問題を解く(1)で最初に示したバージョンBinPackingSolver1とも比べてみました。上記コードのBinPackingMixedSolverをBinPackingSolver1に変えるだけです。
こういったことが簡単に行えるのは、インターフェースIBinPackingを定義しておいたおかげですね。wikipediaで示されていた「最も空きが多いビンに荷物を入れてゆく解法」に比べると、ずいぶんと改良されたことが確認できました。この記事は、Gushwell's C# Programming Pageで公開したものを大幅に加筆・修正したものです。


