

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using DG.Tweening;


public class MeleeAttackManager : MonoBehaviour
{
        Rigidbody rb;
        private float airStayTime = 1;　//滞空可能時間

        void Start()
        {
            rb = GetComponent&lt;Rigidbody&gt;();
        }

　　　　void Update()
        {

            if (rb.drag != 0)
            {
                airStayTime -= Time.deltaTime;　//Dragの値が0でなければairStayTimeの値を減らしていく
            }

            if (airStayTime &lt; 0)
            {
                OnGrvity();　　//落下
                airStayTime = 1;　//airStayTimeの値をリセット
            }
        }

　　　　public void OnGrvity()
        {
            if(rb.drag != 0)
            {
                rb.drag = 0;　//Dragの値を0に戻して落下
            }
        }

　　　　public void OffGrvity()
        {
            rb.drag = 40;　//RigidBodyのDragの数値を弄る
        }

        void Launch()　//打ち上げ用の関数
        {
            rb.DOMoveY(7f, 0.5f);　//Y方向に0.5秒かけて上昇
            Collider[] hitEnemies = Physics.OverlapSphere(AttackPoint.position, AttackRange, enemyLayers); //コライダー出現
            foreach (Collider enemy in hitEnemies)
            {
                enemy.GetComponent&lt;EnemyScript&gt;().Launch();　//攻撃を受けた敵を打ち上げます。
            }
        }

        public void airStayExtend()　//滞空時間を延長
        {
            Collider[] hitEnemies = Physics.OverlapSphere(AttackPoint.position, AttackRange, enemyLayers); //コライダー出現
            foreach (Collider enemy in hitEnemies)
            {
                enemy.GetComponent&lt;EnemyScript&gt;().airStay();　//敵のairStayTimeの値を更新して滞空時間を延長
            }
            airStayTime= 0.7f; //airStayTimeの値を更新して滞空時間を延長
        }
}

