
using System;
using System.Collections;
using System.Threading;
using UnityEngine;
public class Test : MonoBehaviour
{
    delegate string HeavyMethodDelegate();

    IEnumerator Start()
    {
        print("[Before] " + Time.realtimeSinceStartup);
        HeavyMethodDelegate worker = new HeavyMethodDelegate(HeavyMethod);
        IAsyncResult ar = worker.BeginInvoke(null, null);
        while (!ar.IsCompleted)
        {
            yield return null;
        }
        print(worker.EndInvoke(ar));
        print("[After] " + Time.realtimeSinceStartup);
    }

    string HeavyMethod()
    {
        Thread.Sleep(1000);
        return "Complete";
    }
}

