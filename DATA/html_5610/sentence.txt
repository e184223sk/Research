More than 3 years have passed since last update.アプリケーションを実行中に変数の値を確認したい際には
Console.WriteLine()やDebug.WriteLine()が最も使われると思います。
一般的にはPrintデバッグと言われていますね(C言語のprintから？）。私はこの際に下記コードのように変数名 = 変数値の文字列に整形しています。これを毎回書くのがダルくなってきたので、式木を使って下記コードのように簡単にする方法を紹介します。今回はConsoleアプリケーションを使用しますので、Console.WriteLine()を使用します。
WPF等の場合や、VisualStudioの出力ウインドウを使用したい場合はDebug.WriteLine()を使用します。まず出力されるクラスとしてPersonクラスを作っておきます。
この時ToString()をオーバーライドしておくと、デバッグが捗ります。次にPersonクラスを使用してこんなサンプルプログラムを作ります。このプログラムの出力結果はこんな感じです。Console.WriteLine($"{nameof(pTaro)} = {pTaro}");
とか毎回書くのがダルいです。特にnameofとかが。
そこでこの部分だけメソッドに抽出してpTaroだけ引数として渡そうとしても、今度はnameofの結果が意図通りになりません。そこで式木を使用したメソッドでこの問題を解決します。出力したい変数やプロパティを出力するデリゲートを式木で受け取ります。
一番簡単なのはラムダ式で()=&gt;変数と書くことです。CreateReportText内部では受け取った式木を分解して変数名を取り出しています。
その後式木をコンパイルしてデリゲートに変換し、即実行して変数の値を取得します。
そして両者を文字列として整形しています。使用するプログラムを変更します。見た目の長さはあまり変わりませんが、インテリセンスを使用した書きやすさは段違いです。
出力結果は同じです。Reportのたびに内部で式木からデリゲートを生成しているので重いです。
パフォーマンスがネックになるのであれば、内部でデリゲートをキャッシュする必要があります。[C#][ラムダ式][式木] Expression を使ってラムダ式のメンバー名を取得する (プログラミング C# - 翔ソフトウェア (Sho's))VisualStudio2017
.NET Framework 4.7


