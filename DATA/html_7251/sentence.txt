More than 3 years have passed since last update.最近リリースしたアプリ（チャリで来た。カメラ）で、画面のスクリーンショットを Application.CaptureScreenshot で取得してさらにその画像を加工する、ということを行ったのだが、もっと簡単な方法があったよ・・・(T_T)一番オーソドックスな方法。ファイル名を指定するだけでスクリーンショットをファイルに保存する。
実際アプリで使ってみたけど、意外と使いづらい。リアルタイムに更新可能なTexture「Render Texture」をTexture2Dとして取得する方法。
こっちの方が柔軟性はあるけど、Render Texture -&gt; Texture2D への変換の手間や、uGUIと併用したりすると少し面倒。
ただ、この方法はカメラで映してるものをTextureとして出力するので、レイヤー分けが可能で、表示オブジェクトの制御が出来たりする(自由度は一番高い)。そしてこれ。スクリーン画面からテクスチャデータへと保存するためのピクセルデータを読み込みますこれじゃんΣ(ﾟдﾟ;)！！
このメソッドがあることは知ってたけど、名前から予想出来なかったよ_|￣|○描画が完了してからでないとエラーが出るので、コルーチンで yield return new WaitForEndOfFrame() の後に処理するか、OnPostRender 内で行うと良い。Texture2D.ReadPixels、静的メソッドでもないし、汎用的な名前だし、Texture2D.SetPixels と混同したりして、気づかなかった。。。
今までめっちゃメンドクサイことをしてたよ(´・ω・｀)ｼｮﾎﾞｰﾝRender Texture を Texture2D として取得する方法も、最終的にはTexture2D.ReadPixels で読み込む形になるから、結局2通りって感じなのかな？テラシュールさんで「RenderTextureをTexture2DにしてSpriteに使用する」こんな方法も紹介されてたけど、あまり推奨してないようだし、素直に 単にスクショを撮りたい→Application.CaptureScreenshot、スクショを加工したい→Texture2D.ReadPixelsって形になるかと。


