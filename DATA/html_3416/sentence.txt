More than 1 year has passed since last update.Webアプリケーションの要求仕様に、利用者が投稿する文章に、ある程度の装飾ができるようにしたいというものがあると思う。
まぁ、いまどきならMarkdownとかあるのだけど、入力したHTML形式のデータから、許可できるタグ(と属性)だけ抜き出すというプログラムを考えてみた。参考程度にはなると思う基本方針はXMLDocumentオブジェクトなど、タグの構造(DOM)を分解するライブラリに掛けることで、DOMの名前と値(と属性)に分離して、特定の名前(と属性)だけをタグとして出力する。こんな感じこんな感じ。・・・まぁまぁ、いい感じだと思う。利用しているライブラリ「SGMLReader」の関係上、入力データ全体をHTMLタグで囲んでいる。サンプルはC#/.NET Frameworkだけど、JavaとかでPHPには移植しやすいと思う。サンプルはHTML形式の解析にSGMLReaderを使った。
標準のSystem.Xml.XmlDocuemtクラスだと、HTMLでは有効だけど、XMLではダメな形式のやつとかだと例外が出たりして厳密過ぎて面倒なので、ある程度よきに計らってくれるSGMLReaderにしてみたけど、好きなXML解析ライブラリを使えばよいと思う。サンプルは、Bタグと、Iタグと、FONTタグのCOLORとSIZE属性だけ許可するようにしているので、そのswichブロック(56行目あたり)を、改造すればよいと思う。サンプルは、単純なfor文だけど、Linqやラムダ式とかで、並列実行できるようにすれば、処理速度は上がると思うので、実際に使う際は、そういう改造をした方がよいと思う。サンプルは、HTMLエスケープとしてSystem.Security.SecurityElement.Escape()メソッドを使っているけど、System.Net.WebUtility.HtmlEncode()メソッドなどの方が適切かもしれない。例えば、AタグのHREF属性とか、属性値がURLの場合、javascript:...とかで任意のスクリプトが動作するかもしれないので、そういう属性を許可する場合は、サンプルコードには記述されていないが、属性値の入力チェックが必要だ。
まぁ、大まかな方向性としては先頭一致で「https://」と「http://」のみ許可。とか、先頭に「/./」または「./」を付与とかでいいと思う。実際にこういう方針でプログラムを組む場合、入力データをDOMとして読み込むのだから、XXE攻撃には対処しておく必要がある。
XXE攻撃については、XXE基本編なり、XXEで検索すればよいと思う。SGMLReaderとXXEについては、「XXEと.NET Framework (SgmlReaderDll.dll)」として別枠として設けた。SGMLReaderを参照設定すること不許可なタグは、エスケープするのが、適切かもしれない。
そういう場合は、タグ(ノード)の名前のswitch文のところに、
以下の感じのコードを入れるといいかもしれない。これでも、元データを適切に再現しているかというと、以下の点で、そうではなかったりするので、入力されたデータを改変しないという情報処理の基本からは外れてしまうのが、心残りこれは無理かと思う。つまり、許可タグの中の不正な属性は、出力されたデータからは排除するしかないと思う。
これも、入力されたデータを改変しないという情報処理の基本からは外れてしまうけど・・・これはさすがにしょうがないのではないかという部分ではないかと思う一部のHTMLタグだけ許可する(正規表現編)


