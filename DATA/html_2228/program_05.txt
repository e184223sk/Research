
interface IExtension
    string Name { get }
    Action Action { get }

IEnumerable&lt;IExtension&gt; extensions = Assembly.LoadAllClassWithInterface&lt;IExtension&gt;();

foreach(var extension in extensions)
    if (GUI.Button(extension.Name))
        extension.Action()

class DebugWeaponSceneExtension : IExtension
    public string Name =&gt; "DebugWeaponScene"
    public Action Action =&gt; () =&gt;
        SceneManager.NewScene()
        var gameObject = new GameObject()
        var sceneContext = gameObject.AddComponent&lt;SceneContext&gt;()       
        var installer = gameObject.AddComponent&lt;DebugApiInstaller&gt;()
        sceneContext.AddInstaller(installer)

        SceneManager.LoadScene("WeaponScene", Additive)

class ProductWeaponSceneExtension : IExtension
    public string Name =&gt; "DebugWeaponScene"
    public Action Action =&gt; () =&gt;
        SceneManager.NewScene()
        var gameObject = new GameObject()
        var sceneContext = gameObject.AddComponent&lt;SceneContext&gt;()       
        var installer = gameObject.AddComponent&lt;ApiInstaller&gt;()
        sceneContext.AddInstaller(installer)

        SceneManager.LoadScene("WeaponScene", Additive)

