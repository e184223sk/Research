クライアントアプリで非同期タスクをキャンセルできるようにするとき次のようなコードを実装しますが、CancellationTokenSource に関する実装をもっと簡単にしたいと考えています。CancellationTokenSource に関する実装をカプセル化したクラスを定義すると、前述のサンプルコードは次のように書き換えることができそうです。CancellationTokenSource の代わりに Guid を用いてキャンセルしたいタスクに対応するキャンセルトークンを指定することにしました。キャンセルトークンの代わりにタスクIDを保持しておかなくてはならない煩わしさは残りますが、CancellationTokenSource をカプセル化することができました。TaskManager クラスに IDisposable インターフェースを実装し、実行中のタスクをキャンセル＆トークンを解放するようにすれば解放漏れを防ぎやすくなると思います。リスナーによる完了通知機能を加えた TaskObserver クラスとして実装しました。CancellationTokenSource に関連する実装量を減らすことができたと思います。
Task, Task&lt;TResult&gt; から fluently に記述できたりなど、もっとスマートに実装できる方法があるとよいのですが。


