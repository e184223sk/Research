More than 3 years have passed since last update.Visual Studio 2017 にひっそり寄り添うように Blend for Visual Studio 2017 が添付されています。
Blend と言えば、最初は有料のツールで主に Silverlight の画面設計のためのデザイナー向けツールという位置づけだったかと思います。
その後、Silverlight が終了してしまい、現在はどうなっているのか試用してみました。スタートメニューから次のアイコンを探してクリックします。（Windows 10 なら Bグループにあります)起動すると、下のような画面が開きます。Visual Studio そっくりですが、微妙に違ってます。
ファイルメニューの「新規プロジェクト」から「新しいプロジェクト」ダイアログを開きます。テンプレートは実にシンプルです。 「WPF アプリ」を選んでOKボタンをクリックすると、WPF アプリにデザイン画面が開きます。画面のデザインは Visual Studio 同様、部品を貼り付けていく方式です。部品はデザイン画面の左隣に縦に並んでいます。 これだけじゃ足りないと思いそうですが、一番下の &gt;&gt; ボタンをクリックすると隠れていた部品がずらりと出てきます。あまり数が多いのでどこに何があるのか覚えるのも大変そうです。部品を貼り付けて適当に作った画面が下のイメージです。この画面では、「閉じる」ボタンをクリックしたとき、ウィンドウが閉じるだけですが、部品の色を変えたりアニメーションを行ったりいろいろできるようです。イベントハンドラを追加すればいろいろできそうですが、ここはお試しということで、ボタンをクリックしたらウィンドウを閉じるイベントハンドラを追加します。まず、ボタンの名前を付けなくてはなりませんが、プロパティウィンドウの一番上に「名前」があるので、そこにボタンの名前（ここでは btnClose)を入力します。 さらに「名前」横のカミナリマークをクリックすると、イベントハンドラ一覧が表示されるので、Click のところに btnClose_Click と入力します。 「表示」メニューでコードを選ぶと、コード画面に切り替わります。コードを見ると、イベントハンドラが追加されているはずなので、処理として "Close();" を入力します。 実行してみると、下のイメージのように何やら見慣れない黒いボタンが表示されますが、これはビジュアル的ないろいろな確認に使うツールのようです。 このツールの下の方をクリックすると、下のイメージのように隠すことができます。 業務系アプリケーションでは、地味な画面で十分なので通常 WPF は不要です。Blend を使えば、デザインの労力はたいしたことがないので、強力な PowerPoint として使えます。もし、マクロを使うような PowerPoint プレゼンテーションを作るなら Blend を使うのも選択肢かもしれません。電子看板などにも使えますね。きれいな画面と複雑なアニメーションを表現できます。HTTP クライアント機能を組み込めば、単なる看板でなく対話型のアプリを作れます。ブラウザで複雑な JavaScript のプログラムを組むより C# や VB.NET のほうが開発効率も高いし、WPF の表現力も高いです。WPF は Direct-X ベースなのでスピードも速いはずです。 


