using System;
using System.Threading.Tasks;
using Xunit;

namespace XUnitTestProject1
{
    public class WaitTests
    {
        [Fact(Timeout = 500)]
        public void WaitBlocking()
        {
            Task.Delay(1000).Wait();
        }
        [Fact(Timeout = 500)]
        public Task Direct()
        {
            return Task.Delay(1000).ContinueWith(t =&gt; throw new Exception());
        }
        [Fact(Timeout = 500)]
        public async Task AsyncAwait()
        {
            await Task.Delay(1000);
        }
        [Fact(Timeout = 500)]
        public async void AsyncAwaitVoid()
        {
            await Task.Delay(1000);
        }
        [Fact(Timeout = 500)]
        public async Task AsyncWaitNothing()
        {
            Task.Delay(1000).Wait();
        }
        [Fact(Timeout = 500)]
        public async void AsyncWaitVoidNothing()
        {
            Task.Delay(1000).Wait();
        }
    }
}

