More than 1 year has passed since last update.さて UiPath Studioで使用するカスタムアクティビティの作成方法 で、こんな感じのUiPath 用アクティビティを作ろうとしていましたが、そのつづきです。前回までで、GUIを持たないアクティビティ

が、Hello world するところまでをやりました。今回はをやっていきます。前回作成済みの Visual Studio のプロジェクトを使用します。もしくは、前回の成果物は
https://github.com/masatomix/UiPath_Path/tree/0.0.1 に配置してあります。C#のコード側でXAMLを指定して、アクティビティとGUIの紐付けをおこないます。パスを連結するCombineアクティビティの実体は C#の Combine.csでした。このクラスにGUIはこのXAMLで構築しますよっていう属性(JavaでいうAnnotationですかねコレ)を追記します。具体的には以下の通り。GUIクラス(デザイナのクラス)は CombineDesigner ですよっていう属性を追記しました。パスを連結する実際のロジックを作成します。
またまた Combine.csに追記ですが、具体的には以下の通り。先ほどのDesigner属性に加え、プロパティに属性を追加しています。ひとつめはふたつめはロジックは以下の通り。単純に、引数のpathArrayからstring配列を取り出しC#のSystem.IO.Path のメソッドでパスを生成してresult変数に結果をセットしました。以上でアクティビティの実体であるCombine.csの作成は完了です。GUIをいじる前に復習を兼ねて、バージョンをインクリメントしてから再度ビルドして、nupkgを再パッケージングします。アセンブリ情報のバージョンをインクリメントするため、ソリューションエクスプローラを右クリックして プロパティを選択
アセンブリ情報を選択
アセンブリバージョンが、0.0.1.0になっていると思いますので、0.0.2.0へ変更します。
で、再ビルドです。ビルドはStudio上で「ビルド &gt;&gt; ソリューションのクリーン」と「ビルド &gt;&gt; ソリューションのクリーン」を選択。最後にnupkgのパッケージングは、nuget.exe です。下記のコマンドを実行。新しいバージョンとしてさっきインクリメントした 0.0.2のnupkgである、ActivitiesPathUtils.0.0.2.nupkg が出来たと表示されればOKですね。

うん実際にありそうです。UiPath Studio側で、アクティビティをUpdateして、UiPath Studioの再起動を行います。
アクティビティが更新されたので、アクティビティペインにあるCombineアクティビティをまたまたドラッグアンドドロップしてみます。想定通り、InputカテゴリとOutputカテゴリが追加され、それぞれにプロパティが定義されました。さてアクティビティを実行してみます。結果のキャプチャが薄くてわかりにくいですが、 c:\temp\hogehoge  が得られました。最後というかようやくですが、、アクティビティのGUIをCombineDesigner.xaml で構築します。初期状態はこんな感じでした。

コードの初期状態はこう。初期状態は上記の通りGridに何も書いていないのですが、ここに「VB式を入れることが可能なコントロール、ExpressionTextBox」などを貼り付けていきます。
(参考: アクティビティ デザイナー (Custom Activity Designer) )具体的にはこんな感じ。。

コードはこんな感じ。Gridタグでレイアウトを定義し、左側に「pathArray」というラベルを、右側に ExpressionTextBox を配置します。ExpressionTextBox タグでは、配置されるテキストボックスの定義情報を記述していきますが、の ModelItem.pathArray が、Combine.csの public InArgument&lt;String[]&gt; pathArray にマッピングを定義してるっぽいです。は、その型を指定しているようです。このようにしてGUI上のテキストボックスの値と、UiPath Studio上のプロパティペインにあるテキストボックスの相互バインディングをしている事が分かります。GUIの構築は以上です。。さあ、再度ビルド。バージョンを 0.0.3にして再度nupkgを作成、そして UiPath Studioに配置しましょう。

おお、、シーケンスのところのアクティビティのGUIにテキストボックスが表示されました！GUIでの編集がプロパティペインのところに反映されること、逆に、プロパティペインで修正した内容がGUI上のテキストボックスにも反映されること、を確認しておきましょう。おつかれさまでした。
長かったですが UiPath Studioで稼働するカスタムアクティビティのGUIを、Visual Studioで作成することができましたね。。https://github.com/masatomix/UiPath_Path/tree/0.0.3
に配置しました。ちなみに前回記事 完了時点のコードは
https://github.com/masatomix/UiPath_Path/tree/0.0.1
です以下、後日もすこし調べたさいに情報源になったサイトのリンクです


