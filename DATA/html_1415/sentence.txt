More than 1 year has passed since last update.今まで C# では dotnet-script を利用すれば, NuGetパッケージ を使ったスクリプト開発ができました.
例えば 以下のようにすることで簡単に Json を扱う NuGetパッケージ を利用することができます.今回 F# 5 で以下の構文が公式サポートされたというお話です.C#スクリプト があるんだし それでいいじゃん...
と思われるかもしれませんが C#スクリプト の場合はいろいろ準備しないといけないのでかなり不便です.詳しくは この記事 を参照してください.この機能が入ったのが F# 5 preview 1 からなので, 必然的に .NET 5 以降 が必要になります.そのため 公式ページ から最新の .NET をインストールするようにしてください.※2020/05/07現在, 5.0.100-preview.3.20216.6 が最新テキストエディタは何でもよいのですが, 最近だと VSCode がよく利用されると思いますので以下に必要な設定を書いておきます.今回は F# 開発を VSCode でやる場合に最低限必要な拡張機能を紹介しておきます.シンタックスハイライトやコード補完, インテリセンスなどが不要な方はインストールしなくても問題ありません.Ionide-fsharp が依存しているので導入必須です.
シンタックスハイライトやコード補完などの各種機能を提供してくれている拡張機能です.
インストールが完了したら VSCode の設定ファイルを編集して, Ionide-fsharp が .NET Core/5 と F# 5 preview を使うように設定します.なお, F# 5 が正式リリースされたあとについては, --langversion:preview が不要になります.まず, 適当な場所に .fsx ファイルを作成します.今回, 私は D:/src/sandbox/ に main.fsx というファイル名で作成しましたが, 好きな場所に好きな名称で作成していただいてかまいません.次に VSCode で main.fsx を開きます.そうしたら以下のように記述して, 一度 VSCode を閉じてから再度 "D:/src/sandbox/main.fsx" を開きなおします.再度開きなおすことで NuGetパッケージ のインテリセンスが有効になります.
コードを以下のように修正します.
※ F# には dynamic がないので, ちゃんと型を作成してあげます.あとは実行ボタンを押せば, 実行されます
まず, コードを以下のようにします.dotnet fsi に --langversion:preview を指定して, 実行します.控えめに言って 最高 ですね！！


