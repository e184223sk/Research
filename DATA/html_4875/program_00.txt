//四角形の大きさ
int width = 30;
int height = 30;

//グリッド描画めり込み最低値
const int SINK_PERMISSION_NUM = 18;
//頂点数
int vertex = width * 8;
//中心点
var center = new { X = width * 0.5f, Y = height * 0.5f };
//先にDegree -&gt; Radian用の数値を作っておく
float toAngle = (float)Math.PI / vertex;

for (int i = 0; i &lt; vertex; ++i)
{
    //円を生成していく
    double angle = toAngle * i;
    float px = (float)Math.Cos(angle) * center.X;
    float py = (float)Math.Sin(angle) * center.Y;

    //円頂点のドットへのめり込み量を調べる
    int sink = (int)((py % 1.0f) * 100);
    if (sink &lt; SINK_PERMISSION_NUM) continue;

    //ここでBoxを描画していく
    for (int j = 0;j &lt; py;++j)
    {
        int dotX = (int)(center.X + px);
        //上側のポジションY 偶数時の補正をするならここに-1
        int dotUpY = (int)(center.Y - j);
        //下側のポジションY
        int dotDownY = (int)(center.Y + j);

        //~~~~~~~描画~~~~~~~
        //DrawDot(dotX,dotUpY,dotDownY);
        //~~~~~~~~~~~~~~~~~~
    }
}

