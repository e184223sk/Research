More than 1 year has passed since last update.gRPC で通信を行うには、次のような実装を行う必要があります。これらの実装に必要な情報を XML ファイルで指定できるようにしました。
なお、XmlSerializer によるシリアライズについては多くの情報があります。私も先日記事を書いています。 【Qiita】動作設定ファイルに XmlSerializer を利用する【Github】mxProject/GrpcConfiguration
【Nuget】mxProject.Helpers.GrpcConfigurationRpcConfigurationConfig クラスのインスタンスを XmlSerializer でシリアライズした XML ファイルです。既知のコンフィグ型を指定します。ここでは Custom ( CustomInterceptorConfig ) のみを指定できます。任意のコンフィグ型を指定します。既知のコンフィグ型を指定します。ここでは Insecure ( InsecureCredentialsConfig ), Ssl ( SslCredentialsConfig ) を指定できます。設定値はありません。RootCertificates, CertificateChain, PrivateKey 属性に資格証明情報を設定します。既定の動作ではこれらの属性に設定された値は crt や key ファイルのファイル名と見なし、そのファイルの内容を読み込みます。この動作を変更するには、RpcConfigurationContext クラスの GetRootCertificates, GetCertificateChain, GetPrivateKey メソッドをオーバーライドするか、RootCertificatesGetter,  CertificateChainGetter, PrivateKeyGetter プロパティに資格証明を取得するためのメソッドを設定します。/// The value of this property is passed to  method and is used to get the credentials information. 
/// The default  method considers the value of this property as a file path.任意のコンフィグ型を指定します。RpcChannelConfig クラスで表される設定値を指定します。
CredentialsName 属性には使用する資格証明の Name 属性の値を指定します。RpcServiceConfig クラスで表される設定値を指定します。サービスに対してインターセプターを適用する場合、適用するインターセプターを指定します。
Intercepters, ExtraInterceptors の設定方法は共有インターセプターの設定方法と同じです。
共有インターセプターを使用する場合、Interceptors に Refer ( InterceptorReference ) を指定します。Refer 属性に共有インターセプターの Name 属性の値を指定します。こちらも RpcConfigurationConfig クラスのインスタンスを XmlSerializer でシリアライズした XML ファイルです。サービス側の設定ファイルの説明を参照してください。サービス側の設定ファイルの説明を参照してください。サービス側の設定ファイルの説明を参照してください。CallInvoker に対応するコンフィグ型を指定します。ここでは Default ( DefaultCallInvokerConfig ), Custom ( CustomCallInvokerConfig ) を指定できます。設定する値はありません。CallInvoker に対してインターセプターを適用する場合、適用するインターセプターを指定します。
Intercepters, ExtraInterceptors の設定方法は共有インターセプターの設定方法と同じです。
共有インターセプターを使用する場合、Interceptors に Refer ( InterceptorReference ) を指定します。Refer 属性に共有インターセプターの Name 属性の値を指定します。デバッグコンソールにメッセージを出力しているだけです。ExampleInterceptor を生成するコンフィグです。ExampleInterceptor によってデバッグメッセージが出力されます。


