
public class MyMapper : DefaultMapper
{
    private readonly IDictionary&lt;Type, Func&lt;object, object&gt;&gt; _converters = new Dictionary&lt;Type, Func&lt;object, object&gt;&gt;
    {
        [typeof(string)] = s =&gt; string.IsNullOrEmpty((string)s) ? null : s,
    };


    public override Func&lt;object, object&gt; GetParameterConverter(DbCommand dbCommand, Type sourceType)
    {
        if (_converters.TryGetValue(sourceType, out Func&lt;object, object&gt; converter))
        {
            return converter;
        }
        return base.GetParameterConverter(dbCommand, sourceType);
    }
}

