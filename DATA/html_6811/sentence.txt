More than 3 years have passed since last update.カラムにデフォルト値設定なんてよくあること。
しかしながらオプションにはそれららしいものが出てこない。
資料探して読んでみるもよくわからず。なんでdefaultvalueが存在しているのに設定できないの？？？おかしくない？？？設定にあるんだからできるはず。やってみましょう。http://stackoverflow.com/questions/19554050/entity-framework-6-code-first-default-value
defaultvalueがAdd-Migration前に設定できないのなんて先人が話題にしてないはずもなく。雰囲気としては前回と変わらなそうな感じがしますね。
規約作る→modelBuilder.ConventionsにAddの流れで問題なさそうです。ではまず規約を作りましょう。
今回はHasColumnAnnotationに設定します。そしてOnModelCreatingのmodelBuilder.ConventionsにAddすると。ここからが前回と少し違うところ。
SqlServerMigrationSqlGeneratorを継承したSqlGeneratorを作ります。ここでは先ほどHasColumnAnnotationに設定したDefaultValueの情報を取得し、カラムのDefaultValue設定に反映しています。
いろいろ名称が被ってわかりづらいですね、申し訳ない。
この設定はConfiguration()で使います宣言しないと反映されないので、1文加えましょう。ここまで来たら準備完了。
testtableでデフォルト値の設定をしてやりましょう。いざAdd-Migration！からのUpdate-Database！んんん？
"aaccc"はだめ？どういうことでしょ。
-Verboseをつけてもう一度Update-Databaseしてみます。DEFAULTのあとのaacccが文字列じゃない！
ひゃー、なるほど。ここが原因ですね。
とりあえずこう出力されるということは数値ならば大丈夫な感じしますねえ。
aacccを55555と変更してUpdate-Databaseしてみると、エラー無く終了。
制約の下にこんなのが作成されていました。ほうほう。では適当にinsertして大丈夫か確認してみましょう。問題なさそうですね。数値の初期値設定完了です。書き始めた時はAdd-Migration後に設定のDefaultValueに追加されているイメージだったんですが、AnnotationValuesに追加されることでも可能だったんですね。じゃあ文字列のデフォルト値設定はどうするの、と。
いろいろ試したら、思いの外簡単にできました。これでOKです。
DefaultValueに設定した文字列がそのままクエリに入るので、''から入れてやればこの通り。うん、大丈夫そうです。実は昔これと同じことやろうとして断念したんですが、今回はできてよかったなあ。一番大事なSqlServerMigrationSqlGeneratorが抜けてたので追記しました。


