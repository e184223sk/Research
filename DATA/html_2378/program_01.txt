
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows.Forms;

namespace MyLib
{
    [ProvideProperty("Index", typeof(TextBox))]
    public class TextBoxArray : BaseControlArray, IExtenderProvider
    {
        // コンストラクタの中で何かする必要はなかった
        public TextBoxArray()
        {
        }
        // コンストラクタの中で何かする必要はなかった
        public TextBoxArray(IContainer Container)
        {
        }


        // KeyPressイベントハンドラ
        public event KeyPressEventHandler KeyPress;

        // 与えられたこのコントロール配列に入れることが出来るかどうかを返す
        public bool CanExtend(object extendee)
        {
            return extendee is TextBox;
        }
        // コントロール配列の型を返す
        protected Type GetControlInstanceType()
        {
            return typeof(TextBox);
        }

        // コントロール配列にコントロールを登録
        public void SetIndex(TextBox item, short index)
        {
            items[index] = item;
            // コントロール配列のイベントを個々のコントロールに結び付ける
            if (KeyPress != null) item.KeyPress += KeyPress;
        }

        public short GetIndex(TextBox item)
        {
            IEnumerator&lt;KeyValuePair&lt;int, Control&gt;&gt; enumerator = items.GetEnumerator();
            while (enumerator.MoveNext())
            {
                if (enumerator.Current.Value == item) return (short)enumerator.Current.Key;
            }
            return (short)0;
        }

        public TextBox this[short Index]
        {
            get
            {
                return (TextBox)items[Index];
            }
        }

    }
}


