
using System;
using System.Collections.Generic;
using System.Text;

namespace Pokemon
{
    public class Pokemon
    {
        // 割愛

        /// &lt;summary&gt;
        /// 最大HP種族値
        /// &lt;/summary&gt;
        protected int syuzokuMaxHP;

        /// &lt;summary&gt;
        /// 攻撃力種族値
        /// &lt;/summary&gt;
        protected int syuzokuKougeki;

        /// &lt;summary&gt;
        /// 素早さ種族値
        /// &lt;/summary&gt;
        protected int syuzokuSubayasa;

        /// &lt;summary&gt;
        /// 最大HP個体値
        /// &lt;/summary&gt;
        protected int kotaichiMaxHP;

        /// &lt;summary&gt;
        /// 攻撃力個体値
        /// &lt;/summary&gt;
        protected int kotaichiKougeki;

        /// &lt;summary&gt;
        /// 素早さ個体値
        /// &lt;/summary&gt;
        protected int kotaichiSubayasa;


        /// &lt;summary&gt;
        /// 最大HP取得
        /// &lt;/summary&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public int GetMaxHP()
        {
            // この式はホンモノじゃないよ
            return (int)Math.Floor((decimal)(syuzokuMaxHP + kotaichiMaxHP) * 2 + (decimal)(Level / 100)) + Level + 10;
        }

        /// &lt;summary&gt;
        /// 攻撃力取得
        /// &lt;/summary&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public int GetKougeki()
        {
            return getStatus(syuzokuKougeki, kotaichiKougeki);
        }

        /// &lt;summary&gt;
        /// 素早さ取得
        /// &lt;/summary&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public int GetSubayasa()
        {
            return getStatus(syuzokuSubayasa, kotaichiSubayasa);
        }

        /// &lt;summary&gt;
        /// 種族値と個体値から、ステータスを取得(HP以外で使用)
        /// ※ホンモノじゃないよ
        /// &lt;/summary&gt;
        /// &lt;param name="syuzokuchi"&gt;種族値&lt;/param&gt;
        /// &lt;param name="kotaichi"&gt;個体値&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        protected int getStatus(int syuzokuchi, int kotaichi)
        {
            return (int)Math.Floor((decimal)(syuzokuchi + kotaichi) * 2 + (decimal)(Level / 100)) + 5;
        }
    }
}

