More than 3 years have passed since last update.リフレクション 以外に方法ありますかね。ご存知の方お手すきにご教示頂ければ。追記: (Expression でもできるのでは、と教えていただく。知識が追い付いていないので記事には未反映)というコンソールアプリを示す。github にリポジトリ配置済み。ご利用はご自由にどうぞ。以下記載通りで特記なし。組み込まれているクラスを追っていく。Init() により初期化したデータを static メンバ変数 に突っ込んでいく。authorizedCode は後出ユーザー管理クラス UserManager 内の機能で利用する。権限コードを定数化したもの。サービスのデータ管理クラスではS, A を認可した権限コードとして扱っている。一人一人のユーザーを表現するクラス。名前と権限コードを持っている。ユーザーに関わるデータを管理するクラス。AuthorizedUserList() よりサービスで認可された権限コードを所有したユーザーを取得する 機能を提供する。Model/UserManager.cs の AuthorizedUserList() を NUnit で単体テストを作る。以下のような単体テストがひとまず考えられる。テストを作ったは良いものの、検証してみるとより userManger.AuthorizedUserList().Count が 0 になる。userManger.AuthorizedUserList() &gt; ServiceManager.GetServiceAuthorizedCode() が空リストを返しているからだ。もう少し突っ込むとテスト実施前に ServiceManager.Init() していなかったからだ。少し立ち止まって単体テストという観点では「検証する機能以外の機能」はスタブにしておきたい。例えばの話ServiceManager.Init() することで、どうしても ステージングサーバーに繋がってしまう(そういうアレな)仕組みが出来上がっているならば ServiceManager.Init() の利用は避けたいものだ。どうにかしてスタブできるものはスタブしよう。リフレクションを使って、private static メンバ変数のデータ はテスト時、動的に書き換えられる様子。これをやろう。FieldInfo.SetValue メソッド (Object, Object)


