using UnityEngine;
using System;
using System.Runtime.InteropServices;

public class WindowTransparent : MonoBehaviour
{
    [DllImport("user32.dll")]
    private static extern int GetForegroundWindow();

    [DllImport("user32.dll", EntryPoint = "SetLayeredWindowAttributes")]
    private static extern Boolean SetLayeredWindowAttributes(int hwnd, uint crKey, byte bAlpha, uint dwFlags);
    [DllImport("user32.dll", EntryPoint = "GetWindowLong")]
    private static extern int GetWindowLong(int hWnd, int nIndex);
    [DllImport("user32.dll", EntryPoint = "SetWindowLong")]
    private static extern int SetWindowLong(int hWnd, int nIndex, int dwNewLong);

    const int LWA_COLORKEY = 0x1; // SetLayeredWindowAttributesで第2引数を使う場合
    const int LWA_ALPHA = 0x2; // SetLayeredWindowAttributesで第3引数を使う場合
    const int GWL_EXSTYLE = -20; // 拡張ウィンドウスタイルを書き換えるためのオフセット
    const int WS_EX_LAYERED = 0x80000;

    const uint TRANSPARENT_COLOR = 0x00000000; // 透過する色

    void Start()
    {

#if UNITY_EDITOR

#else

        int handle = GetForegroundWindow(); // ウィンドウを指定

        int extStyle = GetWindowLong(handle, GWL_EXSTYLE); // ウィンドウの情報を取得
        SetWindowLong(handle, GWL_EXSTYLE, extStyle | WS_EX_LAYERED); // ウィンドウの属性を変更
        SetLayeredWindowAttributes(handle, TRANSPARENT_COLOR, 0, LWA_COLORKEY); // ウィンドウの特定の色を透過

#endif

    }

}

