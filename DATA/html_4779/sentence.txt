More than 3 years have passed since last update.ユニットテストで利用することを想定した、.NET Framework 向けのMockライブラリ。
元となるインターフェースやクラスからテストで利用するためのモックオブジェクトを作成する。公式サイト: http://nsubstitute.github.io/
利用バージョン: NSubstitute-1.4.3.0interfaceからモック生成
var calculator = Substitute.For&lt;ICalculator&gt;();実クラスからモック生成 (仮想メンバのみをモック化。それ以外は実際に実行される)
var calculator = Substitute.For&lt;CalculatorClass&gt;();戻り値設定
calculator.Add(1, 1).ReturnsForAnyArgs(99);戻り値設定 (特定引数)
calculator.Add(1, 2).Returns(3);処理呼び出し
calculator.Add(1, 1).ReturnsForAnyArgs(x =&gt; Console.Log("called."));1回目は10, 2回目は20を返す
calculator.Add(1, 1).ReturnsForAnyArgs(10, 20);以下を実行すると、確認結果が正しくなかったときにReceivedCallsExceptionが発生。呼び出されたことを確認
calculator.ReceivedWithAnyArgs().Add(1, 1);呼び出されたことを確認  (特定引数)
calculator.Received().Add(1, 2);呼び出された回数確認
calculator.ReceivedWithAnyArgs(3).Add(1, 1);プロパティが呼び出されたことを確認
var dummy = calculator.Received().prop;          // getter
calculator.Received().prop = "hoge"; // setter呼び出し状態クリア
calculator.ClearReceivedCalls();以下URLからdllのバイナリを取得
https://github.com/nsubstitute/NSubstitute/downloads(解凍フォルダ)\lib\NET35\NSubstitute.dll
……をunityの"Assets/Plugins"以下へコピーエディタで NSubstitute.dll を選択し、ExcludePlatformsのEditor以外のチェックをONにしておく以下のようなC#ファイルを作成してTestRunnerで実行


