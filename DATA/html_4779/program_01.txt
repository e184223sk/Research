
using UnityEngine;
using UnityEngine.TestTools;
using NUnit.Framework;
using NSubstitute;

// モック作成元のインターフェース
public interface ISample {
    int Hoge();
    int Fuga(int n);
    int hogeProp { get; set; }
}

public class NSubstituteTest {
    // 挙動を設定
    [Test]
    public void Returns() {
        // モックの作成
        var mockSample = Substitute.For&lt;ISample&gt;();

        // 戻り値設定
        mockSample.Hoge().ReturnsForAnyArgs(99);
        Assert.AreEqual(99, mockSample.Hoge());

        // 戻り値設定 (特定引数)
        mockSample.Fuga(0).Returns(99);
        Assert.AreEqual(99, mockSample.Fuga(0));

        // 処理呼び出し
        mockSample.Fuga(2).Returns(n =&gt; { Debug.Log("called."); return 0; });
        mockSample.Fuga(2);

        // 1回目は10, 2回目は20を返す
        mockSample.Fuga(1).Returns(10, 20);
        Assert.AreEqual(10, mockSample.Fuga(1));
        Assert.AreEqual(20, mockSample.Fuga(1));
    }

    // 呼び出し結果確認
    [Test]
    public void Received() {
        // モックの作成
        var mockSample = Substitute.For&lt;ISample&gt;();

        // 呼び出されたことを確認
        mockSample.Hoge();
        mockSample.ReceivedWithAnyArgs().Hoge();

        // 呼び出されたことを確認  (特定引数)
        mockSample.Fuga(1);
        mockSample.Received().Fuga(1);
        mockSample.DidNotReceive().Fuga(2);

        // 呼び出された回数確認
        mockSample.ReceivedWithAnyArgs(1).Fuga(1);
        mockSample.Fuga(9);
        mockSample.Fuga(9);
        mockSample.ReceivedWithAnyArgs(3).Fuga(1);

        // プロパティが呼び出されたことを確認
        var dummy = mockSample.DidNotReceive().hogeProp;
        dummy = mockSample.hogeProp;
        dummy = mockSample.Received().hogeProp;

        mockSample.DidNotReceive().hogeProp = 1;
        mockSample.hogeProp = 1;
        mockSample.Received().hogeProp = 1;

        // 呼び出し状態クリア
        mockSample.ClearReceivedCalls();
        mockSample.Received(0).Hoge();
    }
}

