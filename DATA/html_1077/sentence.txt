More than 1 year has passed since last update..NET Core 3から、標準(System.Runtime.InteropServices.NativeLibrary クラス)でライブラリの動的ロード、およびエクスポートされた関数のアドレスを取得できるようになったらしいです。このツイートで知りました。unsafe だし実質 IntPtr だし、 https://t.co/hl3GxKI4Mh これとの組み合わせでよろしくやれないかな…つまり、WindowsでいうとLoadLibraryとGetProcAddressのP/Invokeを書く必要がなくなります。
(Linuxでのdlopenとdlsymは試してません)動的ロード以外にも、DLLImportしたメソッドのライブラリの解決も制御できるようになっているようですが、この記事では動的ロードしたライブラリの関数を呼び出すだけです。なんというか、LoadLibraryとGetProcAddressそのままですね。
P/Invokeの様に末尾のA/Wは自動で検索してくれません。ポインターが得られるので、GetDelegateForFunctionPointerでデリゲート経由で呼び出す必要があります。NativeLibrary.Loadの戻り値はせめてSafeLibraryHandleとかにくるんで欲しかった。
NativeLibrary.GetExportも型引数でデリゲートを指定させて欲しい。C# 9.0には関数ポインターの構文が入るので、同様のことをしてみました。マーシャリングされないので、文字列も固定しないと行けないのが面倒ですね。
(正式版では関数ポインターの構文は少し変わるようですが。)文字列の渡し方が煩わしいので、下記のようのな方法を考えたが、(「安全」ではなく)動作として保証できるのかちょっとわからない…


