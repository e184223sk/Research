
public class PlayerMovementSystem : SystemBase {

    PlayerInputActions m_Input;
    InputAction m_MoveInput;

    protected override void OnCreate () {
        // PlayerInputActionsをインスタンス化し、有効にする
        m_Input = new PlayerInputActions();
        m_Input.Enable();

        // PlayerInputActionsに定義されているMoveをm_MoveInputに割り当てる
        m_MoveInput = m_Input.Player.Move;
    }

    protected override void OnUpdate () {
        // 移動の入力を取得する
        Vector2 input = m_MoveInput.ReadValue&lt;Vector2&gt;();
        float3 movement = new float3(input.x,0f,input.y);

        // 移動させる
        float deltaTime = UnityEngine.Time.deltaTime;
        Entities
            .WithAll&lt;Player&gt;()
            .ForEach((Mover mover,ref Translation translation) =&gt; {
                translation.Value += movement * mover.Speed * deltaTime;
            })
            .WithBurst()
            .ScheduleParallel();
    }

    protected override void OnDestroy () {
        m_Input.Disable();
        m_Input.Dispose();
    }

}

