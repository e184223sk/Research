

        [SerializeField]
1:      private Text mTextCountDown;
        private readonly string[] COUNT_ARRAY = { "2", "1", "FIRE!" };

        private int mCurrentIndex;
        private float mDurationTime;

        /// &lt;summary&gt;
        /// カウントダウンアクション
        /// &lt;/summary&gt;
        /// &lt;returns&gt;アクション完了でtrueを返す&lt;/returns&gt;
        public bool UpdateCountDown()
        {
            switch (mCurrentIndex)
            {
                case 0: // カウントダウンテキストを表示
                    mTextCountDown.gameObject.SetActive(true);
                    mDurationTime = 1.0f;
                    mCurrentIndex++;
                    break;
                case 1: // 2を表示
                    mDurationTime -= Time.deltaTime;
                    if (mDurationTime &lt;= 0.0f)
                    {
                        mTextCountDown.text = COUNT_ARRAY[0];
                        mDurationTime += 1.0f;
                        mCurrentIndex++;
                    }
                    break;
                case 2: // 1を表示
                    mDurationTime -= Time.deltaTime;
                    if (mDurationTime &lt;= 0.0f)
                    {
                        mTextCountDown.text = COUNT_ARRAY[1];
                        mDurationTime += 1.0f;
                        mCurrentIndex++;
                    }
                    break;
                case 3: // Fire!を表示
                    mDurationTime -= Time.deltaTime;
                    if (mDurationTime &lt;= 0.0f)
                    {
                        mTextCountDown.text = COUNT_ARRAY[2];

                        // コルーチンを使った遅延処理でテキストを1秒後に非表示にする
                        StartCoroutine(HideCountDownText());
                        return true;
                    }
                    break;
            }
            return false;
        }

        private IEnumerator HideCountDownText()
        {
            yield return new WaitForSeconds(1.0f);
            mTextCountDown.gameObject.SetActive(false);
        }


