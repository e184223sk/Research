More than 3 years have passed since last update.SQLで素数求める方法ってありますよね。定義をそのまま書き下すだけの。
じゃあLinq使って同じような書き方できるんじゃないか？、というとこから走り出します。まずは素数の定義からいきましょう。Wikipediaより素数（そすう、英: prime number）とは、1 より大きい自然数で、正の約数が 1 と自分自身のみであるもののことである。正の約数の個数が 2 である自然数と言い換えることもできる。1 より大きい自然数で素数でないものは合成数と呼ばれる。これをそのままLinqで書き下します。このままだと数が大きくなると列挙に時間がかかりすぎるので、ちょっと小細工します。
ある合成数の1を除く約数の最小値がxの時、その数字はx^2以上になります。
つまり、特定の数字Nが素数であるかどうかを考える時に、√N以下に約数がなければNは素数となります。
というわけでこうなります。素数の求め方は既にわかっているので、まずは素直にいきましょう。
1は素因数分解できないので最初にはねてます。本当は例外投げるべきかも。実行するとわかりますが、これ、桁数が大きくなると素因数分解の難易度にかかわらずどんどん遅くなります。
最初に素数を全て取得している上、割り切れたかどうかに関わらず素数を全てループしているのが原因です。
というわけで逐次素数を生成していきましょう。まだ最適化の余地は残っているとは思いますが、intの範囲内なら半秒もせずに算出してくれるので、許容範囲内かと。こんなのとかこんなのを作ってEnumerable.Range()とかデータ型を置き換えてやれば、intの範囲外でもばっちこいです。
※BigIntegerの場合はMath.Sqrt()に対応する関数が無いので、素数の自乗と残っている数値を比較してやる必要があります


