
using System;
using System.IO;
using System.Text;


class TestLL
{
    MemoryStream ms;

    TestLL()
    {
    }

    bool Parse(string expr)
    {
        ms = new MemoryStream(Encoding.UTF8.GetBytes(expr));
        int x=0;
        if (Expr_E(ref x)){
            Console.WriteLine(x);
            return true;
        }
        return false;
    }

    bool Expr_E(ref int y)
    {
        int x1=0;
        string ope="";
        int x2=0;
        if ( Expr_T(ref x1) ) {
            y = x1;
            if ( Expr_E2(ref ope, ref x2) ) {
                if (ope=="+"){y+=x2;}
                else if(ope=="-"){y-=x2;}
                return true;
            }
        }
        throw new Exception("Expr error");
    }

    bool Expr_E2(ref string yOpe, ref int y)
    {
        int x1=0;
        string ope="";
        int x2=0;
        if ( TokenCheck("+") ) {
            yOpe = "+";
            if ( Expr_T(ref x1) ) {
                y = x1;
                if ( Expr_E2(ref ope, ref x2) ) {
                    if (ope=="+"){y+=x2;}
                    else if(ope=="-"){y-=x2;}
                    return true;
                }
            }
        }
        else if ( TokenCheck("-") ) {
            yOpe = "-";
            if ( Expr_T(ref x1) ) {
                y = x1;
                if ( Expr_E2(ref ope, ref x2) ) {
                    if (ope=="+"){y+=x2;}
                    else if(ope=="-"){y-=x2;}
                    // else{y=y;}
                    return true;
                }
            }
        }
        else{
            return true;
        }
        throw new Exception("Expr error");
    }

    bool Expr_T(ref int y)
    {
        int x1=0;
        string ope="";
        int x2=0;
        if ( Expr_F(ref x1) ) {
            y = x1;
            if ( Expr_T2(ref ope, ref x2) ) {
                if (ope=="*"){y*=x2;}
                else if(ope=="/"){y/=x2;}
                return true;
            }
        }
        throw new Exception("Expr error");
    }

    bool Expr_T2(ref string yOpe, ref int y)
    {
        int x1=0;
        string ope="";
        int x2=0;
        if ( TokenCheck("*") ) {
            yOpe = "*";
            if ( Expr_F(ref x1) ) {
                y=x1;
                if ( Expr_T2(ref ope, ref x2) ) {
                    if (ope=="*"){y*=x2;}
                    else if(ope=="/"){y/=x2;}
                    return true;
                }
            }
        }
        else if ( TokenCheck("/") ) {
            yOpe = "/";
            if ( Expr_F(ref x1) ) {
                y=x1;
                if ( Expr_T2(ref ope, ref x2) ) {
                    if (ope=="*"){y*=x2;}
                    else if(ope=="/"){y/=x2;}
                    return true;
                }
            }
        }
        else{
            return true;
        }
        throw new Exception("Expr error");
    }

    bool Expr_F(ref int y)
    {
        if ( TokenCheck("(") ) {
            if ( Expr_E(ref y) ) {
                if ( TokenCheck(")")) {
                    return true;
                }
            }
        }
        else if ( TokenIntCheck(ref y) ) {
            return true;
        }
        ms.Position = pos;
        throw new Exception("Expr error");
    }

    // ---------------------------------------------

    bool TerminalCheck()
    {
        int b = ms.ReadByte();
        if ( b &lt; 0 ) {
            return true;
        }
        else {
            ms.Position--;
            return false;
        }
    }
    bool TokenIntCheck(ref int x)
    {
        long pos = ms.Position;
        int i = 0;
        int b;
        x = 0;
        //Console.WriteLine("CheckNum");
        while ( ( b = ms.ReadByte() ) &gt;= 0 ) {
            if ('0'&lt;=b&amp;&amp;b&lt;='9') {
                x *= 10;
                x += b-'0';
                i++;
            }
            else if ('a'&lt;=b&amp;&amp;b&lt;='z') {
                ms.Position = pos;
                return false;
            }
            else if ('A'&lt;=b&amp;&amp;b&lt;='Z') {
                ms.Position = pos;
                return false;
            }
            else {
                break;
            }
        }
        if (i==0){
            ms.Position = pos;
            return false;
        }
        if (b&gt;=0) {
            ms.Position--;
        }
        Console.WriteLine("Num");
        return true;
    }

    bool TokenCheck(string s)
    {
        byte[] t = Encoding.UTF8.GetBytes(s);
        //Console.WriteLine("CheckToken('"+s+"')");
        long pos = ms.Position;
        int i = 0;
        int b;
        while ( i&lt;t.Length ) {
            b = ms.ReadByte();
            if (b==t[i]) {
                i++;
            }
            else {
                ms.Position = pos;
                return false;
            }
        }
        Console.WriteLine("Token('"+s+"')");
        return true;
    }

    [STAThread]
    static void Main(string[] args)
    {
        string exprStr = "1+2+3";
        if (args.Length&gt;=1) {
            exprStr = String.Join("",args);
        }
        Console.WriteLine("Input: "+exprStr);

        var t = new TestLL();
        t.Parse(exprStr);
    }
}


