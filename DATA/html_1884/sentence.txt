More than 1 year has passed since last update.自動実装プロパティで読み取り専用を記述できるようになった。以前の書き方

フィールドを用意する必要があった。

class Person
{
    private DateTime birth = new DateTime(1999, 12, 31);
    public DateTime Birth 
    {
        get { return this.birth; }
    }
}


自動実装プロパティの初期値を指定できるようになった。以前の書き方

コンストラクタで初期化する必要があった。

class Person
{
    public Person()
    {
        this.Birth = new DateTime(1999, 12, 31);
    }

    public DateTime Birth { get; set; }
}


簡単なメソッドを１行で書けるようになった。以前の書き方

１行で書けなかった。

class Person
{
    private DateTime birth = new DateTime(1999, 12, 31);
    public int GetAge()
    {
        return DateTime.Today.Year - this.birth.Year + 1; // 数え年
    }
}


static クラスのメソッド呼び出し等に、クラス名が省略可能になった。イベント発生等を簡潔に書けるようになった。以前の書き方

null チェックの必要があった。

class Person
{
    private string name;
    public string Name
    {
        get { return this.name; }
        set
        {
            this.name = value;
            var handler = this.NameChanged;
            if (handler != null) handler(this, EventArgs.Empty);
        }
    }

    public event EventHandler NameChanged;
}


文字列の書式化が簡単になった。以前の書き方

string.Format を使う必要があった。

var message = string.Format("ファイル {0} が存在しません。", path);


未変数などの名前を文字列として取得できるようになった。以前の書き方

文字列で指定する必要があったため、リファクターの対象にならなかった。

if (path == null) throw new ArgumentNullException("path");


未未


