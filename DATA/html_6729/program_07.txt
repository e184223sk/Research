
public struct NativeStringList : IDisposable, IEnumerable&lt;StringEntity&gt;
{
    private NativeJaggedArray&lt;char&gt; _jarr;

    public unsafe NativeStringList(Allocator alloc) { _jarr = new NativeJaggedArray&lt;char&gt;(alloc); }
    public void Dispose() { _jarr.Dispose(); }
    public unsafe StringEntity this[int index] { get; }
    public StringEntity Last { get; }

    // string のようなものへの特殊化
    public void Add(IEnumerable&lt;char&gt; str)
    {
        _jarr.Add(str);
    }
    public unsafe void Add(char* ptr, int Length)
    {
        _jarr.Add(ptr, Length);
    }
    public unsafe void Add(StringEntity entity)
    {
        this.Add((char*)entity.GetUnsafePtr(), entity.Length);
    }
    public unsafe void Add(ReadOnlyStringEntity entity)
    {
        this.Add((char*)entity.GetUnsafePtr(), entity.Length);
    }
    public unsafe void Add(NativeList&lt;char&gt; str)
    {
        this.Add((char*)str.GetUnsafePtr(), str.Length);
    }
    public unsafe void Add(NativeArray&lt;char&gt; str)
    {
        this.Add((char*)str.GetUnsafePtr(), str.Length);
    }
}

