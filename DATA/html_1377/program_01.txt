
public static void Save&lt;T&gt;(Stream stream, IEnumerable&lt;T&gt; content, Encoding encoding = null)
    where T : class
{
    if (encoding == null) encoding = Encoding.UTF8;
    using (var writer = new StreamWriter(stream, encoding))
    {
        var headerName = typeof(T).GetProperties().Select(e =&gt;
        {
            var a = Attribute.GetCustomAttributes(e, typeof(HeaderNameAttribute));
            if (a.Length == 0)
            {
                return e.Name;
            }
            else
            {
                return (a[0] as HeaderNameAttribute).Name;
            }
        }).ToList();
        writer.WriteLine(string.Join(",", headerName));

        var header = typeof(T).GetProperties().Select(e =&gt; e.Name).ToList();
        var headerMap = new Dictionary&lt;string, int&gt;();
        for (var i = 0; i &lt; header.Count; i++)
        {
            headerMap[header[i]] = i;
        }

        foreach (var o in content)
        {
            writer.WriteLine(string.Join(",", Debind(headerMap, o)));
        }
    }
}

