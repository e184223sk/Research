More than 1 year has passed since last update.別の記事でNode.js版のAlexaスキルの最小構成のテンプレートについて書きましたが、C#のテンプレートも必要だよね、ということです。（2018年11月7日修正：C#のプログラムを修正しました。変更前の方法だと、あとで同一セッション内のデータ保持をしようとすると、～IntentHandlerメソッド側でセッションアトリビュートを取得できないことがわかったためです。すみません。
なので、skillRequestを各～IntentHandlerメソッドにまるごと渡すようにしました。 ）このエンドポイントの動作を確認するための対話モデルを作成します。
スキル名を「HelloWorldSkill」とします。
カスタムスキルです。呼び出し名を「ハローワールド」にします。
カスタムインテントを追加します。
プログラム側に合わせて「HelloWorldIntent」とします。
サンプル発話を登録します。
対話モデルをビルドします。
エンドポイントの設定で、対話モデルのスキルIDをコピーします。
AWS Lambda側に貼り付けて保存します。
AWS LambdaのARNをコピーします
対話モデル側のエンドポイントとして「デフォルトの地域」の欄に貼り付け、エンドポイントを保存します。テストしてみましょう。
「テスト」タブでテストを有効にして、呼び出し名「ハローワールド」を入力します。LaunchRequestの応答が返ってきますね。そのまま「HelloWorldIntent」を呼び出してみましょう。HelloWorldIntentの応答が返ってきました。ちゃんと動作しているようです。Node.js版のテンプレートをC#で書き直してみました。
できるだけシンプルに書いてみました。
C#で何かAlexaスキルを作る、という方はこれをたたき台として使ってみても良いかもしれません。また、こうやって一度整理することで、C#での書き方の理解が進みました。


