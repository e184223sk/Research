More than 1 year has passed since last update.ASP.NET Coreにおいて、JWTトークンを発行してもらうコードと、JWTトークンを検証するコードのサンプルです。dotnetのバージョンは、すでにサポート切れの2.2です。
たぶん3.1でもそんなに変わらないはずです。統合テストも作っています。プログラム全体はこちらに置いています。
https://github.com/sengokyu/Ex.JwtAuthgit cloneしてdotnet test ExJwtAuth.Testsとしてもらえれば、テストが動きます。ログインIDとパスワードを受け付けて、JWTトークンをJSONとして返しています。
ログインIDとパスワードを受け付けていますが、何もしておらず素通しです。JWTトークンは、System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandlerクラスを使用すると生成できます。（サンプルは、すべてをASP.NET MVCのコントローラの中でやっています。いわゆるファットコントローラというやつです。よいこは真似してはダメです）。JWTトークンの検証は、あらかじめ用意されている機能を追加するだけです。
Startupクラスの中で有効化します。AddJwtBearerメソッドに渡すオプションは、また別途DIするようにしています。追加した機能を有効にします。
Useする順番大事です。Webサーバに渡されたJWTを検証する設定は別クラスにしました。
AudienceもIssurerも検証するようにしています。Audienceの検証は、手抜きして何が来てもOKなようにしています。
実際はデータベースを検索したりします。ログイン状態を検証するために、ログインしているユーザ名をJSONで返すコードを追加しました。統合テストでは、以下の内容をテストしています。テストのアサーションには、FluentAssertionsを使用しています。Assert.Equal(期待値, 実際の値)みたいに書くよりは、書きやすく読みやすいのではないでしょうか。テストクラスはIClassFixtureを実装します。xUnitテストランナーに対して、テスト間で情報を持ちまわるようにすることを指示しています。コンストラクタでWebApplicationFactoryクラスを受け取ります。このクラスを使ってHTTPクライアントを生成します。[Fact]をつけたものが、xUnitに認識されて実行されます。HTTP Clientを作って、トップページへアクセスし、HTTPステータスコードを確認しています。長くなるので省略します。githubを見てください。
https://github.com/sengokyu/Ex.JwtAuth/blob/master/ExJwtAuth.Tests/AuthenticationApiTests.cs以下のパッケージが追加で必要でした。テストクラスのテストメソッド名を日本語にするのは、結構アリだと思うんですけどどうでしょう？


