
public class SystemManager : MonoBehaviour {

    const int roomMinHeight = 5;
    const int roomMaxHeight = 10;

    const int roomMinWidth = 5;
    const int roomMaxWidth = 10;

    const int RoomCountMin = 10;
    const int RoomCountMax = 15;

    void Start () {

        ResetMapData();

        CreateSpaceData();

        CreateDangeon();

    }

    /// &lt;summary&gt;
    /// 空白部分のデータを変更
    /// &lt;/summary&gt;
    private void CreateSpaceData() {
        int roomCount = Random.Range(RoomCountMin, RoomCountMax);
        for (int i = 0; i &lt; roomCount; i++) {
            int roomHeight = Random.Range(roomMinHeight, roomMaxHeight);
            int roomWidth = Random.Range(roomMinWidth, roomMaxWidth);
            int roomPointX = Random.Range(2, MapWidth - roomMaxWidth - 2);
            int roomPointY = Random.Range(2, MapWidth - roomMaxWidth - 2);

            int roadStartPointX = Random.Range(roomPointX, roomPointX + roomWidth);
            int roadStartPointY = Random.Range(roomPointY, roomPointY + roomHeight);

            bool isRoad = CreateRoomData(roomHeight, roomWidth, roomPointX, roomPointY);            
        }
    }

    /// &lt;summary&gt;
    /// 部屋データを生成。すでに部屋がある場合はtrueを返し、道を作らないようにする
    /// &lt;/summary&gt;
    /// &lt;param name="roomHeight"&gt;部屋の高さ&lt;/param&gt;
    /// &lt;param name="roomWidth"&gt;部屋の横幅&lt;/param&gt;
    /// &lt;param name="roomPointX"&gt;部屋の始点(x)&lt;/param&gt;
    /// &lt;param name="roomPointY"&gt;部屋の始点(y)&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    private bool CreateRoomData(int roomHeight, int roomWidth, int roomPointX, int roomPointY) {
        bool beCreateRoad = false;
        for (int i = 0; i &lt; roomHeight; i++) {
            for (int j = 0; j &lt; roomWidth; j++) {
                if (Map[roomPointY + i, roomPointX + j] == road) {
                    beCreateRoad = true;
                } else {
                    Map[roomPointY + i, roomPointX + j] = road;
                }
            }
        }
        return beCreateRoad;
    }

}

