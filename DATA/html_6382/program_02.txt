
// Copyright(c) 2017 Takahiro Miyaura
// Released under the MIT license
// http://opensource.org/licenses/mit-license.php

/// &lt;summary&gt;
///     Translator WebSocket Url
/// &lt;/summary&gt;
private const string SpeechTranslateUrl = @"wss://dev.microsofttranslator.com/speech/translate?";

/// &lt;summary&gt;
///     Connect to the server before sending audio
///     It will get the authentication credentials and add it to the header
/// &lt;/summary&gt;
/// &lt;param name="from"&gt;&lt;/param&gt;
/// &lt;param name="to"&gt;&lt;/param&gt;
/// &lt;param name="voice"&gt;&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
public async Task Connect(string from, string to, string voice)
{
    webSocket = new MessageWebSocket();

    webSocket.SetRequestHeader("Authorization", "Bearer " + bearerToken);

    var query = new StringBuilder();
    query.Append("from=").Append(from);
    query.Append("&amp;to=").Append(to);
    if (!string.IsNullOrEmpty(voice))
        query.Append("&amp;features=texttospeech&amp;voice=").Append(voice);
    query.Append("&amp;api-version=").Append(API_VERSION);


    webSocket.MessageReceived += WebSocket_MessageReceived;

    // connect to the service
    await webSocket.ConnectAsync(new Uri(SpeechTranslateUrl + query)); 
}


