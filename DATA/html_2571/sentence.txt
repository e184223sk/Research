More than 1 year has passed since last update.前回:ASP.NET Core 3.0 Razor Pages 事始め(1) の続きです。今回はモデル(映画を管理するクラス)を追加し、新規追加、編集、削除、一覧のページを作成します。まず、VS Codeのエクスプローラーの RAZORPAGEMOVIE を選択後、 [新しいフォルダー] アイコンをクリックし、Models フォルダーを作成します。Modelsフォルダ を右クリックし、[新しいファイル] で、Movie.csを作成します。Movieクラスを以下のように定義します。Movieクラスには、IDというプロパティがあります。これがデータベースのテーブルの主キーになります。ReleaseDateプロパティには、 [DataType(DataType.Date)] という属性が付加されています。これは、時刻の情報は利用しないという意味です。
UI側では、日付のみの入力、表示となります。Ctrl+Shift+Bで プロジェクトをビルドして、エラーがないことを確認します。RazorPagesMovie プロジェクトの下に、Data フォルダを作成します。RazorPagesMovieContext.cs ファイルを作成し、以下のように入力します。RazorPagesMovieContextは、Microsoft.EntityFrameworkCore.DbContextから派生しています。Movieは、エンティティセット（EntityFrameworkの用語）と呼ばれるプロパティで、データベースのテーブルに対応します。次に、appsettings.json ファイルに接続文字列を追加します。"ConnectionStrings" がその指定している個所です。次の コマンドを実行し、各種パッケージをインストールします。これで、以下のものが追加されます。Startup.cs の ConfigureServicesメソッドの最後に、services.AddDbContextの呼び出しを追加します。プロジェクトをビルドして、コンパイル エラーがないことを確認します。ところで、このStartUp.csに定義されているStartupクラスは、どこで参照しているのでしょうか？ 調べたところ、Program.csで参照していました。Program.csは、以下のようなコードになっています。具体的に何をやっているのかまでは、このコードだけから正確には理解はできませんが、ホストと言われるインスタンスを生成し、起動しているようです。そして、ホストを生成する際には、初期処理を行うためのクラスがStartupクラスだよと、指定しているということですね。何か特別の初期処理をやらせたいという時だけ、このProgramクラスのコードをいじることになると思われます。次に、作成したMovieモデルから、Create, Edit, Delete, Details, Index の各ページを作成します。まず、以下のコマンドを実行します。これで、aspnet-codegenerator スキャフォールディング ツールがインストールされます。なお、このツールの実行には、先ほどインストールしたパッケージが必要になります。続けて、次のコマンドを実行し、コードを自動生成します。以下、その実行結果です。VSCodeのエクスプローラーを見ると、プロジェクトに新たなフォルダ、ファイルが追加されているのが確認できます。次の コマンドを実行します。ef migrations add InitialCreate コマンドは、最初のデータベース スキーマを作成するコードをMigrationsフォルダに生成します。InitialCreate という名前は任意です。このコマンドは、RazorPagesMovieContext 内の以下のコードをみて、どのようなテーブルを生成したらよいかを判断しています。ef database update コマンドは、Migrationsフォルダに作成された &lt;time-stamp&gt;_InitialCreate.cs ファイルの Up メソッドを実行します。 Upメソッドにより、データベースが作成されます。Upメソッドをここに示します。ef database update コマンドを実行すると、プロジェクトのあるフォルダに、MvcMovie.db というファイルが作成されているのが確認できます。F5キーでアプリを実行後、ブラウザの URLに /movies を追加してenterキーを押します。これでMovies/index ページが表示されました。Create, Edit, Deleteのページが動作するかも確認します。やっと、ここまで来ました。正直、かなり面倒臭いですね。可能ならば、Visual Studio IDE使ったほうがはるかに簡単だと思われます。次回は、スキャフォールディングで生成されたRazorページについて、見ていこうと思います。


