More than 1 year has passed since last update.色々な高速化などの噂について検証してみました
探せばいくらでもあるforとforeachの速度などは載せていません2進数換算をした時に、1の数がなるべく少ない方が高速らしいという噂を聞いてやってみた1000回の足し算を1億回やってこの程度(+7%)なのであまり気にしなくていいかもしれない
あと1000回の足し算を1000回程度ならPCの調子か、+128の方が遅いという結果になることも多少あったので、気休め程度に。2の乗数で割り算をするとき、ビットシフトを使うと高速らしいという話を検証コード処理時間が5分の1……！
/=2とnum=num/2の差については誤差らしいというのを次項で説明VisualStudioでは逆アセンブリという機能があり、それでデコンパイル状態のコード(アセンブリ言語？)を見ることができる
そこで見てみると、同じらしい全く同じ処理をしているので、全く同じ速度ということになるはずということで、誤差ということが判明構造体の方が早いらしい。ただし一定以上のバイト数になるとクラスの方がいいらしい構造体だと2の乗数で処理速度が上がるらしい
場合と数が大きいほどclassを使うメリットがあり、ぎりぎりまで高速化したい場合はstructか
ただ、さまざまなところで見た16bitが境目という話はなかったし、40~44の間で劇的に構造体が遅くなる理由は見当もつかないので、この話題について掘り下げるのは避けたいと思う・stringは極力StringBuilderを使った方が早い
・ifとswitchはifの方が基本早い
・多分岐では上から順に出現頻度が多い条件を書くことで比較回数を減らすことができる・UnityのgameObject.tag=="hoge"より、gameObject.CompareTag("hoge")の方が早いらしい。gameObject.tagのアクセスが処理を食うとか
・UI周りの最適化など
・Resourcesは出来る限り使わない
・全般のパフォーマンス改善


