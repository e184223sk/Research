
using UnityEngine;
using System.Collections;


public class PlayerController : MonoBehaviour   
{



    private CharacterController charaCon;       
    private Vector3 moveDirection = Vector3.zero;   


    public float MoveSpeed = 5.0f;        
    public float RotateSpeed = 3.0F;     
    public float RollSpeed = 1200.0f;   
    public float gravity = 20.0F;   
    public float jumpPower = 6.0F;  



   IEnumerator Start()
    {
        charaCon = GetComponent&lt;CharacterController&gt;(); 
        animCon = GetComponent&lt;Animator&gt;(); 
        enabled = false;
        yield return new WaitForSeconds(3); 
        enabled = true;
    }



    void LateUpdate()
    {


        var cameraForward = Vector3.Scale(Camera.main.transform.forward, new Vector3(1, 0, 1)).normalized; 
        Vector3 direction = cameraForward * Input.GetAxis("Vertical") + Camera.main.transform.right * Input.GetAxis("Horizontal"); 



        charaCon.Move(moveDirection * Time.deltaTime);  

        if (Input.GetAxis("Vertical") == 0 &amp;&amp; Input.GetAxis("Horizontal") == 0)  
        {
            animCon.SetBool("Running", false);  
        }

        else
        {
            Rotate(direction);  
            animCon.SetBool("Running", true);  
        }



        if (charaCon.isGrounded)    
        {
            animCon.SetBool("Jumping", Input.GetKey(KeyCode.Space)); 
            moveDirection.y = 0f;  
            moveDirection = direction * MoveSpeed;  

            if (Input.GetKey(KeyCode.Space) ) 
            {
                moveDirection.y = jumpPower; 
            }
            else 
            {
                moveDirection.y -= gravity * Time.deltaTime; 
            }

        }
        else 
        {
            moveDirection.y -= gravity * Time.deltaTime;  
        }


    }



    void Rotate(Vector3 Hope_Rotate)
    {
        Quaternion q = Quaternion.LookRotation(Hope_Rotate);
        transform.rotation = Quaternion.RotateTowards(transform.rotation, q, RollSpeed * Time.deltaTime);
    }
}

