
/// &lt;summary&gt;消費税適用ルール&lt;/summary&gt;
internal class SalesTaxApplyRule
{
    private readonly List&lt;SalesTax&gt; _salesTaxes;

    internal SalesTaxApplyRule()
    {
        _salesTaxes = new List&lt;SalesTax&gt;();
        // 最新の施行日から順に格納すること。
        // (開発者が順番を気にしなくても良いように設計するのがホントは望ましい)
        _salesTaxes.Add(new SalesTax(enforcementDate: new DateTime(2019, 10, 1), rate: 0.10m));
        _salesTaxes.Add(new SalesTax(enforcementDate: new DateTime(2014,  4, 1), rate: 0.08m));
        _salesTaxes.Add(new SalesTax(enforcementDate: new DateTime(1997,  4, 1), rate: 0.05m));
        _salesTaxes.Add(new SalesTax(enforcementDate: new DateTime(1989,  4, 1), rate: 0.03m));
    }

    /// &lt;summary&gt;消費税ルールを適用する&lt;/summary&gt;
    /// &lt;param name="contractDate"&gt;契約日&lt;/param&gt;
    /// &lt;returns&gt;適用された消費税率&lt;/returns&gt;
    internal decimal ApplyRule(ContractDate contractDate)
    {
        var corresponded = _salesTaxes.Find(tax =&gt; tax.EnforcementDate &lt;= contractDate.Value);
        return corresponded != null ? corresponded.Rate : 0.00m;
    }
}

