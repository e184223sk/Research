
/// &lt;summary&gt;税抜き金額&lt;/summary&gt;
public class AmountExcludingTax
{
    private readonly int _amount;

    public int Value { get { return _amount; } }

    /// &lt;summary&gt;コンストラクタ&lt;/summary&gt;
    /// &lt;param name="amount"&gt;税抜き金額&lt;/param&gt;
    public AmountExcludingTax(int amount)
    {
        if (!IsValid(amount))
        {
            throw new ArgumentOutOfRangeException();
        }

        _amount = amount;
    }

    /// &lt;summary&gt;税抜き金額を加算する&lt;/summary&gt;
    /// &lt;param name="amountExcludingTax"&gt;税抜き金額&lt;/param&gt;
    /// &lt;returns&gt;税抜き金額&lt;/returns&gt;
    public AmountExcludingTax Add(AmountExcludingTax amountExcludingTax)
    {
        return new AmountExcludingTax(_amount + amountExcludingTax._amount);
    }

    /// &lt;summary&gt;有効な税抜き金額であるかを返す&lt;/summary&gt;
    /// &lt;param name="amount"&gt;税抜き金額&lt;/param&gt;
    /// &lt;returns&gt;有効な場合true&lt;/returns&gt;
    private static bool IsValid(int amount)
    {
        return 0 &lt;= amount;
    }
}

