
/// &lt;summary&gt;契約日&lt;/summary&gt;
public class ContractDate
{
    private readonly DateTime _date;

    public DateTime Value { get { return _date; } }

    /// &lt;summary&gt;コンストラクタ&lt;/summary&gt;
    /// &lt;param name="date"&gt;契約日&lt;/param&gt;
    /// &lt;remarks&gt;制約を無視した勝手なインスタンス生成を利用側にされないようprivateにしている。&lt;/remarks&gt;
    private ContractDate(DateTime date)
    {
        _date = date;
    }

    /// &lt;summary&gt;契約締結時に呼び出す。&lt;/summary&gt;
    /// &lt;returns&gt;契約日&lt;/returns&gt;
    public static ContractDate Conclude()
    {
        return new ContractDate(DateTime.Now);
    }

    /// &lt;summary&gt;リポジトリから読み出した時に呼び出す。&lt;/summary&gt;
    /// &lt;param name="date"&gt;リポジトリから読み出した契約日&lt;/param&gt;
    /// &lt;returns&gt;契約日&lt;/returns&gt;
    /// &lt;remarks&gt;リポジトリ以外からの生成に利用されないようinternalにしている。&lt;/remarks&gt;
    internal static ContractDate Reconstruct(DateTime date)
    {
        return new ContractDate(date);
    }
}

