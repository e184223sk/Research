More than 3 years have passed since last update.Unityでのforループとforeachループの配列アクセスの処理時間を計測・比較してみました。Excel2016
Windows 10
Unity 2017.3.0f3手順1. forループとforeachループの処理時間を500回計測し、CSVに保存
手順2. CSVから処理時間のヒストグラムを作成
手順3. ヒストグラムからグラフを作成・比較今回は以下の二つのコードで処理時間を計測します。今回は配列aの長さを10万としました(N = 100000)計測を行うメインのクラスはこちらです。上記のMeasureTestクラスをシーン内の適当なGameObjectにアタッチしてゲームを再生します。ゲームを再生するとMeasure_(日付).csvという名前のファイルが作成されます。
CSVの中身はこのような感じになっています。続いては、このCSVからヒストグラムを作っていきたいと思います。まずは、データ区間となる数値を入力していきます。CSVを以下のように編集し、データ区間を定義します。
参考 : エクセルでヒストグラムを作成する方法。正しいグラフの分析とは？まずは"For(ms)"と"データ区間"に関してのヒストグラムを作成します。ヒストグラム設定
作成直後
次に"ForEach(ms)"と"データ区間"に関してのヒストグラムを作成します。
作成直後
余分な行が入っていたり、名前があいまいなので見やすいように整形します。E列のカラム名 "頻度" -&gt; "for(ms)"
G列のカラム名 "頻度" -&gt; "foreach(ms)"
D列とF列を削除"データ区間"、"for(ms)"、"foreach(ms)"の数値を選択します。
おすすめグラフから"集合縦棒"を選択します。
作成直後
分かりやすいように整理します
・foreachは若干重い (forのほうがちょっと軽い)
・グラフのピークが両方とも左側へ寄っている。　どういうことなんだろう？
・forの処理時間 &gt; foreachの処理時間となってしまうケースも低確率で起こり得る。処理時間の平均値も比較してみました。forループを処理時間の平均値は 0.7358128(ms)
foreachループの処理時間の平均値は 0.8249308(ms)0.8249308 / 0.7358128 ≒ 1.121115044foreach の処理時間は　for と比較して　12％高くなるようです。foreach は for より ちょっと重い ちょうどよい機会なので、forやforeachでList&lt;T&gt;にアクセスした場合の処理負荷時間も計測してみました。リストや配列の要素数 : 1000
計測回数 : 500ヒストグラム
平均値などの比較
foreachでListにアクセスした場合、forループ配列アクセスの約５倍の処理時間がかかるようです (要素数が1000の場合)リストや配列の要素数 : 10万
計測回数 : 500ヒストグラム
平均値などの比較
foreachでListにアクセスした場合、forループ配列アクセスの約５倍の処理時間がかかるみたいです (要素数が10万の場合)List&lt;T&gt;の計測に使用したコードは以下になります。


