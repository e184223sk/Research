昨年、Xamarin.FormsでKudanARアプリをリリースしました。
Xamarin.FormsでKudan ARを試してみるそれから約1年が経過し、そろそろKudanARライブラリのAPIキーの使用期限が近づいています。
APIキーを切り替えるためだけに、都度アプリのリリースが必要になるのは面倒…
そこで、KudanARライブラリのAPIキーのデータだけLambdaで管理するよう切り離し、AppSyncを経由して取得することにしました。Lambdaからデータを返却し、AppSyncを経由してレスポンスを取得する点に焦点を当てたサンプルリポジトリを作成しました。
AWS側(AppSync、Lambda)に関してはREADME.mdに記載しています。
当記事では省略している箇所が多々あるので、詳細はこちらをご覧ください。
AppSyncDemoこのサンプルでは、AppSyncに定義されている変数のデータをすべて取得するGraphQLにて実行すると、以下のようなレスポンスが返却されます。
Lambda自体は、以下のGetSampleキーの値にあたる箇所を返却しています。Lambdaの返却値の中で、必要なデータがmessageのみだった場合、以下のようにGraphQLを定義します。
GraphQLでは、行の先頭に#をつけると以降がコメント行になるので、コメント行を使用して不要な変数を除いても構いません。Modelクラスは、GraphQLに合わせて実装します。
今回はGraphQLのdataの内側部分のみを対象としたいと思います。以下のソースは、GraphQLを読み込んで、Queryとして実行する処理を行います。
GraphQLは、AppSyncDemoプロジェクトのGraphQLsフォルダに、埋め込みリソースとして格納しています。一通りの流れは以上です。元々の目的は、APIキーのデータのみ取得だったので、AppSync経由ではなくAPI Gateway経由でもよかったのですが、あまり記事を見かけなかったので、AppSyncの記事を作成しました。
AppSyncの記事をあまり見かけなかった、というよりも、C#とAppSyncを使用した記事をあまり見かけなかった、と言った方が正確かもしれません。
そもそも、「APIキーを取得するAPI」というのがあまりよろしくなさそうな気はしていますが、その点についてはあまり考えないことにしました。sagulati/dotnet-lambda-refarch-imagerecognition
C#で不定形JSONを自在に扱いたい


