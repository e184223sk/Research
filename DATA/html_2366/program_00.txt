
using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;

class IconMakeTest:Form
{
    class NativeMethods
    {
        [DllImport("user32.dll", CharSet = CharSet.Auto)]
        public extern static bool DestroyIcon(IntPtr handle);
    } 

    IconMakeTest()
    {
        HandleCreated+=(sender,e)=&gt;{GetHiconExample();};
    }

    static string[] iconDot = new string[]{
        "................",
        ".###...##...##..",
        "..#...#..#.#..#.",
        "..#...#....#..#.",
        "..#...#....#..#.",
        "..#...#....#..#.",
        "..#...#....#..#.",
        "..#...#....#..#.",
        "..#...#....#..#.",
        "..#...#....#..#.",
        "..#...#....#..#.",
        "..#...#....#..#.",
        "..#...#....#..#.",
        "..#...#..#.#..#.",
        ".###...##...##..",
        "................",
    };

    void GetHiconExample()
    {
        Bitmap bmp = new Bitmap(16,16);
        using ( Graphics g = Graphics.FromImage(bmp) ) {
            g.Clear(Color.White);
        }
        for(int y=0;y&lt;16;y++){
            for(int x=0;x&lt;16;x++){
                if (iconDot[y][x]=='#') {
                    bmp.SetPixel(x,y,Color.Black);
                }
            }
        }

        IntPtr Hicon = bmp.GetHicon();
        Icon newIcon;
        newIcon = Icon.FromHandle(Hicon);

        this.Icon = newIcon;
        NativeMethods.DestroyIcon(newIcon.Handle);
    }

    [STAThread]
    static void Main(string[] args)
    {
        Application.Run(new IconMakeTest());
    }
}

