More than 1 year has passed since last update.文字列とenumを相互に変換することが結構多いため、テクニック集としてまとめることにしました。
同じ境遇にあったC#erの皆さんにも伝わればいいなと思います。サンプルコードで使用するenumを毎回記述するのは冗長なため、ここに記述しておきます。
（適当にサンプル用に定義しただけなので、このenumに意味はほとんどありません。）文字列からenumへ変換する際に整数型にキャストしてからenumへキャストしたりしていませんか？いちいち整数型にキャストするのは面倒ですよね。
Enum.Parse(Type, String)を使えば整数型へのキャストは不要です。さらに嬉しいことにEnum.Parse(Type, String)は名称からenumを取得することもできます。名称の大文字小文字が合わないというときはEnum.Parse(Type, String, Boolean)を使いましょう。
第3引数にtrueを指定すれば、大文字と小文字を区別せずに変換できます。
ちなみに以下の例でtrueを指定しない場合はSystem.ArgumentExceptionが発生します。.NET CoreであればEnum.Parseにジェネリックバージョンがあるようで、以下のような記述も可能です。
enumへのキャストが無い分スッキリした記述になっています。
（.NET Frameworkでもできるようになるといいなぁ）今度は逆にenumから文字列へ変換する場合を考えてみます。
enumを整数型にキャストしてから文字列に変換したりしてませんか？そんなときはEnum.ToString(String)を使って書式を指定すればキャストせずとも文字列を取得できます。
指定できる書式については、こちらを参照してください。文字列とenumの変換についてまとめてみました。
Enumクラスについてもっと知りたい場合はこちらのドキュメントをご覧ください。
この記事でC#のコードが少しでも綺麗になれば幸いです。それではまた。
TomoProg


