using System;
using System.Threading;
using System.Threading.Tasks;
using System.Collections.Generic;

class Program{
    static void Main(){
        new Func&lt;Task&gt;(async()=&gt;{
            int workMin;
            int ioMin;
            ThreadPool.GetMinThreads(out workMin,out ioMin);
            ThreadPool.SetMinThreads(100,ioMin);

            List&lt;string&gt; sortResult=new List&lt;string&gt;();

            Func&lt;int,Task&gt; delayWait=async wait=&gt;{
                await Task.Delay(wait*10);
                sortResult.Add(wait.ToString());
            };

            Console.Write("【SleepSort C# Async/Await】\n&gt; ");
            string input=Console.ReadLine();
            string[] items=input.Split(' ');
            Task[] itemTasks=Array.ConvertAll(items,val=&gt;delayWait(Int32.Parse(val)));

            await Task.WhenAll(itemTasks);
            Console.WriteLine("done!");
            Console.WriteLine(" "+String.Join(", ",sortResult));
            Console.ReadLine();
        })().Wait();
    }
}

