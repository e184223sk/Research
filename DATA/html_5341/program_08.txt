
//------------------------------------------------------------------------------
// &lt;auto-generated&gt;
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// &lt;/auto-generated&gt;
//------------------------------------------------------------------------------

namespace INotifyPropertyChanged_2172d2073f184d9db6d12b49f79a37c0 {


    public class ViewModel : ConsoleApp1.ViewModel, System.ComponentModel.INotifyPropertyChanged {

        private static System.Collections.Generic.Dictionary&lt;string, System.ComponentModel.PropertyChangedEventArgs&gt; propertyChangedEventArgs = new System.Collections.Generic.Dictionary&lt;string, System.ComponentModel.PropertyChangedEventArgs&gt;();

        public ViewModel(string name, int age) : 
                base(name, age) {
        }

        protected static System.Collections.Generic.Dictionary&lt;string, System.ComponentModel.PropertyChangedEventArgs&gt; PropertyChangedEventArgs {
            get {
                return ViewModel.propertyChangedEventArgs;
            }
        }

        public override string Name {
            get {
                return base.Name;
            }
            set {
                if (System.Collections.Generic.EqualityComparer&lt;string&gt;.Default.Equals(base.Name, value)) {
                    return;
                }
                base.Name = value;
                this.OnPropertyChanged("Name");
            }
        }

        public override int Age {
            get {
                return base.Age;
            }
            set {
                if (System.Collections.Generic.EqualityComparer&lt;int&gt;.Default.Equals(base.Age, value)) {
                    return;
                }
                base.Age = value;
                this.OnPropertyChanged("Age");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged == null)) {
                return;
            }
            System.ComponentModel.PropertyChangedEventArgs eventArgs;
            if ((ViewModel.PropertyChangedEventArgs.TryGetValue(propertyName, out eventArgs) == false)) {
                eventArgs = new System.ComponentModel.PropertyChangedEventArgs(propertyName);
                ViewModel.PropertyChangedEventArgs.Add(propertyName, eventArgs);
            }
            this.PropertyChanged(this, eventArgs);
        }
    }
}

