

    using System.Linq;

    /// &lt;summary&gt;
    /// 指定の要素と、その子要素すべてを列挙したリストを返す
    /// &lt;/summary&gt;
    /// &lt;param name="parent"&gt;指定する要素&lt;/param&gt;
    /// &lt;param name="dest"&gt;元々あるリスト&lt;/param&gt;
    /// &lt;returns&gt;parentとその子要素をdestに追加したリスト&lt;/returns&gt;
    public static List&lt;Window&gt; GetAllChildWindows(Window parent, List&lt;Window&gt; dest)
    {
        dest.Add(parent);
        EnumChildWindows(parent.hWnd).ToList().ForEach(x =&gt; GetAllChildWindows(x, dest));
        return dest;
    }

    private static IEnumerable&lt;Window&gt; EnumChildWindows(IntPtr hParentWindow)
    {
        IntPtr hWnd = IntPtr.Zero;
        while ((hWnd = FindWindowEx(hParentWindow, hWnd, null, null)) != IntPtr.Zero) { yield return GetWindow(hWnd); }
    }

    public static Window GetWindow(IntPtr hWnd)
    {
        int textLen = GetWindowTextLength(hWnd);
        string windowText = null;
        if (0 &lt; textLen)
        {
            StringBuilder windowTextBuffer = new StringBuilder(textLen + 1);
            GetWindowText(hWnd, windowTextBuffer, windowTextBuffer.Capacity);
            windowText = windowTextBuffer.ToString();
        }

        StringBuilder classNameBuffer = new StringBuilder(256);
        GetClassName(hWnd, classNameBuffer, classNameBuffer.Capacity);

        return new Window() { hWnd = hWnd, Title = windowText, ClassName = classNameBuffer.ToString() };
    }


