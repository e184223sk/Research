More than 1 year has passed since last update.オスロアドベント2日目。3日目も私です。（何個書くんだろ…？）　PCでアプリを立ち上げた時の初期設定とかルーチンワークとかめんどくさくないですか？私の場合は特殊な環境にある恋声の初期設定がめんどくさかったです。そこでそれを自動化 + α したのでその際どうやったかを書いていきます。いわゆるRPAですね。（新しいアプリではこの方法を使えないものがあるので注意）
その結果がこれです　私は、GUIも作りたかったのでC#を使いました。C++でも私の紹介する方法は使えるので参考にしてください。また、アプリケーションを操作するために、アプリがどういう構造をしているか調べるツールを導入する必要があります。以下が開発に使ったものです。　実際の例として恋声を例としてやっていきます。　まず、ボタンをクリックするなら押すボタンを特定しなければなりません。ここで、 WinSpector を使って特定します。
　WinSpector を開き、Window をクリックすると現在開いているウィンドウ（とその要素）の一覧が表示されます。
　その中から目的のものを見つけ出します。基本的に、階層、要素の名前、クラス名で判断します。日本語は文字化けするので文字数を手掛かりに見つけます。目的のものが見つかったら、クラス名とタイトルを記録しておきましょう。C#側から探すときの手掛かりとなります。名前が無かったらめんどくさいですが、名前がないことを覚えておきましょう。
　もし、文字化けしてわからなかったら、以下のように枠で囲ったところから目的の要素までドラッグ＆ドロップをしてやると、丸で囲んだところみたいに薄い灰色になるので使ってみるといいです。
　それでは、プログラム側から要素を取得していきます。いったん目的のトップウィンドウからすべての子孫要素を取得して、そこから使いまわすという方針でいきます。ここで使うWin32API関数は以下の5つです。、ここから要素のことをウィンドウとか書いたりしますが気にしないでください。　ここで出てくる[DllImport("user32.dll")]というのは Win32API の関数を使いますよといった合図みたいなものです。
　操作するのに使いそうな情報を集めた以下のような構造体かクラスがあると便利です。　それでは以上のことを組み合わせて、指定の要素と、その子要素すべてを列挙したリストを返す関数を作ります。　こうしてやると、以下のようにして先ほどのスクショにあったボタンの要素は取得できます。　操作する要素を取得できたので、今度はそれを操作していきます。やばそうに聞こえますがそこまでやばくありません。まあ、私の場合これで恋声をバグらせてしまって何回か設定をぶっ飛ばしてしまいましたが。
　要素への操作は以下の Win32API 関数で全て行えます。　この関数に適切な引数を与えて使えば、全て操作を行うことができます。以下の表が私が実際に使った組み合わせです。参考記事のところに一覧がのったページがあります。　高負荷時に、ウィンドウを開く・閉じる等やや重い動作があることをすると、その後のSendMessage()がうまく動作しないことがあります。このせいで成果物がかなり不安定になりました。（今は解消しています）その対処法を書きます。　問題は、ウィンドウを開閉するときにラグが生じるというとこです。なので、ウィンドウが安定するまで待てば安定するはず！→安定しました。
　恋声は、2種類でウィンドウを制御していたので Win32API を2つ使います。　恋声では、ウィンドウを生成・破棄するタイプと、 style の visible を制御するタイプの二種類がありました。前者は大丈夫だと思いますが、後者のやり方だけ書きます。　今回紹介したものは古いし、簡単にできるRPAツールが最近出てきているので枯れた技術かなぁと思いつつも複雑なことをやったり、他のことに組み合わせたりするのに使えるのかなぁと思ったりしてます。ではよい自動化ライフを。next→Windowsでオーバーレイフォームを作ったC#で他アプリケーションを操作するための基礎知識
【WindowsAPIメモ】メッセージ一覧


