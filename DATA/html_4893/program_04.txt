
class SubjectProvider
{
    private Subject&lt;int&gt; subject = new Subject&lt;int&gt;();

    //中略
    //Subjectに対して何らかのタイミングでOnNextにより値を発行している

    //SubjectをIObservableとして公開している
    public IObservable&lt;int&gt; Observable =&gt; subject;
}

class SubjectSubscriber
{
    private SubjectProvider subjectProvider = new SubjectProvider();

    public SubjectSubscriber()
    {
        //外部が公開しているSubjectに対してオペレータをつけてHot変換
        IConnectableObservable&lt;TimeSpan&gt; connectableObservable =
            subjectProvider.Observable
                           .Where(n =&gt; n &gt; 0)
                           .Select(n =&gt; TimeSpan.FromSeconds(n))
                           .Publish();
        //どこでConnectしよう？
        connectableObservable.Subscribe(time =&gt; Debug.Log(time));
        //どこでConnectしよう？
        connectableObservable.Subscribe(time =&gt; Debug.Log(time));
        //どこでConnectしよう？
        connectableObservable.Subscribe(time =&gt; Debug.Log(time));
        //どこでConnectしよう？
    }
}

