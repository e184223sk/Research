
//Observableソースを作る
Subject&lt;int&gt; subject = new Subject&lt;int&gt;();

//Subjectからのint型の通知に対して何らかのオペレータを追加
//このまま複数回Subscribeされるとオペレータが重複生成されて無駄な処理が走る
IObservable&lt;TimeSpan&gt; sourceColdObservable =
    subject.Do(n =&gt; Debug.Log($"{n}が通知されました")) //Hot変換されていることを確認するためのログ
           .Where(n =&gt; n &gt; 0)
           .Select(n =&gt; TimeSpan.FromSeconds(n));

//ColdなIObservale「sourceColdObservable」をHot変換する準備をする
IConnectableObservable&lt;TimeSpan&gt; connectableObservable =
    sourceColdObservable.Publish();

//Publish内部のSubjectにsourceColdObservableをSubscribeさせる
connectableObservable.Connect();

//Publish内部のSubject(つまりHotなIObservable)をSubscribeする
connectableObservable.Subscribe(time =&gt; Debug.Log($"購読者1:{time}"));
connectableObservable.Subscribe(time =&gt; Debug.Log($"購読者2:{time}"));

subject.OnNext(30);
subject.OnNext(60);
subject.OnNext(-20);
subject.OnNext(90);

