More than 3 years have passed since last update.C#でストリームを扱うときはという感じですが、このあたりでいくつか気になる点があったので調べました。ストリームは内部にファイルポインタなり、ソケットなどを持っているだろうから、Dispose必要というのはわかる。では、Reader/Writer にもDisposeがあるのはなぜ？（何を解放しているのか？）StreamReader の親である TextReader は何もしなくていいみたいで、空のメソッド。StreamReader になると、エンコーディングやバッファの情報を消しているなるほど！読み書きのバッファなどを持っている場合、それも解放しないといけないってことですかね。Reader/Writer の方だけでいいみたいです。
中のStreamも自動的にDisposeしてくれます。ただし、Reader/Writer のコンストラクタ引数の leaveOpen を true にすることで、 Stream を解放しないようにもできます。内部で Dispose を呼び出しているだけなので、無視して大丈夫です。usingで囲むと自分でDisposeを呼ぶ必要はなくなります。（using構文が内部でDisposeを呼んでくれます）
積極的に using で済ますようにしたほうが良さそうです。（Marimoiroさんコメントありがとうございます）参考リンク


