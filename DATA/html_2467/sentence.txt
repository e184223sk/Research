More than 1 year has passed since last update.　enum、便利ですよね。入力値の制限ができますし、入力補完もききます。が、一つ問題があります。オリジナルを弄らずに値を追加することができないことです。　ゲームか何かを作っていたとしてキャラクターの一つとして、現場猫を出すとしましょう。現場猫もいろんな種類がいます。定番の「ヨシ！」というやつ、受話器を持って「どうして」と悲嘆な表情なやつ、などなど。
　我々の鬱憤や不満などそういった機微を混ぜこぜにして新しい現場猫を作りたくなるかも知れません。仮に適当なことを言うSEにでもしましょうか。ちょっと突っ込んだ質問をすると「まぁそれで良いんじゃないかと思います」とクライアントにロクに確認も取らずに生返事をして後々トラブルになりそうなアレです。警戒心ヤベェです。
　その時、現場猫の種類をenumで管理してたとして、新しい現場猫を追加するとなれば、enumの宣言をどうすれば良いでしょうか。少なくとも今(2019/11)はこんなことは出来ないです。　そうだね。　まぁできなくはないのですが、いざ使うとなるとintで宣言しなければならず、何を表すか不明瞭です。加えて、intなので数字をフリーダムに入れることができます。できるなら避けたいですね。　こんな感じで書いてみました。　上述のconstメンバからもう少し話を進めて、intからそのクラス型に制限、想定していないtypeの実体を作れないようコンストラクタをprotectedで隠蔽、比較演算子も実装して、表面上はenumのように使えるようにしました。入力補完もきいてくれるので打ち込むときも楽です。セーブ・ロードなどのシリアライズが必要になった時に備えてHashでの入出力も備えました。
　難点としてはnullを持てちゃうこと、そしてenumに比べて宣言がクッソ面倒臭いことです。


