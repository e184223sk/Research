More than 1 year has passed since last update.非IT企業に勤務する事務職という名のエンジニアの皆様におかれましては、以下のようなきわめて過酷な環境に置かれていることと思います。当然VisualStudioもVSCodeもSublimeTextさえ使えず、あるものといえばWordとExcelとメモ帳と付箋くらい。この牢獄のような環境下で、事務職エンジニアはExcelVBAやHTA、WSH、コマンドプロンプト、PowerShellといった、プレーンなWindowsでも使える技術を手に、日夜メモ帳と戦っていることでしょう。特にわたしはWebが好きで、html/css/javascriptが得意なので、HTA（Webの技術で超簡単にデスクトップアプリがつくれるやつ。）であれこれとアプリをつくっていました。しかし、IEも開発が終了し、HTAのようなレガシー技術も廃れに廃れて、いつまでサポートされるかも分からないご時世。やっぱり、そろそろHTAを捨てて移住先を探さなければ…！前提として、わたしのPC環境は以下のとおりです。時代はクラウドですがWebアプリは一切使うことが許されていません。
Windowsに標準で入ってる「付箋」をデスクトップに貼り付けてタスク管理ツールとして使うというナレッジが口伝でシェアされているような職場です。
思うところはありますが、ここはクリエイターとしてアプリ開発に熱があがると前向きに捉えましょう('､3_ヽ)_わたしのPCにはIE9の他にFirefoxが入っています。
Firefoxならば、最新のJavaScriptとそのフレームワークを使って、ローカルで動作するいい感じのWebアプリがつくれるはず。
もう「クラス構文が使えない〜」とか「アロー関数が使えない〜」とか悩む必要はないのです。
Babel？　そんなの使えるわけないでしょッ！
わたしはHTAを捨てて、最新のブラウザと共に歩む道を選ぶのだ！！ブラウザの宿命ですが、ローカルファイルにはアクセスが許されません。
データを保存するだけだったらLocalStorageとかIndexedDBとかで事足りますが、これらはドメイン単位で保存されているため、ローカルで使う場合はファイルの置き場所が変わったらアクセスできなくなります。
そしてやっぱり、ブラウザの用意するストレージではなくて、ローカルのファイルにアクセスしたいという欲も出てきます。
IEに実装されているActiveXという技術のことは…もう忘れましょう。ローカルファイルを自在に操るには、HTTPの壁を超えてサーバサイドと連携するしかありません。
localhostに立てたサーバを使って、サーバ経由でローカルファイルを操作するのです。
そしてそのためには、HTTPを越えるためのWebサーバが必要不可欠です。茶番が長かったですが、ここから本題です。
サーバサイドの言語がインストールされていれば、httpサーバ程度ならワンライナーで立てられるのですが、最初に説明したとおり、わたしのPCには何の言語もインストールされていません。しかしこの環境下でも、httpサーバを立てる手段はあります。
.NETの中に、HttpListenerというシンプルなhttpサーバを立てられるクラスがあるらしいので、これを使います。PowerShellは最近のWindowsには標準で入っているスクリプト言語かつコマンドプロンプトの全コマンドを網羅するという完全上位互換のシェルです。
PowerShellのやばいところは、.NETのクラスにアクセスして使うことができるというところで、何でもできるのですがキメラ化していて底知れぬ不気味さがあります。
これを使ってlocalhostにWebサーバを立ててみましょう。上のコードは、localhost:8000/以下にアクセスすれば何があってもhello world!と返すだけのおめでたいWebサーバの例です。
powershellを開いて.\server.ps1で起動させれば、環境によっては上の例だけでもブラウザから動作を確認できると思います。試しに上のコードを書いてFirefoxで覗いてみたところ、「プロキシサーバへの接続を拒否されました」とのエラーが。
手元にあるIE9では正常に見れるのに…。
IEで見れても仕方ないんだよ…。調査したところ、社内のプロキシサーバ側の設定でlocalhostへのアクセスが許可されていない（？）ようでした。
当然、しがない事務職のわたしにはプロキシサーバをいじくる権限などありません。Firefox側の設定を変更して、localhostにアクセスする際はプロキシを使わないようにすることもできるはずなのですが、この操作には管理者権限が必要とされているらしく、ユーザ権限ではプロキシの設定をいじれませんでした。localhostがダメならば、ループバックアドレスか自分のIPで直接アクセスすればいいじゃん！
ということで、Firefoxから127.0.0.1:8000へアクセスしてみました。が、ダメッ！！今度はブラウザにBad Request -Invalid Hostnameの表示が…。
どうやらこれは、上のコードで書いたの設定により、「リクエストされたホスト名が設定と違うからダメ！」と怒られてしまっているようです。
しぶといですね…('､3_ヽ)_「localhost:8000と設定されているのに、127.0.0.1とか10.x.x.xとかでアクセスしてるからダメ」ということならば、こっちの設定を変えてしまいましょう。こっちに変えて試してみます。
今度こそいけそうな気がします。が、ダメッ！！今度はそもそもHttpListenerを立てる段階で以下のようなエラーが出てしまいました。調べたところ、ユーザ権限では127.0.0.1を指定してポートを開放することが許可されていない（？）みたいです。
localhostならいけるのに、なんでやねん！！
自分のIP（10.x.x.x）でも試してみましたが、こちらも同様の結果。
ユーザ権限でポートを開放できるように設定を書き換えることもできるみたいですが、こちらもやはり管理者権限が必要とされるらしいです。八方塞がりだ…('､3_ヽ)_見たところ、localhostで立ててループバックアドレスか自分のIPアドレスでアクセスした場合であれば、HttpListenerまではリクエストが飛んできているみたいなので、これが一番芽がありそうです。
他のは…プロキシの設定変えたり管理者権限を入手したりしないとダメっぽいので、どうにもならなさそう。ここまでやってダメなのか～…と半ば諦めながらググっていたところ、StackOverflowで耳寄りな情報を発見。どうやらhttp://+:80/Temporary_Listen_Addresses/なら誰でもアクセスできるよ！
でも他のアプリと競合する場合があるから気をつけて！ということらしい。
試しにこの設定でHttpListenerを立ててみます。起動すると、何事もなくサーバがListenを開始します。
さらにこの状態で、FireFoxから127.0.0.1/Temporary_Listen_Addresses/にアクセスすると、ついにhello world!の文字が…！長かったけどこれで無事、管理者権限のないWindowsでlocalhostにWebサーバを立てることができました。
あとはリクエストURLを参照してファイルを返したりRESTなAPIを構築したりと、やりたい放題ですね！(۶•̀ᴗ•́)۶PowerShellが嫌な場合は、C#で書いたコードをWindows標準で入ってるcsc.exeを使って実行ファイルにすることができます。
やってることはPowerShellとほとんど同じなのですが、いちおうサンプルを乗っけておきます。これをcsc.exeでコンパイルしてserver.exeをつくります。せめてPythonだけでも使えれば…('､3_ヽ)_※ 今回は試みとしてやってみましたが、LAN内とはいえ勝手にWebサーバを立てて運用するのはセキュリティリスクになりますので、賢い人はこんなことしてないで情シスに陳情して何とかしてもらいましょう。


