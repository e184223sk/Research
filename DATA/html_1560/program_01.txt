
using Reactive.Bindings;
using Reactive.Bindings.Extensions;
using System;
using System.ComponentModel;
using System.Reactive.Disposables;
using System.Reactive.Linq;

namespace WpfApp2
{
    public class MainWindowViewModel : INotifyPropertyChanged, IDisposable
    {
        public event PropertyChangedEventHandler PropertyChanged;

        private readonly CompositeDisposable _disposables = new CompositeDisposable();

        public ReactiveProperty&lt;string&gt; FirstName { get; }

        public ReactiveProperty&lt;string&gt; LastName { get; }
        public ReadOnlyReactivePropertySlim&lt;string&gt; FullName { get; }

        public MainWindowViewModel()
        {
            FirstName = CreateFirstNameProperty();
            LastName = CreateLastNameProperty();
            FullName = CreateFullNameProperty();
        }

        // 本当はモデルとかと繋ぐ処理を書く
        private ReactiveProperty&lt;string&gt; CreateFirstNameProperty() =&gt;
            new ReactiveProperty&lt;string&gt;("")
            .AddTo(_disposables); // 今回はいらないけど

        private ReactiveProperty&lt;string&gt; CreateLastNameProperty() =&gt;
            new ReactiveProperty&lt;string&gt;("")
            .AddTo(_disposables); // 今回はいらないけど

        private ReadOnlyReactivePropertySlim&lt;string&gt; CreateFullNameProperty() =&gt;
            FirstName.CombineLatest(LastName, (first, last) =&gt; $"{first} {last}")
                .ToReadOnlyReactivePropertySlim()
                .AddTo(_disposables); // 今回はいらないけど

        public void Dispose() =&gt; _disposables.Dispose();
    }
}

