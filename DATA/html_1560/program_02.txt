
using Reactive.Bindings;
using Reactive.Bindings.Extensions;
using System;
using System.ComponentModel;
using System.Reactive.Disposables;
using System.Reactive.Linq;

namespace WpfApp2
{
    public class MainWindowViewModel : INotifyPropertyChanged, IDisposable
    {
        public event PropertyChangedEventHandler PropertyChanged;

        private readonly CompositeDisposable _disposables = new CompositeDisposable();

        public ReactiveProperty&lt;string&gt; FirstName { get; }

        public ReactiveProperty&lt;string&gt; LastName { get; }
        public ReadOnlyReactivePropertySlim&lt;string&gt; FullName { get; }

        public MainWindowViewModel() =&gt;
            (FirstName, LastName, FullName) = InitializeProperties();

        private (ReactiveProperty&lt;string&gt; firstName, ReactiveProperty&lt;string&gt; lastName, ReadOnlyReactivePropertySlim&lt;string&gt; fullName) InitializeProperties()
        {
            var firstName = new ReactiveProperty&lt;string&gt;("").AddTo(_disposables);
            var lastName = new ReactiveProperty&lt;string&gt;("").AddTo(_disposables);
            var fullName = firstName.CombineLatest(lastName, (f, l) =&gt; $"{f} {l}").ToReadOnlyReactivePropertySlim()
                .AddTo(_disposables);
            return (firstName, lastName, fullName);
        }


        public void Dispose() =&gt; _disposables.Dispose();
    }
}

