using System;
using UnityEngine;

namespace Hexat
{
    // Basic
    public class Lazy&lt;TParam, TOut&gt;
    {
        protected TParam param;
        protected TOut value;
        protected Func&lt;TParam, TOut&gt; provider;

        public Lazy(TParam param, Func&lt;TParam, TOut&gt; provider)
        {
            this.param = param;
            this.provider = provider;
        }

        public TOut Value
        {
            get { return value != null ? value : (value = provider(param)); }
        }
    }

    // Without initialization params
    public sealed class LazyObject&lt;T&gt; : Lazy&lt;object, T&gt;
    {
        public LazyObject(Func&lt;T&gt; provider) : base(null, o =&gt; provider())
        {
        }
    }

    // Resource
    public sealed class LazyResource&lt;T&gt; : Lazy&lt;string, T&gt; where T : UnityEngine.Object
    {
        public LazyResource(string path) : base(path, Resources.Load&lt;T&gt;)
        {
        }
    }
}

