
        public static async  Task ExecuteAsync()
        {
            List&lt;int&gt; list = Enumerable.Range(1, 30).ToList();

            IReadOnlyList&lt;int&gt; col = new ReadOnlyCollection&lt;int&gt;(list);

            // 実行順序は保証できない
            var artifacts = await col.ParallelForEachAsync&lt;int, ValueTuple&lt;int, DateTime&gt;&gt;(10, async (x) =&gt;
            {

                Console.WriteLine($"{x}: Accepted.");
                await Task.Delay(TimeSpan.FromSeconds(5));

                // 成果物があれば、ディクショナリに詰める
                var dateTime = DateTime.Now;
                ValueTuple&lt;int, DateTime&gt; artifact = (x, dateTime);

                Console.WriteLine($"{x}: Done by {artifact.Item2}");
                return artifact;

            });


            Console.WriteLine("---ordered");

            // 順番は保証されている。
            foreach ( var elm  in artifacts)
            {
                Console.WriteLine($"x: {elm.Item1} time: {elm.Item2} ");
            }
        }

