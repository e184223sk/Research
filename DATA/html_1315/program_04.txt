
public static class CsvParser
    {
//簡易バージョン
        public static List&lt;T&gt; Read&lt;T&gt;(string filepath)
        {
            using (var reader = new StreamReader(filepath))
            using (var csv = new CsvReader(reader, CultureInfo.CurrentCulture))
                return csv.GetRecords&lt;T&gt;().ToList();
        }

        public static void Write&lt;T&gt;(IEnumerable&lt;T&gt; obj, string filepath)
        {
            using (var reader = new StreamWriter(filepath))
            using (var csv = new CsvWriter(reader, CultureInfo.CurrentCulture))
                csv.WriteRecords&lt;T&gt;(obj);
        }
//encoderと区切り文字設定できるバージョン
        public static List&lt;T&gt; Read&lt;T&gt;(string filepath, Encoding encoding, string delimiter)
        {
            using (var reader = new StreamReader(filepath,encoding))
            using (var csv = new CsvReader(reader, CultureInfo.CurrentCulture))
            {
                csv.Configuration.Delimiter = delimiter;
                return csv.GetRecords&lt;T&gt;().ToList();
            }
        }

        public static void Write&lt;T&gt;(IEnumerable&lt;T&gt; obj, string filepath, Encoding encoding, string delimiter)
        {
            using (var reader = new StreamWriter(filepath, false, encoding))
            using (var csv = new CsvWriter(reader, CultureInfo.CurrentCulture))
            {
                csv.Configuration.Delimiter = delimiter;
                csv.WriteRecords&lt;T&gt;(obj);

            }
        }
    }


