
// Rectの構造体をコマンドパラメータで使用するためのCommandParameterInterpreter。
class RectInterpreter : MonKey.Editor.Internal.CommandParameterInterpreter
{
    [InitializeOnLoadMethod]
    static void AddInterpreter()
    {
        // CommandParameterInterpreterの定義を追加する。
        AddInterpreter(new RectInterpreter());
    }

    RectInterpreter() : base(typeof(Rect)) // 対応する型を指定する。今回はRect。
    {
    }

    // 入力された文字列を、コマンドパラメータの型にパースする。
    public override bool TryParse(string text, out object obj, System.Type subType = null)
    {
        // カンマ区切りでx, y, width, heightの4個の数値を指定させる。
        var parts = text.Split(',');
        if (parts.Length == 4)
        {
            // それぞれの数値をfloatへ変換し、Rectを作成する。
            float[] values = new float[4];
            for (int i = 0; i &lt; 4; ++i)
            {
                float result;
                if (float.TryParse(parts[i], out result))
                {
                    values[i] = result;
                }
            }
            var rect = new Rect(values[0], values[1], values[2], values[3]);
            obj = rect;     // パースした結果はobjに格納する。
            return true;
        }

        obj = null;
        return false;
    }
}

