
using Prism.Mvvm;
using Reactive.Bindings;
using Reactive.Bindings.Extensions;
using System;
using System.IO;
using System.Reactive.Disposables;
using System.Windows;

namespace DragDropSmaple.ViewModels
{
    public class MainWindowViewModel : BindableBase, IDisposable
    {
        private CompositeDisposable Disposable { get; } = new CompositeDisposable();
        public string Title =&gt; "Drag &amp; Drop Sample Application";

        public ReactivePropertySlim&lt;string&gt; DropFile { get; }

        public ReactiveCommand&lt;DragEventArgs&gt; FileDropCommand { get; private set; }

        public MainWindowViewModel()
        {
            DropFile = new ReactivePropertySlim&lt;string&gt;().AddTo(Disposable);

            FileDropCommand = new ReactiveCommand&lt;DragEventArgs&gt;().AddTo(Disposable);
            FileDropCommand.Subscribe(e =&gt;
            {
                if (e != null)
                {
                    OnFileDrop(e);
                }
            });
        }

        private void OnFileDrop(DragEventArgs e)
        {
            if (!e.Data.GetDataPresent(DataFormats.FileDrop))
                return;

            var dropFiles = e.Data.GetData(DataFormats.FileDrop) as string[];

            if (dropFiles == null)
                return;

            if (File.Exists(dropFiles[0]))
            {
                DropFile.Value = dropFiles[0];
            }
            else
            {
                DropFile.Value = "ドロップされたものはファイルではありません";
            }
        }


        public void Dispose()
        {
            Disposable.Dispose();
        }
    }
}

