/// &lt;summary&gt;
/// 果物を表します．
/// &lt;/summary&gt;
public class Fruit
{
    /// &lt;summary&gt;
    /// 番号
    /// &lt;/summary&gt;
    public int Id { get; private set; }

    /// &lt;summary&gt;
    /// 名前
    /// &lt;/summary&gt;
    public string Name { get; private set; }

    /// &lt;summary&gt;
    /// 果物図鑑　※静的メンバ（＝クラス間で共通）
    /// &lt;/summary&gt;
    private static Dictionary&lt;int, Fruit&gt; _fruitsLibrary { get; set; }

    /// &lt;summary&gt;
    /// コンストラクタ ※静的メンバにはアクセス不可
    /// &lt;/summary&gt;
    /// &lt;param name="id"&gt;番号&lt;/param&gt;
    /// &lt;param name="name"&gt;名前&lt;/param&gt;
    public Fruit(int id, string name) =&gt; (this.Id, this.Name) = (id, name);

    /// &lt;summary&gt;
    /// 静的コンストラクタ ※静的メンバのみにアクセス可能
    /// &lt;/summary&gt;
    static Fruit()
    {
        // 果物図鑑を作成
        _fruitsLibrary = new Fruit[] { new Fruit(1, "りんご"), 
                                       new Fruit(2, "いちご"), 
                                       new Fruit(3, "メロン") }
                                      .ToDictionary(f =&gt; f.Id, f =&gt; f);
    }

    /// &lt;summary&gt;
    /// 現在のオブジェクトを表す文字列を返します．
    /// &lt;/summary&gt;
    public override string ToString() =&gt; $"{this.Id:00}：{this.Name}";

    /// &lt;summary&gt;
    /// 番号を指定して果物図鑑からインスタンスを取得します．
    /// &lt;/summary&gt;
    /// &lt;param name="id"&gt;番号&lt;/param&gt;
    public static Fruit FromId(int id) =&gt; _fruits[id];
}

