// Scripts/Old/DataAccessObject.cs

using UnityEngine;
using System.IO;

namespace UniDAO.Old
{
    // クライアントのデータ保存・読み込み・削除・存在確認
    public class DataAccessObject
    {
        private static readonly string BasePath = Application.persistentDataPath + "/DAO/";


        private const string Extention = ".json";


        // 存在確認
        public static bool Exists( string fileName )
        {
            return ExistsFile( fileName );
        }

        // カスタムクラスを読み込み
        public static T Read&lt;T&gt;( string fileName )
        {
            string text = ReadFile( fileName );

            if( string.IsNullOrEmpty( text ) )
                return default(T);

            return JsonUtility.FromJson&lt;T&gt;( text );
        }

        // カスタムクラスを保存
        public static void Save( object data, string fileName )
        {
            string text = JsonUtility.ToJson( data );
            OverWriteFile( fileName, text );
        }

        // 削除
        public static void Delete( string fileName )
        {
            DeleteFile( fileName );
        }


        // パスの取得
        private static string MakeFilePath( string fileName )
        {
            return BasePath + "/" + fileName + Extention;
        }

        // ファイルの存在確認
        private static bool ExistsFile( string fileName )
        {
            string path = MakeFilePath( fileName );
            return File.Exists( path );
        }

        // ファイルの読み込み
        private static string ReadFile( string fileName )
        {
            string path = MakeFilePath( fileName );

            if( !ExistsFile( fileName ) )
                return null;

            return File.ReadAllText( path );
        }

        // ファイルの上書き
        private static void OverWriteFile( string fileName, string text )
        {
            if( !Directory.Exists( BasePath ) )
                Directory.CreateDirectory( BasePath );

            string path = MakeFilePath( fileName );

            DeleteFile( fileName );
            File.WriteAllText( path, text );
        }

        // ファイルの削除
        private static void DeleteFile( string fileName )
        {
            string path = MakeFilePath( fileName );

            if( Exists( fileName ) )
                File.Delete( path );
        }
    }


    // Scripts/Old/Example/Example.cs
    // 使用例
    public class Example : MonoBehaviour
    {
        // データ保存用クラス
        [Serializable]
        private class TestData
        {
            public string testString;
            public int    testInt;


            public override string ToString()
            {
                return   "Test Data :: "
                       + "Test String : " + testString + ", "
                       + "Test Int : " + testInt; 
            }
        }


        private void Start()
        {
            var testData = new TestData();
            {
                testData.testString = "string";
                testData.testInt = 15;
            }


            // 保存
            DataAccessObject.Save( testData, "fileName" );

            // 読み込み
            Debug.Log( DataAccessObject.Read&lt;TestData&gt;( "fileName" ).ToString() );

            // 存在確認
            Debug.Log( DataAccessObject.Exists( "fileName" ) );

            // 削除
            DataAccessObject.Delete( "fileName" );
            Debug.Log( DataAccessObject.Exists( "fileName" ) );
        }
    }
}



