
using UnityEngine;
using DG.Tweening;

public class TestSequence : MonoBehaviour
{
    // 現在再生中のSequence
    Sequence currentPlaySequence;
    SpriteRenderer spriteRenderer;

    // 開始時
    void Start()
    {
        spriteRenderer = GetComponent&lt;SpriteRenderer&gt;();
        PlaySequence();
    }

    // Sequenceの再生
    void PlaySequence()
    {
        // 移動時間
        float moveDuration = 1f;

        // 移動の最終値
        Vector3 moveEndValue = new Vector3(10, 10, 0);

        // 待機時間
        float waitDuration = 1f;

        // 透過時間
        float fadeDuration = 1f;

        //  透過最終値
        float fadeEndValue = 0f;

        // 移動Tweenの作成
        Tween moveTween = transform.DOMove(moveEndValue, moveDuration).SetRelative().SetEase(Ease.Linear);

        // 透過Tweenの作成
        Tween fadeTween = spriteRenderer.DOFade(fadeEndValue, fadeDuration);

        // Sequenceを生成
        currentPlaySequence = DOTween.Sequence();

        // Sequenceの構築
        currentPlaySequence
            .Append(moveTween)
            .AppendInterval(waitDuration)
            .AppendCallback(()=&gt;Debug.Log("AppendCallback()"))
            .Append(moveTween)
            .Join(fadeTween);

        // 再生
        currentPlaySequence.Play();
    }
}

