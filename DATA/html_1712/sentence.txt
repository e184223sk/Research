現在、とあるプロジェクトでEntity Framework6を使用していています。
Entity Frameworkはなかなか便利なのですが、他のORマッパーと比較し、ちょいちょい独特な点があります。
（特に、最近までLaravelを中心に開発していたので、かなり使いにくく感じる点はあります）特に厄介なのは、リレーション周り。
リレーションは、以下のように構成します。ContextのOnModelCreatingに、リレーションを一通り書くことになります。
ここで、1:nのリレーションの書き方で、かなり迷うことになりました。いまだにEFCoreではなく、EF6を使用している方は少ないかもしれませんが、ここではそんな希少価値の高い方々向けに、
リレーション周りについて、まとめていくことにしました。そのうち1:nリレーションを構築する際に、HasRequiredもしくはHasOptionalというメソッドを使用します。このメソッドの使い分けについて、記載していきます。1:nのリレーションを行う場合でも、以下のようなケースがあると思います。必ず、1:nの親子関係が組まれる場合。例：「契約」と「契約明細」という1:nテーブルがある場合、「契約」の外部キーをNULLとして「契約明細」のデータが作成されることは無い(契約明細のみ単独で作ることは無い)ので、「契約」への外部キーは必須となる。1:nの親子関係が組まれないケースがある場合。例：「契約」というテーブルに「削除ユーザー」という列があり、削除ユーザーのIDを入れることによって、「ユーザー」テーブルへのリレーションが行われる場合。削除されている場合のみidをセットするため、必須ではない。このように、「nは、1へのリレーションが必ず行われる場合」と「nは、1へのリレーションが無くてもデータ作成が可能な場合」の2種類あることが分かります。
この使い分けが、HasRequiredとHasOptionalの使い分けです。・外部キーに設定した列は、null非許容型である必要がある
→int?のようなnull許容型は使用できません。なぜなら、親テーブルへの参照が必須となるためです。
よって、intのようなnull非許容型である必要があります。・外部キーに設定した列は、null許容型である必要がある？
→int?のようなnull許容型が使用できます。また、ここは要調査なのですが、intのようなnull非許容型も、使用できるかもしれません。・外部キーに設定した列に、Required属性は設定できない
→外部キーに設定した列に、Required属性は設定できないようです。以下のようなModel構成があったとします。
テーブル12は必須リレーション、テーブル13は任意リレーションです。この場合、以下のようなリレーション設定となります。
テーブル12は必須リレーションなのでHasOptionalはOK、テーブル13は任意リレーションなのでHasOptionalはOKです。1:nのn側のテーブルで、以下のような複合主キー設定が行われている場合があります。今回の例でいうと、テーブル32が該当します。この場合、外部キーは「1側のテーブルの主キー」になります。
そしてこの場合、この主キーには値が必ず入ってくるので、HasRequiredとなります。細かいことはまた後ほど！


