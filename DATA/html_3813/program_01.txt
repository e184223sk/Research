
class Program
{
    static void Main(string[] args)
    {
        // ジェネリクスでオプションクラスを指定し、パースする
        var parseResult = Parser.Default.ParseArguments&lt;Options&gt;(args);
        Options opt = null;

        // 結果はTagに入っている
        switch(parseResult.Tag)
        {
            // パース成功
            case ParserResultType.Parsed:
                // パースの成否でパース結果のオブジェクトの方が変わる
                var parsed = parseResult as Parsed&lt;Options&gt;;

                // 成功時はキャストしたオブジェクトからパース結果が取得可能
                opt = parsed.Value;

                // 表示用に整形
                string strC = string.Concat("{ ", string.Join(", ", opt.C.Select(e =&gt; $"\"{e}\"")), " }");
                string strOthers = string.Concat("{ ", string.Join(", ", opt.Others.Select(e =&gt; $"\"{e}\"")), " }");

                Console.WriteLine($"opt.A = {opt.A}");
                Console.WriteLine($"opt.B = {opt.B}");
                Console.WriteLine($"opt.C = {strC}");
                Console.WriteLine($"opt.D = {opt.D}");
                Console.WriteLine($"opt.Others = {strOthers}");

                break;
            // パース失敗
            case ParserResultType.NotParsed:
                // パースの成否でパース結果のオブジェクトの方が変わる
                var notParsed = parseResult as NotParsed&lt;Options&gt;;

                break;
        }
    }
}

