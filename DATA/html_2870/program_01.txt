
using System.Collections;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.AddressableAssets;

public class SampleMain : MonoBehaviour {

    private void Start () {
        StartCoroutine (loader ());
    }

    private IEnumerator loader () {
        // ロードの開始
        var textHandle = Addressables.LoadAssetAsync&lt;GameObject&gt; ("Prefabs/BottomText.prefab");
        var imageHandle = Addressables.LoadAssetAsync&lt;GameObject&gt; ("Prefabs/FullScreenImage.prefab");
        var spriteHandle = Addressables.LoadAssetsAsync&lt;Sprite&gt; ("Sprites", null); // ラベルを指定して一括ロード
        // 完了の待機
        yield return new WaitUntil (() =&gt; textHandle.IsDone &amp;&amp; imageHandle.IsDone &amp;&amp; spriteHandle.IsDone);
        // エラーがないことを確認
        if (textHandle.Status == UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus.Succeeded
            &amp;&amp; imageHandle.Status == UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus.Succeeded
            &amp;&amp; spriteHandle.Status == UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus.Succeeded) {
            // プレファブからオブジェクトを生成
            var image = Instantiate (imageHandle.Result, transform).GetComponent&lt;Image&gt; ();
            var text = Instantiate (textHandle.Result, transform).GetComponent&lt;Text&gt; ();
            // スプライトを順に切り替え
            for (var i = 0; i &lt; spriteHandle.Result.Count; i = (i + 1) % spriteHandle.Result.Count) {
                image.sprite = spriteHandle.Result [i];
                text.text = $"{spriteHandle.Result [i].name}  &lt;size=20&gt;© UTJ/UCL&lt;/size&gt;";
                yield return new WaitForSeconds (3f);
            }
        }

    }
}


