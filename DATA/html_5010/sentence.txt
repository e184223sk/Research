More than 3 years have passed since last update.Unityを触る機会ができたのですが、基底クラスがいまいち把握できていないので、Unityでよく登場するクラスをまとめてみました。Unity独自の基底クラスとしてUnityEngine.Objectが用意されています。
ここで== !=のオーバーロードが行われていて、独特のFake Nullな判定が定義されています。恐らく自分が一番理解できていない部分です。
GameObjectがComponent(個々の部品)の塊のようなイメージでいいんですかね？
色々と違いはありますが、共通するメソッドやプロパティが多いのがこの2クラス。Unity上でスクリプト作成するとこのクラスを基底としたクラスのコードが生成されます。
エディタ上でScriptとして扱われるものはこのクラスを継承していないといけない、というのが自分の理解。ここから少し細かいクラスですが、オブジェクトの座標的な情報を扱うTransformクラスもComponentです。Sceneは何故か構造体ですね。
部品というのには大きいので、Componentを継承していないのは分かるのですが、何故構造体なんでしょう？これもUnityを触ってギャップを感じるCoroutineクラス。
YieldInstructionというクラスを介して独自の継承階層です。ということで、ここまで挙げたクラスの継承階層を簡単に示してみるとこんな感じ。初歩的な内容ですが、基底クラスがUnityEngine.Objectのものとそうでないものがあるので、その違いは覚えておくと役に立ちそうです。


