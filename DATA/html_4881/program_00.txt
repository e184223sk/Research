using System;
using System.Linq;
using System.Collections.Generic;

class Program {
    static void Main() =&gt;
        Ext.GenerateInfinite(() =&gt; Guid.NewGuid().CompareTo(Guid.NewGuid()) &gt; 0 ? "ZUN" : "DOKO")
            .Quintuple()
            .TakeWhile(t =&gt; t != ("ZUN", "ZUN", "ZUN", "ZUN", "DOKO"))
            .Select(t =&gt; t.w0)
            .Append("DOKO")
            .Append("KI・YO・SHI!!")
            .Select(w =&gt; w + " ")
            .ToList()
            .ForEach(Console.Write);
}

static class Ext {
    /// &lt;summary&gt;流れてきたシーケンスをバッファしつつ5-tupleで返す&lt;/summary&gt;
    public static IEnumerable&lt;(T w4, T w3, T w2, T w1, T w0)&gt; Quintuple&lt;T&gt;(this IEnumerable&lt;T&gt; ts) {
        var result = (w4: default(T), w3: default(T), w2: default(T), w1: default(T), w0: default(T));
        foreach (var item in ts) {
            result = (result.w3, result.w2, result.w1, result.w0, item);
            yield return result;
        }
    }

    /// &lt;summary&gt;無限に生み出す&lt;/summary&gt;
    public static IEnumerable&lt;T&gt; GenerateInfinite&lt;T&gt;(Func&lt;T&gt; generator) {
        while (true) {
            yield return generator();
        }
    }
}

