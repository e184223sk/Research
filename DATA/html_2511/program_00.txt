
using System;
using System.Collections.Generic;
using System.IO;
using System.Windows.Media.Imaging;
using System.Xaml;


class GifEncoderTest
{
    public static void CreateAnimatedGif(string savePath, List&lt;string&gt; imageFiles)
    {
        var encoder = new GifBitmapEncoder();

        foreach (string f in imageFiles) {
            //画像ファイルからBitmapFrameを作成する
            BitmapFrame bmpFrame = BitmapFrame.Create(new Uri(f, UriKind.RelativeOrAbsolute));
            encoder.Frames.Add(bmpFrame);
        }

        var outputFileStrm = new FileStream(savePath, FileMode.Create, FileAccess.Write, FileShare.None);
        try {
            encoder.Save(outputFileStrm);
        }
        finally {
            outputFileStrm.Close();
        }
    }

    [STAThread]
    static void Main(string[] args)
    {
        const int MaxFrames = 1000;
        const int FileNameDigits = 3;

        if (args.Length != 1) {
            Console.WriteLine("Argument error.");
            return;
        }

        string prefix = args[0];
        var fileNames = new List&lt;string&gt;();

        for (int i=0;i&lt;MaxFrames;i++) {
            string s = prefix + i.ToString("D"+FileNameDigits.ToString()) + ".png";
            FileInfo fi = new FileInfo(s);

            if ( fi.Exists ) {
                fileNames.Add(fi.FullName);
            }
            else {
                if ( i==0 ) {
                    Console.WriteLine("File \"" + fi.FullName + "\" is not found.");
                    return;
                }
                break;
            }
        }

        CreateAnimatedGif("out.gif", fileNames);
    }
}


