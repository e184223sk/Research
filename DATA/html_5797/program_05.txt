
using System;
using System.Collections.Generic;

namespace Rpn.App {
    // shiracamusさんのコードを採用
    // https://qiita.com/gushwell/items/a40f4119a35a1e6d7622 のコメント
    public class RpnCalculator {
        static Dictionary&lt;string, Func&lt;decimal, decimal, decimal&gt;&gt; binaryOperators =
            new Dictionary&lt;string, Func&lt;decimal, decimal, decimal&gt;&gt;() {
                ["+"] = (a, b) =&gt; a + b,
                ["-"] = (a, b) =&gt; a - b,
                ["*"] = (a, b) =&gt; a * b,
                ["/"] = (a, b) =&gt; a / b,
            };

        // 後置記法を計算する
        public static decimal Calculate(ReversePolishNotation rpn) {
            Stack&lt;object&gt; stack = new Stack&lt;object&gt;();
            foreach (var token in rpn.Tokens) {
                if (binaryOperators.ContainsKey(token)) {
                    var b = (decimal)stack.Pop();
                    var a = (decimal)stack.Pop();
                    var c = binaryOperators[token](a, b);
                    stack.Push(c);
                } else {
                    stack.Push(decimal.Parse(token));
                }
            }
            return (decimal)stack.Pop();
        }
    }
}

