More than 1 year has passed since last update.初心者用の記事ですがあまり深堀はしないので、どちらかと言うと他言語から C# を見に来た人向けかもしれません。Web 界隈では有名なこれを C# で学んでいきます。Back-end の部分をやっていきます。爆速なので外部アプリケーションが必要な部分はスキップします。
IDE は Visual Studio 2019 を使います。 SDK は .NET Core 3.1 を使います。kamranahmedse/developer-roadmap: Roadmap to becoming a web developer in 2019日本語訳は Web Developer Roadmap 2018 が 2019 年版になっていたので比較してみる - Qiita にあります。リンク先を見なくてもわかるように画像だけ持ってきました。Visual Studio 2019 を起動して Create a new project を選択します。Console App (.NET Core) を選択します。適当な名前をつけて Create を選択します。こんな感じのプロジェクトが出来たら F5 か 緑色の再生ボタン を押して実行します。無事に Hello World! が表示されました。コマンドラインアプリケーションは学び終わりました。爆速です。Tools &gt; NuGet Package Manger &gt; Manage NuGet Packages for Solution を選択します。Browse タブから Install したい Package を選んで Install を選択します。Package Install が完了したらすぐに使えるようになります。 Uninstall や Update も GUI から可能です。パッケージマネージャーは学び終わりました。爆速です。Solution menu &gt; Add &gt; New Project を選択します。xUnit Test Project (.NET Core) を選択します。適当な名前をつけて Create を選択します。Unit Test 用のプロジェクトとコードが作成されます。Test1 method の中身を下のコードに書き換えます。 a と b が同じだったら成功というコードです。右クリックメニューから Run Test(s) を選択します。Test Explorer が開いてテストが実行されます。無事に成功しました。 Unit Test は学び終わりました。爆速です。新しいプロジェクトを作る画面から ASP.NET Core Web Application を選択します。適当な名前をつけて Create を選択します。どのテンプレートにするか再度聞かれるので API を選択します。WeatherForecastController を開くと、ランダムな天気予報を GET で返してくれる Method が出来ています。 F5 か 緑色の再生ボタン を押して実行します。ブラウザが開いて無事に json 形式の天気予報が表示されました。 RESTful APIs は学び終わりました。爆速です。Solution menu &gt; Add &gt; Controller を選択します。API Controller with read/write actions を選択します。適当な名前をつけて Add を選択します。GET / POST / PUT / DELETE が出来上がっています。爆速です。スキップします。 という Word を検索したら 12 件 Hit しました。 2019 年はもう終わってしまうので、 2020 年は爆速じゃないバージョンを一つづつ丁寧に解説したいです。


