More than 1 year has passed since last update.皆様こんにちは。個人でゲーム制作をしております、kenと申します。
この講座では、実際にゲームを作りながら「こういう事をするなら、こういう風にすると良いと思うよ。詳しくは自分で調べてね。」という感じで、ゲームの作り方、Unityの機能やアセット等を軽く紹介して行きます。今回は、カメラをオブジェクトに追従させる方法をいくつか紹介します。多分これが1番簡単だと思います。
StandardAssetsに簡単なカメラのスクリプトがあるので、アセットストアからStandardAssetsをインポートして、それを使いましょう。使い方は調べなくても見れば分かるくらい簡単ですが、一応使い方を解説している記事を貼っておきます。
Unityでカメラの設定とキャラクターの追従をさせるCinemachineを使うと高機能なカメラがノンコーディングで作れちゃいます。めちゃくちゃ多機能で、3Dも2Dもあらゆるタイプのカメラが作れます。まずは、どんな事が出来るのか、公式のサンプルの中からゲームでよく使いそうなものを紹介します。ちなみに、このサンプルで使われているキャラ移動のスクリプトですが、キー入力の判定がFixedUpdate内に書かれているので、ジャンプキーの反応が悪いです。part2でも言いましたが、キーの入力判定をFixedUpdate内に書かないようにしましょう。2Dでキャラをスムーズに追従しつつ、壁の向こう側を移さないようにするカメラです。
2Dで複数の対象がカメラに収まるようにズームするカメラです。
よくある3Dの三人称カメラです。
壁を貫通しない3D三人称カメラです。
ランダムで揺れるカメラです。
走っている間だけカメラをゆれるカメラに切り替えるサンプルです。もう少し詳しく説明すると、Cinemachineには仮想カメラというものを複数用意し、それらをスムーズに切り替えられる機能があるので、キャラクターの状態ごとに別のカメラに切り替えるサンプルですね。三人称視点と一人称視点の切り替えなんかにも応用できそうです。
他にもいろんなことが出来ますし、カメラの挙動はかなり細かく設定することが出来ます。Cinemachineの基本的な使い方は以下の記事が分かりやすいです。
【Unity】Cinemachine入門！スクリプトなしでカッコいいカメラワークを作るサンプルの種類がめちゃくちゃ豊富なので、Cinemachineを詳しく知りたい方は、自分でサンプルをインポートして動かしてみるのがオススメです。『実際にゲームを作りながら紹介していく』と言いながら、いまだに何も作ってませんでしたが、そろそろ動くものを作りたいと思います。今まで紹介して来た機能の中から以下の機能を使ってカプセルを動かしてみます。
・移動/NavMesh
・入力の取得/新しいInputSystem
・カメラ/Cinemachineまずは、適当に作ったTerrainにNavMeshをBake

適当にカプセルを置いてNavMeshAgentをアタッチ（設定はデフォルトのまま）
InputSystemのサンプルに付いているSimpleControlsをそのまま使います。
仮想カメラを作成。

メインのカメラにCinemachineBrainをアタッチします。Priorityの高い仮想カメラが自動で選択されるので、特に何も設定しなくても使えます。
移動する方向を受け取って移動させるクラスと、入力の方向とカメラの向きから移動する方向を算出して移動させるクラスに渡すクラスに分離しました。これをカプセルにアタッチします。動いた！
やっとオブジェクトを動かせるようになりましたが、カプセルを動かしても面白く無いですね。という訳で次回は、キャラクターのセットアップの仕方を紹介します。
次回⇨6月頃投稿予定(ちょっと忙しくなったのでしばらくお休みします)


