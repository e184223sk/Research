public class Program
{
    static void Main(string[] args)
    {
        Creator DBCreator = new DBCreator("SQLServer");
        var sqlServer = DBCreator.Create();
        sqlServer.Connect();
    }
}

public abstract class Product
{
    public abstract void Connect();
}

//ConcreteProduct
public class SQLServer : Product
{
    public override void Connect()
    {
        Console.WriteLine("SQLServerに繋ぎます～！");
    }
}

//ConcreteProduct
public class PostgreSQL : Product
{
    public override void Connect()
    {
        Console.WriteLine("PostgreSQLに繋ぎます～！");
    }
}

public abstract class Creator
{
    public abstract Product Create();
}

//ConcreteCreator
public class DBCreator : Creator
{
    private readonly string _name;
    public DBCreator(string name) =&gt; _name = name;

    public override Product Create()
    {
        switch (_name)
        {
            case "SQLServer":
                return new SQLServer();
            case "PostgreSQL":
                return new PostgreSQL();
            default:
                throw new Exception();
        }
    }
}

