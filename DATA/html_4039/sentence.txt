More than 1 year has passed since last update.私が所属する品質検査部では現在テストの効率化の一環で、手動でアプリを操作して行うテストの自動化を進めています。
自動操作では、通信や描画待ち等、適切な状態になるまで待機する処理が頻発しますが、待機の仕方が悪いと一部のケース（ページ遷移に失敗、一定条件でのみポップアップする警告ダイアログが出現等）で処理が停止してしまうことがあります。
停止しないよう注意深く実装すればいいと言えばそこまでですが、一度停止してしまうと後続のテストが実行されず、CIのリソースもロックされてしまうことを考えると、別途セーフティネットが欲しくなりました。
テスト対象はXAMLベースのC#アプリケーション（WPFアプリ）であるため、テストFWにはMSTestを使用しており、Timeout属性により手軽にテストメソッド単位でタイムアウトを設けられます。
しかし、試しに使ってみたところ、確かにタイムアウトはするものの、なぜか後続のテストが全てエラーになってしまったため、タイムアウトした際の挙動を調査しました。調査に用いたコードは以下の通りです。テストを実行します。

当然タイムアウトで失敗しますが、 TestCleanup が 実行されていません。
自動操作テストでは、TestCleanupでテスト対象アプリをログイン直後の状態に戻す処理を行っています。
タイムアウトによりTestCleanupが実行されなかったことで、ログイン直後でない状態のテスト対象アプリに対してテストを実行しようとし、エラーになっていたようです。なお、TimeoutTestを以下のように、タイムアウト以外のエラーで失敗させると、当然TestCleanupは実行されます。調べたところgithubにIssue上がってましたが、執筆時点ではタイムアウトした際にはTestCleanupは実行されないようです。
https://github.com/Microsoft/testfx/issues/522フォーラムに vstest.console.exe で実行することをお勧めすると書いてありましたが、こちらもダメでした。C#では、MSTestの他にいくつかテストFWが存在しますが、NUnitで同様の検証をしてみました。
NUnitではTimeoutしてもメソッド終了後の処理は実行されます。
検証用コードは以下の通りです。画面を自動制御するテストでは、タイムアウト時に後処理（TestCleanup）が実行されないのは致命的なので、FW乗換作業のコストを覚悟してでもNUnit等、他のFWに移行すべきと感じました。


