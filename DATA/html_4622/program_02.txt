
/// &lt;summary&gt;
/// 指定したAssetBundleをキャッシュから削除
/// &lt;/summary&gt;
/// &lt;param name="_bundleName"&gt;AssetBundle名&lt;/param&gt;
/// &lt;param name="_hash"&gt;Hash 値&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
public static bool ClearTargetAssetCache( string _bundleName, Hash128 _hash )
{
    if( !IsCached( _bundleName, _hash))
    {
        Debug.LogWarning($"Not Cached:{_bundleName}(Hash:{_hash.ToString()}" );
        return false;
    }

    string path = CreateAssetPath( _bundleName, _hash );

    File.Delete( path );
    return true;
}

/// &lt;summary&gt;
/// 指定したAssetBundleでバージョンが古いもの(=指定Hash値以外のもの)をキャッシュから削除
/// &lt;/summary&gt;
/// &lt;param name="_bundleName"&gt;AssetBundle名&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
public static bool ClearTargetOldAssetCache( string _bundleName, Hash128 _hash )
{
    string dirName = CreateAssetDirName( _bundleName );
    if( string.IsNullOrEmpty( _bundleName))
    {
        Debug.LogWarning(" Argument Error");
        return false;
    }

    // Dirが存在しないので実質削除完了と等価
    if( !Directory.Exists( dirName))
    {
        return true;
    }

    // 指定Dirにファイルがなければ、実質削除完了と等価
    string[] filePaths = Directory.GetFiles( dirName );
    if( filePaths == null || filePaths.Length &lt; 1)
    {
        return true;
    }
    string path = CreateAssetPath( _bundleName, _hash );
    foreach( string p in filePaths)
    {
      if( p == path)
      {
          continue;
      }
      File.Delete( p );
    }
    return true;
}

/// &lt;summary&gt;
/// Cache Dir 上にファイルが存在するかどうか
/// &lt;/summary&gt;
/// &lt;param name="_assetBundleName"&gt;&lt;/param&gt;
/// &lt;param name="_hash"&gt;&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
public static bool IsCached( string _assetBundleName, Hash128 _hash )
{
    // 読込先
    string path = CreateAssetPath( _assetBundleName, _hash);
    //Validation
    if( string.IsNullOrEmpty( path) )
    {
        return false;
    }

    return File.Exists( path );
}


