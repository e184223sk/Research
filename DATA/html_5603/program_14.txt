
    /// &lt;summary&gt;
    /// MainWindow.xaml の相互作用ロジック
    /// &lt;/summary&gt;
    public partial class MainWindow : Window
    {
        RoslynHost host;
        public MainWindow()
        {
            InitializeComponent();
            host = new RoslynHost(additionalAssemblies: new[]
            {
                Assembly.Load("RoslynPad.Roslyn.Windows"),
                Assembly.Load("RoslynPad.Editor.Windows"),
            }
            );
        }

        private void RoslynCodeEditor_Loaded(object sender, RoutedEventArgs e)
        {
            roslynCodeEditor.Initialize(host, new ClassificationHighlightColors(), Directory.GetCurrentDirectory(), String.Empty);
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                ScriptOptions options = ScriptOptions.Default
                    .WithReferences(host.DefaultReferences)
                    .WithImports(host.DefaultImports);

                var script = CSharpScript.Create(roslynCodeEditor.Text, options, typeof(MyClass));
                script.RunAsync(new MyClass());
            }
            catch (CompilationErrorException ex)
            {
                MessageBox.Show(ex.Message, "コンパイルエラー");
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "エラー");

            }
        }
    }

