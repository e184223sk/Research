More than 1 year has passed since last update.UniRxのソースを呼んでいるとAsyncMethodBuilderの実装が以下のようになっていました。set after create delegateと書かれている部分でなぜそうでなければいけないか疑問だったのですが、
ようやく理解できたので備忘録としてメモしておきます。メモリ初期状態。Awaiterに後続処理を依頼するためにはActionを渡す必要がある。
Actionはクラスオブジェクトなのでヒープ領域に作成しなければならない。
よって最終的には以下のようなメモリレイアウトになる。これを踏まえて再度UniRxのコードを見る。もしrunner.StateMachineへの代入がdelegateを作るより前に行われた場合、の順番で処理が行われる。ヒープ領域にコピーした側のmoveNextを書き換えなければ明らかにまずい。
なのでスタック領域のmoveNextを先に書き換えてその後ヒープ領域にコピーする必要がある。StateMachineのMoveNextを直接AsyncMethodBuilderのmoveNextに入れることはできない。
delegateを作った時点でAsyncMethodBuilderがヒープ領域にコピーされてしまうからである。
必要条件としてdelegateを作った後にヒープ領域にコピーできる必要がある。
UniRxではそれを実現するためにMoveNextRunnerというラッパーを挟んでいる。なおDebugビルドの場合はStateMachineがclassとして作られるので順番が違っても動いてしまう。


