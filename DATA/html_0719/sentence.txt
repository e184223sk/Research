.NETでJSONを扱うにあたり、Utf8Jsonというライブラリがあります。UTF-8ネイティブな.NET用のJSONライブラリにはSystem.Text.Jsonもありますが、参照型を扱う場合にデフォルトコンストラクタが必要なことから、私はUtf8Jsonを使うことがあります。ここではUtf8Json使う場合に、Dictionaryオブジェクトのキーに組み込み型ではない、自作のクラスや構造体を使う方法を紹介したいと思います。こんなImmutableなデフォルトコンストラクタを持たないクラスや構造体を、Dictionaryのキーに利用します。Utf8Jsonでは独自クラスでJSONのシリアライズを明示的に指定したい場合、IJsonFormatterを実装する必要がありますが、Dictionaryのキーに利用する場合は、IJsonFormatterに追加してIObjectPropertyNameFormatterを実装する必要があります。
EmployeeIdの例では、intのプロパティのみをシリアライズ・デシリアライズしたいので、Formatterを次のように実装します。このとき、JSONの仕様上、連想配列（Dictionary）のキーは文字列である必要があるため（ @ktz_alias さんに指摘いただきました。ありがとうございました！）、異なるインターフェースIObjectPropertyNameFormatterで変換を実装します。標準のFormatterに追加して、上記のFormatterを利用したい場合、つぎのように実装しましょう。これで次のようなJSONが得られます。以上です。


