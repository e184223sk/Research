More than 1 year has passed since last update.自作アプリでキャプチャ機能を作っていたので、キャプチャ機能についてまとめます。この記事用のサンプルアプリも作りました。
https://github.com/naminodarie/WpfCaptureSampleWPFと銘打ってますがキャプチャ機能自体はSystem.Drawing(GDI+)かWin32APIです。他のウインドウをキャプチャするためにはウインドウを列挙する必要があります。下記のようにしてWin32APIのEnumWindowsで列挙します。
WindowProcessHandleはウィンドウハンドルのラッパークラスです。
EnumWindowsを使うのは一つのプロセスで複数のウインドウを持つ場合(ブラウザなど)に対応するためです。
パラメータをキャプチャさせずに渡してるのはobject↔IntPtrの変換の勉強も兼ねてやっただけなので、キャプチャさせても良いと思います。Win32APIではキャプチャする対象のウインドウを指定してあげれば他のウインドウが被さっていても対象のウインドウのみをキャプチャできます。
System.Drawingを使用する場合はスクリーン上に表示されているものをそのままキャプチャするのみです。スクリーン上に表示されているものをキャプチャするときはキャプチャ対象のクライアント座標をスクリーン上の座標に変換してからキャプチャします。上記の画像のような状態でそれぞれのキャプチャを行ってみました。
他のウインドウを対象としないキャプチャは領域が狭いためか高速に動作しました。このサンプルではキャプチャそのものよりもEnumWindowsのほうが時間がかかってしまいます。などとしてウインドウの表示を検知して、ウインドウの一覧を非同期に列挙・保持すると高速化が望めました。


