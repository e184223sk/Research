More than 1 year has passed since last update.ObjectPoolを用いて頻繁にHumanoidのAnimatorで動くキャラの出現/消失を行います。
そのとき、新しく出したキャラも既に出ているキャラの動きに合わせたいです。なにも考えずキャラを出し入れするとこんな感じになります。統率の取れていないオークの群れなどお話になりませんね。
Animatorはdisableされると再生位置がリセットされます。そのため、ObjectPoolに回収されるとアニメーションが最初からになってしまいます。ObjectPoolの要素が足りなくなって新規作成されたキャラも同様です。動きを揃えるからにはまず基準を定めなければなりません。というわけではぴねこちゃんをオークリーダーに任命します。はぴねこちゃんにもオークにも同じAnimatorをセットします。
アニメーションはある程度長くて動きが大きいものならズレがわかりやすいので、ユニティちゃん Candy Rock Star ライブステージ！のダンスを使います。Animatorのアニメーションを途中から再生するには以下のメソッドを使います。stateNameHashがアニメーションの種類、normalizedTimeはアニメーションの再生位置です。layerは特に変更しないので初期値の-1を入れます。
このふたつのパラメータをオークリーダーのAnimatorから取得できればよいわけです。取得の仕方は以下の通り。問題はこの値を取得するタイミングです。Animatorのアニメーションはいつ更新されているのか。イベント実行順を見てみます。
Unity公式 : イベント関数の実行順

PhysicsブロックとGame LogicブロックそれぞれにInternal Animation Updateの記載があります。この２つが実行される前にパラメータをセットしておけば大丈夫そうです。というわけでFixedUpdate。
ただし、同じFixedUpdateのタイミングで「オークリーダーからstateを取得」→「各オークに通知」する必要があります。異なるComponent間の実行順は保証されていないので一工夫……しないでUniRxのSubjectを使いましょう。後はこのクラスをSingletonにしておきます。そしてObjectPoolから取り出されたときに各オークはこのSubjectを購読すればいいわけです。これで無事同じFixedUpdateのタイミングで「オークリーダーからstateを取得」→「各オークに通知」をすることができました。説明するタイミングを逃しましたが、同時に流しているVector3は初期位置からApply Root Motionによってどれだけ移動したか……の差分です。アニメーションの再生位置をすっとばすことで、それまでアニメーションによって移動したはずの座標位置もすっとばされています。なので合わせて補正してあげないといけません。また、もしUniRxが使えない場合は[DefaultExecutionOrder()]属性でオークリーダーからstateを取得するクラスの実行優先度を高めて先にstateを取得します。Singletonにしておくことで自由にアクセスできるようになるので、各オークにアタッチされたComponentから取得しましょう。1主題はこれで終わりです。改めて最初のgifを見てください。ちゃんとシンクロしているのがわかる2と思います。オークリーダーはぴねこちゃんのstateを取得するクラス。同時にオークをObjectPoolから出し入れもする。デブクラス。
めんどくせえからやってないけどちゃんと別クラスに分割しましょう。各オークにアタッチされています。なぜインスタンスに対してObjectPool出入りのときに変な座標をセットしているかというと、ObjectPoolから出てenableになったキャラが指定された座標に移動する前に一瞬だけ見えてしまうからです。かなりちらついて気になります。新しく生成されたキャラも座標は(0, 0, 0)なのでこちらも同様です。
出現の瞬間にプレイヤーから見えなければいいわけなので、ObjectPoolの中にいる間は地の底に沈めることで誤魔化しています。どうせdisableなのでどこにいてもいいでしょう。たぶん。あと、書いていて思ったのですが、ObjectPoolは別クラスにするよりプーリングするクラスの中にサブクラスとして書いちゃったほうがわかりやすくていいかもしれません。行数が増えすぎるかもですが。Unity歴1年ちょっと、ありものを使うばかりでAnimation関係を触ったことなかったんですが、なんか、これ、闇、深い……？
いろいろ便利にラッピングされているっぽくて、奥底に何が潜んでいるかわからない恐怖を感じる。毎フレームパラメータをセットしているのが気持ち悪くて、というかそもそも最初のアニメーション開始位置さえ合わせちゃえば後はみんな同じなのでは？　と思って最初の10フレームだけ補正をかけるなどしたのですが、じわじわずれてきます。
Updateにタイミングを変更してもだめ。UniRxではなくMonoBehaviourのコールバックを使ってもだめ。
ということは肉眼で検知できないレベルでオークリーダーとオークのダンスがずれている？3　謎。
あと、ステートマシーンによるアニメーションの遷移ですが、これみんなよく管理できてますね……つらい……なんだこれは……。自分で作る前にUnityでダンス動画とか作ってる人のブログ漁ったらよかったかも。同じことを既に実行済みの人がいるはず。
あと、MMDの動画を参考資料としていろいろ見たのですが、みんなとんでもねえ性癖でとんでもねえなって思いました。おしまい。はぴねこちゃん4
HarpyCatオーク5
POLYGON - Fantasy Rivalsダンス
ユニティちゃんライブステージ！ -Candy Rock Star-
© Unity Technologies Japan/UCL背景
Farland Skies - Cloudy CrownAnimatorでアニメーションを途中から再生する
これが知りたかった。UniRxのObjectPoolを利用する
くわしい。【Unity】Animatorの更新タイミングを変更する
これをなんかうまいことすればずれる問題も解決するような気がしないでもないが、毎フレームセットしたところでパフォーマンスへの負荷も大きくないので調べる気がない。たぶんうまくいくと思うけどあんまり自信ない ↩あなたも「わかる」側になりました ↩こんなザマじゃ女騎士サマに勝てねえよなぁ？ ↩「harpy」ってそらで書けたのですが、いったいどこで綴り覚えたんだっけ…… ↩セールで買ったけど使ってなかったからつい ↩


