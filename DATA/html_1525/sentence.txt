More than 1 year has passed since last update.オレオレ解釈の戒め覚え書き　その４今回はビヘイビアについてです。
※Expression Blend に付属していた所謂 BlendBehavior と呼ばれているビヘイビアについてです。MVVM におけるビヘイビアは、特定の画面要素（あるいはウィンドウ）専用のふるまい（機能）を指します。コードビハインドとは違い、要素からの着脱や複数の要素間でふるまいを共通化することができます。たとえは「ウィンドウのどの位置からでもドラッグ移動を開始できる」というふるまいを持つ Window クラス用のビヘイビアを定義してみます。従来のコードビハインドは様々な機能がごった返した大きな塊になっていましたが、ビヘイビアではふるまい単位で処理が切り離されます。ロジックが View から独立しているため、他の View からでも容易に再利用することができます。冒頭で BlendBehavior の断りを入れましたが、今回の実装とは別にビヘイビアにはもう一つの実装法があります。添付プロパティの仕組みを応用した AttachedBehavior です。（添付プロパティについてはここでは割愛します。）
BlendBehavior が登場するより前から存在していた方法です。プロパティとして指定するためスタイルにも定義でき、様々なプロパティを内包したヘルパークラス等で見かけることがあります。上記の例を AttachedBehavior で書き換えるとこのようになります。ビヘイビアについてまとめました。
以前「無理せずにコードビハインドは使った方がよい」という持論を展開しましたが、共通的な処理はビヘイビアに逃がすことができるため、コードビハインドはその画面やコントロール固有の処理が自然と集まってくるでしょう。
View と ViewModel 間の疎結合はもちろんですが、各層内でもロジックの癒着を抑止することで、より堅牢な MVVM パターンの構築に繋がります。次回はトリガーアクションについてまとめます。


