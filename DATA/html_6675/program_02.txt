
Bitmap bitmap = ...
PixelFormat pixelFormat = PixelFormat.Format32bppArgb;
int pixelSize = 4;
BitmapData bmpData = bitmap.LockBits(
  new Rectangle(0, 0, bitmap.Width, bitmap.Height),
  ImageLockMode.ReadOnly,  // 書き込むときはReadAndWriteで
  pixelFormat
);
// strideは１次元配列が何個ずつで折り返されているのか　その数
// strideがマイナス＝ボトムアップ　らしい
if (bmpData.Stride &lt; 0) // height * strideで計算するのでマイナスだと困る
{
  bitmap.UnlockBits(bmpData);
  throw new Exception();
}

IntPtr ptr = bmpData.Scan0;
byte[] pixels = new byte[bmpData.Stride * bitmap.Height];
System.Runtime.InteropServices.Marshal.Copy(ptr, pixels, 0, pixels.Length);

for (int y = 0; y &lt; BmpData.Height; y++)
{
  for (int x = 0; x &lt; BmpData.Width; x++)
  {
    //(x,y)のデータ位置
    int pos = y * bmpData.Stride + x * pixelSize;
    // RGB
    byte b = pixels[pos] , g = pixels[pos + 1], r = pixels[pos + 2];
    // 色
    Color col = Color.FromArgb(255, r, g, b);
  }
}
// 変更を（した場合）反映
System.Runtime.InteropServices.Marshal.Copy(pixels,0,ptr,pixels.Length);
bitmap.UnlockBits(bmpData);

