More than 3 years have passed since last update.今回、WebSocketを使ってみようと思ったのは、業務用の管理ソフトのWeb化を行っていたときに、クライアント様にこう言われたことに端を発します。『この画面って他の人が編集してるとき、Excel Online』みたいに画面も同期されるんですよね？』
『えっ・・・』そういえば、WebSocketなんていうのがあったはずだし何とかなるだろう。思い立ったが吉日。早速、JQueryからの接続やサーバーコードを漁ってみると、どれも非常に簡単そうでなんとも魅力的！とりあえず、適当に慣れ親しんでいるC#のサーバーコードをコピペして動かしてみる。
おほー！簡単じゃない！わくわくするね！！ (JQueryクライアントはこちらの記事のコードを使用しました)
しかし、私は一通り触ったあとに、ふと気づいた・・・・さて困った。
プロトコルを見てみるが、認証に使われているIDはプロトコル内部で使う為のもののようで、接続時に指定したりはできそうにない。
RFC 6455 - ハンドシェイク既存のWebSocketサーバーライブラリ群はハンドシェイクのイベントこそあれ、ハンドシェイクに引数なりを受け渡せるような仕組みはなさそうだ。そこで私が目をつけたのが、ハンドシェイクの GET で渡される Originセクションだ。ふつうのhttp::GETみたいに ? のあとのURL引数にセッションIDくっつけたらどうだろう？
はたしてハンドシェイクはうまくいくのだろうか？試しにJQueryにダミーのSessionIDを付けてC#のサーバーへ接続させてみると。
（下記コードはC#のサーバーのハンドシェイク部分。Urlを表示させてみる）・・・何事もなくハンドシェイク成功。うわーい！今回の業務用管理ソフトの場合はPerlである。
そしてセッション管理はPerlモジュールのCGI::Session。そうなると、私のワクワクは止まらない。器用貧乏のPerlさん、キミならどうせあるのであろう？ WebSocket Server も。
ほら、あった！
Net::WebSocket::Server
コマンドプロンプトでcpanのinstallを叩きます。
# cpan install Net::WebSocket::Serverそして、C#では長かったコードも、こんなに少ないコードでほぼ同等機能。キミ大好き！ポート番号12345はNEC社製ブロードバンドルーターではデフォルトでフィルタリングされているらしいので注意。一部の人からだけ「PCから繋がらねー！スマホからはつながるのに！」と謎のクレームを受けました。謎の解明に1週間以上かかりましたとさ。ちょっとわかりにくいですが、$conn は Net::IP::Socket ですので、$conn-&gt;socket-&gt;peerhost() などとすれば、IPアドレスも取れます。そして、肝心なCGI::Sessionの認証を入れてみたよ！
いけるぜ！！やっぱりPerlさん大好きだ。追記:セッション切れてもメッセージは受け取れてしまうじゃん！って気付いたので修正
チェック関数が３箇所から違った呼ばれ方するからちょっとややこしい
grep中にsubを使った場合、引数渡すと$_が上書きされてreturn後に左辺が破壊されるのは知らなかった・・・とりあえず、私はめんどくさがり屋なので、今回は一番カンタンそうな方法を見つけてうまく行った感じです。
でも、もう少し深く掘り下げれば、ハンドシェイクのソースコードをいじって、Sec-WebSocket-Accept セクションにCGI::SessionのSessionIDを突っ込んだりするのが、カッコイイのかもしれないのですがそんな技術なんか無いってば！Perlはもともとデーモンも得意だから素敵ですね～。
PHPでもWebSocket Serverを立てることができるらしいですが、PHPのデーモンというのは余り聞かないですよね・・・。
セッションIDだけで接続管理を行うのはPerl以外では難しそうです。


