

// &lt;auto-generated&gt;
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PlayerService.proto
// &lt;/auto-generated&gt;
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace mxProject.Examples {
  public static partial class PlayerSearch
  {
    static readonly string __ServiceName = "PlayerSearch";

    static readonly grpc::Marshaller&lt;global::mxProject.Examples.PlayerSearchCondition&gt; __Marshaller_PlayerSearchCondition = grpc::Marshallers.Create((arg) =&gt; global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::mxProject.Examples.PlayerSearchCondition.Parser.ParseFrom);
    static readonly grpc::Marshaller&lt;global::mxProject.Examples.Player&gt; __Marshaller_Player = grpc::Marshallers.Create((arg) =&gt; global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::mxProject.Examples.Player.Parser.ParseFrom);

    static readonly grpc::Method&lt;global::mxProject.Examples.PlayerSearchCondition, global::mxProject.Examples.Player&gt; __Method_SearchPlayer = new grpc::Method&lt;global::mxProject.Examples.PlayerSearchCondition, global::mxProject.Examples.Player&gt;(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SearchPlayer",
        __Marshaller_PlayerSearchCondition,
        __Marshaller_Player);

    /// &lt;summary&gt;Service descriptor&lt;/summary&gt;
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::mxProject.Examples.PlayerServiceReflection.Descriptor.Services[0]; }
    }

    /// &lt;summary&gt;Base class for server-side implementations of PlayerSearch&lt;/summary&gt;
    public abstract partial class PlayerSearchBase
    {
      public virtual global::System.Threading.Tasks.Task SearchPlayer(global::mxProject.Examples.PlayerSearchCondition request, grpc::IServerStreamWriter&lt;global::mxProject.Examples.Player&gt; responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// &lt;summary&gt;Client for PlayerSearch&lt;/summary&gt;
    public partial class PlayerSearchClient : grpc::ClientBase&lt;PlayerSearchClient&gt;
    {
      /// &lt;summary&gt;Creates a new client for PlayerSearch&lt;/summary&gt;
      /// &lt;param name="channel"&gt;The channel to use to make remote calls.&lt;/param&gt;
      public PlayerSearchClient(grpc::Channel channel) : base(channel)
      {
      }
      /// &lt;summary&gt;Creates a new client for PlayerSearch that uses a custom &lt;c&gt;CallInvoker&lt;/c&gt;.&lt;/summary&gt;
      /// &lt;param name="callInvoker"&gt;The callInvoker to use to make remote calls.&lt;/param&gt;
      public PlayerSearchClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// &lt;summary&gt;Protected parameterless constructor to allow creation of test doubles.&lt;/summary&gt;
      protected PlayerSearchClient() : base()
      {
      }
      /// &lt;summary&gt;Protected constructor to allow creation of configured clients.&lt;/summary&gt;
      /// &lt;param name="configuration"&gt;The client configuration.&lt;/param&gt;
      protected PlayerSearchClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall&lt;global::mxProject.Examples.Player&gt; SearchPlayer(global::mxProject.Examples.PlayerSearchCondition request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchPlayer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall&lt;global::mxProject.Examples.Player&gt; SearchPlayer(global::mxProject.Examples.PlayerSearchCondition request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SearchPlayer, null, options, request);
      }
      /// &lt;summary&gt;Creates a new instance of client from given &lt;c&gt;ClientBaseConfiguration&lt;/c&gt;.&lt;/summary&gt;
      protected override PlayerSearchClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PlayerSearchClient(configuration);
      }
    }

    /// &lt;summary&gt;Creates service definition that can be registered with a server&lt;/summary&gt;
    /// &lt;param name="serviceImpl"&gt;An object implementing the server-side handling logic.&lt;/param&gt;
    public static grpc::ServerServiceDefinition BindService(PlayerSearchBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SearchPlayer, serviceImpl.SearchPlayer).Build();
    }

  }
}
#endregion

