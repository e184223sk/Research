private void SerializeSample()
{
    string path = "SampleAppConfig.xml";

    // シリアライズ
    XmlSerializeUtility.Serialize(CreateConfig(), path);

    // デシリアライズ
    SampleAppConfig config = XmlSerializeUtility.Deserialize&lt;SampleAppConfig&gt;(path);
}

private static SampleAppConfig CreateConfig()
{
    SampleAppConfig config = new SampleAppConfig();

    DatabaseConfig db1 = new DatabaseConfig
    {
        ConnectionString = "User ID=user1; Password=password1; Host=localhost; Database=sampleDb1;",
        ConnectionTimeout = 30,
    };

    DatabaseConfig db2 = new DatabaseConfig
    {
        ConnectionString = "User ID=user2; Password=password2; Host=localhost; Database=sampleDb2;",
        ConnectionTimeout = 30,
    };

    config.Databases = new DatabaseConfig[] { db1, db2 };
    return config;
}


public class SampleAppConfig
{
    public SampleAppConfig() { }
    public DatabaseConfig[] Databases { get; set; }
}

public class DatabaseConfig
{
    public DatabaseConfig() { }
    public string ConnectionString { get; set; }
    public int ConnectionTimeout { get; set; }
}

public static class XmlSerializeUtility
{
    public static void Serialize&lt;T&gt;(T config, string filePath)
    {
        XmlWriterSettings settings = new XmlWriterSettings
        {
            NewLineChars = Environment.NewLine,
            Indent = true,
            IndentChars = "\t",
            Encoding = Encoding.UTF8
        };

        using (FileStream fs = new FileStream(filePath, FileMode.Create))
        using (XmlWriter writer = XmlWriter.Create(fs, settings))
        {
            CreateSerializer&lt;T&gt;().Serialize(writer, config);
        }
    }

    public static T Deserialize&lt;T&gt;(string filePath)
    {
        using (FileStream fs = new FileStream(filePath, FileMode.Open))
        using (XmlReader writer = XmlReader.Create(fs))
        {
            return (T)CreateSerializer&lt;T&gt;().Deserialize(writer);
        }
    }

    private static XmlSerializer CreateSerializer&lt;T&gt;()
    {
        return new XmlSerializer(typeof(T));
    }
}

