
public class XmlSerializableDictionary&lt;TKey, TValue&gt; : Dictionary&lt;TKey, TValue&gt;, IXmlSerializable
{

    #region ctor

    public XmlSerializableDictionary() : base()
    {
    }

    public XmlSerializableDictionary(int capacity) : base(capacity)
    {
    }

    public XmlSerializableDictionary(IEqualityComparer&lt;TKey&gt; comparer) : base(comparer)
    {
    }

    public XmlSerializableDictionary(IDictionary&lt;TKey, TValue&gt; dictionary) : base(dictionary)
    {
    }

    public XmlSerializableDictionary(int capacity, IEqualityComparer&lt;TKey&gt; comparer) : base(capacity, comparer)
    {
    }

    public XmlSerializableDictionary(IDictionary&lt;TKey, TValue&gt; dictionary, IEqualityComparer&lt;TKey&gt; comparer) : base(dictionary, comparer)
    {
    }

    #endregion

    #region implements of IXmlSerializable

    // これらのメンバはアプリケーションから直接利用するものではないため、明示的に実装しています。

    System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema()
    {
        return null;
    }

    void IXmlSerializable.ReadXml(XmlReader reader)
    {
        XmlSerializer serializer = new XmlSerializer(typeof(KeyValuePair));

        reader.Read();
        if (reader.IsEmptyElement) { return; }

        while (reader.NodeType != XmlNodeType.EndElement)
        {
            KeyValuePair keyValue = serializer.Deserialize(reader) as KeyValuePair;
            if (keyValue != null) { Add(keyValue.Key, keyValue.Value); }
        }
        reader.Read();
    }

    void IXmlSerializable.WriteXml(XmlWriter writer)
    {
        XmlSerializer serializer = new XmlSerializer(typeof(KeyValuePair));
        KeyValuePair keyValue = new KeyValuePair();
        foreach (KeyValuePair&lt;TKey, TValue&gt; pair in this)
        {
            keyValue.Key = pair.Key;
            keyValue.Value = pair.Value;
            serializer.Serialize(writer, keyValue);
        }
    }

    #endregion

    // シリアライズされるときのタグを XmlType 属性で指定しています。

    [XmlType("Item")]
    [Browsable(false)]
    [EditorBrowsable(EditorBrowsableState.Never)]
    public class KeyValuePair
    {
        public KeyValuePair() { }
        public KeyValuePair(TKey key, TValue value)
        {
            Key = key;
            Value = value;
        }

        public TKey Key { get; set; }
        public TValue Value { get; set; }
    }
}

