

private static Parser&lt;Expr&gt; BinOpParser(Parser&lt;Expr&gt; elemParser, IEnumerable &lt; (string, OperatorCreator) &gt; operators) {
    Parser&lt;Func&lt;Expr, Expr&gt;&gt; restParser =
        operators
        .Select(x =&gt; from _ in Parse.String(x.Item1).Token() from elem in elemParser select new Func&lt;Expr, Expr&gt;(l =&gt; x.Item2(l, elem)))
        .Aggregate((x, y) =&gt; x.Or(y));
    return
        from elem in elemParser
        from rest in restParser.Many()
        select rest.Aggregate(elem, (acc, f) =&gt; f(acc));
}

