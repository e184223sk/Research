

private static readonly Parser&lt;Expr&gt; BinaryOperatorsParser =
    BinOpParser(UnaryParser, new(string, OperatorCreator) [][] {
        new(string, OperatorCreator) [] {
            ("*", Expr.Mul), ("/", Expr.Div)
        },
        new(string, OperatorCreator) [] {
            ("+", Expr.Add), ("-", Expr.Sub)
        },
        new(string, OperatorCreator) [] {
            ("&lt;=", Expr.Leq), ("&lt;", Expr.Lt), ("&gt;=", Expr.Geq), ("&gt;", Expr.Gt)
        },
        new(string, OperatorCreator) [] {
            ("==", Expr.Eq), ("!=", Expr.Neq)
        },
        new(string, OperatorCreator) [] {
            ("&amp;&amp;", Expr.And)
        },
        new(string, OperatorCreator) [] {
            ("||", Expr.Or)
        },
        new(string, OperatorCreator) [] {
            ("|&gt;", (left, right) =&gt; Expr.App(right, left)),
            ("&gt;&gt;", (left, right) =&gt; Expr.Abs("x", Expr.App(right, Expr.App(left, Expr.Var("x")))))
        }
    });

