More than 1 year has passed since last update.ASP.NET Core の学習メモです。今回はASP.NET Core MVCについて学んでいきます。1.開発環境2.DL
 1. VisualStudio
 2. SQL Server
 3. SSMSSSMSとSQLServerとの接続はこちらの記事を参照してください。
https://sql55.com/sql-server/connecting-to-database-engine.phpSSMSから[データベース]を右クリックし[新しいデータベース]を選択。データベース名はお好みで。今回は[DotNetPractice]にしました。
[OK]をクリックしたらデータベースが作成されていると思います。既定のテンプレが作業ディレクトリに作成されたらok.実行する前にビルドしておきましょう。
タブバーから[ビルド]を選択し[ソリューションのリビルド]を選択しビルドを行う。ビルドが完了したらアプリを実行します。
Visual StudioではIIS Expressからアプリの実行が可能です。アドレスはもちろんlocalhost:port#が表示されます。アプリのモデルクラスはEntity Framework Core(EF Core)を使用してデータベースを扱います。Visual Studioでは[ソリューションエクスプローラー]→[Modelsフォルダ]を選択し右クリック[追加]→[クラス]ファイル名は[TodoItem.cs]として作成する。TodoItemクラスにはId, Title, Discription, ReleaseDateが含まれている。タブから[ツール]→[NuGetパッケージマネージャー]→[パッケージマネージャーコンソール]を選択。
PMCを開いて以下コマンドを実行。コンテキストクラスはEFCore機能(CRUD)のために必要。
作業ディレクトリにDataフォルダを作成します。
Dataフォルダ内に以下のTodoContext.csファイルを追加します。コンテキストファイルが作成出来たらStartup.csに次のusingステートメントを追加。追記したStartup.csの[ConfigureServices]メソッドにTodoContextを新規追加する。DB接続に必要なappsettings.jsonファイルを編集します。が、その前に先ほど作成したDotNetPracticeデータベース情報をVisual Studioから覗いてみましょう。タブから[表示]→[サーバーエクスプローラー]を選択→[データベースの接続]を選択しクリック。サーバー名を先ほどのSSMSで使用したローカルサーバを選択。[OK]をクリックするとデータベースが接続されると思います。
あとはアプリに接続文字列を渡してあげるだけ。接続文字列は先ほどのデータベースのプロパティから参照することができます。これで接続は完了♪データベース作成時の初期化データを作成します。
Modelフォルダ内に新しく[SeedData.cs]ファイルを作成してください。Any()でデータベースに値があればreturnします。
なければSeedDataをデータベースに格納してくれます。[SeedData]クラスを作成した後は、呼び出し処理を[Program.cs]ファイルに追記・変更します。ここまで出来たら一度Modelの設定は終了です！お疲れ様でした。次はViewとコントローラーを作っていきますが、これは思ったより簡単です。
ASP.NET Coreにある[スキャフォールディング]機能を使用します。スキャフォールディングは、CRUD(create,read,update,delete)処理を行う画面のコードをデータモデルを元にして自動生成する機能です。Visual Studioでは[ソリューションエクスプローラー]→[Controllerフォルダ]を選択し右クリック[追加]→[新規スキャフォールディングアイテム]を選択。[スキャフォールディングを追加]ダイアログから[Entity Framework を使用したビューがあるMVCコントローラー]を選択し[追加]。追加したタイミングで表示されるウィンドウは以下のように設定します。
設定が終わったら[追加]を選択しあとは勝手にファイルを生成してくれます。※まだMigrationされていないのでDB内のテーブルはまだ作成されておらずデータはカラだと思います。最後にMigrationしてデータをアプリ側でもいじれるようにしましょう。データベースはEntity Framework CoreのMigration機能をつかって作成します。PMCに以下のコマンドを入力してください。マイグレーションが実行されると作業ディレクトリに「Migrations」フォルダが作成されていると思います。これはTodoContextクラスで指定されたモデルに紐づいて作成されています。ここまででディレクトリは以下のようになっていると思います。ここで一度アプリを開いてみましょう。
アドレスはlocalhost:port/TodoItems/で表示されます。こんな感じにアプリが実行できていれば完成です！
後はCRUDでいろいろデータをいじってみて下さい♪お疲れ様でした。今回ASP.NET CoreとSQL Serverを使用して簡単なTodoアプリを作成してみました。
初めてスキャフォールディングの機能を使ったときはびっくりしました。
「こんな簡単にCRUD作れるんだ…笑」まだ.NET Coreを完全に理解したわけではないのでここからいろいろ深堀できればと思います。
それでは。


