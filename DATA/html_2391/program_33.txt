
public class JsonHandlerAttribute : ActionFilterAttribute
{
    public Func&lt;JsonResult&gt; JsonResultFactory { get; set; }  = null;

    public static Func&lt;JsonResult&gt; DefaultJsonResultFactory { get; set; } = null;

    public JsonHandlerAttribute() : base()
    {
    }

    public JsonHandlerAttribute(Func&lt;JsonResult&gt; jsonResultFactory) : this()
    {
        JsonResultFactory = jsonResultFactory;
    }

    public override void OnActionExecuted(ActionExecutedContext filterContext)
    {
        if (filterContext.Result is JsonResult jsonResult)
        {
            var newResult = this.CreateJsonResult();
            newResult.ContentEncoding = jsonResult.ContentEncoding;
            newResult.ContentType = jsonResult.ContentType;
            newResult.Data = jsonResult.Data;
            newResult.JsonRequestBehavior = jsonResult.JsonRequestBehavior;

            filterContext.Result = newResult;
        }

        base.OnActionExecuted(filterContext);
    }

    protected JsonResult CreateJsonResult()
    {
        if (this.JsonResultFactory != null)
        {
            return this.JsonResultFactory();
        }
        else if (DefaultJsonResultFactory != null)
        {
            return DefaultJsonResultFactory();
        }
        else
        {
            throw new NullReferenceException("Factoryプロパティ、又はDefaultFactoryプロパティが指定されていません。");
        }
    }
}

