More than 1 year has passed since last update.※追記
自分なりに拡張してみました。 
オリジナルですので参考サイトのように解説をしています！
シンプルかつ簡単に初学者向けに解説しています。
②ホーム画面からスタートボタンで開始してみた
③リザルト画面を作ってスコアを出す
④設定画面・カウントダウン・経過中タイム・CLEAR画面追加してみた
少しばかり自由時間を与えられたので勉強がてらにゲームアプリを探していたところ丁度良いものを発見！参考にしたサイト：【Visual C#でゲームを作る】ブロック崩し編文法の基礎さえ知っていれば作れるレベル。
これならC#を初めて触る人でも大丈夫そう。
でも、ベクトルが登場するので、高校数学苦手なら少し難しいかも・・・環境
無償のVisual Studioバージョン2017を使っています。
インストールしてすぐ使えるので初心者に優しいですね。
ここからダウンロード→https://visualstudio.microsoft.com/ja/vs/express/【Visual C#でゲームを作る】ブロック崩し編①を解説
その１.ではボールが移動し跳ね返るところまで。
基本は参考サイトを見ていただいて
初学者にわかりやすくする為、こちらでさらにコメント追記や軽い解説をしていく。上のメソッド毎に渡される「object sender」「e」は
senterでどの部品か判定し、eにその情報を含んでいる。
このようにイベントで動くメソッドをイベントハンドラという。↓メリットの例としては呼ばれた時点で部品を判断でき、
まとめて管理できる。左右壁に触れるときボールが半分壁にめり込むのが気になったので、
判定条件を少し変更している。
//左右の壁でのバウンド
            if (ballPos.X + ballRadius * 2 &gt; this.Bounds.Width || ballPos.X - ballRadius &lt; 0)【Visual C#でゲームを作る】ブロック崩し編②
ここに来て高校数学で習ったベクトルが登場する...
全く覚えていない。。
鋭角三角形のcosθがマイナスになることはggって思い出し、
ベクトルの定理は呪文として理解した(理解したとは言っていない)。当たり判定はパドルとボールのX軸Y軸座標から求めることもできるが、
後で作成するブロックにも同じ処理を使えるよう
汎用性のある法線の長さから求めるべきだろう。複雑なのはベクトル計算ロジックだけ。。「///」：スラッシュ3つ並んでいる箇所はドキュメントコメントといい、パラメーターやメソッドの説明を記述している。パドルが画面の外にも移動できるのが気になったので
画面から消えないようにする。【Visual C#でゲームを作る】ブロック崩し編③
ブロックを作成後、リスト化してボールが当たれば消えるようにする。
当たり判定は参照その２を流用するので難しいことは特に記述しない。↓BlockVsCircleのfor文で回しているブロックの生成順
縦(Y軸)に全て並べてから右(X軸)に移る
以下のように横長になってしまった場合、Form1.csのデザインで簡単にフォームのサイズを変更できる。
また、横長にブロックを並べたいときはForm1コンストラクタの「this.Height」を「this.Width」に変更すればよい。
冒頭に1時間あれば終わるって書いてたのに全く足りんかった・・まだまだだな。
Unityでゲーム作ったほうが色々できそうだし楽しそう！画面遷移とダイアログ表示をする為に、
ホーム画面とリザルト画面を作成したので良かったら見て行ってください。
Visual StudioとC#を初めて使ってブロック崩しゲームを作ってみた②


