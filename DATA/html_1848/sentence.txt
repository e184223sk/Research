More than 1 year has passed since last update.C#で数字だけを認識する、手書き文字認識システムを作りました。
非常に簡易的なものです。
以下の説明は、VisualStudioを使用して作成する場合の説明になります。PictureBoxクラスの派生Tegakiクラスです。
上のソースコードをそのままコピーして、DLLにもできますし、プロジェクトの一部にしてもかまいません。
フォームのデザイン画面を開いてみると、ツールボックスにTegakiが追加されます。Tegakiのサイズは500✕500のみ対応しています。プロパティでサイズを500✕500にしてください。
背景色は、何でもいいですが、勝手にRGB(64,0,64)に変わってしまいます。（手抜きですが・・・）
他にもラベルを2つ追加しました。フォームのソースコードです。
コンストラクターで、
tegaki1.exec = exec;
とありますが、Tegakiクラスの中でpublic Action&lt;int&gt; exec;と定義されています。
これはint型を1つ引数にとって、戻り値を返さない関数を意味しています。つまりTegaki.execにForm2.exec(int i)を渡しています。
この関数は、手書き入力中に、今現在判別している数字が変化したら実行されます。
その数字が引数iに渡されます。
label1は、入力中の現在の判別値を表示します。この簡易文字認識システムは、マウスクリックからマウスが離されるまでの軌跡で判断します。
よって、label2は、tegaki1のMouseUpイベントで、確定した判別値を返します。先ほど説明したように、マウスクリックからマウスが離されるまでの軌跡で判断します。
つまり、一筆書きが基本です。
「4」は、

の順に書きます。
「5」は、

と書きます。
「7」は、

最初の縦棒は必須です。「3」を書いてる途中の画面です。まだ途中なので、現在の判別値が「2」と判定されています。「6」を書いたときの画面です。（マウスクリックを離すと手書き文字が消えるので、確定した判別値が前回のままになっています。）以上、数字だけに対応した簡易的な手書き文字認識システムでした。


