この記事では以下のような人を対象に、Shopify・Unity連携用SDKであるShopify/unity-buy-sdkについて紹介します。Shopify APIで検索すると主にAdmin APIとStorefront APIについての記事をよく見かけます。これらは提供している目的とプラットフォームが少し違います。Shopify/unity-buy-sdkで使うのはStorefront APIの方なので、個人的に調べる際は注意してください。また、GraphQL？？という人については、ざっくりと「単一のエンドポイントにPOSTでクエリを投げてCRUDが実行できるAPIの形式」くらいの認識でいいと思います。(詳細については別途記事を執筆予定)（この手順はShopifyのテストサイトを使う場合不要です）
1-1. 自分のShopifyサイトにログイン
1-2. 管理画面から「アプリの管理」&gt;「プライベートアプリを管理する」&gt;「新しいプライベートアプリを作成する」
1-3. プライベートアプリ名や緊急連絡用開発者メールを入力後、ストアフロントAPIのチェックボックスを有効にして保存
1-4. アプリ作成後生成されるストアフロントアクセストークンをメモ（後ほど連携させる際に必要）参考）Shopify Storefront API - Getting started2-1.shopify-buy.unitypackageをダウンロード
2-2. Unityプロジェクトを開いて、ダウンロードしたunitypackageをインポート
2-3. サンプルシーンですぐに動作確認する場合は、Build SettingsでVending Machine Exampleシーンを追加することを忘れずに参考）Github - Using the Shopify SDK for UnityVending Machine Exampleを実行すると以下のような自販機のサンプルシーンが動きます。（デフォルトではShopifyのサンプルショップと連携した商品表示になっています）
(Shopify SDK for Unity READMEより引用)自分のShopify ECサイトと連携するにはShopPopup.csのStart()内にストアフロントアクセストークンとショップドメインを追記すれば商品一覧に自分のECサイトの商品が表示されます。※注意点
Shopify APIはアップデートが頻繁に行われています。現在GitHubで公開されているのは2020-01です。バージョンでAPIのエンドポイントが変わってくるので、使用したいバージョンごとにエンドポイントを更新する必要があります。
更新するファイルはバージョンアップPRのファイル差分を参考に2020-01の箇所を該当バージョンに変えるといいでしょう。テンプレートをインポートした状態でできることは、商品一覧の取得、カートの作成、カート情報を引き継いでの決済（ブラウザ、Apple Pay）などです。その他の情報を取得したり、決済をアプリ内で完結させたい場合は他のAPIをコールする必要が出てきます。そんな時のqueryやmutationの書き方はEXAMPLES.mdに書かれています。結構これは重要だと思います。例えば以下のようなショップ情報を取得するクエリを実行するにはShopifyBuy.Client().Query()を使って次のように書くことができます。以下のコードを3.動作確認でアクセストークンとショップドメインを記述した後に追記すれば、サンプルシーンを実行した時にショップ情報がデバッグログに出力されるはずです。同様に、mutationの実行にはShopifyBuy.Client().Mutaiton()が用意されおり、詳しい書き方はこちらに書いています。以上に書いた参考サイト以外にも役立ちそうなサイトです。内容に誤りや補足があればコメントお願いします。


