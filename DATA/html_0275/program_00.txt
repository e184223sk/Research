//c:\Windows\Microsoft.NET\Framework\v4.0.30319\csc.exe pdf_jpg_out1.cs

using System;
using System.IO;

class pdf_jpg_out1 { //*1
  static void Main(string[] args) { //*2

 string p_fn = @"" + args[0];
 byte[] data = File.ReadAllBytes(p_fn);

 int ImgCnt = 1;
 int ARCN = 5; //array_count

 string[] st = new string[ARCN];
 st[0] = "/DCTDecode";
 st[1] = " obj";
 st[2] = "endobj";
 st[3] = "&gt;stream";
 st[4] = "endstream";

 byte[][] d = new byte[ARCN][];
 for(int i=0; i&lt;ARCN; ++i)
  d[i] = System.Text.Encoding.ASCII.GetBytes(st[i]);

 byte[][] dm = new byte[ARCN][];
 for(int i=0; i&lt;ARCN; ++i)
  dm[i] = new byte[d[i].Length];

 int stream_stt = 0;
 int stream_size = 0;

 bool outFlg = false;

 for(int i=0;i&lt;data.Length-st[0].Length;i++){

  for(int j=0; j&lt;ARCN; ++j)
   Array.Copy(data,i,dm[j],0,d[j].Length);

  bool[] aEq = new bool[ARCN];
  for(int j=0; j&lt;ARCN; ++j){
   aEq[j] = System.Linq.Enumerable.SequenceEqual(d[j], dm[j]); 
   if(aEq[j]){

    //" obj"
    if(j==1){
     outFlg = false; //リセット
    }
    //"/DCTDecode"
    if(j==0){
     outFlg = true;
    }
    //"&gt;stream"
    if(j==3){
     stream_stt = (int)(i+(int)d[j].Length+2);
    }
    //"endstream"
    if(j==4){
     stream_size = (int)((int)i-3) - stream_stt +1;

    if(outFlg){
     byte[] data_out = new byte[stream_size];
     Array.Copy(data,stream_stt,data_out,0,stream_size);
     File.WriteAllBytes("_Jpg_out" +ImgCnt+ ".jpg", data_out);
     Console.WriteLine("_Jpg_out" +ImgCnt+ ".jpg");
     ImgCnt++;
    }

    }
    string tx = System.Text.Encoding.ASCII.GetString(dm[j]);
    //Console.WriteLine(i + "_" + tx);
   }
  }
 }

 } //*2
} //*1

