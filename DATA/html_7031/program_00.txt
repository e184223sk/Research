using System;
using System.Collections.Generic;
using System.Linq;
using System.Drawing;

public class Program
{
    /// &lt;summary&gt;
    /// Gets the value at a given X using the line of best fit (Least Square Method) to determine the equation
    /// &lt;/summary&gt;
    /// &lt;param name="points"&gt;Points to calculate the value from&lt;/param&gt;
    /// &lt;param name="x"&gt;Function input&lt;/param&gt;
    /// &lt;returns&gt;Value at X in the given points&lt;/returns&gt;
    public static float LeastSquaresValueAtX(List&lt;PointF&gt; points, float x)
    {
        float slope = SlopeOfPoints(points);
        float yIntercept = YInterceptOfPoints(points, slope);

        return (slope * x) + yIntercept;
    }

    /// &lt;summary&gt;
    /// Gets the slope for a set of points using the formula:
    /// m = ? (x-AVG(x)(y-AVG(y)) / ? (x-AVG(x))Â²
    /// &lt;/summary&gt;
    /// &lt;param name="points"&gt;Points to calculate the Slope from&lt;/param&gt;
    /// &lt;returns&gt;SlopeOfPoints&lt;/returns&gt;
    private static float SlopeOfPoints(List&lt;PointF&gt; points)
    {
        float xBar = points.Average(p =&gt; p.X);
        float yBar = points.Average(p =&gt; p.Y);

        float dividend = points.Sum(p =&gt; (p.X - xBar) * (p.Y - yBar));
        float divisor = (float)points.Sum(p =&gt; Math.Pow(p.X - xBar, 2));

        return dividend / divisor;            
    }

    /// &lt;summary&gt;
    /// Gets the Y-Intercept for a set of points using the formula:
    /// b = AVG(y) - m( AVG(x) )
    /// &lt;/summary&gt;
    /// &lt;param name="points"&gt;Points to calculate the intercept from&lt;/param&gt;
    /// &lt;returns&gt;Y-Intercept&lt;/returns&gt;
    private static float YInterceptOfPoints(List&lt;PointF&gt; points, float slope)
    { 
        float xBar = points.Average(p =&gt; p.X);
        float yBar = points.Average(p =&gt; p.Y);

        return yBar - (slope * xBar);        
    }         
  public static void Main()
  {
    var P = new PointF[]
    {
      new PointF { X = 600, Y = 6},
        new PointF { X = 800, Y = 7},
        new PointF { X = 1000, Y = 10},
        new PointF { X = 1200, Y = 12},
        new PointF { X = 1400, Y = 14},
    };

    var lst = new List&lt;PointF&gt;();
    foreach(var element in P) {
      lst.Add(element);
    }

    var res = LeastSquaresValueAtX(lst, 650);

    Console.WriteLine(res);
  }
}

