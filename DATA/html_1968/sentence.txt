C# を使っているときに、コマンドラインツールを作るときに便利なコマンドラインパーサーないかな？と思って調査したところ、最もオフィシャルに近い System.CommandLine を試してみることにしました。自分がしたいことを中心に調べたことをまとめてみたいと思います。RootCommand というクラスをインスタンス化して、そこに、AddArgument, AddOption で引数やオプションを渡します。最後に Invoke または、InvokeAsync を実行してあげるとよいです。Main メソッドの中で呼ばれるようにしてみてください。すると、Helpを自動で作成してれます。MyConfigCmd はプロジェクト名です。実行の例は次のような感じです。必須項目は、Argument で表現します、必須項目の型、名前、概要を定義できます。概要は、help でも使われます。オプションの項目は、次のように書くことで、 追加することができます。alias を定義することで、オプションの書き方や、省略形の書き方も設定できます。また、getDefaultValue() に対して関数を渡すことでデフォルト値を設定することができます。Sub Command は、今回必要なかったので試していませんが Add SubCommand を見ると、Command というクラスをインスタンス化して、RootCommand に足してあげるとよいだけのようです。さて、このコマンドアプリが実行されたら、何らかのアクションを実行したいと思います。このように設定します。ここで、ポイントは、ここで渡しているハンドラの名前です。定義したArgument や、Option で定義した名前と同じ引数名にする必要があります。Argument は名前が明確なので、わかりやすいですが、Option は、aliasしかないし、--config-file とかの場合どうなるの？と思うと思いますがこの場合は、configFile というキャメルケースになるようです。私はここが最初わからなくて、パラメータが渡ってこないという問題に遭遇しました。コマンドラインアプリを作っていると、終了ステータスを定義したいと思います。実は、先ほどのハンドラは戻り値無しでもかけるのですが、先ほど紹介した通り戻り値をint として定義しています。そうすると、この部分が終了ステータスになるので、return 1; とか返すと、エラーの終了ステータスになりますので便利です。先ほどのハンドラの部分で、IConsole という謎のパラメータがあります。これをつけてあげると、Console のオブジェクトを引き取ることができます。コンソールへの出力は次のように標準出力にも、エラー出力にも書くことができます。これが何が良いか？というと、このハンドラのユニットテストを書くと、次のような感じで書くことができます。つまり、コンソールのMockを渡して、エラーの時のメッセージを簡単にテストすることができます。私のやりたいことは、大体 System.CommandLineで出来る感じなので、今後も使っていこうと思います。ちなみに、まだβなので、はよGAになって欲しいですね。


