using UnityEngine;
using System;

namespace Core
{
    public class GameEntity : MonoBehaviour
    {
        private string TypeName =&gt; $"Core.GameDataStore`1[{GetType()}]";
        private Type Type =&gt; Type.GetType(TypeName);
        private object Store =&gt; Activator.CreateInstance(Type);

        private void Awake()
        {
            RegistToStore();
        }

        private void OnDestroy()
        {
            UnRegistFromStore();
        }

        private void RegistToStore()
        {
            ExecuteStoreMethod("Regist");
        }

        private void UnRegistFromStore()
        {
            ExecuteStoreMethod("UnRegist");
        }

        private void ExecuteStoreMethod(string methodName)
        {
            var method = Type.GetMethod(methodName, new Type[] { GetType() });
            method.Invoke(Store, new object[] { this });
        }
    }
}


