More than 1 year has passed since last update.どうもnisokaです。
ページを訪問いただきありがとうございます。
ゲームを作っていると「〇〇秒後に処理をしたい」だったり「〇〇秒おきに処理をしたい」などの場面に頻繁に遭遇するかと思います。
そんなとき普通はInvokeメソッドやコルーチンのWaitForSecondsで対応したりするわけですが。
いつかカバーできなくなって限界がくると思い、ひとつ勉強のついでに時間計測クラスを作ることにしました。・時間を計る
・ループをする
・ループの回数指定をする
・一時停止する
・一時停止から再開する
・中断する
・最初から再度開始する
・終了時に行う処理を登録するいろいろありますが特別な機能は何も持たせません。
タイマーとしての基本機能のみです。
以下、実装です。見ただけだとどう使うのかさっぱりわからんって人もいるかもしれないので、簡単な追加コードを用意しました。
FixedUpdate()の他に以下のUpdate()を追加して、必要なTextなどを用意して動かしてみてください。このコールバックは駆動中のタイマーが計測を終了したタイミングで呼ばれます。
protected virtualで仮想関数化しているのは、もし継承して使った際に派生クラスでイベント処理をオーバーライドするためです。外部のスクリプトからこのイベントへ処理を登録(委譲)するには、このイベントハンドラを介して行います。Timerクラスの実装側で、ラムダ式とdelegateの+-を使いこのように書くことで、計測終了時に処理を登録できます。
(ラムダ式を使わず別に関数を用意して登録することもできます)または、あまりやらないと思いますが、先ほどの派生クラスにオーバーライドしてどちらかの方法でもイベントへ処理を登録できます。いかがだったでしょうか。
ただコードを紹介しただけという誠にあっさり極まりない記事になってしまいましたが、現在タイマー処理を作っている方が居たら少しでものお役に立てたら幸いです。


