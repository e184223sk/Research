仕様変更があったときになるべく影響範囲が小さくて済むように直したつもりだけど、
思わぬ落とし穴があった話。
Food.exeは好きな食べ物の紹介をし、Sports.exeは好きなスポーツの紹介をするプログラム。
Food.exe, Sports.exeともにCommon.dll内の関数を使っている。
Common, Food, Sportsのソースは以下の通り。運用開始後、仕様変更により、好きな食べ物を紹介するときだけ時々シャウトすることになった（謎）
で、Common.dllのCreateIntroduction関数にシャウトするかどうかの引数isShoutを増やして対応。
単に引数を増やすとこの関数を使っているすべてのソースを修正しなければならないが、
仕様変更になったのは食べ物のときだけで、スポーツのときは関係ないのでSportsプロジェクトは触りたくない。
そのため、isShoutのデフォルトをfalseにしておく。こうすれば２番目の引数を指定していなくてもfalseを指定したのと同じになってエラーにならないはず♪↓　修正後のCommonとFoodのソース。Sportsは修正しなくてもOK♪修正したCommonとFoodをビルドし、運用環境に配置。
Food.exeを動かして、ちゃんと時々シャウトすることを確認しミッションコンプリート、と思ったのもつかの間。
「Sportsを動かすとエラーになるんだけど」
という連絡が。え、Sportsは修正しなくてもいいはずなのに・・・(;'∀')実はSportsはソースの修正は必要ないのですが、使っている関数の引数が変わったのでビルドをし直さないといけなかったのです。今回はSportsもビルドし直さないといけなかったね、で終わるかもしれませんが、実際はもっといろんなプログラムでCreateIntroduction関数を使っている可能性があり、思わぬところで影響が出てしまうことがあります。
外部から使われているプログラムを直すときは、それ自体を作り変えるのではなく、拡張するようにするといいと思います。
やり方はいろいろあると思いますが、例えば、こんな感じ。もともとあったCreateIntroduction(string)は残し、CreateIntroduction(string, bool)とCreateIntroductionShout(string)を増やすことで仕様変更に対応。
ちなみにCreateIntroduction(string)は引数と戻り値さえ変えなければ、中でやっている処理は変えてもOKです。以上、本当にあった怖い話でした。


