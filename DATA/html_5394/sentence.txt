More than 3 years have passed since last update.項目テンプレートの中でcsprojファイルにあるプロパティを使用する方法として↓を順にやる。必要なものは2つ。VisualStudioの拡張機能を作成するためのSDK (以下、VSSDK)。テンプレートだけでなく、Visual Studio のメニューを増やしたりすることもできる。
Visual Studio の Installer から選択してインストールしておく。個別のコンポーネントからも可。VSSDKの使い道は↓が参考になる。
http://tech.tanaka733.net/entry/how-to-find-how-to-develop-vs-sdkテンプレートを作成し、拡張機能として「ツール」メニューからインストールできるようにする。C#プロジェクトから、Extensibilityのカテゴリに「C# Item Template」があるので選んでプロジェクトを作成する。↓のようにプロジェクトが生成される。C#のプロジェクト内で項目を追加できるようにしたい場合は、&lt;AppliesTo&gt;タグを追加してCSharpに指定する。最初の生成時にはないので注意。&lt;ProjectItem&gt;として最初はClass.csが生成される。ReplaceParameter=trueとなっているように、パラメータの置換ができる。
使えるパラメータ名には\$itemname\$などあるが、項目テンプレートでは\$projectname\$など使えないものもある。
使えないので仕方なく以降でウィザードをつくる。カスタムパラメータを使うと自分で置換する組をつくれる。Class.csをProjectItemにしたいときは、ビルドアクションを「コンパイル」から「コンテンツ」にする。(xamlなどでも同じ)忘れると、\$\$がついたパラメータのままコンパイルされてエラーがたくさん。ただテンプレートを作るだけだとzipを適当な場所に置くことになるが、VSIXをつくっておくと、拡張機能としてインストールとか更新ができるので便利。ここでは、さっき作成した項目テンプレートのソリューションに新しいプロジェクトを追加する。VSIX Projectを追加したら↓みたいになる。生成された「source.extension.vsixmanifest」を選んで↓の1~6の順でItemTemplate1を選ぶとVSIXにテンプレートを追加する。VSIXをスタートアップ設定してF5でデバッグ実行すると、実験用のVSが立ち上がって拡張機能が追加されているので、項目テンプレートを試しに使ってみることも可。そのままだと使えるパラメータが少ないので、ウィザードを経由して使えるパラメータを増やす。ウィザードはクラスライブラリ(.dll)として作成する。パラメータをユーザが指定するようにしたければ、画面を作ってもよい。(が、パラメータを使いたいだけなので今回はパス。)IWizardを使うために、クラスライブラリにNuGetでVSSDK.TemplateWizardInterfaceを追加する。参照を右クリック、NuGetパッケージの管理から↓の画面に。「Microsoft.VisualStudio.TemplateWizard.IWizard」を継承したクラスをつくる。automationObjectを使って選択中のプロジェクトを探してプロパティを使えるようにするコードを書く。カスタムテンプレートの辞書に追加したので、項目テンプレートから各パラメータを使用可能になる。クラスライブラリのプロパティから署名を作成します。key.snkが生成されます。ここから、アセンブリの読み込みに必要なパブリックトークンを確認する。(ここ面倒)参考：「メモ: dllファイルのPublicKeyTokenの確認方法」
 http://d.hatena.ne.jp/torazuka/20131121/sn開発者用コマンドプロンプトを開き、sn.exe -T &lt;dllのパス&gt;を使う。↓のようにトークンが表示される。あとで使うのでメモしておく。ウィザードが完成したら、今度はAssemblyを選んでVSIXのAssetsに追加する。dllがVSIX内に配置されるようになる。ItemTemplate1.vstemplateを開いてWizardExtensionを追加する。


