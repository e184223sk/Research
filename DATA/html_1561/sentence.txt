More than 1 year has passed since last update.TyporaというMarkdownエディターに出会ってからドキュメントはmarkdownで書くようになりました。
Typoraではローカルの画像をエディタ上に貼り付けてそのまま表示することができます。■こんな感じに↓
ローカルにある画像を![名前](画像リンク)で指定すればTyporaでは表示されます。
手順としては画像をTyporaにD&amp;Dすることでいい感じに上のような表示になります。ただ、Windowsのコンテキストメニューから画像を![名前](画像リンク)の形式にしてくれないかと考えました。
今回はコンテキストメニューへのリンク追加と、上のフォーマットに変換するプログラムを用意して実現します。そもそもコンテキストメニューってどんなやつかというのは下のやつです。
画像を右クリックしたときに出てくるメニューですね。ここはユーザーによって項目が異なります。
ここに項目を追加します。コンピュータ &gt; HKEY_CLASSES_ROOT &gt; * &gt; shellを開く
キーの追加：ここは自由に名前をつける(今回はMarkdownリンク(&amp;Q))
この時点でコンテキストメニューに上の内容が表示されるようになります。
キーの追加：command
項目の編集："プログラム名(後述)のexeのパス" "%1"
とりあえずこの時点で一度レジストリの設定は終わりです。
次に変換用のプログラムの方を用意します。ここは好きな言語で用意すれば良いと思いますが、サンプルとしてC#で今回作りました。
ポイントは、引数としてコンテキストメニューで押されたファイルのパスをmainメソッドのargs[]で受け取っているので
このファイルパスに対してゴニョゴニョして最終的にmarkdown形式の文字列としてクリップボードにコピーするイメージです。
C#ベースのコンソールアプリケーションですがウィンドウを表面に出したくないので、出力の種類は「Windows アプリケーション」にしています。
作成してビルドしたアプリケーションを任意の場所に配置してそのファイルパスをコピーしておきます
レジストリエディタの変換ツールのフルパスの部分にプログラムのパスを代入します
これで準備OKです
わかりにくいですが、コンテキストメニューから追加したMarkdownリンクを選択すると
上で作成した変換ツールがバックグラウンドで起動してクリップボードに内容をコピーしています。とりあえずこれでTyporaに画像をD&amp;Dしなくても良くなりました。個人的には満足です。
※もしかしたらもっといい方法があるかもしれないですコンテキストメニューに任意の項目を追加してアプリ実行ができるというのは収穫でした。右クリックメニューにアイテムを追加する - Windows 10
イメージのファイルフォーマットを拡張子から判断し取得する [C#]:humming bird


