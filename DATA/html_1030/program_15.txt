
/// &lt;summary&gt;
/// List&lt;T&gt; と List&lt;T&gt;(capacity) で Add() メソッドを繰り返したときの処理速度を比較します。
/// &lt;/summary&gt;
private static void CompareTime()
{
    Console.WriteLine("Count | WithOut[ms] | With[ms]    | percentage[%]");
    for (var i = 0; i &lt; 9; i++)
    {
        // 要素数は1, 10, 100, ..., 100000000 のパターンを試す
        var length = (int)Math.Pow(10, i);
        double Test(List&lt;int&gt; list)
        {
            var watch = new Stopwatch();
            watch.Start();
            for (int k = 0; k &lt; length; k++) list.Add(0);
            watch.Stop();
            return watch.Elapsed.TotalMilliseconds;
        }

        var timeSpans = (new List&lt;double&gt;(), new List&lt;double&gt;());
        for (int j = 0; j &lt; 10; j++)    // 試行回数：10回
        {
            timeSpans.Item1.Add(Test(new List&lt;int&gt;()));
            timeSpans.Item2.Add(Test(new List&lt;int&gt;(length)));
        }

        // それぞれの平均処理速度と速度改善率を計算
        var ave1 = timeSpans.Item1.Average();
        var ave2 = timeSpans.Item2.Average();
        Console.WriteLine($"10^{i}  | {ave1:000.0000000} | {ave2:000.0000000} | {((ave2 * 100) / ave1):00.00}");
    }
}

