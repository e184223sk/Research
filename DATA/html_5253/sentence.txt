今更ながらC#9.0から追加されたinitアクセサ（init 専用セッター）を使ってみたのでメモ
https://docs.microsoft.com/ja-jp/dotnet/csharp/whats-new/csharp-9#init-only-setters以下をメンバに持つSampleというクラスがあったとします。各プロパティに値を設定したい場合、以下のように
setアクセサを持つプロパティ（Property）はコンストラクタでもオブジェクト初期化子でも、それ以外でも値を設定することができます。一方で、setアクセサを持たない get-only なプロパティ（GetOnlyProperty）は、コンストラクタでしか値を設定することができません。
もちろん、自クラスのメソッド（SampleMethod）内でも設定することはできません。コンストラクタでの初期化以降、値を書き換えられることが無い get-only なプロパティ（GetOnlyProperty）は、安全に利用することができますが、少々制限が厳しすぎると感じていた方もいらっしゃるのではないでしょうか。具体的には、オブジェクト初期化子でも値を設定することができないという点です。C# 8.0 までは 初期化処理（コンストラクタ及びオブジェクト初期化子）では値が設定できるが
それ以外は値を設定することができないプロパティを定義することはできません。C# 9.0 で導入されたinitアクセサ を利用すると、
上述した通り、C# 8.0 までは実現することができなかった
初期化処理（コンストラクタ及びオブジェクト初期化子）では値が設定できるが
それ以外は値を設定することができないプロパティを定義することができます。get-onlyなプロパティに対してinit-onlyなプロパティと呼びます。定義方法は非常に簡単で、setの代わりにinitと記述するだけです。get-only なプロパティとの主な違いは
init-only プロパティでは、オブジェクト初期化子で値を設定することが出来るという点です。もちろん get-only なプロパティ同様に、コンストラクタでも値を設定することができますし、
それ以外の場所では値を設定することができません。
(他のinitアクセサ内は除く)initアクセサを利用することによって、 get-only なプロパティよりも柔軟に利用できるプロパティが定義できるようになりました。以上となります。


