/// 変数の先頭の p は passed(引数)
/// l は local(メソッドスコープ内)
/// m は member(プロパティ)の略語です。

public static class XmlGetter
{
    public static XmlSchemaSet AddSchemaFromXsd(string pSchemaPath)
    {
        XmlSchemaSet lSchemas = new XmlSchemaSet();
        XmlReader lSchemaReader = null;

        string targetNamespace = "hogehoge/Event";
        try
        {
            lSchemas.Add(targetNamespace, lSchemaReader = XmlReader.Create(pSchemaPath));

        }
        catch (XmlSchemaValidationException e)
        {
            Debug.LogError(e.Message);
            Debug.LogError("error line : " + e.LineNumber);
            Debug.LogError("error position : " + e.LinePosition);
        }
        finally
        {
            if (lSchemaReader.ReadState != ReadState.Closed)
            {
                lSchemaReader.Close();
            }
        }
        return schemas;
    }

    public static XDocument GetXDocumentFromXml(string pXmlPath, XmlSchemaSet pSchemas)
    {

        XmlReaderSettings lSettings = new XmlReaderSettings();

        lSettings.ValidationType = ValidationType.Schema;

        lSettings.Schemas = pSchemas;

        XmlReader lXmlReader = null;
        XDocument pEventXml = null;
        try
        {
            lXmlReader = XmlReader.Create(pXmlPath, lSettings);
            pEventXml = XDocument.Load(lXmlReader);
        }
        catch (XmlSchemaValidationException e)
        {
            Debug.LogError(e.Message);
            Debug.LogError("error line : " + e.LineNumber);
            Debug.LogError("error position : " + e.LinePosition);

        }
        catch (Exception e)
        {
            Debug.Log(e.Message);
        }
        finally
        {
            if (lXmlReader.ReadState != ReadState.Closed)
            {
                lXmlReader.Close();
            }
        }
        return pEventXml;
    }
}

