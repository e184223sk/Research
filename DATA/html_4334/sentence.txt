More than 1 year has passed since last update.Docker を利用して MagicOnion &amp; .Net Core の開発環境を整えます。2018/12/14 に MagicOnion のバージョンが 2.0.3 になりました。
基本的にこの記事の通りで動作しますが、GitHub へのリンクは古いバージョンのものです。サービス定義プロジェクトを .NET Standard クラスライブラリ で作成します。MagicOnion をインストールします。commit:サービス定義の作成サーバープロジェクトを .NET Core コンソールアプリ で作成します。MagicOnion をインストールします。サービス定義プロジェクト を参照に追加します。commit:サーバーの作成今回は単純なクライアントではなく、ASP.NET Core を利用した Swagger をクライアントとして利用します。クライアントプロジェクトを ASP.NET Core Web アプリケーション で作成します。MagicOnion と MagicOnion.HttpGateway をインストールします。サービス定義プロジェクト と サーバープロジェクト を参照に追加します。ここまでで一通り動作するので、マルチスタートアッププロジェクトでサーバーとクライアントを実行し動作確認しておくといいです。commit:クライアントの作成今回は Docker Compose を利用します。
サーバープロジェクト と クライアントプロジェクト で Visual Studio でプロジェクトを右クリックから コンテナー オーケストレーター サポート を追加します。
docker-compose.yml と Dockerfile は自動生成されたものから変更する必要はありません。commit:コンテナー オーケストレーター サポートの追加Docker で動作するように host を変更します。commit:host の変更


