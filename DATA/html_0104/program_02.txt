
public abstract class ResizeHandleBase : IShape
{
    public HitResult HitResult {set; protected set;}
    public Rectangle Bounds { get; protected set; }
    //外観は白で塗りつぶし、黒の輪郭（既定値）
    public Stroke? Stroke { get; set; } = new Stroke(Color.Black, 1f);
    public Fill? Fill { get; set; } = new Fill(Color.White);

    protected ResizeHandleBase(Rectangle bounds)
    {
        Bounds = bounds;
    }

    public void Draw(IGraphics g)
    {
        if (Fill is not null)
        {
            g.FillRectangle(Bounds, Fill);
        }
        if (Stroke is not null)
        {
            g.DrawRectangle(Bounds, Stroke);
        }
    }

    public HitResult HitTest(Point p)
    {
        return (Bounds.Left &lt;= p.X &amp;&amp; p.X &lt;= Bounds.Right
                &amp;&amp; Bounds.Top &lt;= p.Y &amp;&amp; p.Y &lt;= Bounds.Bottom)
                ? Type
                : HitResult.None;
    }

    public void Drag(Point oldPointer, Point currentPointer)
    {
        //リサイズハンドルではDragメソッドは使用しない
        throw new NotImplementedException();
    }
}

