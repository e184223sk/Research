人間がブラウザ操作するようにコーディングが可能なWebDriver（Selenium）を利用して自動ログインを実装。
特に今回はChromeDriverを利用します。WebDriverのメリット
ユーザーの操作感に近いコーディングができるため汎用性が高い。ブラウザ上で人が操作できることは、ほとんどできてしまうため慣れれば本当に何でもできる。
WebDriverのデメリット
ブラウザの進歩が目覚ましくバージョン依存、ブラウザ依存しやすいため不特定多数が利用するようなソフトの提供はおこなえない。また、ブラウザを自動操作するためページの遷移にはどうしてもロード時間がかかってしまう。通信環境、サイトの容量などによってはページの読み込みに時間がかかりすぎて自動処理とは思えない処理時間が発生することもしばしば。HTML全体のうちformタブを見て、「ユーザーIDの入力フォーム」
「パスワードの入力フォーム」
「ログインボタン」がどこに該当するかを調べる。Chromeブラウザならサイトの適当な場所で右クリックを押して「検証」からソースコードとサイトページの画面が表示されコードとページの関連がリアルタイム表示される。パスワードなどのサーバーに送信する必要がある部分はすべて"&lt;"form"&gt;"タグ内に格納されている。注意が必要なのがこのサイトではログイン方法が２通りあり通常IDとSEGAIDのどちらでもログインできる仕様のため、似たような名前のformタブが存在することである。
WebDriverを使ってid="loginForm"となる要素のみを取り出したのち、名前が"mjm_id"、"password"になっている要素を取り出す。抜き出したHTMLの要素を簡素化＜HTMLについて＞
inputは”タグ”であり”ノード”と呼ばれるものである。type,name,value,Idなどは”タグの属性”を表しタグによってさまざまな属性がある。例えばtypeは機能を指定する属性でサイト内でボタン(button)だったり、入力フォーム(text)だったりする。nameはあるタブを機能ごとや値毎にユーザーが任意に分類するための名称（分類のための命名であり唯一ではない）Idは属性の中で唯一性があるためピンポイントで呼び出す必要があるタグに付与する。１つの"&lt;"html"&gt;""&lt;/"html"&gt;"で囲まれた中に重複Idは許されない。＜C#について＞
SendKeys()は、取り出した要素に値を入力するメソッド。引数は入力したい値（Value="入力した値"）
Click()は、取り出した要素をクリックするメソッド。WebDriverWait　～pagewaitの中の処理～
Seleniumではページ遷移する場合、ページの読み込み待ちを効率的におこなうためにSelenium.Supportがリリースされている。
これはサイトページのロード状況からwaitがかけれるようになりページのロード前に要素を取得しようとしてエラーとなることを避ける処理である。他のサイトではThread.Sleep(5000)などを入れて十分な読み込み時間を待機したのち動作するような無理矢理に安定動作をさせるといった行為がみられたがまったく高速化できないため推奨しない。実際のスクリプト全体（C#）ブラウザ：Chrome  91.0.4472.77 (2021/6/2時点の最新)
言語：C# 
使用ソフト：VisualStudio2019v16.6.0
プロジェクト：コンソールアプリ(.NET Framework)
.NET Framework Version 4.8.04084
NuGetパッケージ
 @Selenium.Support v3.141.0
 @Selenium.WebDriver v3.141.0
 @Selenium.WebDriver.ChromeDriver v91.0.4472.1900SEGA NET麻雀MJ　ログイン
https://pl.sega-mj.com/players/login
SEGA NET麻雀MJ　プレイ履歴
https://pl.sega-mj.com/playdata_view/showHistory


