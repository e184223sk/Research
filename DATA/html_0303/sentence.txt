C#でEnumを使うとき、int値ではなく、文字に変換して使いたいということがあります。
これをどのように実現するか、一つの実例を書かせていただきます。
またほかにも便利になりそうなメソッドも記載しています。
ちなみにここではサンプルなのでコンソールで作っています。コメントをいただいて、拡張メソッドのコードの追記をしました(2021/7/25)。
コメントいただいた@albireo さんありがとうございます。とりあえず、こんな感じのenumで試していきます。このままenum値を表示させるとこんな感じ結果
勉強をはじめたばかりだと、enumは分かるけど、実際にView(Window)に反映させたり、ComboBoxのItesSourceに使うときには、文字で表現したいけど、どうしたらいいかわからないということがあります。自分もそうでした。
たとえば、こんな感じでいちいち文字に変換したりとか...結果
これでも別にいいのですが、ただ、このenumが複数のところで使われていて、変更があった時などは、面倒だったりします。
特に変換メソッドが複数のところで書かれてしまうと、エラーの原因になります。Microsoft DocumentにDescriptionAttribute クラスというものがあります
このDescriptionはプロパティやイベントの説明文として使うものですが、これを読み込んで、stringに変換して使ってしまおうということです。
この辺りはググるとたくさんのサンプルが出てくるので、調べるだけでも勉強になると思います。
記事書きながら検索したらたとえばこんなのがありましたで、さきほどのサンプルコードにDescriptionを付加するとこんな感じになります。
ちなみに、この後使用するメソッドがわかりやすくなるように値をセットしていますここに紹介するメソッドは自分に使いやすいようにしたものですので、使い勝手は人によると思います。ご自身の開発に合わせていろいろと修正をしていただければと思います。をヘルパークラスとしてまとめています。メソッドで型指定も行っています。実際にメソッドを使って、コーディングしてみます結果がこんな感じでうまく動いてくれているのがわかります
@albireoさんにコメントでご指摘していただいたwhere Tつけて、さらに拡張メソッドを作ってみました。
コメントがとても勉強になり、大感謝です！コメントで書いていただいたまんまを拡張メソッドにしただけですww
で、これをもとに、拡張メソッドを勉強したので、ほかのものも書き直したのが以下となります。var enumValue = (T)value;がコンパイルエラー(CS0030)となってしまい、うまくいかなかったので、(T)Enum.ToObject(typeof(T), value);のままとしています。結果
拡張メソッドを自分ではじめて作りました。
これであっているのか自信がありませんが、とてもよい勉強となりました。


