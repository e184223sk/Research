using System.Linq;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.Azure.WebJobs.Host;
using Microsoft.Azure.KeyVault;
using Microsoft.IdentityModel.Clients.ActiveDirectory;

namespace KeyVaultIntegration
{
    public static class KeyVaultIntegration
    {

        private const string applicationId = "{CLIENT_IDをここに}";
        private const string applicationSecret = "{取得したキーをここに}";
        [FunctionName("KeyVaultSpike")]
        public static async Task&lt;HttpResponseMessage&gt; Run([HttpTrigger(AuthorizationLevel.Function, "get", "post", Route = null)]HttpRequestMessage req, TraceWriter log)
        {
            log.Info("C# HTTP trigger function processed a request.");
            var keyClient = new KeyVaultClient(async (authority, resource, scope) =&gt;
            {
                var adCredential = new ClientCredential(applicationId, applicationSecret);
                var authenticationContext = new AuthenticationContext(authority, null);
                return (await authenticationContext.AcquireTokenAsync(resource, adCredential)).AccessToken;

            });

            var secretIdentifier = "https://spikekey.vault.azure.net/secrets/SomeSecret/";　// KeyVault の Secret Identifier を入れる。
            var secret = await keyClient.GetSecretAsync(secretIdentifier);

            log.Info($"Secret is {secret}");


            return secret == null
                ? req.CreateResponse(HttpStatusCode.BadRequest, "Please pass a secret on the query string or in the request body")
                : req.CreateResponse(HttpStatusCode.OK, "Your secret is " + secret.Value);
        }
    }
}

