



class TestTester
{

    static void Main()//ここでの入力がﾌﾟﾛﾊﾟﾃｨｸﾗｽにsetされる
    {
        Console.Write("テスターの現在の人数: ");
        // 既定値外
        int numOfTesters = -1;

        // 文字は代入されずwhileへ、既定値外は代入されwhileへ、既定値は代入されwhileパス
        if (int.TryParse(Console.ReadLine(), out var nType))
            { numOfTesters = nType; }


        while (numOfTesters &lt;0)
        {
            Console.Write("retype number of testers. ");
             if (int.TryParse(Console.ReadLine(), out nType))
                 numOfTesters = nType;
        }


        Tester t = new Tester();


        Console.Write("name : ");// 名前
        t.Name = Console.ReadLine();

        Console.Write("age : ");// 年齢

        if (int.TryParse(Console.ReadLine(), out var nInput))
            { t.Age = nInput; }

        while (t.Age &lt; 9 || t.Age &gt; 99)
        {
            Console.Write("retype age. ");
            if (int.TryParse(Console.ReadLine(), out nInput))
                t.Age = nInput;
        }

        Console.Write("country : ");// 国籍
        t.Country = Console.ReadLine();

        Console.Write("lang : ");// 言語
        t.Lang = Console.ReadLine();

        Console.Write("response : ");// 対応率
        t.Response = Console.ReadLine();

        Console.Write("rating : ");// 満足度
        t.Rating = Console.ReadLine();

        Console.Write("specialty : ");// 得意分野
        t.Specialty = Console.ReadLine();


        int counter = ++numOfTesters;
        // counterは先程変換したint型の人数値numOfTestersを、+1にする事で何人目。という値になる

        Console.WriteLine("\n入力内容の確認:");// 以前の書き方

        var testerString =
        $"Tester number: No.{counter}\n" +// もっといい書き方
        $"Tester Name: {t.Name}\n" +
        $"Tester Age: {t.Age}\n" +
        $"Tester Country: {t.Country}\n" +
        $"Tester Lang: {t.Lang}\n" +
        $"Tester Response: {t.Response}\n" +
        $"Tester Rating: {t.Rating}\n" +
        $"Tester Specialty: {t.Specialty}\n";
        Console.Write(testerString);





        byte nInput3 =3;

        Console.Write("\n保存しますか？(1/新規保存 2/上書き保存 0/保存しない)");
        if (Byte.TryParse(Console.ReadLine(), out var nType3))
        { nInput3 = nType3; }

        while (nInput3 &lt;0 || nInput3 &gt;2)
        {
            Console.Write("\n入力ミスです。保存しますか？(1/新規保存 2/上書き保存 0/保存しない)");
            if (Byte.TryParse(Console.ReadLine(), out  nType3))
            { nInput3 = nType3; }
        }


        string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
        string personInfo, fileName, fileName2, filePath;
        fileName = "Person_final.txt";
        fileName2 = "Person_final" + DateTime.Now.ToString("yyyyMMddHHmmssffff") + ".txt";
        //fileName2は既存ファイルあるのに新規保存した場合の命名規則 (挙動→switch case1)

        filePath = folderPath + "\\" + fileName;


        personInfo = testerString
        //保存内容代入。どうシンプルに代入すればいいのか…//解決

