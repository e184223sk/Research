


class Calc
{
    public void Minus(int a, int b)// 呼び出したいﾒｿｯﾄﾞ
    {
        Console.WriteLine($"{a} - {b} = {a - b}");
    }
}

class Program
{
    static void Add(int a, int b)// 呼び出したいﾒｿｯﾄﾞ
    {
        Console.WriteLine($"{a} + {b} = {a + b}");
    }
    static void Main(string[] args)// Mainでは、ﾃﾞﾘｹﾞｰﾄをNewｲﾝｽﾀﾝｽ化し、d1,d2が(int a=2 int b=1)と代入された上で呼び出された。
    {
        Calc c = new Calc();// cは別クラス呼び出してﾃﾞﾘｹﾞｰﾄをNewｲﾝｽﾀﾝｽ化可能にしている

        DeleName d1 = new DeleName(Add);// ｲﾝｽﾀﾝｽ化
        DeleName d2 = new DeleName(c.Minus);// ｲﾝｽﾀﾝｽ化
        d2 += d2;// +=演算子



        d1(2, 1);// ｲﾝｽﾀﾝｽ化したd1の呼び出し。d1,d2が(int a=2 int b=1)と代入された上で呼び出される。
        d2(2, 1);// ｲﾝｽﾀﾝｽ化したd2の呼び出し。結果はAdd, c.Subそれぞれのﾒｿｯﾄﾞと等価。



        DeleName d3 = delegate (int a, int b) { Console.WriteLine(a + b); };//匿名メソッド
        d3(2, 1);//匿名メソッド呼出

        DeleName d4 = (int a, int b) =&gt; { Console.WriteLine(a + b); };//ラムダ式
        d4(2, 1);
    }
}

