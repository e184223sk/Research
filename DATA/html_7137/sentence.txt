More than 3 years have passed since last update.C#において、列挙型を拡張することで下記のような表を表現したい場合があります。クラスやDictionaryを使用しても良いですが、
列挙型で表現した方が定義がコンパクトにまとまって見やすいというメリットがあります。列挙型の定義が表の表現に近いことがわかるかと思います。
この程度の量ならswitch-case文などの分岐で行っても問題はないですが、
これが30種類以上あるコマンド表などになると死にます。実行コードです。実行結果です。属性の取得も拡張メソッドを使用することでインテリセンスを使用しながら、素直に書けます。属性の定義と取り出しのためのヘルパークラスです。
内容は各属性ごとの（クラス定義＋属性内部値拡張メソッド）、
内部で使用されるジェネリック化された属性取り出し拡張メソッドです。このように列挙型の定義と使用する側は短くなりますが、
代償としてヘルパークラスは長くなります。
そこで任意の属性とそれを所得するコードスニペットを作りました。
・属性の名前(ex. ShortName)
・属性の型(ex. String)
・属性が定義されていなかった場合の値(ex. 列挙値の文字列)
をタブ移動で入力できます。
EnumAttribute.snippet -GitHubショートカット入力は「attrg」です。
VisualStudioのコードスニペットマネージャーから追加できます。これでオレオレ属性を好きなだけ追加して下さい。リフレクションを使用していますので、速度は遅いです。
気になる場合はneue ccさんが紹介しているキャッシュを使用したアクセスを使用するのが良いです。※追記　高速版を書きました。⇒　列挙体からの属性取得の高速化属性の定義を強制は出来ません。
上記例でもUnknownには属性が付いていません、その場合は拡張メソッド内の規定値が返されます。Visual Studio 2015
.NET Framework 4.6
C#6以下のページを参考にさせて頂きました。
属性に設定したenumの値に対応する文字列を取得する
C# の enum に関連する小技。


