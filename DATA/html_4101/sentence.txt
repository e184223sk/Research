More than 1 year has passed since last update.投稿が大変遅れてしまって本当にすみません!!!
こんなつもりではなかったのですが、書いていく中で色々と思い通りに動かずに、
書く内容をコロコロ変えていたらこんなことになってしまいました。:-(今回書く内容は長い題名からわかる通り、
UnityにあるGridLayoutGroupと言うコンポーネントを使ってみようと言うススメです。GridLayoutGroupと言うのは、Inspector上で設定された条件に沿って、Gridと呼ばれる マス？パネル？を順番に綺麗に自動生成してくれるコンポーネントです！
（多分この解釈であってる！はずだ...）その機能を使って簡単な2Dのマップ、ステージを生成して、設定したplayerを動かしてみよう！！
と言うことを目的に書きました！(注意):入門者向けに書いたつもりな為、「こんなにクドイ説明いらんやろ？」とか、「いや、雑すぎん！？」などもあると思いますが生暖かく!読んでもらえるとありがたいです！！
自分もまだまだ入門者の域を出ることが出来ていないと思いますので。;-)このコードでは privateは省略しています。
それでは、それぞれの関数がどのような機能を働いているのかある程度説明していきます。今回の設定です。

・Paddingはgridの端の余白
・CellSizeはgridの大きさ
・Spacingはそれぞれのgridの間隔
・StartCornerはgridの生成をどこから始めるか
・StartAxisはgridの生成をどの方角、角度、向きで始めるか
・ChildAlignmentは生成する際にスペースが余ったらどこから子要素を始めるか
・Constraintは縦と横かFlexibleで選択してその軸の生成上限grid数詳しくは下のマニュアルをご参照ください。
GridLayoutGroup -Unity マニュアルグローバル変数、またはフィールド変数と呼び方は様々あります。まずSerializeFieldとは、privateな変数をInspector上で設定できるようにする機能です。
下の画像のように、[SerializeField]した変数はその型にあったオブジェクトをアタッチすることが出来、変数にその値、データを保存することが出来ます。
・Dictionary型のgridInfoは、gridを生成する時に、そのgridに割り振る番号と、gridのGameObjectとしてgridのtransform(位置情報)を保存する変数です。
これは後に、Move()関数やplayerの位置を変更するのに使用します！・RectTransform型のrectTransformは、GetLocalPositon()関数の為に用意した変数です。・int型のmapSizeは、生成するgridの数を設定する為の変数です。・bool型のMovableは、playerの移動をするタイミングの調整などを行う為の変数です。・int型のplayerPositionは、Move()関数で生成されたgridにおけるplayerの初期位置を定めた変数です。
（playerの初期位置を設定するのはこのやり方でしないほうがいいです...今回は簡略化する為に用意しました。）この関数は名前の通り、Gridを生成する関数です。
最初に、gridInfo変数を初期化します。グローバル変数で宣言した時に初期化しなかった理由は、もう一度ゲームをロードした時に前回生成したGridをリセットする為です。
この関数をもう一度ロードすると、新しいGridの情報が保存されます。これは所謂Coroutine(コルーチン)と呼ばれるもので,IEnumeratorを返す関数です。
WaitForEndOfFrameとは、１フレーム待機した後に動作を開始すると言うものです。
player変数はRectTransformで宣言されている変数で、その位置をDictionary型のgridInfoのKeyが[0]の時のlocalPositionに更新すると言うものです。それを初期位置と設定しています。
GetLocalPosition()関数は下で解説します。
Movableはコメントに書いている通りです。僕は下に記したサイトを参考に学びました。参考に掲載しておきます。
Unityのコルーチンの使い方まとめこの関数は簡単で、引数に指定したGameObject型の変数のlocalPosionを返す関数です。
使い方としては、上のSetPlayerPos()関数についてと、下のMove()関数についてで使用されているので確認ください！実際のグリッドは次のように展開されています。

右端に見えるボタンはCreate→UI→Button　から生成したものである。以下がその情報である。

条件式の内容や、理由、解説はコメントとして書いていますのでご確認ください。
ButtonのUIにOn Clickという機能がある、ここにMove()関数を記したScriptをアタッチし、Move()関数を選択してcaseに設定した数字を設定する。
それによって、それぞれのUIに役目を与えることが出来ます！Start関数はUnityを触り始めた初心者にも馴染みのある関数だと思う。
これはゲームを起動すると早めに処理される関数である。
下にイベントの処理順の詳細なリンクを参照しておきます！
イベントの実行順序-Unity今回、色々と時間がなかったこともあり、誤ってる部分もあると思います。
そのような点は発見次第、順次修正していきます！！
文章や言い回し、口調が変わったり、おかしなところもあるでしょうが、お許しください。
ここまで読んで頂きありがとうございます。


