More than 5 years have passed since last update.xUnitでユニットテストをする際、テスト実行のためにデータベースが必要となるテストケースをどのように書いたら良いかまとめました。ここではNHibernate + SQLiteの組み合わせの場合のコードを例示していますが、Entity Framework + SQL Databaseなどの場合も同じような考え方で実装できます。テストケースを記述したクラスでIClassFixture&lt;TFixture&gt;を継承しておくと、xUnitによってテストが実行される前にTFixtureクラスがインスタンス化され、そのインスタンスがテストケースのクラスのコンストラクタに渡されます。従って、今回のようにデータベースを必要とするテストでは、次のような方針でテストコードを実装します。Fixtureクラス側では、インメモリなSQLiteに接続するようなコードを、NHibernateとFluentNHibernateを使って実装しました。なお、IDisposableを実装しておくと、xUnitがテスト終了時にDispose()を呼び出してくれるため、DBの接続を閉じるコードなどを書いておくことができます。またSchemaExportを利用し、O/Rマッパーで定義されているマッピング情報を元に、SQLite上に必要なテーブルを自動的に作った上でDBセッションをテストケースに渡す、ということも実装しています。テストケースがIClassFixture&lt;TFixture&gt;を継承していると、テストケースのコンストラクタにTFixtureのインスタンスが渡されます。
渡されたfixtureをフィールドに格納しておき、テストケース内から適宜利用する形になります。project.jsonで読み込んでいるライブラリはこんな感じです。


