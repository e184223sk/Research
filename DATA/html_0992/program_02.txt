
/// &lt;summary&gt;
/// 空で，既定の初期量を備え，キーの型と値型の既定の等値比較子を使用する，LinkedDictionary&lt;TKey,TValue&gt; クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
public LinkedDictionary() : this(0, null, null) { }

/// &lt;summary&gt;
/// 空で，指定した初期量を備え，キーの型と値型の既定の等値比較子を使用する，LinkedDictionary&lt;TKey,TValue&gt; クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="capacity"&gt;LinkedDictionary&lt;TKey,TValue&gt; が格納できる要素数の初期値．&lt;/param&gt;
public LinkedDictionary(int capacity) : this(capacity, null, null) { }

/// &lt;summary&gt;
/// 空で，既定の初期量を備え，指定した IEqualityComparer&lt;TKey&gt; を使用する，LinkedDictionary&lt;TKey,TValue&gt; クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="comparerKey"&gt;キーの比較時に使用する IEqualityComparer&lt;TKey&gt; 実装．キーの型の既定の EqualityComparer&lt;TKey&gt; を使用する場合は null．&lt;/param&gt;
public LinkedDictionary(IEqualityComparer&lt;TKey&gt; comparerKey) : this(0, comparerKey, null) { }

/// &lt;summary&gt;
/// 空で，既定の初期量を備え，指定した IEqualityComparer&lt;TValue&gt; を使用する，LinkedDictionary&lt;TKey,TValue&gt; クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="comparerValue"&gt;値の比較時に使用する IEqualityComparer&lt;TValue&gt; 実装．値の型の既定の EqualityComparer&lt;TValue&gt; を使用する場合は null．&lt;/param&gt;
public LinkedDictionary(IEqualityComparer&lt;TValue&gt; comparerValue) : this(0, null, comparerValue) { }

/// &lt;summary&gt;
/// 空で，既定の初期量を備え，指定した IEqualityComparer&lt;TKey&gt; と IEqualityComparer&lt;TValue&gt; を使用する，LinkedDictionary&lt;TKey,TValue&gt; クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="comparerKey"&gt;キーの比較時に使用する IEqualityComparer&lt;TKey&gt; 実装．キーの型の既定の EqualityComparer&lt;TKey&gt; を使用する場合は null．&lt;/param&gt;
/// &lt;param name="comparerValue"&gt;値の比較時に使用する IEqualityComparer&lt;TValue&gt; 実装．値の型の既定の EqualityComparer&lt;TValue&gt; を使用する場合は null．&lt;/param&gt;
public LinkedDictionary(IEqualityComparer&lt;TKey&gt; comparerKey, IEqualityComparer&lt;TValue&gt; comparerValue) : this(0, comparerKey, comparerValue) { }

/// &lt;summary&gt;
/// 空で，指定したの初期量を備え，指定した IEqualityComparer&lt;TKey&gt; と IEqualityComparer&lt;TValue&gt; を使用する，LinkedDictionary&lt;TKey,TValue&gt; クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="capacity"&gt;LinkedDictionary&lt;TKey,TValue&gt; が格納できる要素数の初期値．&lt;/param&gt;
/// &lt;param name="comparerKey"&gt;キーの比較時に使用する IEqualityComparer&lt;TKey&gt; 実装．キーの型の既定の EqualityComparer&lt;TKey&gt; を使用する場合は null．&lt;/param&gt;
/// &lt;param name="comparerValue"&gt;値の比較時に使用する IEqualityComparer&lt;TValue&gt; 実装．値の型の既定の EqualityComparer&lt;TValue&gt; を使用する場合は null．&lt;/param&gt;
public LinkedDictionary(int capacity, IEqualityComparer&lt;TKey&gt; comparerKey, IEqualityComparer&lt;TValue&gt; comparerValue)
{
    if (capacity &lt; 0) throw new ArgumentOutOfRangeException(nameof(capacity));

    this._keyToValues = new Dictionary&lt;TKey, TValue&gt;(capacity, comparerKey);
    this._valueToKeys = new Dictionary&lt;TValue, TKey&gt;(capacity, comparerValue);
}

/// &lt;summary&gt;
/// 指定した IDictionary&lt;TKey,TValue&gt; から要素をコピーして格納し，キー型と値型の既定の等値比較子を使用する，LinkedDictionary&lt;TKey,TValue&gt; クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="dictionary"&gt;新しい LinkedDictionary&lt;TKey,TValue&gt; に要素をコピーする IDictionary&lt;TKey,TValue&gt;．&lt;/param&gt;
public LinkedDictionary(IDictionary&lt;TKey, TValue&gt; dictionary) : this(dictionary, null, null) { }

/// &lt;summary&gt;
/// 指定した IDictionary&lt;TKey,TValue&gt; から要素をコピーして格納し，指定した IEqualityComparer&lt;TKey&gt; を使用する，LinkedDictionary&lt;TKey,TValue&gt; クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="dictionary"&gt;新しい LinkedDictionary&lt;TKey,TValue&gt; に要素をコピーする IDictionary&lt;TKey,TValue&gt;．&lt;/param&gt;
/// &lt;param name="comparerKey"&gt;キーの比較時に使用する IEqualityComparer&lt;TKey&gt; 実装．キーの型の既定の EqualityComparer&lt;TKey&gt; を使用する場合は null．&lt;/param&gt;
public LinkedDictionary(IDictionary&lt;TKey, TValue&gt; dictionary, IEqualityComparer&lt;TKey&gt; comparerKey) : this(dictionary, comparerKey, null) { }

/// &lt;summary&gt;
/// 指定した IDictionary&lt;TKey,TValue&gt; から要素をコピーして格納し，指定した IEqualityComparer&lt;TValue&gt; を使用する，LinkedDictionary&lt;TKey,TValue&gt; クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="dictionary"&gt;新しい LinkedDictionary&lt;TKey,TValue&gt; に要素をコピーする IDictionary&lt;TKey,TValue&gt;．&lt;/param&gt;
/// &lt;param name="comparerValue"&gt;値の比較時に使用する IEqualityComparer&lt;TValue&gt; 実装．値の型の既定の EqualityComparer&lt;TValue&gt; を使用する場合は null．&lt;/param&gt;
public LinkedDictionary(IDictionary&lt;TKey, TValue&gt; dictionary, IEqualityComparer&lt;TValue&gt; comparerValue) : this(dictionary, null, comparerValue) { }

/// &lt;summary&gt;
/// 指定した IDictionary&lt;TKey,TValue&gt; から要素をコピーして格納し，指定した IEqualityComparer&lt;TKey&gt; と IEqualityComparer&lt;TValue&gt; を使用する，LinkedDictionary&lt;TKey,TValue&gt; クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="dictionary"&gt;新しい LinkedDictionary&lt;TKey,TValue&gt; に要素をコピーする IDictionary&lt;TKey,TValue&gt;．&lt;/param&gt;
/// &lt;param name="comparerKey"&gt;キーの比較時に使用する IEqualityComparer&lt;TKey&gt; 実装．キーの型の既定の EqualityComparer&lt;TKey&gt; を使用する場合は null．&lt;/param&gt;
/// &lt;param name="comparerValue"&gt;値の比較時に使用する IEqualityComparer&lt;TValue&gt; 実装．値の型の既定の EqualityComparer&lt;TValue&gt; を使用する場合は null．&lt;/param&gt;
public LinkedDictionary(IDictionary&lt;TKey, TValue&gt; dictionary, IEqualityComparer&lt;TKey&gt; comparerKey, IEqualityComparer&lt;TValue&gt; comparerValue) :
        this(dictionary != null ? dictionary.Count : 0, comparerKey, comparerValue)
{
    if (dictionary == null) throw new ArgumentNullException(nameof(dictionary));
    this.AddRange(dictionary);
}

/// &lt;summary&gt;
/// 指定した IEnumerable&lt;T&gt; からコピーされた要素を格納する LinkedDictionary&lt;TKey,TValue&gt; クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="collection"&gt;新しい LinkedDictionary&lt;TKey,TValue&gt; に要素をコピーする Enumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;．&lt;/param&gt;
public LinkedDictionary(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt; collection) : this(collection, null, null) { }

/// &lt;summary&gt;
/// 指定した IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt; から要素をコピーして格納し，指定した IEqualityComparer&lt;TKey&gt; を使用する，LinkedDictionary&lt;TKey, TValue&gt;クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="collection"&gt;新しい LinkedDictionary&lt;TKey,TValue&gt; に要素をコピーする Enumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;．&lt;/param&gt;
/// &lt;param name="comparerKey"&gt;キーの比較時に使用する IEqualityComparer&lt;TKey&gt; 実装．キーの型の既定の EqualityComparer&lt;TKey&gt; を使用する場合は null．&lt;/param&gt;
public LinkedDictionary(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt; collection, IEqualityComparer&lt;TKey&gt; comparerKey) : this(collection, comparerKey, null) { }

/// &lt;summary&gt;
/// 指定した IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt; から要素をコピーして格納し，指定した IEqualityComparer&lt;TValue&gt; を使用する，LinkedDictionary&lt;TKey, TValue&gt;クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="collection"&gt;新しい LinkedDictionary&lt;TKey,TValue&gt; に要素をコピーする Enumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;．&lt;/param&gt;
/// &lt;param name="comparerValue"&gt;値の比較時に使用する IEqualityComparer&lt;TValue&gt; 実装．値の型の既定の EqualityComparer&lt;TValue&gt; を使用する場合は null．&lt;/param&gt;
public LinkedDictionary(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt; collection, IEqualityComparer&lt;TValue&gt; comparerValue) : this(collection, null, comparerValue) { }

/// &lt;summary&gt;
/// 指定した IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt; から要素をコピーして格納し，指定した IEqualityComparer&lt;TKey&gt; と IEqualityComparer&lt;TValue&gt; を使用する，LinkedDictionary&lt;TKey, TValue&gt;クラスの新しいインスタンスを初期化します．
/// &lt;/summary&gt;
/// &lt;param name="collection"&gt;新しい LinkedDictionary&lt;TKey,TValue&gt; に要素をコピーする Enumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;．&lt;/param&gt;
/// &lt;param name="comparerKey"&gt;キーの比較時に使用する IEqualityComparer&lt;TKey&gt; 実装．キーの型の既定の EqualityComparer&lt;TKey&gt; を使用する場合は null．&lt;/param&gt;
/// &lt;param name="comparerValue"&gt;値の比較時に使用する IEqualityComparer&lt;TValue&gt; 実装．値の型の既定の EqualityComparer&lt;TValue&gt; を使用する場合は null．&lt;/param&gt;
public LinkedDictionary(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt; collection, IEqualityComparer&lt;TKey&gt; comparerKey, IEqualityComparer&lt;TValue&gt; comparerValue) :
this(collection != null ? collection.Count() : 0, comparerKey, comparerValue)
{
    if (collection == null) throw new ArgumentNullException(nameof(collection));
    this.AddRange(collection);
}

