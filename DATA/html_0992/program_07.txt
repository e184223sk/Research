
/// &lt;summary&gt;
/// LinkedDictionary&lt;TKey,TValue&gt; からすべてのキーと値を削除します．
/// &lt;/summary&gt;
public void Clear()
{
    this._keyToValues.Clear();
    this._valueToKeys.Clear();
}

/// &lt;summary&gt;
/// 指定したキーを持つ値を LinkedDictionary&lt;TKey,TValue&gt; から削除します．
/// &lt;/summary&gt;
/// &lt;param name="key"&gt;削除する要素のキー．&lt;/param&gt;
/// &lt;returns&gt;要素が見つかり削除された場合は true．それ以外の場合は false．&lt;/returns&gt;
public bool Remove(TKey key) =&gt; this.RemoveByKey(key);

/// &lt;summary&gt;
/// 指定したキーを持つ値を LinkedDictionary&lt;TKey,TValue&gt; から削除します．
/// &lt;/summary&gt;
/// &lt;param name="key"&gt;削除する要素のキー．&lt;/param&gt;
/// &lt;returns&gt;要素が見つかり削除された場合は true．それ以外の場合は false．&lt;/returns&gt;
public bool RemoveByKey(TKey key) =&gt; this.RemoveByKey(key, out var value);

/// &lt;summary&gt;
/// 指定した値を持つキーを LinkedDictionary&lt;TKey,TValue&gt; から削除します．
/// &lt;/summary&gt;
/// &lt;param name="value"&gt;削除する要素の値．&lt;/param&gt;
/// &lt;returns&gt;要素が見つかり削除された場合は true．それ以外の場合は false．&lt;/returns&gt;
public bool Remove(TValue value) =&gt; this.RemoveByValue(value);

/// &lt;summary&gt;
/// 指定した値を持つキーを LinkedDictionary&lt;TKey,TValue&gt; から削除します．
/// &lt;/summary&gt;
/// &lt;param name="value"&gt;削除する要素の値．&lt;/param&gt;
/// &lt;returns&gt;要素が見つかり削除された場合は true．それ以外の場合は false．&lt;/returns&gt;
public bool RemoveByValue(TValue value) =&gt; this.RemoveByValue(value, out var key);

/// &lt;summary&gt;
/// 指定されたキーを持つ値を LinkedDictionary&lt;TKey,TValue&gt; から削除し，その要素の値を value パラメーターにコピーします．
/// &lt;/summary&gt;
/// &lt;param name="key"&gt;削除する要素のキー．&lt;/param&gt;
/// &lt;param name="value"&gt;削除された要素の値．&lt;/param&gt;
/// &lt;returns&gt;要素が見つかり削除された場合は true．それ以外の場合は false．&lt;/returns&gt;
public bool Remove(TKey key, out TValue value) =&gt; this.RemoveByKey(key, out value);

/// &lt;summary&gt;
/// 指定されたキーを持つ値を LinkedDictionary&lt;TKey,TValue&gt; から削除し，その要素の値を value パラメーターにコピーします．
/// &lt;/summary&gt;
/// &lt;param name="key"&gt;削除する要素のキー．&lt;/param&gt;
/// &lt;param name="value"&gt;削除された要素の値．&lt;/param&gt;
public bool RemoveByKey(TKey key, out TValue value)
{
    if (this._keyToValues.ContainsKey(key) &amp;&amp; this._valueToKeys.ContainsKey(this._keyToValues[key]))
    {
        value = this._keyToValues[key];
        this._keyToValues.Remove(key);
        this._valueToKeys.Remove(value);
        return true;
    }
    else
    {
        value = default(TValue);
        return false;
    }
}

/// &lt;summary&gt;
/// 指定された値を持つキーを LinkedDictionary&lt;TKey,TValue&gt; から削除し，その要素のキーを key パラメーターにコピーします．
/// &lt;/summary&gt;
/// &lt;param name="value"&gt;削除する要素の値．&lt;/param&gt;
/// &lt;param name="key"&gt;削除する要素のキー．&lt;/param&gt;
/// &lt;returns&gt;要素が見つかり削除された場合は true．それ以外の場合は false．&lt;/returns&gt;
public bool Remove(TValue value, out TKey key) =&gt; this.RemoveByValue(value, out key);

/// &lt;summary&gt;
/// 指定された値を持つキーを LinkedDictionary&lt;TKey,TValue&gt; から削除し，その要素のキーを key パラメーターにコピーします．
/// &lt;/summary&gt;
/// &lt;param name="value"&gt;削除する要素の値．&lt;/param&gt;
/// &lt;param name="key"&gt;削除する要素のキー．&lt;/param&gt;
/// &lt;returns&gt;要素が見つかり削除された場合は true．それ以外の場合は false．&lt;/returns&gt;
public bool RemoveByValue(TValue value, out TKey key) 
{
    if (this._valueToKeys.ContainsKey(value) &amp;&amp; this._keyToValues.ContainsKey(this._valueToKeys[value]))
    {
        key = this._valueToKeys[value];
        this._valueToKeys.Remove(value);
        this._keyToValues.Remove(key);
        return true;
    }
    else 
    {
        key = default(TKey);
        return false;
    }
}

/// &lt;summary&gt;
/// 指定された KeyValuePair&lt;TKey, TValue&gt; を LinkedDictionary&lt;TKey,TValue&gt; から削除します．
/// &lt;/summary&gt;
/// &lt;param name="item"&gt;削除する KeyValuePair&lt;TKey, TValue&gt;．&lt;/param&gt;
/// &lt;returns&gt;要素が見つかり削除された場合は true．それ以外の場合は false．&lt;/returns&gt;
public bool Remove(KeyValuePair&lt;TKey, TValue&gt; item) =&gt; this._keyToValues.ContainsKey(item.Key) &amp;&amp; this._keyToValues[item.Key].Equals(item.Value) &amp;&amp; this.Remove(item.Key);

