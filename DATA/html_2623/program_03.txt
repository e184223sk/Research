
using System;
using System.Collections.Generic;
using System.Linq;
using Random = UnityEngine.Random;

public static class RandomWithWeight  {
    /// &lt;summary&gt;
    /// 重み付き抽選を行う
    /// &lt;/summary&gt;
    /// &lt;param name="itemWeightPairs"&gt;&lt;/param&gt;
    /// &lt;typeparam name="T"&gt;&lt;/typeparam&gt;
    /// &lt;returns&gt;&lt;/returns&gt; 
    // interface利用
    public static T Lotto&lt;T&gt;(IEnumerable&lt;T&gt; itemWeightPairs) where T : IHaveWeight
    {
        // Weight順でソート
        var sortedPairs = itemWeightPairs.OrderByDescending(x =&gt; x.Weight).ToArray();

        // ドロップアイテムの抽選
        float total = sortedPairs.Select(x =&gt; x.Weight).Sum();

        float randomPoint = Random.Range(0, total);

        // randomPointの位置に該当するキーを返す
        foreach (T elem in sortedPairs)
        {
            if (randomPoint &lt; elem.Weight){
                return elem;
            }

            randomPoint -= elem.Weight;
        }

        return sortedPairs[sortedPairs.Length - 1];
    }
}


