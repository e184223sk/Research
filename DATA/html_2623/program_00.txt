using System.Collections.Generic;
using System.Linq;
using UnityEngine;

public static class RandomWithWeight  {
    /// &lt;summary&gt;
    /// 重み付き抽選を行う
    /// &lt;/summary&gt;
    /// &lt;param name="itemWeightPairs"&gt;Key: 抽選する対象, Value: 確率の重み&lt;/param&gt;
    /// &lt;typeparam name="T"&gt;&lt;/typeparam&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public static T Lotto&lt;T&gt;(IEnumerable&lt;KeyValuePair&lt;T, float&gt;&gt; itemWeightPairs) 
    {
        // Weight降順でソート
        var sortedPairs = itemWeightPairs.OrderByDescending(x =&gt; x.Value).ToArray();

        // ドロップアイテムの抽選
        float total = sortedPairs.Select(x =&gt; x.Value).Sum();

        float randomPoint = Random.Range(0, total);

        // randomPointの位置に該当するキーを返す
        foreach (KeyValuePair&lt;T, float&gt; elem in sortedPairs)
        {
            if (randomPoint &lt; elem.Value){
                return elem.Key;
            }

            randomPoint -= elem.Value;
        }

        return sortedPairs[sortedPairs.Length - 1].Key;
    }
}

