
using System.Windows;

namespace Sample {
    public class AttachedXXX {
        public static DependencyProperty XXXProperty
            = DependencyProperty.RegisterAttached(
                "XXX",
                typeof(bool),
                typeof(AttachedXXX),
                new PropertyMetadata(XXX_PropertyChanged) //コールバックを登録
            );

        public static void SetXXX(DependencyObject obj, bool value)
            =&gt; obj.SetValue(XXXProperty, value);

        public static bool GetXXX(DependencyObject obj)
            =&gt; (bool)obj.GetValue(XXXProperty);

        //コールバック
        private static void XXX_PropertyChanged(DependencyObject d, DependencyPropertyChangedEventArgs e) {
            var textBox = d as TextBox;
            if (textBox == null) return;

            //イベントハンドラの登録
            if (e.NewValue != null) {
                textBox.PreviewTextInput += TextBox_PreviewTextInput;
            } else {
                textBox.PreviewTextInput -= TextBox_PreviewTextInput;
            }
        }

        //イベントハンドラ
        private static void TextBox_PreviewTextInput(object sender, TextCompositionEventArgs e) {
            //振る舞い
        }
    }
}

