
public class Hoge : MonoBehaviour {

    StateSequencer m_ss;

    void Start()
    {
        m_ss = new StateSequencer();

        // 処理の登録
        m_ss.Command(S_START);

        m_ss.Command(S_WORK1, "1st");
        m_ss.Command(S_WORK1, "2nd");
        m_ss.Command(S_WORK2, "3rd","0.5");
        m_ss.Command(S_WORK2, "4th", "0.2");

        m_ss.Command(S_END);

    }

    void Update()
    {
        m_ss.Update();
    }

    // 以下、ステート関数

    void S_START(float t,string p1, string p2)
    {
        if (t == 0)
        {
            Debug.Log("S_START Initailize");
        }
        else if (t &gt; 1)
        {
            m_ss.Done();
        }
    }

    void S_WORK1(float t, string p1, string p2)
    {
        if (t == 0)
        {
            Debug.Log("S_WORK1 Initialize :" );
            Debug.Log("&gt;PARAM=" + p1);
        }
        else if (t &gt; 1)
        {
            m_ss.Done();
        }
    }

    void S_WORK2(float t, string p1, string p2)
    {
        string s = p1;
        float wait = float.Parse(p2);

        if (t == 0)
        {
            Debug.Log("S_WORK2 Initialize :");
            Debug.Log("&gt;PARAM=" + s + "," + wait);
        }
        else if (t &gt; wait)
        {
            m_ss.Done();
        }
    }

    void S_END(float t, string p1, string p2)
    {
        if (t == 0)
        {
            Debug.Log("S_END Initailize");
        }
        else if (t &gt; 1)
        {
            m_ss.Done();
        }
    }
}


