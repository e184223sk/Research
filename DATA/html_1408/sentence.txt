More than 1 year has passed since last update.今回は、Vuforia EngineのObject Recognitionという機能を用いて、Raspberry Pi 4を分身させてみました。ラズパイ4の物体形状を認識して、AR表現がどれくらい簡単にできるのか検証してみました。実装も非常に簡単で、ほとんどぶれることがなかったので開発の知見を残していきたいと思います！Vuforia Englineを使って最近買ったRaspberry Pi4をターゲットにして遊んでみました。分身して集まってキングスライム化して、分からないパーツがあれば説明もしてくれます。コードも公開してるので、ARで確認したい方はどうぞ！https://t.co/2kfuYuHp5Z pic.twitter.com/pMI7BxbWwIラズパイが分身して集まって、ドラクエのキングスライム感を出してみました笑Vuforia EngineのImage Targetはよく使っていたのですが、物体に対しての精度がすごくてかなりびっくりしました！Vuforia Engineは、iOSやAndroid、PC、HoloLensといったAR/MRデバイスに対応したAR開発プラットフォームです。Vuforia EngineはPTCが提供していますが、元々はQualcommが開発しており、2015年にPTCがVuforia事業を6500万ドルで買収しています。マーカートラッキングを非常に得意としており、特徴点の多い(複雑な)画像であればほとんどぶれることなく3Dオブジェクトを配置することができます。詳しくはこちらをご覧ください！今一番ホットなARライブラリ「Vuforia」とは今回はスキャンしたオブジェクトをターゲットにするObject Recognitionを使っていきたいと思います。Vuforia EngineにはObject Recognitionというスキャンした物体をマーカーにする機能があります。AndroidでVuforia Object Scannerを使用することで物体をスキャンすることができます。詳しくはこちら
https://library.vuforia.com/articles/Training/Object-Recognition今回は、4GBのメモリが載ったラズパイ4を最近購入したのでラズパイをターゲットにしてみました！次のような画像がScannerアプリと同じフォルダに入っているので、印刷します。模様がたくさんあるところがマーカーになっているので、マス目部分におきます。あとはVuforia Object Scannerアプリを起動して360度カメラを動かすだけでスキャンが完了します！スキャンが完了したあと、右上のシェアボタンから.odファイルを取得します。何らかの手段でPCに.odファイルを送ってください！次にVuforia Developer Portalで先ほどスキャンしたターゲットの情報を登録していきます。(無料で会員登録できます！)ライセンスキーとターゲットを登録していきます。Vuforia Engineを使うには、ライセンスキーを取得する必要があります。開発で使う分には無料で使用できるので以下の手順で取得します。ログイン後、右上の「Get Development Key」から無料ライセンスキーを作成します。License Nameは特になんでも良いです！これでライセンスキーを取得できました。ダウンロードした.odファイルを、Vuforia DeveloperサイトでObject Targetとして登録します。「Target Manager」タブの「Add Database」で、ターゲットを格納するデータベースを作成します。データベースの名前とDeviceにチェックを入れて作成します。
ちなみにCloudを使用すると、リリース後であっても管理画面から簡単にターゲットの追加ができたりします。最後にデータベースの「Add Target」を選択し、先ほどダウンロードした.odファイルを登録します。これでターゲットの登録は完成です！ターゲットの登録が完了したので、次はUnityでオブジェクトを表示していきます！今回は無料でダウンロード可能なラズパイの3Dモデルを使用しました。まず、先ほどスキャンしたラズパイを認識するために、こちらから.unitypackageをダウンロードして展開します。まず、ARCameraを追加し、「Open Vuforia Engine configuration」を押して「App License Key」に先ほど取得したライセンスキーを追加します。これで、Vuforia Engineのアクティベーションが完了したので、UnityでObjectTargetを配置し、その配下に3Dモデルを配置します。
ラズパイのスケールは0.102にするとちょうどよい大きさになりました。このまま実行したところ、3Dモデルが実物とかなりずれていたので、ポジションの調整をしていきます。スキャンしたラズパイと重なるようにスケールとポジションの調整をします。
実行しながらリアルタイムに値を調整していくときれいに重なります。すると、このようになりました。いつからARに切り替わったのか分からないくらいスムーズに表示されています！！これだけでも十分なのですが、今回はもう少し遊んでみるために、分身9個のラズパイ3Dモデルを配置してみました。それぞれにアニメーションをつけていきます！今回のアニメーションはiTweenを用いて実装しました。Object Targetがラズパイを認識したときに、startAnimationを呼び出す実装にしています。
Object Target側からディレイを指定します。こちらのRaspiBehaviourを9個のラズパイモデルにコンポーネントとして追加していきます。初回のアニメーションで9個に分散、2秒のディレイののち中心部にあつまり、メインのラズパイ以外は非表示にし、メインのラズパイ を2倍に拡大させています。情報表示の部分は、パーツ部分にタッチを受付けるためと、情報表示のためのQuadを用意しています。情報表示の部分はTextMesh Proを使っています。このInfoBehaviourコンポーネントをそれぞれの情報表示用のQuadに追加しています。ラズパイに3Dモデルをあてた状態で水平方向に軽く振ってみましたがちゃんとトラッキングできていました、すごい。時折横からの撮影では時折ずれてしまうことがありました。
金属部分の反射の関係が大きくなってしまうからなんでしょうか。。ラズパイを半分隠してみたところ少しだけ3Dモデルが揺れたものの、問題なく表示できていました
特徴点が半分くらい認識できれば良さそうですね！60センチくらいラズパイから離してトラッキングしてみました。ちょっと傾いていますね。。使ってみたところ30センチ以内からの撮影であれば安定していました。Vuforia Engineは円柱型や直方体のそれぞれの面の画像を用意することでトラッキンッグすることができますが、ラズパイのような特殊な形をしていてもトラッキングをすることができました。商品にARでエフェクトを作成したり、説明を加えたりするのは面白そうだな〜と感じました。開発者向けのVuforia Slackコミュニティサイトもあるようです。
Vuforiaの新情報を取得できたり、実装で困ったことがあれば質問できるのでおすすめです！また今回のコードはGithubに載せているので是非クローンしてお手元で試してみてください！


