暇つぶしがてらポ〇モン的対戦RPGゲームを開発したので、その中身の作り方の概要を記事にしたいと思います。Qiitaに投稿するの初めてで書くの慣れてないので読みにくかったらすいません。また、Unity触って1年の初心者が独学で作っただけなのであくまで方法の一つ程度として考えてください。全部で何記事になるか分かりませんが、
1.ゲーム進行の管理
2.外部データのインポートとEditor拡張
3.簡単なAIの設計
くらいまで書けたらと思っています。1.↓3.↓また、今回の内容について、エクスプラボさんの記事を参考にさせて頂いた(というかほぼまんまパクった)ので、参考文献としてリンクを張らせて頂きます。ぶっちゃけこれ読むだけでほぼ全部終わる内容なのですが、一応解説していきます。参考文献ScriptableObjectとは、Unity内で扱うデータの形式の一つで、パラメータの種類を共有するデータを多く管理する時などに便利です。今回作るゲームでは、
①モンスターの図鑑データ(モンスターの種類ごとに固有のデータ)
②育成モンスターのデータ(育成方法や技構成など)
③技データ(威力、命中率、タイプなど)
の3つのデータをScriptableObjectで管理しています。取り敢えずScriptableObjectを作っていきます。Assetメニュー内でCreate/C# Scriptから新規スクリプトPokeDexを作っていきます普通のスクリプトと違う所は、MonoBehaviourを継承せずにScriptableObjectを継承している所です。これでUnity側がScriptableObjectと認識してくれます。モンスター図鑑データに必要なパラメータをpublicでインスペクターから入力できるようにしておきます。一番上の[CreateAssetMenu(fileName ="PokeDex",menuName ="Create PokeDex")]ですが、これをつけておくとAssetフォルダ上で右クリック→CreateにCreate PokeDexというメニューが追加されるので、これで個別データを生成していきます。
Create PokeDexをクリックするとAssetフォルダ傘下にPokeDexという名前のオブジェクトが一つ生成されます。これ一つがモンスター1種類のデータに対応していて、インスペクターからデータを入力することでデータを一つ一つ作っていけます。
こんな感じに
でも待って下さい、モンスター数が少ないうちはデータを手入力していっても大丈夫でしょうが、今回は百種類以上のモンスターデータが必要です。そんな大量のデータをいちいち手入力でインスペクターに入れていったり画像や音声データをアタッチしていくのはあまりにも大変ですし、ヒューマンエラーが起きた時に気付けません。そこで、外部データをUnityとは別の所で管理して、そこからデータをインポートして自動でScriptableObjectにアタッチしてくれるようなシステムを作りましょう。今回は外部データとしてCSVファイルを使いました。GoogleスプレッドシートでもExcelでも良いので適当に以下のような表ファイルを作成してみてください。
こんな感じでモンスター毎にデータを入力していきます。次に、このデータを元にScriptableObjectを生成するスクリプトを作成していきます。ちなみに、以下の内容は↑の参考文献に書かれている内容を自分のゲーム用にアレンジしただけです。下のLoadCSV_Pokedexスクリプトを作成してください。これも先ほどと同じくScriptableObjectで、CSVファイルを読み込むための入れ物です。Assetメニューで右クリックしてCreate/Create CSVLoader/Create CSVLoader_PokedexからCSVLoader_PokedexのScriptableObjectを作成します。
次に、下のCsvLoaderEditor_Pokedexスクリプトを作成してください。(参考文献より引用)このスクリプトは、CSVファイルに書かれている内容をPokeDexスクリプトのパラメータにそれぞれ当てはめていくスクリプトになっています。using UnityEditorとなっていてEditorを継承しているこのスクリプトはビルド時には無視され、Editor内でのみ使用できるスクリプトになります。このようなEditor用のスクリプトを使うためには、Asset傘下のどこでも良いので"Editor"という名前のフォルダを作って、その中にこのスクリプトを入れてください。↓こんな感じ
さて、このスクリプトですがの部分でLoadCSV_Pokedexを指定しています。は、LoadCSV_Pokedexのインスペクター上にボタンを配置して、そのボタンが押されるとtrueを返します。このボタンが押されると、SetCsvDataToScriptableObject(LoadCSV)が読み込まれて、CSVファイルを1区切りずつ読んでいってPokeDexのパラメータに変換して、ファイルを生成してくれます。このスクリプトをEditorフォルダに配置したらLoadCSV_Pokedexにボタンが生成されていると思うので、上で作ったCSVファイルをアタッチしてボタンをポチッ!
しばらく待つと...Resourcesフォルダに無事モンスター図鑑データが生成されました!
ですが画像データとか音声データのアタッチが出来てないので、それもついでにアタッチ出来るようにしてあげましょう。そのために私がまず使ったのが、こちらのサイトのNonResources関数(製作者様に圧倒的感謝)これにより、Editor内でResources以外のパスからでも全ファイルを取得することが出来ます。NonResourcesをEditorフォルダ内に置いて、CsvLoaderEditor_Pokedexに以下のように追記しておきましょう。画像データと音声データを指定のパスに配置して、指定のファイル名にすることでそれぞれ対応させるようにしています。今回の場合だと以下のような配置・ファイル名になっています。これでもう一度LoadCSV_Pokedexのボタンをポチッ!
すると...
画像データと音声データの登録が出来ました!
後は種類を増やしても同じ方法でデータを追加して行けます。
モンスター個体データや技データについても保持するパラメータとCSVに入力するデータを変えるだけで同様にScriptableObjectとしてデータを生成できます。以上がCSVファイル→ScriptableObjectへデータを入力させるエディタ拡張です。大量のデータをインポートする時には便利でした。


