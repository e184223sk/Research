More than 1 year has passed since last update.Prism入門2回目です。今回は画面遷移を行うためのNavigationServiceについて説明します。Xamarin.Formsでは画面遷移にNavigation.PushAsyncを使用します。
ただ、このメソッドはContentPageクラスのメソッドであり、MVVMの層でいうとViewに存在します。
Viewは画面を描画する機能しか持たないのに画面遷移の機能をViewで行うのはおかしいです。そこで、XamarinにはNavigationServiceという機能が存在します。
これはViewModelで画面遷移を行えるようにする機能です。一旦、画面遷移はViewModelでやるべきか、という話は置いておきましょう。今回はNavigationServiceについて説明します。NavigationServiceはコンストラクタの引数に 
INavigationService navigationService と記述すると
自動的にクラスが生成された時にNavigationServiceも生成されます。コンストラクタ内で画面遷移を行うことはまずないので、メンバー変数に保存しておきます。画面遷移する時は引数に遷移する先のViewのクラス名を指定します。
今回はNextPageに遷移するとします。これだけでは動きません。NextPageを遷移先として登録する必要があります。
登録はAppのRegisterTypes(IContainerRegistry containerRegistry)で行います。登録すると、NavigationServiceで画面遷移を行えるようになります。
文字列で画面遷移を行なっているため、画面同士は疎であると言えます。
（実際のところ文字列で指定しているので完璧に疎かと言われると微妙ですが）画面遷移する時に下記のメソッドが呼び出されます。
画面Aから画面Bに移動しようとすると、
AのOnNavigatedFrom、BのOnNavigatingTo、Bの画面表示、BのOnNavigatedToの
順番に呼び出されます。
遷移するときの初期化や終了処理をここに書くと便利でしょう。
ただ、特定の条件（物理バックキー等）で遷移した時は呼び出されないので注意してください。
それらの条件については、OnNavigatingTo等のキーワードで検索すると見つかります。これらのメソッドはINavigationAwareのインターフェースで定義されています。
テンプレートでは最初からインターフェースが適用されてますが、自分でゼロから
書くときは、INavigationAwareを書き忘れないようにしましょう。画面遷移するときに画面間でパラメーターを渡すこともできます。遷移元ではnavigationParametersに値を加えます。遷移先のOnNavigatedToやOnNavigatingToで受け取ります。遷移するときのアドレスの文字列に値を指定することもできます。今回は機能の一部のみを紹介しました。
紹介してない機能として戻るの実装や画面遷移のキャンセルといった機能もあります。
興味あったら他の資料を探してみてください。


