More than 3 years have passed since last update.タイムラインの技術イケメンが、「Mock を使うべき理由がわからない」という話をポストしていて、その解法として、そもそも設計が悪いという話と、高階関数のような方法で コンストラクタに関数を渡せばいいやんという話をいただいたのですが、試したことがなかったのでやってみました。無事うまくいきました。関数を高階関数として渡して処理するのはとても簡単でした。関数オブジェクトは、Func キーワードで定義できます。例えば Func&lt;string, string&gt; は、引数１、戻り値１の関数です。直接コーデイングをせず、bar という関数オブジェクトを実行するようにします。実態はデフォルトコンストラクタで渡しています。ちなみに、関数のパラメータでも関数を渡せます。当初は、関数のオプション（デフォルト値月の引数）で実装しようとしましたが、const でないと認められないようなので、このような実装にしてみました。同じように引数の無く、戻り値１の関数も、private Func&lt;string&gt; foo; といったノリで定義できます。じゃあ、戻り値が無いのはどうするのだろう？と思いますが、Func では書けません。代わりに、Action を使います。使い方は Func と全く同じなので、コードをご覧ください。さて、Mock に該当するテストを書いてみましょう。 テストのところで、外部呼出しなどを次のような感じで違う関数に入れ替えてあげればシンプルに似たことができます。Moq では、関数から戻ってきた値を Assert する以外に、Mock に適切に値が渡ってきたかをテストしたいときがあります。その時もとても簡単で、こんな感じでいいでしょう。確かに Mock ライブラリが無くても似たようなことがシンプルにできますね！


