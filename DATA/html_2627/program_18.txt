
public abstract class ValueObject&lt;T&gt; where T : ValueObject&lt;T&gt;
{
    /* データの同一性を判定する関数 -&gt; 継承先で実装 */
    protected abstract bool EqualsCore(T other);

    /* ハッシュコード生成に使用するパラメータを取得する関数 -&gt; 継承先で実装 */
    protected abstract IEnumerable&lt;object&gt; GetHashCodeParameters();

    public static bool operator ==(ValueObject&lt;T&gt; left, ValueObject&lt;T&gt; right)
    {
        return Equals(left, right);
    }

    public static bool operator !=(ValueObject&lt;T&gt; left, ValueObject&lt;T&gt; right)
    {
        return !Equals(left, right);
    }

    public override bool Equals(object obj)
    {
        var other = obj as T;

        if (other == null)
        {
            return false;
        }
        else
        {
            return this.EqualsCore(other);
        }
    }

    public override int GetHashCode()
    {
        var objs = this.GetHashCodeParameters();

        var hash = 0;

        foreach(var obj in objs)
        {
            hash ^= obj.GetHashCode();
        }

        return hash;
    }
}

