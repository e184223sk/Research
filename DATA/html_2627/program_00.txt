public abstract class AstNodeInfo
{
    public string Location { get; }

    public AstNodeInfo(ClangCursor cursor)
    {
        /* ソース上の位置情報を取得 */
        this.Location = this.GetLocation(cursor);
    }

    public string GetLocation(ClangCursor cursor)
    {
        /* カーソル位置を取得 */
        var loc = cursor.Location;

        /* カーソル位置がnullでない */
        if (loc != null)
        {
            /* ファイル位置を取得 */
            var floc = loc.FileLocation;

            /* ファイル位置がnullでない */
            if (floc != null)
            {
                /* ファイル情報がnullでない */
                if(floc.File != null)
                {
                    /* ファイルパスを取得 */
                    var path = Path.GetFullPath(floc.File.FileName);

                    /* ファイル上の行番号を取得 */
                    var line = floc.Line;

                    /* ファイル上の列番号を取得 */
                    var col = floc.Column;

                    /* 位置情報文字列を生成 */
                    var location = $"{path}[L.{line},C.{col}]";

                    return location;
                }
                else
                {
                    /* ファイル上の行番号を取得 */
                    var line = floc.Line;

                    /* ファイル上の列番号を取得 */
                    var col = floc.Column;

                    /* 位置情報文字列を生成 */
                    var location = $"[L.{line},C.{col}]";

                    return location;
                }
            }
            else
            {
                /* 位置情報なし */
                return string.Empty;
            }
        }
        else
        {
            /* 位置情報なし */
            return string.Empty;
        }
    }
}

