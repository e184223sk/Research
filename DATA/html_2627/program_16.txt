
private void DumpInvokationTrees()
{
    /* Behavior Definition MapのValue(BehaviorInfo)リストを取得 */
    var behavior_defnitions = this.BehaviorDefinitionMap.Values;

    /* Behavior Definitionリストを走査 */
    foreach (var behavior in behavior_defnitions)
    {
        /* 関数定義と定義位置を出力 */
        this.SendMessage($"{behavior.Definition} @ {behavior.Location}");

        /* 関数のコールツリーを出力 */
        this.DumpInvokationTree(behavior);

        /* 改行 */
        this.SendMessage();
    }
}

private void DumpInvokationTree(BehaviorInfo behavior, int depth = 1)
{
    /* Behavior InfoのInvokation Infoリストを走査 */
    foreach (var invokation in behavior.Invokations)
    {
        /* インデント(1段階)を生成 */
        var indent = new string(' ', depth * 2);

        /* インデント(2段階)を生成 */
        var indent2 = new string(' ', (depth + 1) * 2);

        /* コール関数定義とコール位置を出力 */
        this.SendMessage($"{indent}{invokation.Definition} @ {invokation.Location}");

        /* 親関数とコール関数のIDが同一(再帰呼び出し) */
        if (behavior.ID == invokation.ID)
        {
            /* 再帰呼び出しの旨を出力 */
            this.SendMessage($"{indent2} &lt;Recursive Call...&gt;");
        }
        else
        {
            /* Behavior Definition Mapにコール関数と同一IDのBehavior Infoがあるかを確認 */
            if (this.BehaviorDefinitionMap.ContainsKey(invokation.ID))
            {
                /* コール関数のBehavior Infoを取得 */
                var child_behavior = this.BehaviorDefinitionMap[invokation.ID];

                /* コール関数を親にしてコールツリーを出力 */
                this.DumpInvokationTree(child_behavior, depth + 1);
            }
            else
            {
                /* コール関数の関数定義が見つからない旨を出力 */
                this.SendMessage($"{indent2} &lt;Behavior Definition Not Found...&gt;");
            }
        }
    }
}

