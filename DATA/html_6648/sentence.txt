More than 3 years have passed since last update.特定のデータファイルなどを改変したい際、その構造を操作する方法が提供されていない場合、最終的にはバイナリ解析して改変することになるかと思います。
チェックサムなどがある場合、その方法も解析が必要になってくるのだと思いますが、ここでは単純なデータ構造のバイナリファイルを解析した際に使用した、C#のコードについての備忘録です。
なお、コードは実際のものではなく簡略化した内容としました。きわめて原始的な方法で実施していました。
一部を変更し、出力されたファイルと変更前のファイルとをWinMargeで比較し、変わった部分の前後から判断して行くだけです。
今回扱ったデータはそのデータが何であるのかのID、そのデータの長さ、データといった構造になっていました。
単純な構造ですので、データの見方がわかってしまえば簡単です。バイト配列を操作する簡単なクラスを作成します。
このままだとあまりBinaryReaderと変わりませんが、必要に応じて改変していきます。例えば、データの長さを示す形式がint型なら、int型を操作するクラスを作成します。ポイント解析した結果データ構造が判明した場合、各データ項目を操作しやすくするクラスを作成します。後は上記のクラスを基準にデータ構造に合わせたクラスを順次作成して行きます。一通りデータの解析が済みましたら、データを読込み、必要な操作を行い、ファイル出力します。実際にはもう少し複雑ですが、このような形で進めていました。
やってみれば意外にバイナリ解析は簡単なもので、後は地道な作業です。
クラス設計的に、MyIntはMyBytesからデータを読み出すこと前提で作っていたりなど、設計思想的には好ましくない部分が多いのかもしれませんが、公式に公開するものではないので、とりあえずやりやすいように作ったものです。以上


