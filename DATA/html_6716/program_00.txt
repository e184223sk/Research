using System;
using System.Diagnostics;
using System.Threading.Tasks;

static class Program{
    static Stopwatch sw=new Stopwatch();
    const int cores=4;
    static int maxsum=2000000000;

    static void Main(){
        maxsum/=cores;

        Console.WriteLine("for");
        sw.Start();
        int sum=0;
        for(int n=0;n&lt;cores;n++){
            int esum=0;
            for(int i=0;i&lt;maxsum;i++){
                esum++;
            }
            sum+=esum;
        }
        sw.Stop();
        Console.WriteLine($"time: {sw.ElapsedMilliseconds}ms");
        Console.WriteLine("{0}",sum);

        sw.Reset();

        Console.WriteLine("ConvertAll Task");
        sw.Start();
        sum=0;
        var Taskss=Array.ConvertAll(new object[cores],n=&gt;Task.Run(()=&gt;{
            int esum=0;
            for(int i=0;i&lt;maxsum;i++){
                esum++;
            }
            sum+=esum;
        }));
        Task.WaitAll(Taskss);
        sw.Stop();
        Console.WriteLine($"time: {sw.ElapsedMilliseconds}ms");
        Console.WriteLine("{0}",sum);

        sw.Reset();

        Console.WriteLine("Parallel.For");
        sw.Start();
        sum=0;
        Parallel.For(0,cores,(n)=&gt;{
            int esum=0;
            for(int i=0;i&lt;maxsum;i++){
                esum++;
            }
            sum+=esum;
        });
        sw.Stop();
        Console.WriteLine($"time: {sw.ElapsedMilliseconds}ms");
        Console.WriteLine("{0}",sum);
    }
}

