
  class Program
  {
    static void Main(string[] args)
    {
      /* AutoMapperの初期設定 */
      /* 先ほど定義したUserProfileを定義します */
      var mapperConfig = new MapperConfiguration(mc =&gt;
      {
        mc.AddProfile(new UserProfile());
      });

      /* IMapper型のインタフェースmapperを介して変換を行います */
      /* 実際に使うときは、このオブジェクトをシングルトンで持たせる運用が良いでしょう */
      IMapper mapper = mapperConfig.CreateMapper();

      /* Listを適当に定義する */
      var struct_list_in = new SampleStructListIn()
      {
        Id = 55,
        UserName = "Hanako",
        Items = new List&lt;SampleStructIn&gt;()
        {
          new SampleStructIn()
          {
            Id = 4,
            FlavorName = "Chocolate",
            Date = DateTime.Now.AddDays(-2),
          },
          new SampleStructIn()
          {
            Id = 5,
            FlavorName = "Strawberry",
            Date = DateTime.Now.AddDays(-1)
          },
          new SampleStructIn()
          {
            Id = 8,
            FlavorName = "Hawaiian Blue",
            Date = DateTime.Now.AddDays(0)
          }
        }
      };

      /* 値クラスからクラスに変換 */
      var class_insntance_list = mapper.Map&lt;SampleClassList&gt;(struct_list_in);

      /* SampleModelListというクラスでUpdateの処理をする*/
      var model_update_list = new SampleModelList(class_insntance_list);
      model_update_list.Update();

      /* クラスから値クラスに変換 */
      var struct_out_list = mapper.Map&lt;SampleStructListOut&gt;(class_insntance_list);

      /* 結果出力 */
      Console.WriteLine("User FlavorName:{0}", struct_out_list.UserName);
      Console.WriteLine("Number:{0}", struct_out_list.NumberOfResponse);
      foreach (var item in struct_out_list.Items)
      {
        Console.WriteLine("{0},{1},{2}", item.FlavorName, item.Date.ToString(), item.DayOfWeek);
      }
   }
  }

  /* 処理を実行するためのクラス */
  class SampleModelList
  {
    private SampleClassList _input;

    public SampleModelList(SampleClassList input)
    {
      _input = input;
    }

    public void Update()
    {
      /* Items数の代入処理と、DayOfWeekへの代入を行う */
      _input.NumberOfResponse = _input.Items.Count;
      foreach (var item in _input.Items)
      {
        item.DayOfWeek = item.Date.DayOfWeek.ToString();
      }
    }
  }

