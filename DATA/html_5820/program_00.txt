using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using OpenCvSharp;

namespace TestGrabCut
{
    class Program
    {
        static void Main(string[] args)
        {
            // 前景らしい領域を表す定数
            const int GC_PR_FGD = 3;

            // 対象画像オブジェクト
            Mat image = new Mat("iphone8IMGL7576_TP_V4.jpg", ImreadModes.Color);

            // 前景を含む領域
            Rect rectangle = new Rect(300, 20, 650, 500);

            // 前景を抽出
            var result = new Mat(image.Size(), MatType.CV_8U);
            var bgdModel = new Mat();
            var fgdModel = new Mat();
            var source = new Mat(image.Size(), MatType.CV_8U, new Scalar(GC_PR_FGD));
            // GrabCutするイテレーションに5回を指定
            Cv2.GrabCut(image, result, rectangle, bgdModel, fgdModel, 5, GrabCutModes.InitWithRect);
            Cv2.Compare(result, source, result, CmpTypes.EQ);
            // 抽出した前景を貼り付ける画像、ソースと同サイズの真っ白な画像を指定
            Mat foreground = new Mat(image.Size(), MatType.CV_8UC3, new Scalar(255, 255, 255));
            image.CopyTo(foreground, result);

            // 表示
            Cv2.ImShow("タイトル", foreground);
            Cv2.WaitKey();
        }
    }
}

