using UnityEngine;

namespace CustomInputKey
{
    /// &lt;summary&gt;
    /// Custom InputKey
    /// &lt;/summary&gt;
    public static class CustomInput
    {
        static bool isCheck_Input;
        static bool preventContinuityInput;

        static float buttonDownTime;
        static float timer;

        /// &lt;summary&gt;
        /// Simultaneous input prohibited
        /// &lt;/summary&gt;
        /// &lt;param name="key"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static bool SingleInputKeyDown(KeyCode key)
        {
            if (Input.anyKeyDown == false) isCheck_Input = false;

            if (isCheck_Input == false)
            {
                if (Input.GetKeyDown(key))
                {
                    isCheck_Input = true;
                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// Continuity input prohibited
        /// &lt;/summary&gt;
        /// &lt;param name="key"&gt;&lt;/param&gt;
        /// &lt;param name="intervalSeconds"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static bool Interval_InputKeydown(KeyCode key,float intervalSeconds)
        {
            timer = Time.time;

            if (Input.GetKeyDown(key) &amp;&amp; timer - buttonDownTime &gt;= intervalSeconds)
            {
                if (preventContinuityInput==false)
                {
                    preventContinuityInput = true;
                    buttonDownTime = Time.time;
                    return true;
                }
                else if(preventContinuityInput)
                {
                    preventContinuityInput = false;
                    buttonDownTime = Time.time;
                    return true;
                }
            }

            return false;
        }
    }
}

