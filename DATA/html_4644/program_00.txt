public class PrefabChanger
{
    public static void ExecuteChange(List&lt;string&gt; targets, System.Action&lt;GameObject&gt; onChange)
    {
        if (onChange == null) return;

        foreach (string path in targets)
        {
            var prefabAsset = AssetDatabase.LoadAssetAtPath(path, typeof(GameObject)) as GameObject;
            if (prefabAsset == null) continue;

            var prefab = PrefabUtility.InstantiatePrefab(prefabAsset) as GameObject;
            if (prefab == null) continue;

            onChange(prefab);
            PrefabUtility.ReplacePrefab(prefab, prefabAsset);    // 反映.

            GameObject.DestroyImmediate(prefab);
        }
    }

    // 子どものGameObjectを走査して処理を適用するためのヘルパ.
    public static void ScanTree(GameObject gameObj, System.Action&lt;GameObject&gt; onExecute)
    {
        if (gameObj == null) return;
        if (onExecute == null) return;

        onExecute(gameObj);

        if (gameObj.transform.childCount &gt; 0)
        {
            for (int i = 0; i &lt; gameObj.transform.childCount; ++i)
            {
                var child = gameObj.transform.GetChild(i);
                ScanTree(child.gameObject, onExecute);
            }
        }
    }
}

