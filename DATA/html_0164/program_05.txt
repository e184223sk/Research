
/// &lt;summary&gt;
/// サブスクライバーを生成します。
/// &lt;/summary&gt;
internal class SampleMessageSubscriberFactory : MessageSubscriberFactoryBase
{
    /// &lt;summary&gt;
    /// インスタンスを生成します。
    /// &lt;/summary&gt;
    /// &lt;param name="subscriberSetting"&gt;サブスクライバーの動作設定&lt;/param&gt;
    /// &lt;param name="logger"&gt;ロガー&lt;/param&gt;
    internal SampleMessageSubscriberFactory(MessageSubscriberSetting subscriberSetting, ILogger logger)
        : base(subscriberSetting, logger)
    {
    }

    /// &lt;summary&gt;
    /// シリアライザを取得します。
    /// &lt;/summary&gt;
    /// &lt;typeparam name="T"&gt;シリアライズ対象オブジェクトの型&lt;/typeparam&gt;
    /// &lt;returns&gt;シリアライザ&lt;/returns&gt;
    protected override IDeserializer&lt;T&gt; GetDeserializer&lt;T&gt;()
    {
        return SampleSerializerFactory.Create&lt;T&gt;();
    }
}

/// &lt;summary&gt;
/// サブスクライバーの生成処理の基本実装。
/// &lt;/summary&gt;
public abstract class MessageSubscriberFactoryBase
{
    /// &lt;summary&gt;
    /// インスタンスを生成します。
    /// &lt;/summary&gt;
    /// &lt;param name="subscriberSetting"&gt;サブスクライバーの動作設定&lt;/param&gt;
    /// &lt;param name="logger"&gt;ロガー&lt;/param&gt;
    protected MessageSubscriberFactoryBase(MessageSubscriberSetting subscriberSetting, ILogger logger)
    {
        SubscriberSetting = subscriberSetting;
        Logger = logger;
    }

    /// &lt;summary&gt;
    /// サブスクライバーの動作設定を取得します。
    /// &lt;/summary&gt;
    private MessageSubscriberSetting SubscriberSetting { get; }

    /// &lt;summary&gt;
    /// ロガーを取得します。
    /// &lt;/summary&gt;
    private ILogger Logger { get; }

    /// &lt;summary&gt;
    /// サブスクライバーを生成します。
    /// &lt;/summary&gt;
    /// &lt;typeparam name="TKey"&gt;キーの型&lt;/typeparam&gt;
    /// &lt;typeparam name="TMessage"&gt;メッセージの型&lt;/typeparam&gt;
    /// &lt;returns&gt;サブスクライバー&lt;/returns&gt;
    public MessageSubscriber&lt;TKey, TMessage&gt; CreateSubscriber&lt;TKey, TMessage&gt;(string topic)
    {
        return new MessageSubscriber&lt;TKey, TMessage&gt;(
            GetDeserializer&lt;TKey&gt;()
            , GetDeserializer&lt;TMessage&gt;()
            , SubscriberSetting
            , topic
            , Logger
            );
    }

    /// &lt;summary&gt;
    /// シリアライザを取得します。
    /// &lt;/summary&gt;
    /// &lt;typeparam name="T"&gt;シリアライズ対象オブジェクトの型&lt;/typeparam&gt;
    /// &lt;returns&gt;シリアライザ&lt;/returns&gt;
    protected abstract IDeserializer&lt;T&gt; GetDeserializer&lt;T&gt;();
}

