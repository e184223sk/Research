/// &lt;summary&gt;
/// キー
/// &lt;/summary&gt;
public readonly struct SampleMessageKey : IEquatable&lt;SampleMessageKey&gt;
{
    public SampleMessageKey(string key)
    {
        Key = key;
    }

    public string Key { get; }

    public override bool Equals(object obj)
    {
        return obj is SampleMessageKey key &amp;&amp; Equals(key);
    }
    public bool Equals(SampleMessageKey other)
    {
        return Key == other.Key;
    }
    public override int GetHashCode()
    {
        return 990326508 + EqualityComparer&lt;string&gt;.Default.GetHashCode(Key);
    }
    public override string ToString()
    {
        return Key;
    }
}

/// &lt;summary&gt;
/// メッセージ
/// &lt;/summary&gt;
public class SampleMessageBody
{
    public SampleMessageBody(DateTimeOffset time, string message)
    {
        Time = time;
        Message = message;
    }

    public DateTimeOffset Time { get; }
    public string Message { get; }

    public override string ToString()
    {
        return Message;
    }
}

