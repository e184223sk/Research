
/// &lt;summary&gt;
/// パブリッシャーを生成します。
/// &lt;/summary&gt;
internal class SampleMessagePublisherFactory : MessagePublisherFactoryBase
{
    /// &lt;summary&gt;
    /// インスタンスを生成します。
    /// &lt;/summary&gt;
    /// &lt;param name="publisherSetting"&gt;パブリッシャーの動作設定&lt;/param&gt;
    /// &lt;param name="logger"&gt;ロガー&lt;/param&gt;
    internal SampleMessagePublisherFactory(MessagePublisherSetting publisherSetting, ILogger logger)
        : base(publisherSetting, logger)
    {
    }

    /// &lt;summary&gt;
    /// シリアライザを取得します。
    /// &lt;/summary&gt;
    /// &lt;typeparam name="T"&gt;シリアライズ対象オブジェクトの型&lt;/typeparam&gt;
    /// &lt;returns&gt;シリアライザ&lt;/returns&gt;
    protected override ISerializer&lt;T&gt; GetSerializer&lt;T&gt;()
    {
        return SampleSerializerFactory.Create&lt;T&gt;();
    }
}

/// &lt;summary&gt;
/// パブリッシャーの生成処理の基本実装。
/// &lt;/summary&gt;
public abstract class MessagePublisherFactoryBase
{
    /// &lt;summary&gt;
    /// インスタンスを生成します。
    /// &lt;/summary&gt;
    /// &lt;param name="publisherSetting"&gt;パブリッシャーの動作設定&lt;/param&gt;
    /// &lt;param name="logger"&gt;ロガー&lt;/param&gt;
    protected MessagePublisherFactoryBase(MessagePublisherSetting publisherSetting, ILogger logger)
    {
        PublisherSetting = publisherSetting;
        Logger = logger;
    }

    /// &lt;summary&gt;
    /// パブリッシャーの動作設定を取得します。
    /// &lt;/summary&gt;
    protected MessagePublisherSetting PublisherSetting { get; }

    /// &lt;summary&gt;
    /// ロガーを取得します。
    /// &lt;/summary&gt;
    private ILogger Logger { get; }

    /// &lt;summary&gt;
    /// パブリッシャーを生成します。
    /// &lt;/summary&gt;
    /// &lt;typeparam name="TKey"&gt;キーの型&lt;/typeparam&gt;
    /// &lt;typeparam name="TMessage"&gt;メッセージの型&lt;/typeparam&gt;
    /// &lt;param name="topic"&gt;トピック&lt;/param&gt;
    /// &lt;param name="keyGenerator"&gt;キーの生成処理&lt;/param&gt;
    /// &lt;returns&gt;パブリッシャー&lt;/returns&gt;
    public MessagePublisher&lt;TKey, TMessage&gt; CreatePublisher&lt;TKey, TMessage&gt;(string topic, Func&lt;TKey&gt; keyGenerator)
    {
        return new MessagePublisher&lt;TKey, TMessage&gt;(
            GetSerializer&lt;TKey&gt;()
            , GetSerializer&lt;TMessage&gt;()
            , PublisherSetting
            , topic
            , keyGenerator
            , Logger
            );
    }

    /// &lt;summary&gt;
    /// シリアライザを取得します。
    /// &lt;/summary&gt;
    /// &lt;typeparam name="T"&gt;シリアライズ対象オブジェクトの型&lt;/typeparam&gt;
    /// &lt;returns&gt;シリアライザ&lt;/returns&gt;
    protected abstract ISerializer&lt;T&gt; GetSerializer&lt;T&gt;();
}

