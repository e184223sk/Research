More than 1 year has passed since last update.データを蓄積・加工する以上、個人レベルのものであっても
システムを構築するにあたってデータモデル、そしてデータベースの設計は疎かにできません。LINQ/EntityFrameworkでは、構築したデータベースに対して、前回投稿：EntityFramework+Azure SQL Databaseで高速なDB開発を実現する※プログラミング編では、基盤部分にあたるAzure(SQL Database)自体への言及はほぼありません。
　データベース構築の手順・今回のデモで準備されたデータベースの詳しい内容についてはリンク先を参照してください。前回のデモでは、こういうエンティティ―リレーション関係にあるテーブルを作成している。
また、テーブル構造は前回のデモを引き継いでいる。同時に自動生成されたDBContextは下記の通り。また、前回の記事の後、EmployeeとDeptにはそれぞれ下記のようなデータを投入している。単一テーブルに対するSQLは、DBcontxtが持っているテーブルプロパティを取得することで生成できる。
[注意点]
・必ずusingを利用してリソースを閉じる（リソース・リーク防止）
・usingを抜ける前の段階で終端処理を終えておき、IEnumerableのままにしない（クエリを確定させる）Where等のために結合させるケースでは、
親エンティティを取得する→親エンティティが持っている子エンティティのセットを取得してさらに処理する。[注意点]
・結合時、Join方法を正確に指定することができない。したがって効率の悪いSQL発行となる場合がある。
・サンプルでは無視しているが、例外の発生を考慮すること。


