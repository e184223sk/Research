using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using TensorFlow;
using System.IO;
using System.Collections.Generic;
using Learn.Mnist;
using System.Linq;

namespace SampleTest
{
    partial class MainClass
    {
        static public void Assert (bool assert, [CallerMemberName] string caller = null, string message = "")
        {
            if (!assert){
                throw new Exception ($"{caller}: {message}");
            }
        }

        static public void Assert (TFStatus status, [CallerMemberName] string caller = null, string message = "")
        {
            if (status.StatusCode != TFCode.Ok) {
                throw new Exception ($"{caller}: {status.StatusMessage} {message}");
            }
        }

        public void Test_Session ()
        {
            // グラフを作成。
            using (var g = new TFGraph ()) {
                // セッションの作成。
                var s = new TFSession (g);

                // ここでは "int"を使用するので、演算時のキャストはintにする。
                // placeholderというデータが格納される箱(値は実行時に入れる).引数として予めグラフに与える。
                var feed = g.Placeholder (TFDataType.Int32);
                // 中身が2のconstantの作成。
                var x = g.Const (2);
                // xの2乗を求める。
                var x2 = g.Square (x);
                // 和を求める。
                var add = g.Add (x2, feed);

                // runnerの作成。
                var runner = s.GetRunner ();
                // Placeholderに値を入れる。
                runner.AddInput (feed, new TFTensor ((int)3));
                // 実行及び結果表示
                Console.WriteLine ("2^2 + 3 ={0}", runner.Run (add).GetValue ());
            }
        }
        public static void Main (string [] args)
        {
            Console.WriteLine (Environment.CurrentDirectory);
            Console.WriteLine ("TensorFlow version: " + TFCore.Version);


            var t = new MainClass ();
            t.Test_Session ();

        }
    }
}



