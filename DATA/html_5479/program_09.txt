
using System.Linq;
using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Running;

namespace ForSurvey
{
    public class ArrayAccessBenchmark
    {
        public static readonly int[] IntArray = Enumerable.Range(0, 100000000).ToArray();

        [Benchmark]
        public int SumForLocal()
        {
            var ary = IntArray;
            var accum = 0;


            for (var i = 0; i &lt; ary.Length; i++) accum += ary[i];

            return accum;
        }

        [Benchmark]
        public int SumForGlobal()
        {
            var accum = 0;

            for (var i = 0; i &lt; IntArray.Length; i++) accum += IntArray[i];

            return accum;
        }

        [Benchmark]
        public int SumForDecliment()
        {
            var accum = 0;

            for (var i = IntArray.Length - 1; i &gt;= 0; i--) accum += IntArray[i];

            return accum;
        }

        [Benchmark]
        public int SumForeach()
        {
            var accum = 0;

            foreach (var i in IntArray) accum += i;

            return accum;
        }
    }

    internal class Program
    {
        private static void Main(string[] args)
        {
            BenchmarkRunner.Run&lt;ArrayAccessBenchmark&gt;();
        }
    }
}

