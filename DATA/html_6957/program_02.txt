
 CCalc.GetClipPos(MainCamera.Matrix, MainCamera.ProjMatrix, viewport, mouse, out near, out far);
 for (int i = 0; i &lt; geometry.Position.Count / 3; i++)
                    {
                        Vector3 vertex1 = CCalc.Multiply(geometry.ModelMatrix, geometry.Position[3 * i]);
                        Vector3 vertex2 = CCalc.Multiply(geometry.ModelMatrix, geometry.Position[3 * i + 1]);
                        Vector3 vertex3 = CCalc.Multiply(geometry.ModelMatrix, geometry.Position[3 * i + 2]);
                        Vector3 result = Vector3.Zero;
                        if (CCalc.CrossPlanetoLinePos(vertex1, vertex2, vertex3, near, far, ref minLength, out result))
                        {
                            if (minTriangle == null)
                            {
                                minTriangle = new List&lt;Vector3&gt;();
                                minTriangle.Add(vertex1);
                                minTriangle.Add(vertex2);
                                minTriangle.Add(vertex3);
                            }
                            else
                            {
                                minTriangle[0] = vertex1;
                                minTriangle[1] = vertex2;
                                minTriangle[2] = vertex3;
                            }
                        }
                    }

