using System;
using System.Drawing;
using System.IO;

namespace StockWallPaper {
    public class PictureMaker {

        private static readonly string _destFolder = 
            Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyPictures), "LockPictures");

        private static readonly string _windowsLockPictureFolder =
            Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), @"Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets");

        public static void GetLockPictures() {
            foreach (var picturePath in Directory.GetFiles(_windowsLockPictureFolder)) {
                try {
                    using (var bmp = new Bitmap(Image.FromFile(picturePath))) {
                        if (bmp.Width == 1920) {
                            //コピー先はjpg形式とする。
                            string destFileName = Path.Combine(_destFolder ,Path.GetFileName(picturePath) + ".jpg");
                            File.Copy(picturePath, destFileName, true);
                        }
                    }
                }
                catch (OutOfMemoryException) {
                    //ファイルのロードに失敗する場合は次へ行く。
                }
            }
        }

        public static void MakeLockPictureFolder() {
            if (Directory.Exists(_destFolder) == false) {
                Directory.CreateDirectory(_destFolder);
            }
        }
    }
}


