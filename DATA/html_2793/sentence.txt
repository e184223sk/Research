More than 1 year has passed since last update.本日はLINE APIを使ってLINE BOTを構築します。LINEユーザーからのメッセージはWebhook経由で受信します。Azure Functionsを使ってこのWebhookを受け取り、返信をする仕組みを作ってみます。Azure Functionsを構築します。こちらのドキュメントを参照ください。もしくはこちらの過去記事「Azure Functions - とりあえず立ち上げて公開」次にチャンネル（LINEオフィシャルアカウント）の準備をします。こちらのドキュメントをご参照ください。オフィシャルアカウントを開設したあとは、設定よりアクセストークンとWebhook URLの設定を行います。こちらのドキュメントをご参照ください。こちらの準備ができたら、オフィシャルアカウントを友達登録し、さっそく構築へと進みます。Webhookにはリクエストヘッダーとボディーがあり、下記の情報がLINEから送られてきます。レスポンス例はこちらこのレスポンスをC#のオブジェクトで受け取るためにはjson2csharpeを使います。JSONレスポンスデータをコピペするだけでC#のモデルを生成してくれます。
http://json2csharp.com/結果はこちらです。RootObjectではわかりずらいので、RootObjectをineWebhookMessageObjectに変更します。このモデルを使って送信されてきたテキストをLogに表示をしてみます。LINEでメッセージを送信
FunctionsのLogsを確認
参考ドキュメント
https://developers.line.biz/ja/reference/messaging-api/#anchor-46a7f4db6a6b07848d6f7dd012f053442547ccc5公開されてないとは言え、Webhookを受け取るためのAPIはネット上にあるため、先ほど受けとったWebhookが本物かどうか確認をする必要があります。そのためにすべてのWebhook HeaderにはX-Line-Signatureという値が渡されます。この値を、HMAC-SHA256アルゴリズムを使用してリクエストボディのダイジェスト値を取得し、ダイジェスト値をBase64エンコードした値とリクエストヘッダーにある署名が一致することを確認します。下記が確認コードになります。次は受信したデータに対して返信をする仕組みを作ります。次→「For C#er (ASP.NET Core), Line Botの作成 - Part 2」


