
void DrawSeries(Graphics g, int width, float[] series, long drawStartI, long drawEndI, float lowerWhole, float upperWhole, int offsetY, int height, Brush brush, Pen pen)
{
    long n = drawEndI-drawStartI+1;

    if ( n &gt;= width ) {
        var p = new Point[2*width];

        for ( int x=0;x&lt;width;x++ ) {
            long startI = drawStartI +  x   *n/width;
            long endI   = drawStartI + (x+1)*n/width;

            float lower = series[startI];
            float upper = series[startI];

            for ( long i=startI+1 ; i&lt;endI ; i++ ) {
                if ( series[i] &lt; lower ) { lower = series[i]; }
                if ( series[i] &gt; upper ) { upper = series[i]; }
            }

            float yLower = (lower-lowerWhole)*height/(upperWhole-lowerWhole);
            float yUpper = (upper-lowerWhole)*height/(upperWhole-lowerWhole);

            p[x]           = new Point(x,(int)(offsetY+height-yLower));
            p[2*width-1-x] = new Point(x,(int)(offsetY+height-yUpper));
        }
        g.FillPolygon(brush, p);
        g.DrawLines(pen, p);
    }
    else if(n&gt;=2){
        var p = new Point[n];

        for ( long i=drawStartI;i&lt;=drawEndI;i++ ) {
            float x = (i-drawStartI)*width/(n-1);
            float y = (series[i]-lowerWhole)*height/(upperWhole-lowerWhole);

            p[i-drawStartI] = new Point((int)x, (int)(offsetY+height-y));
        }
        g.DrawLines(pen, p);
    }
}


