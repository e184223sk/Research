More than 3 years have passed since last update.Qiita初投稿。たびびとの服とこんぼうとおなべのふたで戦うプログラマです。機械学習が大流行しているけど、なんだか敷居が高そう。
調べてたら、Accord.NETというライブラリでぽちぽち遊べそうなので、さっくりためしてみた。
さっくりなので荒い。
でも、Accord.NETの記事って意外と少なくて苦労したし、以前の記事の内容だと今では非推奨になってたりして、とりあえず動いたので公開してみようかなと思った。
興味もって使ってみる人、出てきてくれるといいな。つくったのは、お絵かきした動物（ねこ・いぬ・とり）を判断して、それぞれの鳴き声を出すデスクトップアプリケーション。
ついでにWPFの勉強もしてみた。ひらがなのところは適宜読み替えてください。わけわからないところが多く、ぐぐりまくって解決しました。とりあえずVisual Studio2017 Communityをつかった。
ツールバーのプロジェクト(P)&gt;NuGetパッケージの管理を選択。
左カラムのオンラインを選択したのち、accordを入力。Accord.MachineLearning
Accord.Imaging
Accord.Statistics
Accord.IO
Accord.Vision
などもろもろをインストール。
（てきとうにそれらしいものを手当たり次第インストールしたので、何をインストールしたのか具体的に忘れてしまった）とりあえずAccord.VisionをインストールしないとBagOfVisualWordsでエラーが出るので注意。
ここでけっこう詰まった。あと、てきとうに３つディレクトリを作成して、自分の描いたいぬ・ねこ・とりのイラストをそれぞれに入れておく。これで準備OK。新規プロジェクトでWPFを選択する。今回はWindowを透過して、背景を透過したイメージを用いることで、丸っこい見た目のアプリを作成してみた。必要なのは、
お絵かきするためのInkCanvas。
（ツールボックスに入ってなかったから、調べて新しくいれた）
絵がかけたときの決定ボタン。
（このボタンを押したら、絵を判定して鳴き声が鳴る）
絵を消すときのボタン。
（必ずしも必要ではないが、書き直す必要があるときに使う）
アプリケーション終了ボタン。・・・どう書いて良いのかわからないので、頭からおっていく。このあたりはもろもろ、エラーが出たらおすすめされるままに追加しておけばOK。今回はねこ・いぬ・とりの３つのクラスにわける。ディレクトリに入れておいた画像をImageItemクラスに格納して、リストにいれる。Bag Of Visual Words分類器の作成。
（特徴抽出して集計している・・・らしい？）インプットデータとアウトプットデータの作成。
この場合だと、それぞれの絵のデータと、その絵のクラス（ねこ・いぬ・とり）のデータが１対１に対応している配列をそれぞれ作成する。ボタンがクリックされたら、絵がねこなのかいぬなのかとりなのか判定して、鳴き声を鳴らす。正しいかどうか簡易にフィードバックをとって再学習。
（ここは新しく学んだところだけ付け加え学習する形に直したい・・・）描いた絵はフィードバックをもとにして、それぞれのディレクトリに保存する。↓InkCanvasをBitmapに変換するのが意外と重たかったため、急遽わけた。
SaveImageとかぶってるから、もう少し整理できそうな気はする。なかなか楽しく遊べました。まる。


