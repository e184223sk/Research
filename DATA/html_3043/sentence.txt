More than 1 year has passed since last update.【開発環境】
Unity Version 2018.3.13f1
VisualStudio2017 Version 15.9.10
言語：C#初めてUnityを使ってゲームを作りました。
制作を通して気づいた点、躓いた点をお伝え出来たらと思います。
Unityを使えば簡単にゲームが作れる！と聞いていましたが、
初めて故に躓くことも多く、とても良い学びになりました。下記URLよりダウンロードできます。
よければ遊んでいただけると嬉しいです。
https://www.freem.ne.jp/win/game/20652
・ボタンを押したら、オブジェクトを有効/無効
・ボタンを押したら、ゲームフロー(ステータス)変更
等々、1つのスクリプトをアタッチするだけで動作するように意識しました。
使いまわせるように作ると実装が楽になりますね！以下は、
・ボタンを押したら、オブジェクトを有効/無効
の例です。　　　　　　　　
変更したいオブジェクトを入れてチェックボックスで有効/無効を決めます。
ステージデータはデータ作成用のSceneを用意して、ステージの幅、高さ、ピースの種類変更など変更して作成しました。
ScriptableObjectを使用するメリットとしては、Inspector上で値を確認や編集が出来ること。
JSONでも可能だとは思いますが、ScriptableObjectの方が圧倒的に見やすいと思います。

参考記事：
http://kan-kikuchi.hatenablog.com/entry/What%27s_Scriptableobject
https://anchan828.github.io/editor-manual/web/scriptableobject.html
https://techblog.kayac.com/unity_advent_calendar_2016_6セーブデータ管理は当初PlayerPrefsを使おうと思っていましたが、
Windowsでは保存場所がレジストリになるため諦めました。
そのため、JSONを使ってセーブデータを作ることにしました。
JsonUtilityを使って簡単に操作できるので使いやすいです！しかし、セーブデータを作れたはいいものの暗号化していないので、
簡単にデータを見られてしまいます。
なので、以下の方法で暗号化を考えました。・セーブ時にjsonUtilityから取得したstringをbyteに変換してからセーブする
結論から言うと断念しました。
byteに変換するところまでは確認できましたが、いざセーブしようとするとできませんでした……。
System.Text.Encoding.UTF8.GetBytes()周りを調べましたが原因は掴めませんでした。
そのため以下の方法に方針を変えました。・セーブ時にjsonUtilityから取得したstringを1文字ずつ文字コードをずらす
とても単純ですが、これでセーブデータを見られてもすぐには分からなくなりました。参考記事：
PlayerPrefs
http://sat-box.hatenablog.jp/entry/2017/06/19/194308
string→byte
https://www.ipentec.com/document/csharp-string-to-bytearray
jsonUtility
https://creive.me/archives/14311/やっぱりゲーム作りは楽しいです。
今後はもっと爆速で開発できるよう腕をあげていきたいですね。
至らないところもありますが、ここまで読んでいただきありがとうございました。
少しでもお役に立てれば幸いです。Twitter：
@tofu_doon 
ブログ：
https://tofu-doon.hatenablog.com/


