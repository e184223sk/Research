Freeradicalの中の人、yamarahです。
一度は誰もがハマる失敗を、まとめてみました。今後もハマる度に、追加していきます。
明らかに直ぐに判明するbugではなく、ある時突然発病する系のものが中心です。通常はActiveEditDocumentを起点にdocumentにアクセスしますが、SelectSetだけは例外です。
ActiveDocument.SelectSetにアクセスしないと、失敗します。
だいたい、インプレース編集するまで気づきません。これは奥が深いので、簡単にしか触れませんが、AssemblyDocument内で、Sub Assemblyをインプレース編集中にoccurrenceにアクセスする時は、注意が必要です。
テスト項目に、インプレース編集中の動作は必ず入れるべきです。例えば、次のようなコマンドを開発するとします。この場合、ユーザーがアクティブではないスケッチのSketchEntityを選択する可能性を考慮する必要があります。インプレース編集中でない時にしか動作させないコマンドは、現在インプレース編集中でないかを判断してから実行する必要があります。
PartDocument, AssemblyDocumentでは、document.ActivatedObject == nullかどうか、
DrawingDocumentでは、document.ActivatedObject is Sheetかどうかで判断します。コマンドでインタラクティブな操作を実行中に、ユーザーがActiveEditDocumetを変更する可能性があります。
場合によっては、コンテキスト(データ)をDoument毎に用意する必要があります。コマンドを実行中に、ユーザーにコマンドを起動されることがあります。
OnExecute()で、いわゆる再入が発生します。インタラクティブな操作をする時は、InteractionEvents.Start()して、即座にOnExecute()を終了すべきです。
OnExecute()から抜けずに処理していると、色々と微妙な問題が発生します。新規に作成されたDocumentで、一度も保存されていないものは、一部のPropertyにアクセスすると例外を発生します。(ファイルの実体が無いので)Inventorは柔軟なので、一部のDocumentファイルがなくても、親Documentを開くことが出来ます。
その場合、リンク切れのOccurrenceの一部のPropertyにアクセスすると、例外が発生します。例えばDrawingDocumentで、BrowserNode.NativeObjectに触れると例外が発生することがあります。
他には、インポートしたソリッドなども同様です。
ですので、以下のcodeは、そのうち例外を送出します。これはInventorのAddIn開発に限った話ではなく、Windows全般の問題ですが、あるpath(ファイル名)が、他のpathと同じファイルを指しているかどうかを判断するのが、非常に難しいです。path文字列同士の比較では、恐らく判断しきれないので、わざと実行時例外を発生させるようなcodeを書いて判断するしかないのかなと思います。
大文字・小文字問題はToUpper()すればいいじゃないか、という人もいますが、それ、本当に全言語のWindowsで成り立ちますか?これはやれば気付く部類ですが、SelectEventsを実行しっぱしで、選択したものを次々処理するような場合は、処理が終わったobjectはRemoveFromSelectedEntities()でSelectEventsから除去する必要があります。
(でないと、HighLightしたままになる)例えば、次のようなコードがあるとします。これらは、AddInを開発する上では、ほとんど同じに思えます。
(まず間違いなく、StandardAddInServerの実体は1つしか作られないのですから)
しかし、決定的な違いが出る場合があります。それは、アドイン マネージャからロード解除 → 再ロードした場合です。
この場合、StandardAddInServerの実体は破棄されて再構築されますが、staticな要素はそのままです。
つまり、list1は必ず空になりますが、list2は前回のセッションの内容を残すということです。
安易にグローバル変数の代替にstaticを使うと、はまります。(自戒)下記項目は、全てFalseにしておかないと、環境によって動いたり動かなかったりします。

* ローカルにコピー
* 相互運用型の埋め込み
* 特定バージョン自分の環境では動くのに、配布先で動かないという場合は、相手のInventorのversion確認は当然として、この設定も確認してみてください。長くなるので、別記事に纏めました。
特殊な条件下で、Inventorをcrashさせる可能性があります。例えば作業線を投影した直線は、長さを持ちません。
ですので、画面上では線分ですが扱いは(数学的な)直線であり、両端がありません。Virtual ComponentのOccurrenceのDefinitionDocumentTypeには、kAssemblyDocumentObjectが設定されています。
例えば名前を参照するだけならAssemblyとして扱っても良いのかもしれませんが、経験上はだいたいハマります。Virtual Componentに出会うまで発病しないパターンです。
Virtual Componentかどうかをoccurrence.Definition is VirtualComponentDefinitionで切り分けて、特別な処理をするcodeを書くのが良いでしょう。
BOMを辿るときも、同様な注意が必要です。DrawingDocumentにおいて、例えば断面ビューではビューに存在しないOccurrenceは、画面上のBrowserにも表示されません。
しかし、内部的にはBrowserNodeは存在しており、Topから辿っていくと到達することが出来ます。
この、「存在しているのに表示されていない」BrowserNodeにアクセスすると、例外が送出されることがあります。タイトル通り、「カスタムビューの方向」を選択すると、特殊なビューが作られます。
このビューが表示中は、いくつかの機能が制限されます。(例 : ファイル → 開くが使えない)
また、このビューが表示中は・・・などの、通常と異なった振る舞いをします。
常駐系のAddInを開発する場合は、この状況で誤動作しないように注意が必要です。
下記codeで「カスタムビューの方向」が実行中かどうか、判断できます。InteractionEventsとDialog(WinForm)を同時に使うと、ごくまれにInventor終了時にアプリケーションエラーが発生します。(Inventor 2020にて確認)
Dialogがmodelでもmodelessでも関係ない、というか、newしていれば表示しなくてもエラーが起きます。
かなり再現性が低いのですが、ゼロではありません。
残念ながら、回避する方法はなさそうなので、こういう構成のアプリケーションは作成してはいけない、ということです。19.11.01 追記
回避策を見つけました。
InteractionEvents中で登録したEvent(例えば、InteractionEvents.SelectEvents.OnPreSelect)を、InteractionEvents.OnTerminateなどで登録解除すると、エラーが出なくなりました。これはタイトルの通りで、SelectEventで要素を選択して、それを投影する場合は、投影するより先に選択表示を解除する必要があります。
後で解除すると、不安定なOnPreSelectやOnSelectが発行されることがあります。
また、選択表示解除しないと、見た目は選択が解除されているが内部的には選択表示のままになりることがあります。AssemblyDocument中のPartDocumentをIn-Place編集中に、AssemblyのWorkplaneを引数にSketches.Add(workplane)すると、しれっとPlanarSketchが返ってくるのですが、このSketchはどのDocumentにも属していない迷子のSketchです。
編集しようとすると、Inventorごと落ちることがあります。
手動でこの操作をすると、AdaptiveなWorkplaneが自動的に作られ、そこにSketchが作成されます。ですので、APIでも同様に動作するか、もしくはいっそ例外を投げて欲しいところです。スケッチ編集中に動作するAddInを作る場合は、それがスケッチブロックを編集中でも動作するか確認すべきです。
残念ながら、2020年5月6日時点では、APIでスケッチブロック内に拘束を付与することが出来ないようなので(4. SketchBlockDefinition内に拘束付与できない)、スケッチ拘束を操作するAddInはスケッチブロック編集中に動作しないようロックするなどの措置が必要です。
また、SketchBlockDefinitionはPlanarSketchを継承しているので、条件分岐のコードを書く場合は順序に注意が必要です。
(具体的には、先にSketchBlockDefinitionかどうかを確認すべき。)Inventor2022からModel State(モデル状態)が導入されました。これにより、同じDocumentだとしても、形状やiPropertyが違う可能性が出てきました。
情報をキャッシュしている場合や、同じDocumentのOccurrenceなら内容も同じと決め打ちしている場合は、正常に動作しない可能性があります。SheetMetalは普通のパーツと違うところがあるのですが、Documentとしては、PartDocumentです。DocumentのFeatureをなめて操作するToolだと、SheetMetalはFeatureが"曲げモデル"というFolderに入っているので、専用の処理が必要になります。
次のような拡張メソッドを定義するのが良いでしょう。Autodesk Inventor API Hacking (概略)


