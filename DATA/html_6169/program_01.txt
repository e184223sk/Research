
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GenericsAndReflection
{
    public interface ICompleted
    {
        Boolean Completed();
    }

    public class Base : ICompleted
    {
        protected Boolean IsNotDefault&lt;T&gt;(T a) where T : IComparable {
            if (a == null) return false;
            var b = default(T);
            return !(a.CompareTo(b) == 0);
        }
        public virtual bool Completed()
        {
            throw new NotImplementedException();
        }
    }

    public class Foo: Base
    {
        public string ApplicationId { get; set; }
        public string ApplicationSecret { get; set; }

        public bool Completed()
        {
            return IsNotDefault&lt;string&gt;(ApplicationId) &amp;&amp; IsNotDefault&lt;string&gt;(ApplicationSecret);
        }
        public string ToString()
        {
            return $"Foo: ApplicationId: {ApplicationId} ApplicationSecret: {ApplicationSecret} Completed: {Completed()}";
        }
    }

    public class Bar : Base
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public bool Completed()
        {
            return IsNotDefault&lt;int&gt;(Id) &amp;&amp; IsNotDefault&lt;string&gt;(Name);
        }
        public string ToString()
        {
            return $"Bar: Id: {Id} Name: {Name} Completed: {Completed()}";
        }
    }

    public class GenericsSample
    {
        public void exec()
        {
            var foo = new Foo();
            foo.ApplicationId = "abc";
            Console.WriteLine(foo.ToString());
            foo.ApplicationSecret = "secret";
            Console.WriteLine(foo.ToString());

            var bar = new Bar();
            bar.Id = 10;
            Console.WriteLine(bar.ToString());
            bar.Name = "Yamada";
            Console.WriteLine(bar.ToString());

        }
    }
}



