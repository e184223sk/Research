More than 1 year has passed since last update.　ちょっとした企画で勉強として簡単なゲームを作っていたのですが、弾が敵にあたって弾が消えるだけでは当てた感じがなく寂しい仕上がりになりました。そこでシェーダーをつかってちょっとしたエフェクトを作ろうということに。そこで死ぬほど苦労したのでメモ書き程度に書いておこうかなと思いました。Main CameraにLightコンポーネントをつけてTypeをDirectionalにしましょう。こうしないと設定した色より暗い色になってしまったりします。　なにもないところにシェーダ－は発動させられません。まずは画像を用意しましょう。白の正方形でいいです。僕は名前を"white"にしました。この画像をシーンに持ってきてオブジェクトとしておいてみましょう。これが開発画面では見えるけど、ゲーム内で見えない場合z座標を調整することで見えるようになります。
 　このオブジェクトのSprite RenderereのところにはMaterialという欄があるのでここに自分で作ったマテリアルを入れましょう。僕は"HitEffectMaterial"という名前のマテリアルを作っていれました。
  これでもまだ終わりではありません。当然シェーダ－が必要です。自分でシェーダーのファイルを作りこれをマテリアルに入れます。僕は"HitEffectShader"という名前にしました。中身はこんな感じです。やったー完成と言いたいところなのですが謎の警告が出ます。
Propertiesの中に _MainTex("2D Texture", 2D) = "white" {} と書くとなおります。
このコードに関しては
2D Spriteにシェーダーをかける
円やリングをかっこよく動かす方法
を参考にさせていただきました。マテリアルが共通しているオブジェクトを複数複製して、そのうち１つのマテリアルを編集すると全てのオブジェクトに適応されてしまうという話を聞いたのでそれ関連のやつかなと思いました。
　そこで自分が発射した弾に加えたスクリプトです。基本的に殆ど読み飛ばしてもらって構いません。注目してほしいのが41~48行の範囲です。マテリアルを新しいマテリアルで書き換えて、エフェクト発生場所を弾丸の場所にする。これで解決します。デフォルトで_Timeというものがありこれが時間を表しているがオブジェクト生成時の時間を持ってこれないからどうしようもないと悩んでいました。しかしshader内のProperties内に変数を作りそこにC#のスクリプトから代入できることがわかりました。今回は時間を保有したいのでFloat型でいきます（floatじゃなくFloatらしいです。）。
文法は変数名("インスペクタで見える名前",型)=初期値で、改めてSubShader内で宣言（このときはFloatではなくfloatで、書かなくてもいいけどuniformをその前に書くみたい）。
ここらへんの詳しい話は最後の参考資料に載せておきます。
最終的にシェーダーは以下のようになりました。最終的に弾丸のスクリプトは以下のようになりました。50行目に追加されているものが本質です。これによって現在の時間（オブジェクトが生成された時間）がシェーダーの_StartTimeに代入されます。MaterialのRender Queueの値をあげましょう。僕はそれで直った。2D Spriteにシェーダーをかける
円やリングをかっこよく動かす方法
その２ ShaderLabでUnityシェーダの下地作り
スクリプトからShaderパラメータを変更する（例：_EmissionColorについて）


