
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;
using Newtonsoft.Json;
// テストしたいプロジェクトを参照するのを忘れずに

namespace Tests.Functions
{
        /// &lt;summary&gt;
        /// &lt;see cref="Function{TDbContext}"&gt;のテストクラス
        /// &lt;/summary&gt;
        public class FunctionTest : IClassFixture&lt;MyDbContextFixture&gt;, IDisposable
        {
            private readonly ITestOutputHelper _output;
            private readonly MyDbContextFixture _fixture;
            private readonly MyDBContextName _context;
            public FunctionTest(MyDbContextFixture fixture, ITestOutputHelper output)
            {
                _output = output;
                _fixture = fixture;
                _context = fixture.Context;
            }

        // ご自身で引数のテストデータ作成します

        // DBに登録したいテストデータをいれます
        // GetTestData()

        /// &lt;summary&gt;
        /// テストデータを削除
        /// &lt;/summary&gt;
        void IDisposable.Dispose()
        {
            var list = _context.PrPrint.ToList&lt;PrPrint&gt;();
            _context.PrPrint.RemoveRange(list);
            _context.SaveChanges();
        }


        /// &lt;summary&gt;
        /// ステータスコードが60から70に更新
        /// &lt;/summary&gt;
        [Theory(DisplayName = "ステータスコード更新")]
        [MemberData(nameof(MyTestDataName))]
        public void UpdateTest(inputModel)
        {
            var function = new TestFunction&lt;MyDBContextName&gt;(_context);
            // テストデータをInsert
            var list = GetTestData();
            _context.TestTable.AddRange(GetTestData());
            _context.SaveChanges();

            // テストしたい内容
            var result = function.Update_Test(inputModel);
            _output.WriteLine(JsonConvert.SerializeObject(result));
            var entity = _context.TestTable.Where(x =&gt; x.Id == result.Id).SingleOrDefault();
            // DBのステータスコードが70
            Assert.Equal("70", entity.StatusCd);
        }
    }
}

