More than 1 year has passed since last update.FindObjectOfTypeを利用して、
シーン上にある全てのAudioSourceコンポーネントをStartで集めてくる方法を使います。
なので、途中で生成されたAudioSourceコンポーネントは範囲外です。外部から呼び出すことは確定しており、2つ以上必要なコンポーネントではないので
シングルトンを用います。あんまり理解せずに使ってましたが、
この説明1が個人的には一番しっくりきました。Unityでゲーム作ってるとどこからでも呼び出したいクラスが欲しくなります。
命名するとなんちゃらマネージャーみたいになるやつ。
AudioManagerとか、SettingManagerとか、ParticleManagerとか
どこからでも呼び出せると便利で、でも２つ以上あったら変なもの。
じゃーどうすんの？って調べてると大体シングルトンっていう考え方に行き着くと思う。
ようするにインスタンスを１個しか作らなければいいだけ。あとシングルトンというのはデザインパターンのことらしいです。
C#の機能か何かだと思ってた。最強に使いやすい1のがあるのでいつも使わせてもらってます。今回はPauseとUnPauseを使っています。
PauseでAudioを止めて、UnPauseで止めた箇所から再生です。大量にAudioがあるときの負荷なんかは調べてないので知りませんが5、6個なら問題なく動きました。SoundsOnOffController.Instance.StartSounds();
このようにしてあげればどこからでもスクリプト経由で呼び出せます。引用元、参考リンク ↩


