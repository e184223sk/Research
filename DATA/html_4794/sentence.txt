More than 1 year has passed since last update.ReactiveProeprty 5.2.0の新機能AwaitableなReactivePropertyを使ってみました。ReactivePropertyの説明自体は下記を参照ください。
https://blog.okazuki.jp/entry/2015/12/05/221154ReactivePropertyがAwaitable パターンを実装したことで、awaitで値の変更を待機することができるようになりました。
今までもSubscribeで値の変更を購読することはできましたが、といった時には少々手間でした。
Awaitableパターンが実装されたことにより、下記のような形で値の変更を待機することができます。他にもSubscribeとの相違点としては、ReactivePropertyをSubscribeするとModeがRaiseLatestValueOnSubscribeならばすぐに値が返ってきますが、
awaitした場合は、Modeに関係なく変更するまで待機します。なお、Awaitableになったのは狭義のReactivePropertyだけでなく、
(ReadOnly)ReactiveProperty(Slim)と(Async)ReactiveCommand(Generic)もです。
つまりだいたい全部です。ReactiveCommandの場合はCanExcuteの変化ではなく、Excute呼び出しを待機して、返り値はExcute呼び出し時の引数です。注意点として、今回のバージョンには破壊的変更が含まれています。
あまり実用的ではないのですが、5.1以前でもawaitで待機することは可能でした。
この場合はReactivePropertyがDisposeされるまで待機して、最後の値が返ってきます。
これはReactivePropertyというよりも、IObsevable&lt;T&gt;の機能です。デモプログラムを作ってみました。
WPFでファイルの変更を監視して、それをTextBoxに表示するアプリケーションを作ります。
ボタン押下後に監視を開始して、変更されたら1度だけTextBoxに反映させます。起動時
Button押下後、awaitで待機中はボタンが無効になっています。
メモ帳で監視対象のファイルを変更します。
TextBoxに入力された文字が大文字化されて入ります。以降はファイルを変更しても反映されません。
ViewModelではAsyncReactiveCommandを用意して、コマンドのSubscribe内でmodelのReactivePropertySlimの変更をawaitで待機しています。
待機している間、コマンドのCanExcuteはfalseになります。
ReactivePropertySlimが変更されたら、その値を大文字化して、VM内のReactivePropertyに反映させます。Modelでは一定時間ごとにファイルを見て、Model内のReactivePropertySlimに反映しています。ViewではVMのReactivePropertyとAsyncReactiveCommandにBindingしています。https://runceel.github.io/ReactiveProperty/advanced/awaitable/#awaitable
https://ufcpp.net/study/csharp/sp5_awaitable.htmlVisualStudio2017
.NET Framework 4.7.1
C#7.1
ReactiveProperty 5.2.0


