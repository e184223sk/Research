using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using UnityEngine;

#if UNITY_IOS

public class Sample_iOS : ISample {
    private Sample sampleGameObject;
    private SampleEventListener listener;

    [DllImport ("__Internal")]
    protected static extern void SPSetCallbackGameObjectName(string gameObjectName);

    public Sample_iOS(Sample sampleParent) {
        sampleGameObject = sampleParent;

        if (sampleParent.iosAppCode != null) {
            Start(null);
        }

        CreateListenerObject();
    }

    private void CreateListenerObject() {
        listener = sampleGameObject.gameObject.AddComponent&lt;SampleEventListener&gt;();
        listener.SetNativeParent(this);

        SPSetCallbackGameObjectName(sampleGameObject.gameObject.name);
    }

    [DllImport("__Internal")]
    private static extern void SPStart(string sampleCode);
    public void Start(string sampleCode) {
        if (sampleGameObject.iosSampleCode != null) {
            SPStart(sampleGameObject.iosSampleCode);
        } else if (sampleCode != null) {
            SPStart(sampleCode);
        }
    }

    [DllImport("__Internal")]
    private static extern void SPDoSomething();
    public void DoSomething() {
        SPDoSomething();
    }

    [DllImport("__Internal")]
    private static extern int SPGetStatus();
    public SampleStatus GetStatus() {
        return (SampleStatus)SPGetStatus();
    }

    [DllImport("__Internal")]
    private static extern int SPGetScore();
    public int GetScore() {
        return SPGetScore();
    }

    [DllImport("__Internal")]
    private static extern bool SPIsAvailable();
    public bool IsAvailable() {
        return SPIsAvailable();
    }

    [DllImport("__Internal")]
    private static extern string SPGetSomeText();
    public string GetSomeText() {
        return SPGetSomeText();
    }
}

#endif

