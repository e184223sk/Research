

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using UnityEngine.EventSystems;

    public class BlockManager : MonoBehaviour
    {

        [SerializeField]
1:      private GameObject mPrefabBlock;

        // ブロックの辺のサイズ
        private readonly float BLOCK_SIZE = 1.0f;
        private readonly float BLOCK_SIZE_HALF = 0.5f;

        // ブロックをListで管理
        private List&lt;BlockModel&gt; mBlockList = new List&lt;BlockModel&gt;();

        void Start () {
            CreateField(GameController.LEVEL_EASY);
        }

        /// &lt;summary&gt;
        /// フィールドを生成する
        /// &lt;/summary&gt;
        public void CreateField(int gameLevel)
        {
            // 前のブロックが存在する場合は全て破棄
            foreach(BlockModel model in mBlockList)
            {
                Destroy(model.gameObject);
            }
            mBlockList.Clear();

            // ゲームレベルによってサイズと爆弾の数を決定
            int xLength;
            int yLength;
            int bombCount;
            switch (gameLevel)
            {
                case GameController.LEVEL_EASY:
                    xLength = 9;
                    yLength = 9;
                    bombCount = 10;
                    break;
                case GameController.LEVEL_NORMAL:
                    xLength = 16;
                    yLength = 16;
                    bombCount = 40;
                    break;
                default:
                    xLength = 30;
                    yLength = 16;
                    bombCount = 99;
                    break;
            }

            // ブロックを並べる
            InstantiateBlocks(xLength, yLength);
        }

        /// &lt;summary&gt;
        /// ブロックを並べる
        /// 同時に生成されたBlockModelをListに格納する
        /// &lt;/summary&gt;
        /// &lt;param name="xLength"&gt;&lt;/param&gt;
        /// &lt;param name="yLength"&gt;&lt;/param&gt;
        private void InstantiateBlocks(int xLength, int yLength)
        {
            for(int y=0; y&lt;yLength; y++)
            {
                for(int x=0; x&lt;xLength; x++)
                {
                    GameObject blockGo = Instantiate(mPrefabBlock, new Vector3(x * BLOCK_SIZE + BLOCK_SIZE_HALF, BLOCK_SIZE_HALF, y * BLOCK_SIZE + BLOCK_SIZE_HALF), Quaternion.identity, transform);
                    BlockModel blockModel = blockGo.GetComponent&lt;BlockModel&gt;();
                    blockModel.SetPosition(x, y);
                    mBlockList.Add(blockModel);
                }
            }
        }

    }


