

        /// &lt;summary&gt;
        /// フィールドを生成する
        /// &lt;/summary&gt;
        public void CreateField(int gameLevel)
        {
            // 前のブロックが存在する場合は全て破棄
            foreach(BlockModel model in mBlockList)
            {
                Destroy(model.gameObject);
            }
            mBlockList.Clear();

            // ゲームレベルによってサイズと爆弾の数を決定
            int xLength;
            int yLength;
            int bombCount;
            switch (gameLevel)
            {
                case GameController.LEVEL_EASY:
                    xLength = 9;
                    yLength = 9;
                    bombCount = 10;
                    break;
                case GameController.LEVEL_NORMAL:
                    xLength = 16;
                    yLength = 16;
                    bombCount = 40;
                    break;
                default:
                    xLength = 30;
                    yLength = 16;
                    bombCount = 99;
                    break;
            }

            // ブロックを並べる
            InstantiateBlocks(xLength, yLength);

            // ブロックに爆弾を設置
追加        SetBombs(bombCount);
        }

        /// &lt;summary&gt;
        /// ブロックに爆弾を設置する
        /// &lt;/summary&gt;
        /// &lt;param name="bombCount"&gt;配置する爆弾の数&lt;/param&gt;
追加    private void SetBombs(int bombCount)
        {
            // Listをシャッフルして先頭から爆弾を設置していく
            int blockCount = mBlockList.Count;
            for (int i = 0; i &lt; blockCount; i++)
            {
                BlockModel temp = mBlockList[i];
                int rand = UnityEngine.Random.Range(0, blockCount);
                mBlockList[i] = mBlockList[rand];
                mBlockList[rand] = temp;
            }
            for(int i=0; i&lt;bombCount; i++)
            {
                mBlockList[i].HasBomb = true;
            }
        }


