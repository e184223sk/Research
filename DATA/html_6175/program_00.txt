
    public class Block
    {
        public int Begin { get; private set; }
        public int End   { get; private set; }
        public int Count { get { return End - Begin + 1; } }

        public Block(int begin, int end)
        {
            this.Begin = Math.Min( begin, end );
            this.End   = Math.Max( begin, end );
        }

        public static List&lt;Block&gt; As( int size, int n )
        {
            List&lt;Block&gt; blocks = new List&lt;Block&gt;();

            decimal seeksize = (decimal)size / (decimal)n;

            decimal index = 0m;

            int tail = size - 1;
            int last = n - 1;

            for ( int i = 0; i &lt; n; i++ )
            {
                int begin = (int)Math.Ceiling(index);

                index += seeksize;

                int end 
                    = i == last
                    ? tail
                    : (int)Math.Ceiling( index ) - 1;

                Block block = new Block(begin, end);
                blocks.Add( block );
            }


            return blocks;
        }
    }

