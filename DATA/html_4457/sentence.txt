More than 1 year has passed since last update.Qiita初投稿。C#歴半年程度の知識でやってみたら思ったより手間がかかってしまったのでメモ。2018/10/31 コメントを元に追記しました。派生クラスから基底クラスのみのフィールド情報とその値を取得したい。アップキャストした後にリフレクションを使って出力を試みる。これを実行してみると・・・派生クラスの情報も出力されてしまう・・・。型に基底クラスを指定すれば良くね？という安易な手法で出力することに。出力結果元々は複数のクラスのフィールド情報をテキストファイルに吐き出すという処理を行うために実装しました。しかし、特定のクラスは基底クラスだけの情報のみを吐き出したいため、今回のような対応を入れています。一応目的は達成できましたが、特定のクラスのみわざわざ型を指定するのも面倒くさいので、もっとスマートにできる方法があれば教えて欲しいところです。ありがたいことにコメントでアドバイスを貰えました！それを元に再検討してみました。DeclaringTypeは対象メンバを宣言するクラス情報を持つプロパティです。次のコードでは派生クラスのフィールド情報を取得して、DeclaringTypeをグループ分けをすることでDeclaringTypeをキーとするIGroupingを取得することができます。欲しいクラスの情報のみを取得したい場合は別途DeclaringTypeの値を見る必要があるため、未継承/継承クラスが入り交じると使いづらいかもしれません。どちらかというと基底/派生問わず特定クラスの情報のみが欲しい場合は有用に感じました。BaseTypeは対象クラスの継承元の情報を持つプロパティです。次のコードではBaseTypeを使って基底クラスのフィールド情報を取得しています。ただし、継承していない場合はSystem.Objectを取得します。System.Objectの場合はBaseTypeを見ないという条件をつければ未継承クラスが同じ処理を通ってもうまくいきそうです。派生クラスが複数ある場合、片方のクラスは基底クラスのみを出したいけれどもう片方は派生クラス込みで出したい等が出るかもしれません。それに対して一々条件を追加するのはよろしくないので属性を併用してみます。コードもスッキリするし、この方法が一番良さそうな感じです。


