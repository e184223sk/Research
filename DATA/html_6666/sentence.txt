More than 3 years have passed since last update.Unityで作るVRアプリで、Rayを飛ばすことで衝突判定を行い、様々なアクションを可能にすることができます。【事前準備】
・https://www.durovis.com/en/sdk.html から「Dive Unity Plugin Package」をダウンロード。・Hierarchyビューの"MainCamera"を削除しにステージ上にダウンロードしたパッケージの中から"DiveCamera"を配置。これを、配置したDiveCameraにアタッチします。次に、「Edit」-&gt;「Projects Setting」-&gt;「Editor」からDeviceを接続している携帯端末にしてください。これにより、端末の動きを感知しVR空間を自由に見回すことが可能になります。【補足】
以前、GyroScriptをさらに編集してVR空間を動き回れるコードを実装しているので、よかったら参考にしてください。Unity/C#~DiveCameraを使用しVR空間内で動く(コードメモ)
http://qiita.com/wtb114/items/5e390e850d43a6f3a1feDiveCameraからRayという光線のようなものを出しColliderを持つゲームオブジェクトに当てることで、衝突判定が可能になります。1.まず、Hierarchyビューの「Create」をクリック後、「Create Empty」をクリックしてからのゲームオブジェクトを配置します。
名前を"RayController"に変更してください。2.ステージ上に、Cubeなどを適当に配置、そしてその直下にQuadを配置してください。
TransformはDiveCameraから見える位置に調節してください。3.後で衝突判定を行うため、2.で配置しているゲームオブジェクトのColliderのTagを設定しておきます。
「Edit」-&gt;「Project Settings」-&gt;「Tags and Layers」から、「Tag」の入力欄に"DifficultyCollider"を追加してください。そして、ゲームオブジェクト直下に配置したQuadにinspectorビューから、「Tag」を"DifficultyCollider"に設定してください。このスクリプトを、HierarchyビューのRayControllerにアタッチします。
最後に、HierarchyビューにあるRayControllerオブジェクトを選択後、RayControllerスクリプ トの欄の「Dive Camera」の部分に、Hierarchyビューにある「Dive_Camera」をドラッグ＆ドロップしましょう。ゲームを起動すると、DiveCameraから黒い線が出ているともいます。
端末を動かして、配置したゲームオブジェクトに黒い線を当ててみましょう。
コンソールに"hit"と出力されていれば、無事衝突判定ができています。以上で、Rayの基本的な実装になります。これを応用して、UIの操作などVRでのアクションを今後紹介していきたいと思います。


