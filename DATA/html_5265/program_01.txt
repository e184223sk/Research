
using UnityEditor;
using UnityEngine;

public static class ColorPalletCreator {
    const string DST_PATH = "Assets/ScriptableObjects/ColorPallet.asset";
    const string ORG_PATH = "Assets/Editor/ColorPallet.colors";

    //---------------------------------------------------
    // ScriptableObject 作成
    //---------------------------------------------------
    [MenuItem("Tool/Create ColorPallet")]
    static void Create()
    {
        ColorPallet asset = AssetDatabase.LoadAssetAtPath&lt;ColorPallet&gt;(DST_PATH);
        if (asset == null)
        {
            asset = ScriptableObject.CreateInstance&lt;ColorPallet&gt;();
            AssetDatabase.CreateAsset(asset, DST_PATH);
        }

        var presetObj = AssetDatabase.LoadAssetAtPath&lt;UnityEngine.Object&gt;(ORG_PATH);
        var so = new SerializedObject(presetObj);
        var property = so.FindProperty("m_Presets");
        for (int ii = 0; ii &lt; property.arraySize; ++ii)
        {
            // カラーパレットからデータを取得
            var element = property.GetArrayElementAtIndex(ii);
            var data = new ColorPallet.Pallet()
            {
                name = "Color_" + ii,
                color = element.FindPropertyRelative("m_Color").colorValue
            };

            // ScriptableObject にデータを格納
            asset.list.Add(data);
        }
    }
}

