
        /// &lt;param name="updKey"&gt;&lt;/param&gt;
        private static void Update(string updKey)
        {

            /* ------------------------------*/
            // 日付更新ファイルから日付を取得
            /* ------------------------------*/
            string filePath = @"C:\TEST\Date.txt";
            Dictionary&lt;string, string&gt; dictionary = new Dictionary&lt;string, string&gt;();

            // 排他ロックをかける
            System.IO.FileStream fs = new System.IO.FileStream(
            filePath,
            System.IO.FileMode.OpenOrCreate,
            System.IO.FileAccess.ReadWrite,
            System.IO.FileShare.None);

            // ファイル読込
            TextFieldParser parser = new TextFieldParser(fs, Encoding.GetEncoding("Shift_JIS"));
            parser.TextFieldType = FieldType.Delimited;
            parser.SetDelimiters(",");

            List&lt;string[]&gt; dataList = new List&lt;string[]&gt;();
            while (!parser.EndOfData)
            {
                dataList.Add(parser.ReadFields());
            }

            foreach (string[] array in dataList)
            {
                dictionary.Add(array[0], array[1]);
            }

            /* ------------------------------*/
            // キーに紐づく日付の加算
            /* ------------------------------*/
            DateTime dateTime = new DateTime();
            string[] keys = new string[dictionary.Keys.Count];
            dictionary.Keys.CopyTo(keys, 0);

            foreach (string key in keys)
            {
                if (key.Contains(updKey))
                {
                    dateTime = DateTime.Parse(dictionary[key]);
                    dateTime = dateTime.AddDays(1);
                    dictionary[key] = dateTime.ToString("yyyy/MM/dd");
                }
            }

            /* ------------------------------*/
            // 一つの文字列に格納
            /* ------------------------------*/
            StringBuilder sb = new StringBuilder();
            foreach (string key in keys)
            {
                sb.Append(key + "," + dictionary[key] + "\r\n");
            }


            /* ------------------------------*/
            // 更新処理
            /* ------------------------------*/
            bool flg = false;
            for (int i = 0; i &lt; 5; i++)
            {
                StreamWriter sw;
                try
                {
                    using (sw = new StreamWriter(fs, Encoding.GetEncoding("Shift_JIS")))
                    {
                        sw.Write(sb.ToString());
                        flg = true;
                        break;
                    }
                }
                catch(Exception e)
                {
                }
            }

            if (!flg)
            {
                // 失敗 

            }
            {
                // 成功
            }

            return;


'''

