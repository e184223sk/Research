要約すると解放をしなければならないものはきちんと後処理しましょうという話。具体的にどういう状況かについて説明していきます。
まず環境から。現在(2021-04-24) AWS Lambda では .NET Core 3.1 がサポートされているので .NET 5 ではなくこちらを使っていきます。IDE には JetBrains の Rider を使用しています。安くて割と軽いのでお勧めです。今回の話は Visual Studio で ReSharper の Test Runner を使用しても同じ現象が現れます。 次に問題が発生するコードを作ります。
テンプレートをインストールしてソリューションファイルまで以下のコマンドで作成します。このコマンドを実行すると以下のようなフォルダとファイルが作成されます。
これで問題が発生するコードの準備は完了です！※ global.json は dotnet のバージョンを指定するためにあらかじめ作成しています。まずはコマンドラインでテストを実行してみます。
SampleProject ディレクトリに移動して dotnet test を実行します。無事に実行できました！Rider で SampleProject.sln を開きます。
サンプルとなるテストが記述されている ValuesControllerTests.cs を開くとテストケースが認識され、メソッドの左にテストの実行ボタンが現れます。
ここからテストを実行してみます。左下のところにテストの実行結果が現れました！
テストは問題なく通過しているよう...
でも Test Runner が終了せず停止ボタンが表示されたままになってしまいます。それからしばらく放置すると以下のようなメッセージが表示されます。Google 翻訳にかけると以下のようになります。ようするにテストは全て終了したけどリソースの解放ができていないからテストプロセスを終了できないよ！ということみたいです。とりあえず Kill ボタンを押すとプロセスが終了するのでまたテストを実行できるようになります。
ですがテストを連続して実行するのがやりずらいし、気持ちが落ち着かないので原因を調査します。Google で警告文章や ReSharper Test Runner hung などのキーワードで検索すると以下のような記事が見つかりました。ReSharper test runner still going after tests complete – The Blog of Colin Mackayこの記事では WebApplicationFactory&lt;Startup&gt; で作成される factory の解放が問題だったようです。
ということで同じように解放していないリソースがないかコードを確認してみます。テンプレートで作成されるソースは以下のようなものになります。
読みにくいのでコメントは削除しています。こちらが Lambda のエントリーポイント。そのエントリーポイントを使ったテストが以下。APIGatewayProxyFunction を継承して LambdaEntryPoint を作成しています。
テストコード的には LambdaEntryPoint をインスタンス化してそのメソッドを呼んでいるだけのシンプルなものになっています。
そうなると怪しいのは APIGatewayProxyFunction の中になります。
そこで GitHub でソースを確認してみると中では ASP.NET Core の Host を起動していました。しかしこの起動した Host を解放する処理がどこにもない...
通常のマネージドなリソースであれば Dispose を忘れても GC が解放してくれるけれど、多分 ASP.NET Core の Host はアンマネージドなリソースを持っていて、明示的に呼び出さなければ解放されないリソースがあるのだと思います。
この辺りは詳しく調べてないのでちょっとよくわからないです。知っているかたがいればぜひ教えてください。🙏おそらく原因はこの Host が解放されていないからではないかと推測できたので以下のようなコードにかきかえます。やっていることは以下です。
Host が作成されたあと APIGatewayProxyFunction が継承している AbstractAspNetCoreFunction では PostCreateHost が呼ばれ、継承したクラスから Host を触ることができるようになります。
そこでこのメソッドを override し、いったん field に Host を保存します。
そして LambdaEntryPoint に IDisposable を継承させ Dispose の中で Host の解放を行います。
テストのほうでは new のところに using を付け、スコープを抜けたタイミングで LambdaEntryPoint を解放するようにしています。そして再度テストを実行！無事にテストが終了し、今度はテストプロセスもきちんと解放されました！🎉🎊この問題を踏むのはテストの中で ASP.NET Core の Host などリソースの解放をしなければならないものを解放せずに使い、かつテストランナーとして ReSharper Test Runner を使用している方だと思うので多分困るのはごく一部の人だと思います。
実際 C# での開発をするのであれば Visual Studio が第一候補になるでしょうし、最近なら VSCode でも十分強力な支援を得ながら開発をすることができ、この 2 つで開発を行う場合はテンプレートそのままのコードても特にテストプロセスが終了しない問題も発生しません。
でもきっとどこかでは似たような問題にぶつかって困ってしまっているかたもいるかもしれないので自分の備忘録もかねて記事にしておきます。とりあえず教訓として リソースの解放はきちんとする と覚えておこうと思います。最後に... ReSharper も Rider も便利なのでぜひ使ってみてください！


