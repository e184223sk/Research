
    public class ObjectIdentifierValue : AsnValue
    {
        public String Oid {get; set; }

        public override byte GetTag()
        {
            return 0x06;
        }

        public ObjectIdentifierValue(String Oid)
        {
            this.Oid = Oid;
        }

        public override List&lt;byte&gt; GetBytes()
        {
            // OIDをピリオドで区切って数値配列に分けて格納する。 
            int[] values = Oid.Split('.').Select(int.Parse).ToArray();

            List&lt;byte&gt; result = new List&lt;byte&gt;();

            // 1個目、2個目 
            result.AddRange(ConvByte(ParseXY(values[0], values[1])));
            for (int i = 2; i &lt; values.Length; i++)
            {
                result.AddRange(ConvByte(values[i]));
            }
            result.InsertRange(0, GetFieldLengthByte(result.Count));

            result.Insert(0, GetTag());

            return result;
        }


        private List&lt;byte&gt; ConvByte(int param)
        {
            List&lt;byte&gt; result = new List&lt;byte&gt;();
            int value = param;
            int i = 0;

            for (; ; )
            {
                int amari = value % 128;
                int sho = value / 128;
                result.Insert(0, (byte)(amari + (i == 0 ? 0 : 0x80)));
                if (sho == 0)
                {
                    break;
                }
                value = sho;
                i++;

            }
            return result;
        }

        private int ParseXY(int first, int second)
        {
            return (first * 40 + second);
        }

    }

