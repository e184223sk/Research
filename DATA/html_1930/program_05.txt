
        /// &lt;summary&gt;
        /// Retrieves or creates a named logger.
        /// &lt;/summary&gt;
        /// &lt;param name="repositoryAssembly"&gt;The assembly to use to lookup the repository.&lt;/param&gt;
        /// &lt;param name="name"&gt;The name of the logger to retrieve.&lt;/param&gt;
        /// &lt;returns&gt;The logger with the name specified.&lt;/returns&gt;
        /// &lt;remarks&gt;
        /// &lt;para&gt;
        /// Retrieves a logger named as the &lt;paramref name="name"/&gt;
        /// parameter. If the named logger already exists, then the
        /// existing instance will be returned. Otherwise, a new instance is
        /// created.
        /// &lt;/para&gt;
        /// &lt;para&gt;
        /// By default, loggers do not have a set level but inherit
        /// it from the hierarchy. This is one of the central features of
        /// log4net.
        /// &lt;/para&gt;
        /// &lt;/remarks&gt;
        public static ILogger GetLogger(Assembly repositoryAssembly, string name)
        {
            if (repositoryAssembly == null)
            {
                throw new ArgumentNullException("repositoryAssembly");
            }
            if (name == null)
            {
                throw new ArgumentNullException("name");
            }
            return RepositorySelector.GetRepository(repositoryAssembly).GetLogger(name);
        }   

