
    /// &lt;summary&gt;
    /// キャッシュ化された値を格納するディクショナリ
    /// &lt;ul&gt;
    /// &lt;li&gt;キャッシュされていたらキャッシュから値を返す&lt;/li&gt;
    /// &lt;li&gt;キャッシュされていなければpresenterを使って値をキャッシュする&lt;/li&gt;
    /// &lt;/ul&gt;
    /// &lt;/summary&gt;
    public class NameDictionary {
        private Dictionary&lt;string, object&gt; dictionary = new Dictionary&lt;string, object&gt;();
        /// &lt;summary&gt;
        /// 値を取得する。
        /// PropertyのGetterやGet**メソッドから使われることを想定
        /// CallerMemberNameが取れないとエラーになるので注意
        /// &lt;/summary&gt;
        /// &lt;typeparam name="T"&gt;&lt;/typeparam&gt;
        /// &lt;param name="presenter"&gt;&lt;/param&gt;
        /// &lt;param name="PropertyName"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public T Get&lt;T&gt;(Func&lt;T&gt; presenter,[CallerMemberName] string PropertyName=null) {
            return Get&lt;T&gt;(PropertyName, presenter);
        }

        /// &lt;summary&gt;
        /// 値を取得する。
        /// &lt;/summary&gt;
        /// &lt;typeparam name="T"&gt;&lt;/typeparam&gt;
        /// &lt;param name="KeyName"&gt;&lt;/param&gt;
        /// &lt;param name="presenter"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public T Get&lt;T&gt;(string KeyName,Func&lt;T&gt; presenter) {
            if (!dictionary.ContainsKey(KeyName)) {
                dictionary.Add(KeyName, presenter());
            }
            return (T)dictionary[KeyName];
        }
    }

