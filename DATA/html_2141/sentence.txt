More than 1 year has passed since last update.これは Unity Advent Calendar 2019 の25日目の記事です。
昨日は @youri_ssk さんによる 2.5Dキャラクターアニメーション - Mirror Animation Playable でした。Animation Curveを使えば、便利なGUIで3Dアニメーションを作ることができます！そう！普通の人ならAnimation Curveを使いましょう！！（もちろん、BlenderとかUnity外のツールでもいいです）しかし！Qiita読者の皆さんは プログラマー なんです！プログラマーだったらプログラミングで3Dアニメーションを作りたいですよね！というわけで、VRMアバターをC#で動かしてみます！最終的にはこんな感じのアニメーションが作れました。以下の環境でやりました。とりあえずVRMファイルをシーンに読み込んでみます。今回は 今里尚吾 くんにご協力いただきます！（VRoid Studioで作りました！）Hierarchyを見てみたらこんな感じでした！まずは、股関節を曲げてみましょう。以下のスクリプトを作成します。作成できたら、シーン内のVRMにアタッチします。脚が前後に開きました！せっかくなので、アニメーションさせたいですよね。ということで、振り子のように揺らしてみます！いいかんじ！膝も曲げてみたくなったので、 LowerLeg を追加してみました。あと係数とかを微調整したのがこちらです。膝も曲がりました。同じ要領で、全身の関節の動かしてみます。色々調整したら、以下のようなコードになりました。だんだんそれっぽくなってきました。ただ、重心が上下しないのはちょっと違和感がありますね。重心も上下させてみます。ちょ、ちょっとだけ、マシになったかな？ゲシュタルト崩壊してきたので、このあたりで止めておきます。一応、AnimationCurveは使わずにC#だけでアニメーションを作成することができました！せっかくだからAnimationClipに保存してみます。Unityの GameObjectRecorder というAPIを使えば、シーン実行中のアニメーションをAnimationClipに保存できます。以下のスクリプトを作成し、シーン内のVRMにアタッチしてください。適当なフォルダーに空のAnimationClipファイルを作成します。ここでは仮に pendulum-running というファイル名にします。これを RecordTransformHierarchy の Clip に割り当てます。これでシーンを実行すれば、AnimationClipに動きが保管されます！FBX Exporter等を使えば、FBXに変換することもできますね！C#でもAnimationClipを作成することができました！そのことに、果たして意味があるかはわかりませんが、個人的には Quaternion の勉強をできたのが収穫です。本記事作成にあたり、以下の記事を参考にさせていただきました。ありがとうございました。


