ARでの空間共有の手法をまとめた記事が意外となかったので書きます。既にきれいにまとめている方がいたり、サンプルが出回っていたりしたわけじゃないので
もっといいやり方はあるかもしれません。それはそれで各自どこかにまとめてくれると助かります。他の人がプレイ中のARが確認可能です。まず、ARでの位置合わせが一筋縄ではいかない理由を説明します。
2人のプレイヤーがARで空間共有を行う想定の図が下記です。Unityの原点座標はARを起動した際に決定されます。
Aにとっての原点はBから見れば全く違う座標になってしまいます。Bからの目線も同様です。この状態でImageTrackingを行ったものが下記の図です。
読み取る画像マーカーの位置が現実空間上で一致していても、
お互いのUnityの原点が異なる以上はAR空間上では同じ位置にあることになりません。
このように、起動した端末の位置に応じてAR空間が展開されるため、何かしらの解決策が必要となります。ARFoundationにはちゃんと解決策が用意されていました。
説明の前段階として、まずは下記GIFの挙動が重要となります。
【引用元】：Scaling with ARFoundationマウスで動かしているオブジェクトが動いているのではなく、
周りのPlaneやAR Camera(AR Session Origin)が動くことで相対的に動いて見える仕組みです。この仕組みを使ってUnityのワールド空間の原点と画像マーカーをぴったり重ね合わせます。
下記のようなイメージです。赤い点がUnityのワールド空間の原点です。すなわち、端末の起動位置に関係無く画像マーカーの位置を原点として扱えるようになるということです。まず、画像マーカーから原点を定める処理を担うScriptです。MakeContentAppearAtが先述の"AR Session Originを動かして原点と画像マーカーの位置を合わせる処理"
を実行してくれる関数です。第二、第三引数で指定した位置・回転を、第一引数に渡したTransformに反映します。
ただし、第一引数のTransformに直接値を反映するわけではなく、AR Session Originの位置・回転を変更することで
相対的に指定位置へ移動したように見えるだけなので要注意です。過去に少しまとめてます。
【参考リンク】：ARTrackedImageManager.trackedImagesChanged位置合わせを画像認識するたびに行うとカクカクするので、認識頻度にインターバルを設けています。ここからはPhotonの実装です。
下記はPhotonの簡易版ルーム入室コードです。次にお絵描き機能です。線の描画はTrailRendererを動かしているだけです。
【参考リンク】：【Unity(C#)】ハンドトラッキングで簡易版VRお絵かきアプリ自己位置推定の精度を考えると、スマホで画像マーカーだけで位置合わせを支えるのは無理があるなーというのがやってみた感想です。ARSessionOrigin transform position and rotation to make created ARTrackedImage become Unity space zero
Class ARSessionOrigin
PUN2（Photon Unity Networking 2）で始めるオンラインゲーム開発入門


