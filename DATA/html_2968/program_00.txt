using UnityEngine;
using UnityEngine.UI;

public class FpsDisplay : MonoBehaviour
{
    int frameCount;
    float prevTime;
    float fps;

    Text fpsText;

    void Reset()
    {
        this.gameObject.name = "FPS";
    }

    void Start()
    {
        //カメラ自動生成
        GameObject camera_G = new GameObject("OnlyUIRenderingCamera");
        Camera faceCamera = camera_G.AddComponent&lt;Camera&gt;();
        faceCamera.clearFlags = CameraClearFlags.Depth;
        faceCamera.cullingMask = (1 &lt;&lt; LayerMask.NameToLayer("UI"));

        camera_G.transform.parent = this.gameObject.transform;

        //キャンバス生成＆設定
        GameObject canvas_G = new GameObject("FaceCanvas");
        Canvas faceCanvas = canvas_G.AddComponent&lt;Canvas&gt;();
        canvas_G.AddComponent&lt;CanvasRenderer&gt;();
        faceCanvas.planeDistance = 1;
        faceCanvas.renderMode = RenderMode.ScreenSpaceCamera;
        faceCanvas.worldCamera = faceCamera;

        canvas_G.transform.parent = camera_G.transform;

        //テキスト生成＆設定
        GameObject text_G = new GameObject("FpsText");
        fpsText = text_G.AddComponent&lt;Text&gt;();
        fpsText.font = Resources.GetBuiltinResource(typeof(Font), "Arial.ttf") as Font;
        fpsText.fontSize = 34;

        text_G.transform.parent = canvas_G.transform;

        //テキストのポジションを調整
        RectTransform textRect = text_G.GetComponent&lt;RectTransform&gt;();
        textRect.sizeDelta = new Vector2(1000, 1000);
        textRect.localPosition = new Vector3(400, -300, 0);
        textRect.localScale = new Vector3(1, 1, 1);

        //Layerを変更
        canvas_G.layer = LayerMask.NameToLayer("UI");
        text_G.layer = LayerMask.NameToLayer("UI");

    }

    void Update()
    {
        frameCount++;
        float timer = Time.realtimeSinceStartup - prevTime;

        if (timer &gt;= 0.5f)
        {
            fps = frameCount / timer;
            fpsText.text = ((int)fps).ToString() + "FPS";

            frameCount = 0;
            prevTime = Time.realtimeSinceStartup;
        }
    }

}

