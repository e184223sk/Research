先月から部署が少々異動になりました。そこで、これまではxUnitテストを使用していたのですが、異動後の部署はNUnitテストを使用しているとのことだったので、違いやら書き方やらがちょっと気になり調べてみました。その備忘録。社内のすーぱーすごい先輩の勉強会の内容もメモ。ドキュメントとしてはこちら(Comparing xUnit.net to other frameworks)にキレイに一覧化されていました。
これをみればバッチリ！数字を文字列で返すというとても単純なコードを書いたので、こちらをテストします。以前(C#でxUnitテスト備忘録)実践してるので、細かい部分ははしょります。ファイル → 追加 → 新しいプロジェクトからxUnitテストプロジェクトを選択
プロジェクト参照を追加します。テストしたいプロジェクトを選択します。
ファイル → 追加 → 新しいプロジェクトからNUnitテストプロジェクトを選択
(この辺はxUnitテストと同じ)
NuGetパッケージマネージャーから以下2つをインストールすることで、クラスライブラリをテストプロジェクトにすることもできました。ちなみにNUnit3TestAdapterは、VisualStudio等のテスト実行時に使用されるものみたいです。プロジェクト参照を追加します。テストしたいプロジェクトを選択します。(xUnitと同じ)
①TestFixture → テストメソッドを含むClassをマークするのに使用
②SetUp → テストメソッド実行前に呼ばれるメソッドをマーク
③TestCase → 同一のテストメソッドで値違いなどケースが違う場合に使用
④Assert.That → NUnitテストでのアサーション。Is.EqualToすることで同値テストができるこちら(C#でxUnitテスト備忘録)の記事でかいてみたことをNUnitに変えてみました。データベース側の設定を書いたクラス。xUnitのときと変わりなし。テストコード。NUnitではIClassFixtureが[OneTimeSetUp]に、Disposeが[TearDown]に変わることをおさえておけば大丈夫そう。こちらはAssertionsの書き方とかが変わったくらいの変化。
(非同期のファンクションで試してます。)ちょっとした書き方が違うだけなので、テストを書く上でそこまで困ることはなさそう！


