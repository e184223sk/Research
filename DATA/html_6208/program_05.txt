
public static void Main()
{
    // ParallelEnumerable を使う方法
    var primeNums = ParallelEnumerable.Range(100_000_000, 100)
                        .Where(IsPrime)
                        .ToArray();

    // AsParallel() を使う方法
    var primeNums2 = Enumerable.Range(100_000_000, 100)
                        .AsParallel()
                        .Where(IsPrime)
                        .ToArray();

    // ParallelEnumerable/AsParallel は基本的に順序を保証しないが、
    // AsOrdered() すると順序を保ってくれる。
    var primeNums3 = Enumerable.Range(100_000_000, 100)
                        .AsParallel()
                        .AsOrdered()
                        .Where(IsPrime)
                        .ToArray();

    foreach (var n in primeNums3)
    {
        Console.WriteLine(n);
    }
}

static bool IsPrime(int n)
{
    for (int i = 2; i &lt; n; i++)
    {
        if (n % i == 0) return false;
    }
    return true;
}

