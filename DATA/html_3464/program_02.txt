
    /// &lt;summary&gt;
    /// グラデーションの色のタイプ
    /// &lt;/summary&gt;
    public enum GradientColor
    {
        Transparent,
        DarkRed,
        LightBlue,
        DarkYellow,
        Black,
        Gray,
    }

    /// &lt;summary&gt;
    /// グラデーション設定
    /// &lt;/summary&gt;
    public class GradientModel
    {
        /// &lt;summary&gt;
        /// グラデーションで使用する色
        /// &lt;/summary&gt;
        public SKColor[] Colors { get; set; }

        /// &lt;summary&gt;
        /// グラデーションのポジション
        /// &lt;/summary&gt;
        public float[] ColorPos { get; set; }
    }

    /// &lt;summary&gt;
    /// グラデーションの設定を作成するクラス
    /// &lt;/summary&gt;
    public class GradientModelFactory
    {
        /// &lt;summary&gt;
        /// コンストラクタ
        /// &lt;/summary&gt;
        private GradientModelFactory() { }

        /// &lt;summary&gt;
        /// インスタンスを取得
        /// &lt;/summary&gt;
        public static GradientModelFactory Instance =&gt; new GradientModelFactory();

        /// &lt;summary&gt;
        /// グラデーションの設定を作成して返す
        /// &lt;/summary&gt;
        /// &lt;param name="gradientColor"&gt;グラデーションのタイプ&lt;/param&gt;
        /// &lt;returns&gt;グラデーションの設定&lt;/returns&gt;
        public GradientModel CreateGradientModel(GradientColor gradientColor)
        {
            switch (gradientColor)
            {
                case GradientColor.Transparent:
                    // 透明色の場合はnullを返す
                    return null;
                case GradientColor.DarkRed:
                    return new GradientModel()
                    {
                        Colors = new SKColor[] { SKColors.Red, SKColors.DarkRed },
                        ColorPos = new float[] { 0, 1 }
                    };
                case GradientColor.LightBlue:
                    return new GradientModel()
                    {
                        Colors = new SKColor[] { SKColors.AliceBlue, SKColors.LightBlue },
                        ColorPos = new float[] { 0, 1 }
                    };
                case GradientColor.DarkYellow:
                    return new GradientModel()
                    {
                        Colors = new SKColor[] { Color.FromHex("#FFFFA500").ToSKColor(), Color.FromHex("#FF90B000").ToSKColor() },
                        ColorPos = new float[] { 0, 1 }
                    };
                case GradientColor.Black:
                    // 3色のグラデーションの場合はColorsとColorPosに3つを指定
                    return new GradientModel()
                    {
                        Colors = new SKColor[] { SKColors.White, SKColors.LightGray, SKColors.Black },
                        ColorPos = new float[] { 0, 0.5f, 1 }
                    };
                case GradientColor.Gray:
                    return new GradientModel()
                    {
                        Colors = new SKColor[] { SKColors.LightGray, SKColors.Gray },
                        ColorPos = new float[] { 0, 1 }
                    };
                default:
                    throw new Exception("Invalid GradientColor");
            }
        }
    }

