
    // ステータスを表すenum
    public enum Status
    {
        ToDo,
        Doing,
        Done,
    }

    // Statusをプロパティに持つクラス
    public class Item : INotifyPropertyChanged
    {
        private Status _Status;
        public Status Status
        {
            get =&gt; _Status;
            set
            {
                _Status = value;
                OnPropertyChanged();
            }
        }
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    // StatusをGradientColorに変換するコンバーター
    public class StatusToGradientColorConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            var status = (Status)value;
            switch (status)
            {
                case Status.ToDo:
                    return GradientColor.DarkRed;
                case Status.Doing:
                    return GradientColor.DarkYellow;
                case Status.Done:
                    return GradientColor.LightBlue;
                default:
                    throw new Exception("Invalid status");
            }
        }

        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotImplementedException();
        }
    }

