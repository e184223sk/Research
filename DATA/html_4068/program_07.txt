
// BurstFunc が受け取れる型 Data
public struct Data { };

// Data への暗黙の型変換を実装した型
public struct DataType2
{
    public implicit operator Data(DataType2 data) {return new Data(/* converion */)};
};

// 関数のオーバーロードで該当するメンバを取り出して渡す例
public struct DataType3
{
    public Data data_member;
};

[BurstCompile]
public static class BurstFunc
{
    private void FuncDelegade(ref Data data);
    private static FuncDelegade _funcDelegade;

    [RuntimeInitializeOnLoadMethod]
    public static void Initialize()
    {
        _funcDelegade = BurstCompiler.
            CompileFunctionPointer&lt;FuncDelegade&gt;(FuncBurst).Invoke;
    }

    // Burst 関数ポインタへのエントリポイント
    [BurstCompile]
    [AOT.MonoPInvokeCallback(typeof(FuncDelegade))]
    private static void FuncBurst(ref Data data)
    {
        var report = Proccess(data);
    }
    // Burstへのエントリポイント以外では参照渡ししなくても、
    // Genericな関数を使っても、
    // void以外を返してもよい
    private static bool Proccess&lt;T&gt;(T data)
    {
        /* 何かする */
        return true;
    }

    // Data と DataType2 を渡せる　(暗黙にDataへの型変換が行われる)
    public static void Func(ref Data data)
    {
        _funcDelegade(ref data);
    }
    // DataType3 を渡せる (オーバーロード)
    public static void Func(ref DataType3 data)
    {
        _funcDelegade(ref data.data_member);
    }
}

