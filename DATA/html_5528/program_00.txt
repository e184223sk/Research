using System;
using System.IO;
using System.Reflection;

namespace EUtility
{
    public class Utility
    {
        /// &lt;summary&gt;
        /// アセンブリ(.exe)のある親ディレクト下に指定した名前のディレクトを作成してそのパスを返します。
        /// たとえば bin\foo.exeから呼び出すとbinと兄弟レベルのディレクトを作成します。
        /// &lt;/summary&gt;
        /// &lt;param name="subDirName"&gt;サブディレクト&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static string GetAssemblyParentSubPath(string subDirName)
        {
            if (subDirName == null)
                throw new ArgumentNullException("subDirName");

            DirectoryInfo dirInfo = Directory.GetParent(Assembly.GetEntryAssembly().Location);
            DirectoryInfo dirBase = dirInfo.Parent;
            string target = Path.Combine(dirBase.FullName, subDirName);

            if ( ! Directory.Exists(target))
            {
                Directory.CreateDirectory(target);
            }
            return target;
        }
        /// &lt;summary&gt;
        /// アセンブリ(.exe)のある親ディレクト下に指定した名前のディレクトを作成し,
        /// filenameを付加してfullpathを返します。
        /// &lt;/summary&gt;
        /// &lt;param name="subDirName"&gt;サブディレクト名&lt;/param&gt;
        /// &lt;param name="filename"&gt;ファイル名&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;

        public static string GetAssemblyParentSubFile(string subDirName, string filename)
        {
            if (subDirName == null)
                throw new ArgumentNullException("subDirName");

            if (filename == null)
                throw new ArgumentNullException("filename");

            return Path.Combine(GetAssemblyParentSubPath(subDirName), filename);
        }
    }
}




