More than 1 year has passed since last update.下記記事で作成していたVRお絵描きアプリに
色の変更機能を設けようとした際にMaterialPropertyBlockを活用しました。【参考リンク】：【Unity(C#)】ハンドトラッキングで簡易版VRお絵かきアプリ描いた線ごとに色を変更したかったのですが、
描く予定の線の分だけマテリアルを用意するのは
あまりにも手間ですし、その都度Instantiateするのも
負荷的にどうなの？と感じたので
MaterialPropertyBlockの使い方を学ぶことにしました。リアルタイムに色違いのキューブがランダムに生成されるデモです。マテリアルは１つしか使っていません。色をセットするためにSetColor を使います。
第一引数にShaderで定義されている色のProperty名を指定します。
(今回はIDで指定しています)その後、Rendererに反映させるためにSetPropertyBlockを呼び出します。Shader.PropertyToIDを使うことで
Shader内で定義されている特定のプロパティ名を
ID(int型)に変換することができます。先ほどのSetColorの第一引数に渡すことができます。メリットしてはStart関数内でIDを取得しているので
何度も指定したShader内プロパティの文字列→ID(int型)
という処理を行わずに済み、負荷が軽くなります。【Unity】【シェーダ】MaterialPropertyBlockの使い方【Unity】MaterialのPropertyIDについて


