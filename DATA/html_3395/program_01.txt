
static async Task TaskReadBuffer(
    FileStream          _Fs,        // ファイルストリーム
    CWaveChunkReader    _wavChunk,  // wavチャンク
    BufferedWaveProvider _Provider, // バッファプロバイダー
    CancellationToken   _token      // タスクキャンセル通知用
    )
{
    // 終了位置
    int _StreamEnd = (_wavChunk.IsLoop())? _wavChunk.LoopEnd: _wavChunk.DataEnd;

    // データ開始位置へシーク
    _Fs.Seek(_wavChunk.DataStart, SeekOrigin.Begin);

    var _IsLoop = true;
    while (_IsLoop)
    {
        // 空きバッファサイズ（データを追加するサイズ）
        int _EmptySize = _Provider.BufferLength - _Provider.BufferedBytes;

        // ストリーム位置チェック
        if (_Fs.Position + _EmptySize &gt; _StreamEnd)
        {
            _EmptySize = _StreamEnd - (int)_Fs.Position;

            if (_wavChunk.IsLoop())
            {
                // ループ開始位置へ
                _Fs.Seek(_wavChunk.LoopStart, SeekOrigin.Begin);
            }
            else
            {
                _IsLoop = false;
            }
        }

        var _tmp = new byte[_EmptySize];
        if (_EmptySize &gt; 0)
        {
            // ファイルから読み込み
            _Fs.Read(_tmp, 0, _EmptySize);
            // サンプルをバッファへ追加
            _Provider.AddSamples(_tmp, 0, _EmptySize);
        }

        // タスクキャンセル要求チェック
        if (_token.IsCancellationRequested) break;

        await Task.Delay(100);
    }

}

