

public IObservable&lt;T&gt; AnyWithProbability&lt;T&gt;(int count, IList&lt;T&gt; expectedValues, IList&lt;double&gt; probabilities)
{
    return Observable.Generate(0, i =&gt; i &lt; count, i =&gt; ++i, i =&gt; NextAny(expectedValues, probabilities));
}

private T NextAny&lt;T&gt;(IList&lt;T&gt; expectedValues, IList&lt;double&gt; probabilities)
{
    double probability = NextRandomDouble(0, 1);

    for (int i = 0; i &lt; probabilities.Count; ++i)
    {
        summary += probabilities[i];
        if (probability &lt;= summary) { return expectedValues[i]; }
    }

    if (expectedValues.Count &gt; probabilities.Count)
    {
        return expectedValues[probabilities.Count];
    }
    else
    {
        return default(T);
    }
}

