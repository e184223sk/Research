More than 1 year has passed since last update.ReactiveExtensions (System.Reactive) を使ってテストデータを生成する例を紹介します。System.Reactive.Linq.Observable クラスには Generate というメソッドがあります。これ以外にもスケジューラーなどを引数にとるオーバーロードがあります。今回の実装ではこのメソッドを使用します。TState がややこしい印象を与えるかもしれませんが、繰り返しの状態を管理する代表的なものは int 型のカウンターです。n 回繰り返す場合は次のように書くことができます。イテレータで表すと次のようなイメージになります。Observable.Generate メソッドを使って IObservable&lt;T&gt; オブジェクトを生成するメソッドを実装します。[1, 2, 3] が指定された場合、1, 2, 3, 1, 2, 3, … のように順番に値を返します。[1, 2, 3] が指定された場合、1, 3, 1, 2, 2, 1, … のように何れかの値を返します。値に [1, 2, 3]、確率に [0.5, 0.3] が指定された場合、50% の確率で 1、30% の確率で 2、それ以外の場合 3 を返します。指定された範囲内でランダムな値を返します。
以下は Int32 の実装です。他の型については GitHub を見てください。上のコードで使用している RandomValueGenerator&lt;T&gt; クラスの実装です。ランダム値の生成処理はデリゲートで受け取るようにしています。.NET Framework 標準の Random クラスや Math.NET (MathNet.Numerics) を用いるなど任意に実装した生成処理を受け取る想定です。各データ項目の値を生成する IObservable&lt;T&gt; オブジェクトを生成し、値を object 配列にまとめて配信する Observable オブジェクトを生成しています。データ項目名と IObservable&lt;T&gt; オブジェクトのペアを受け取ってデータを返す IDataReader 実装クラスを定義すれば、データベースの代わりにデータを返すデータスタブをつくることができると思います。


