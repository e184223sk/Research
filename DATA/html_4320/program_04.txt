
public class CameraController : MonoBehaviour
{
    public Transform Target; // 注目する対象(プレイヤー)
    public Camera Camera; // カメラ

    public float AngleX = 15.0f; // カメラX軸角度
    public float AngleAttenRate = 5.0f; // カメラ向きの減衰比率
    public float NoiseSpeed = 0.5f;  // プレイヤが止まっている時のノイズ速度
    public float MoveNoiseSpeed = 1.5f;  // プレイヤが動いてる時のノイズ速度
    public float NoiseCoeff = 1.3f;  // プレイヤが止まっている時のノイズ係数
    public float MoveNoiseCoeff = 2.2f;  // プレイヤが動いてる時のノイズ係数

    private Vector3 prevTargetPos; // 前フレームのターゲットの位置

    void Start()
    {
        prevTargetPos = Target.position;
    }

    void Update ()
    {
        var moved = Target.position != prevTargetPos;
        prevTargetPos = Target.position;

        var ns = (moved ? MoveNoiseSpeed : NoiseSpeed);
        var nc = (moved ? MoveNoiseCoeff : NoiseCoeff);

        var t = Time.time * ns;
        var nx = Mathf.PerlinNoise(t, t + 5.0f) * nc;
        var ny = Mathf.PerlinNoise(t + 10.0f, t + 15.0f) * nc;
        var nz = Mathf.PerlinNoise(t + 25.0f, t + 20.0f) * nc * 0.5f;
        var noise = new Vector3(nx, ny, nz);

        var noiseRot = Quaternion.Euler(AngleX + noise.x, noise.y, noise.z);
        transform.rotation = Quaternion.Slerp(transform.rotation, noiseRot, Time.deltaTime * AngleAttenRate);
    }
}

