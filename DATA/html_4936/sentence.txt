More than 3 years have passed since last update.N行N列の2次元配列に対して、以下の10個のメソッドを定義したい。N行N列の２次元配列の回転、反転は、前述の通り10種類が存在します。
しかし、右回転は左回転から単純に導きだせるので、実質的には７種類のメソッドが定義できれば良い、ということになります。そして、この回転操作は、実は「中央横線を軸に反転」と「右斜め下対角線を軸に反転」の2つを定義さえすれば、その組み合わせで実現できてしまいます。2つの対角線を言葉で区別したいのですが、正式な呼び方がわかりません。ここでは、左上から右下へ引く対角線を「右斜め下対角線」、左下から右上へ引く対角線を「右斜め上対角線」と呼ぶことにします。「中央縦線を軸に反転」「右斜め上対角線を軸に反転」といった組み合わせでもOKですが、ここでは、「中央横線を軸に反転」と「右斜め下対角線を軸に反転」の２つのメソッドを定義することで、すべての配列の回転/反転を実現してみます。まずは、中央横線を軸に反転をするメソッドを定義します。HorRotateメソッドは、2次元配列の拡張メソッドとして定義しています。
引数の配列そのものは変更させずに、反転後の新たな配列オブ上クトを返すようにしています。配列の内容を表示するPrintメソッドも定義しておきましょう。Printメソッドは、Programkクラスに定義しました。では動かしてみます。結果です。うまく動いているようですね。今度は、右斜め下対角線を軸に反転するメソッドを定義します。x,yの値は、対角線の左側だけになるようにループさせています。これで、の入れ替えを行えば、右斜め下対角線を軸に反転することができます。これも確認してみます。うまく動いているようです。上の2つのメソッドを組み合わせるといろんな回転、反転処理を定義することができます。例えば、と組み合わせると、左に90度の回転処理になります。つまり、これで以下の8つのメソッドが定義できます。また、で、右上から左下への軸にした反転処理になります。残り1つは、縦中央線を軸にした反転です。上のように2つのメソッドの組み合わせで実現できます、という２つの関数さえ作成すれば、（効率は悪いですが）この２つの関数の組み合わせで、すべての回転を実現できるって面白いですね。ArrayRotationクラス全体のコードを示します。ここでは、360度回転のメソッドも定義しています。9*9の配列での動作を確認するコードを書いてみました。上記確認プログラムの実行結果です。この記事は、Gushwell's C# Programming Pageで公開したものを大幅に加筆・修正したものです。


