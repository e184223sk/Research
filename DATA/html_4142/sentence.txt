More than 1 year has passed since last update.おはようございます、本日はAPI経由でユーザー登録・アクセス管理をするためのコンポーネントを見ていきます。今日は準備編。ASP.NETにはASP.NET Core Identityと呼ばれるライブラリーがあります。このライブラリーを使ってユーザーのアクセスをコントロールすることができます。(ASP.NET Core 2.2に含まれています）本家のドキュメントはこちらをご参照ください。
https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity?view=aspnetcore-2.2&amp;tabs=visual-studioユーザー情報、パスワード、プロフィール情報等々はMS SQL、ストレージなどを使うことができます。今回はMS SQLを利用します。　appsetting.jsonにてDBの場所を指定します。(今回はユーザーデータベースだけ別のデータベースとして立てています、メインのDBと一緒でも問題はありません）ApplicationUserModelsという名前でユーザー情報を扱うデータモデルを作ります。 一旦　IdentityUserを継承するだけにしておきます。IdentityDbContextを継承するここで一旦DBを更新ます。パッケージマネージャーコンソールより、マイグレーションを起動します。マイグレーションが終わると下記のマイグレーションコードが生成されます。マイグレーションコードを一度確認し、次は実際にDBに対して更新を行います。これでDBは更新されました。内容を確認してみましょう。Visual StudioのサーバーエクスプローラーよりDBを確認すると下記のようにユーザー管理に必要な新しいテーブルが生成されています。Startup.csにてIdentityが使えるようDIします。 を追加します。下記がフルstartup.csファイルです。Startup.csにてSwaggerが設定されています、Swaggerの設定方法に関してはこちらを参照してみてください。
https://qiita.com/syantien/items/b82879afad3b4c18f224ここから次は色々なメソッドを追加して、実際にユーザーを登録や、ロール登録等々をしていきます。次回：ASP.NET Core 2 API x Identity でユーザー登録とアクセスを管理(JWT) 2. 基本メソッド編 (ログイン)


