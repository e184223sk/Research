
/// &lt;summary&gt;
/// 指定したマスタデータを取得します.
/// &lt;/summary&gt;
/// &lt;typeparam name="T"&gt;&lt;see cref="Model.Master.IMasterData"/&gt;を継承したマスタデータの型.&lt;/typeparam&gt;
/// &lt;param name="id"&gt;取得したいデータのIDをリストに格納して渡してください.(NULL = 全データ)&lt;/param&gt;
/// &lt;returns&gt;一致したマスタデータを返します.&lt;/returns&gt;
public static List&lt;T&gt; GetMasterData&lt;T&gt;(List&lt;long&gt; id) where T : IMasterData, new() // new T() のため.
{
    var dataPath = "アセットのパス" + typeof(T).Name + ".json";

    // UTF8形式でデータを読み込みます.
    StreamReader sr = new StreamReader(dataPath, Encoding.UTF8);

    var source = sr.ReadToEnd();

    sr.Close();

    List&lt;T&gt; result = new List&lt;T&gt;();

    // インターフェースを通してデータを初期化します.
    var table = Json.Deserialize(source) as IList;
    foreach (var t in table)
    {
        T master = new T();

        master.Deserialize(t as IDictionary);

        result.Add(master);
    }

    // IDが一致したデータのみ渡します.
    return Filter(result, id);
}


// ex: id=1000 のDungeonマスタを取得.
List&lt;Dungeon&gt; masterData = null;

// ※例外処理を入れてないのでなんとなく…。
try
{
    masterData = GetMasterData&lt;Dungeon&gt;(new List&lt;long&gt; { 1000 });
}
catch(System.Exception e)
{
    // 何かしらのエラーが発生しました.
}


