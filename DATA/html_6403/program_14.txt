
// マスタデータをキャッシュする変数です.
static Dictionary&lt;string, IList&gt; cachedMasterDictionary = new Dictionary&lt;string, IList&gt;();

public static List&lt;T&gt; GetMasterData&lt;T&gt;(List&lt;long&gt; id) where T : IMasterData, new() // new T() のため.
{
    var dataPath = "アセットのパス" + typeof(T).Name + ".json";

    // ---拡張しました---

    // 同じキー(dataPath)が呼び出されたら.
    if (cachedMasterDictionary.ContainsKey(dataPath))
    {
        var cachedData = cachedMasterDictionary[dataPath] as List&lt;T&gt;;

        // キャッシュしていたデータを渡します.
        return Filter(cachedData, id);
    }

    // ----------------

    // UTF8形式でデータを読み込みます.
    StreamReader sr = new StreamReader(dataPath, Encoding.UTF8);

    var source = sr.ReadToEnd();

    sr.Close();

    List&lt;T&gt; result = new List&lt;T&gt;();

    // インターフェースを通してデータを初期化します.
    var table = Json.Deserialize(source) as IList;
    foreach (var t in table)
    {
        T master = new T();

        master.Deserialize(t as IDictionary);

        result.Add(master);
    }

    // ---拡張しました---

    // 初期化済みマスタデータをdataPathをキーとしてキャッシュしておきます.
    cachedMasterDictionary.Add(dataPath, result);

    // ----------------

    // IDが一致したデータのみ渡します.
    return Filter(result, id);
}

