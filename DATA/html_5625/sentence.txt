More than 3 years have passed since last update.C#のstaticメソッドとinstanceメソッドの違いをまとめてみました。staticメソッド内では、non-staticなフィールド（プロパティ・メソッド）にアクセスすることが出来ません。
逆に、instanceメソッド内では、static/non-staticともにアクセス可能です。staticメソッドは、abstract/virtualとすることができません。したがって、overrideすることもできません。
ただし、newによる隠蔽は可能です。また、staticメソッドをもってinterfaceの実装とすることもできません。staticメソッドは、クラス修飾で呼び出せますが、インスタンス修飾では呼び出すことはできません。さて、C#上での比較はそれぐらいにして、ちょっとILに潜ってみます。
（本当はこれがやりたかった。元のメソッドはこんな感じで定義。それをILにしてみたのが下記です。違いは、staticで修飾されているか？instanceで修飾されているか？の他に、
IL_0001の命令が、「ldarg.1」と「ldarg.0」で異なっているのがわかると思います。もう少し違うバージョンのILも見てみましょう。フィールドのコンソール出力メソッドを追加してみました。
インスタンスフィールドにアクセスするために、IL_0001で「ldarg.0」の命令を発行しています。つまり、インスタンスメソッドはC#で書いた引数の前、０番目の引数としてクラスインスタンスが渡されているのがわかると思います。
呼び出し部分も確認してみましょう。staticメソッドの呼び出しは、変数iをスタックに積んでいるだけですが（IL_0003～）
instanceメソッドの呼び出しには、クラスインスタンスもスタックに積んでいることがわかります。（IL_0010）メソッド内の実装および呼び出し部分を見れば、instanceメソッドはstaticメソッドの第１引数の前にクラスインスタンスを渡したものとほぼ同じです。
ただし、オブジェクト指向的振る舞い（virtual/override/interface周り）が違うので、そのまま代用はできません。


