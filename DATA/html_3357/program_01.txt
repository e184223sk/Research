
// 接続設定に使うクラスの変更とpipelineの生成を行う

public UdpCNetworkDriver m_Driver;
private NativeList&lt;NetworkConnection&gt; m_Connections;
+ NetworkPipeline m_Pipeline;

void Start()
{
    m_Driver = new UdpCNetworkDriver(new INetworkParameter[0]);
//接続情報がNetworkEndPointを使う形に変わった
-   if (m_Driver.Bind(new IPEndPoint(IPAddress.Any, 9000)) != 0) {
+   var endpoint = NetworkEndPoint.AnyIpv4;
+   endpoint.Port = 9000;
+   if (m_Driver.Bind(endpoint) != 0) {
        Debug.Log("Failed to bind to port 9000");
    } else {
        m_Driver.Listen();
    }
    m_Pipeline = new m_Driver.CreatePipeline(typeof(NullPipelineStage));

    m_Connections = new NativeList&lt;NetworkConnection&gt;(16, Allocator.Persistent);
}

void OnDestroy() {
    //pipelineはDisposeする必要はないみたい
    m_Driver.Dispose();
    m_Connections.Dispose();
}

