More than 1 year has passed since last update.バージョニングはアプリをデプロイする上で大事な要素です。
大抵の開発プラットフォームにはバージョン番号が設定できます。それを設定画面やトップ画面等で表示しているアプリもよく見かけます。
ですが「このアプリはいつ時点のコミットでビルドしたものなのか？」を確認したい場合、数字ではひと目でわかりません。
というわけで、ビルド前に自動で現在のコミットのハッシュ値を定数のクラスとして生成するEditor拡張を作成しました。CommitHashGenerator.csこの.csをEditorフォルダに格納します。
このとき、自動生成される.csのパスを変更したい場合は以下の箇所を書き換えます。このような.csが自動生成されます。
Create -&gt; CommitHashで手動で生成することができます。
importした直後はこれで.csを生成してください。IPreprocessBuildWithReport.OnPreprocessBuild
ビルドの開始前に呼ばれる上のコールバックのタイミングで.csを自動生成します。Commit.csは別のコミットでビルドするたびに再生成されるため、.gitignoreに登録することをおすすめします。
しかしそのままだと空フォルダにUnityが.metaを生成するので、.gitkeepを使ってフォルダの構成を維持しておくと便利です。JenkinsやCircleCIなど、様々なCI/CDツールがあります。
やり方はプロジェクトによって異なると思うので、以下のpublic staticなAPIを公開してあります。BuildPipeline.BuildPlayerの実行前に上記のAPIを実行すれば生成されます。
デフォルトだと上記のパスに生成されます。
画面に表示してみました。これ作ってなかった自分、アホですわ！
って言いたくなるくらい便利です。
アプリのバイナリのバージョン確認やログ収集など、どの時点かのビルドかがわかるようになるとここまで便利になるとは……。「リリースしたいんだけど、このバイナリいつビルドしたやつだろう……ヨシ！」1みたいなことがなくせます。やったね！前回の記事でMessagePack-CSharpのもろもろを解析した結果思いつきました。
OSSをちゃんと読むの大事ですね。肝心のSerialize/Deserializeしてるあたりはぜんぜんわかんなかったです。わからん。
手元に開発環境がmacしかないので、winとかlinuxとかの人は動かしてみて、だめだったらなんか適当に直しといてください。おしまい。CommitHashGenerator.cs【Unity】ビルド時にGitコミットハッシュをバージョン情報に含めた件
Git で現在のコミットのハッシュを取得する方法
（小ネタ）改行文字を削除する
スクリプトからテンプレを自動作成【Unity】【エディタ拡張】
Unityプロジェクトへファイルを追加する際に上書き更新する
【Unity】エディタ拡張で使用できるコールバックを40個まとめて紹介
Unityのエディタ拡張で設定を保存
メニューを追加するための属性「MenuItem」は意外と多機能【Unity】【エディタ拡張】【属性】もちろんしたことないですけどねそんなこと!!!?!?!!!?!!!?!?!?!?!?!???!!!! ↩


