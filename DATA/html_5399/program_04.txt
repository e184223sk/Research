

        private enum MOVE_STATE
        {
            DEFAULT = 0,
            UP = 1,
            DOWN = 2
        }
        private MOVE_STATE mMoveState;
        private float mGoalZ; // 目標とするz座標

        /// &lt;summary&gt;
        /// mMoveState==DEFAULTの場合に、目標とするz座標を計算する
        /// &lt;/summary&gt;
        public void DecideMovement()
        {
            if(mMoveState == MOVE_STATE.DEFAULT)
            {
                // 現在のz座標を取得
                float currentZ = mTrans.position.z;

                // 移動可能なz軸の範囲から乱数取得
                float rand = Random.Range(-14.0f, 15.0f);

                // 取得した乱数と現在のz座標の距離を計算
                float difference = 0.0f;
                if(currentZ &gt;= rand)
                {
                    difference = Mathf.Abs(currentZ - rand);
                    mMoveState = MOVE_STATE.DOWN;
                }else
                {
                    difference = Mathf.Abs(rand - currentZ);
                    mMoveState = MOVE_STATE.UP;
                }

                // 距離が1.0f以上あるならば目標の座標を決定し、そうでないならば次フレームまでその場で待機
                if(difference &gt;= 1.0f)
                {
                    mGoalZ = rand;
                }else
                {
                    mMoveState = MOVE_STATE.DEFAULT;
                }

                // mMoveStateを条件にして、TankMovementの移動メソッドを呼び出す
                switch (mMoveState)
                {
                    case MOVE_STATE.DEFAULT:
                        mMoveScript.ResetVelocity();
                        break;
                    case MOVE_STATE.UP:
                        mMoveScript.SetVelocityUp();
                        break;
                    case MOVE_STATE.DOWN:
                        mMoveScript.SetVelocityDown();
                        break;
                }
            }
        }

        /// &lt;summary&gt;
        /// 移動の完了判定
        /// 移動完了の判定を行い、完了しているならばmMoveStateをDEFAULTに戻す
        /// &lt;/summary&gt;
        public void CheckMovement()
        {
            float currentZ = mTrans.position.z;
            switch (mMoveState)
            {
                case MOVE_STATE.DEFAULT:
                    return;
                case MOVE_STATE.UP:
                    if (currentZ &gt;= mGoalZ) mMoveState = MOVE_STATE.DEFAULT;
                    break;
                case MOVE_STATE.DOWN:
                    if (currentZ &lt;= mGoalZ) mMoveState = MOVE_STATE.DEFAULT;
                    break;
            }
        }


