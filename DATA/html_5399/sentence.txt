More than 3 years have passed since last update.ミニゲームを作ってUnityを学ぶ！[タンクウォーズ編]ゲームの流れについては前回までにすべてが出来上がりましたので、ここではゲームが楽しいか楽しくないかに大きく影響を与える対戦相手の動き、行動AIを実装していきます。戦車本体であるTankModelに対して移動や砲台の操作、弾を撃つ機能をそれぞれ別のスクリプトを作って実装してきたときと同じ用に、今回も行動Aiを戦車が持つ1つの機能としてスクリプトを作成します。いつもとは違って今回はスクリプトの完成形を最初から掲示していますので、以下より具体的な内容を見ていきます。まずはAIがAIとして機能するために必要な事前準備を行います。TankModelに新しくEnemyAiのフィールドを追加し、Awake()でプレイヤーフラグが立っていない場合はアタッチされているEnemyAiを取得してInit()を呼び出すように修正しています。EnemyAiのInit()では引数で自身のTransformのほか、戦車に実装しているそれぞれの機能のスクリプトを取得し、最後にRandomSetWaitFireTime()で最初に弾を撃ち出すまでの待機時間を決定しています。弾を発射する仕組みはかなりシンプルです。0.2から1.0までのランダムな秒数を待機時間として予め設定しておき、その待機時間が経過したタイミングで1発の弾を撃ち出します。
そして弾を撃ち出したタイミングと同時に次の待機時間を再度設定しなおすことで、自身の機能が停止するまでいつまでも弾を発射し続けます。このときに最初の1発目を撃つタイミングを決定しているのがInit()で実行されているRandomSetWaitFireTime()になります。移動についても同様に、とてもシンプルです。EnemyAiは移動に関する状態としてDEFAULT, UP, DOWNの3つの値を持っています。この状態がDEFAULTのときにステージの上下範囲内で目標とするZ座標をランダムに決定し、その目標が現在位置から上の場合はUP、下の場合はDOWNに状態をそれぞれ変更した後、その方向に向かって移動していきます。
そして目標地点に到達したタイミングで状態がDEFAULTに戻ることで、また新しい目標地点が決まり、その方向にむかって再度移動を開始します。このとき、小刻みな上下運動を繰り返すといった（個人的に）かっこ悪い動きをさせないために、目標地点と現在位置の差が1.0f未満な場合は移動を見送る制限をかけています。AIとは名ばかりの単純な仕組み続きですが、狙いを定める = 砲台を回転させる仕組みはその中でも最も単純です。1: PlayerTankのTransformをインスペクタから設定TurretControllerに新しく追加したCalRotation(Transform)によって、砲台が引数として与えられた対象を常に向き続けるような動作をします。出来上がったAIを機能させるために、TankModelをもう少しだけ修正します。Update()の処理内容をプレイヤーフラグによって分岐しました。
これでゲームが開始されると同時に相手戦車が動き出すようになります。9回にわたって解説を行ってきたタンクウォーズですが、今回行った敵AIの実装によって遂にゲームとして完成となります。筆者自身の後学のためにと書き始めた記事ですが、Unityを始めて間もない方にとって少しでも参考になれば幸いでございます。
またコードやテキストの不備などございましたら、ぜひぜひお知らせくださいませ。それでは最後に、プロジェクトを実行してタンクウォーズが完成していることを確認します。ご覧いただき、ありがとうございました。イントロダクションに戻る



