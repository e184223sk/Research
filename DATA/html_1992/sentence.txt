More than 1 year has passed since last update.エディタ上でAudioClipを扱うための内部APIです。
リファレンスは存在しませんが、その全貌はここで見ることができます。
全貌と言ってもほぼexternなのでメソッド名や型しか分かりませんが。AudioSourceを使わずに、Editor上でAudioClipを再生できます。
AudioClipを選択したときにInspector下部にプレビューとしてサウンドプレイヤーが表示されますが、あんな感じのGUIを自前定義のカスタムInspectorやEditorWindow上に構築できるわけです。私の場合、AudioClip（のラッパークラス）にこんなカスタムPropertyDrawerを定義するのに使いました。
内部APIなので、当然普通に呼ぶことはできません。Reflectionを使って無理やり呼び出します。ここを見てpublicメソッドの名前を全部列挙します。
列挙型管理なのは、コード補完が効いて扱いやすいため。タイポ怖い。ついでに使うnamespaceも全て書いておきます。以降のコードは全てこのInternalAudioUtilクラス内に記述します。ReflectionとExpressionをこねくり回します。
全部public staticだし、オーバーロードの曖昧性がないので楽でいいですね。
Expression構築については、neuecc先生の手法を参考にしています。new object[]{...}やらキャストやらを毎回書くのは嫌なので、適当に中間メソッドを作っておいて、以下のようにそれぞれのメソッドに対応する公開APIを定義します（これが一番疲れました）。
[Obsolete]を付けているPlayClipについては後述します。これで準備OKです。大体メソッド名と引数名から予測できる通りの挙動をしますが、いくつかかなりヤバめの注意点があります。PlayClip(AudioClip clip, int startSample, bool loop)
見るからに再生開始位置とループ有無を指定できそうですが、できません。
一応全て引数に取れるメソッドも定義していますが、この理由により[Obsolete]を付けています。なお、代わりにSetClipSamplePosition()やLoopClip()を同時に使うことで所望の挙動が得られます。そんなバカな、StopAllClips()があるじゃないか。私もそう思いました。StopAllClips()は、最後に再生したclipを停止します。clipを明示的に指定しなくてもいいのでとても便利ですね！！！！！この状態になると、再生が終了するか、Unityを再起動するまで他のAudioClipは停止できません。
そのため、クロスフェードのプレビューとかは無理です。残念。きっとまだ罠があるので、ぜひ踏み抜いて教えてください。AudioUtilクラス
https://github.com/Unity-Technologies/UnityCsReference/blob/master/Editor/Mono/Audio/Bindings/AudioUtil.bindings.csneuecc先生によるReflectionの高速化手法紹介
http://neue.cc/2014/01/27_446.htmlRtyper氏が作った旧AudioUtilのラッパー（とその問題点（上述したものと同じ））
https://forum.unity.com/threads/reflected-audioutil-class-for-making-audio-based-editor-extensions.308133/


