More than 3 years have passed since last update.このプログラムの原型を書いたのは随分と昔のことです。当時素数を勉強したいと思って、このメビウス関数のコードを書いてみたのですが、数学の素養が欠けている僕には、このメビウス関数が一体何なのかが、イマイチわからない...でもせっかく書いたのだからとWebサイトに公開したのが約7年前。すこし手直ししてここに再掲載することとします。メビウス関数の定義は、以下のようなものです。
詳しくは、Wikipedia(メビウス関数)を参照してください。上の定義を元に、1から100までのメビウス関数の値を求めるコードを書いてみました。まず、Mebius関数の値を格納する配列を用意し、1で初期化。 
それから、エラトステネスのふるいと似たやり方で、の位置の要素に、-1を掛けていきます。これで、　n が相異なる偶数個の素数の積ならば μ(n) = 1
　n が相異なる奇数個の素数の積ならば μ(n) = -1  の部分を求めます。さらに、の要素（素数の２乗で割りきれる数）には、0を代入して、　n が平方因子を持つ（平方数で割り切れる）ときμ(n) = 0  を求めます。2以上の数で、上記どれにも該当しなかいのはあり得ないので、配列のすべてにメビウス関数の値が設定されることになります。このC#のコードでは、 μ(1), μ(2) μ(3) ... の値を列挙するのはなく、整数nを与えると、メビウス関数の値が戻ってくるような、読み取り専用のインデクサを定義しました。
範囲チェックはやってません。のようにして値を得ます。なお、素数を求めるPrimesクラスは、ここで示したメソッドを元に、クラスとして定義しなおしたものです。実行結果の一部を掲載します。この記事は、Gushwell's C# Programming Pageで公開したものを加筆・修正したものです。


