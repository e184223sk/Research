More than 3 years have passed since last update.この文章にはリフレクションを実行時に使用する事を前提とした内容が含まれています。
実行時にリフレクションを行おうとすると拒否反応が出る訓練されたエンジニアの方はご注意ください。ふとC#はリフレクションを行うことが可能な言語だったのを思い出し
エディタ拡張と組み合わせて何かできないか試してみる。これをとすることでコンポーネントの追加を行いたい場面があったとする。
パッと浮かんだのは、EditorGUI.Popupに特定クラスから派生したクラス名を列挙できないか　というもの。取り敢えず派生クラスを取得するコードを書いてみる。うわぁ思ったより簡単に取得できる。
引数でIsAbstract判定を行うかどうか等を追加すればそれなりに便利な関数になりそう。この関数をエディタ拡張と組み合わせていく。まず属性を定義次にその属性に適応するPropertyDrawerを定義これで準備ＯＫ！属性を変数に付与して実際にインスペクタをのぞいてみる無事列挙されるのを確認。
後はこれをListにも対応していく つもりだったのだが...これがこう表示されてしまった。
属性がListそのものではなくListの要素に付与されている...今回はこの挙動が目的だったので深くは追及しないが、
気が向いたらListへのPropertyDrawerの書き方も調べておこう。


