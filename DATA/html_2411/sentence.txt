More than 1 year has passed since last update.忘備録としてc#の配列操作についてまとめます。とりあえずドキュメントに乗ってる配列操作すべてに触れてみました。大体こちら↓を参考にしています。これは配列をreadOnlyにするものArray.AsReadOnlyメソッドで配列を作るとそのあと編集しようとしてもエラーが発生する。配列の中に検索したい値があるかの確認が出来る。
BinarySearchを実行する場合は配列をソートする必要がある。該当結果がない場合は-1がかえって来る
該当するものがある場合はそのindexが返ってくる検索ではindexOfも使える↓
https://docs.microsoft.com/ja-jp/dotnet/api/system.array.indexof?view=netframework-4.8オバーロードに関してはこちら↓
https://docs.microsoft.com/ja-jp/dotnet/api/system.array.binarysearch?view=netframework-4.8配列の要素を削除したい場合に使うすべて削除する場合ではなく部分で気に削除したい場合も使える。消した部分はnullとして残る配列を作りなおす場合はlistにしてnull部分を削除して配列を作りなおす？配列はたしか参照型？だからほかの変数に代入しても元の配列を変更したらそれを参照している変数すべてに影響が出ちゃうCloneを行えばそれを回避できる。cloneをする前に(string[]) としてどのような形でcloneするのか指定する必要がある配列からデータを持ってきて他の配列にデータをコピーする。
引数としては(データを持ってくる配列,データを持ってくる配列の位置,コピーする対象の配列,コピーする配列の位置,コピーする長さ)といった感じ配列の中身をすべてメソッドを実行して変換する配列の中身をstringからintに変換配列のコピーを行ういまいちConstrainedCopyとの違いがわからない...配列の中身を他の配列にコピーします。引数にコピー先とコピーの開始位置を設定します。配列の作成を行うSetValueで値の設定
GetValueで値の取得が出来る。からの配列を返します。配列の中に特定の条件のもがあるか確認する。要素の中で条件に一致するものの中で一番インデックス番号が小さい値を返す。インデックス番号を返すわけではない要素の中で条件に一致するものすべてを取得する。要素の中で条件に一致する要素の一番小さいindexを返す要素の中で条件に一致する要素の中で一番index番号が大きい要素を返す。indexを返すわけではない。要素の中で条件に一致する要素の中で一番おおきいindexを返す。配列のそれぞれの要素に対して処理を行う多次元配列の場合に特定の次元の配列の数を返すいまいち使い方がわからないけど指定した次元の最初のindexを取得する指定した次元の最後のindexを取得する。配列内の要素にて一致するものがあればその最初のindexを返す配列内の要素にて一致するものがあればその最後のindexを返す配列の長さを変える配列を反転引数に配列のみを渡すと全体を反転させる三つ引数を渡す場合は(配列、反転の開始位置、反転を行う要素の数)を設定して部分的に反転させられる。配列をソートできる。配列のみを渡すとそれっぽくソートしてくれる独自にソートのルールを作ることが出来て、その場合は引数を三つ渡す。比較する関数はICompareを継承して関数を作る。独自のルールで配列をソートする場合配列をそのままソートする場合配列の中身が数字であれば小さい順にソートされる。配列ないのすべての要素が条件に一致するか調べる。　
　
　


