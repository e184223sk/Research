
    public class ClioneButtonEvent : UnityEvent&lt;ButtonEventType&gt;
    {
    }

    public class ClioneButton : ClioneButtonBase
    {
        public UnityEvent&lt;ButtonEventType&gt; ButtonEvent = new ClioneButtonEvent();

        private ButtonEventType _eventBitCode = ButtonEventType.None;

        protected new void Update()
        {
            base.Update();

            if (_eventBitCode == ButtonEventType.None)
            {
                return;
            }

    // ここで ButtonEventType の各フラグを見て、どのイベントを投げるのか決定している。
    // 全て if-elseif にしているのは、イベントを投げるときに 1フレームに1イベントだけ投げるようにするため
            if ((_eventBitCode &amp; ButtonEventType.ClickDown) == ButtonEventType.ClickDown)
            {
                // ClickDown 時に interactable を false にして、入力が2つ(スマホだと指2本で1つのボタンをタップするとか)あっても 2個目以上は弾くようにしている
                interactable = false;
                _eventBitCode &amp;= ~ButtonEventType.ClickDown;
                ButtonEvent.Invoke(ButtonEventType.ClickDown);
            }
            else if ((_eventBitCode &amp; ButtonEventType.StartLongTap) == ButtonEventType.StartLongTap)
            {
                _eventBitCode &amp;= ~ButtonEventType.StartLongTap;
                ButtonEvent.Invoke(ButtonEventType.StartLongTap);
            }
            else if ((_eventBitCode &amp; ButtonEventType.LongTap) == ButtonEventType.LongTap)
            {
                _eventBitCode &amp;= ~ButtonEventType.LongTap;
                ButtonEvent.Invoke(ButtonEventType.LongTap);
            }
            else if ((_eventBitCode &amp; ButtonEventType.EndLongTap) == ButtonEventType.EndLongTap)
            {
                _eventBitCode &amp;= ~ButtonEventType.EndLongTap;
                ButtonEvent.Invoke(ButtonEventType.EndLongTap);
            }
            else if ((_eventBitCode &amp; ButtonEventType.Decide) == ButtonEventType.Decide)
            {
                _eventBitCode &amp;= ~ButtonEventType.Decide;
                ButtonEvent.Invoke(ButtonEventType.Decide);
            }
            else if ((_eventBitCode &amp; ButtonEventType.ClickUp) == ButtonEventType.ClickUp)
            {
                // ClickUp したら、ボタンが再度 Click できるようにする。
                interactable = true;
                _eventBitCode &amp;= ~ButtonEventType.ClickUp;
                ButtonEvent.Invoke(ButtonEventType.ClickUp);
            }
        }

        protected override void OnClickDown()
        {
            _eventBitCode |= ButtonEventType.ClickDown;
        }

        protected override void OnClickUp()
        {
            _eventBitCode |= ButtonEventType.ClickUp;
        }

        protected override void OnDecide()
        {
            _eventBitCode |= ButtonEventType.Decide;
        }

        protected override void OnStartLongTap()
        {
            _eventBitCode |= ButtonEventType.StartLongTap;
        }

        protected override void OnLongTap()
        {
            _eventBitCode |= ButtonEventType.LongTap;
        }

        protected override void OnEndLongTap()
        {
            _eventBitCode |= ButtonEventType.EndLongTap;
        }
    }

