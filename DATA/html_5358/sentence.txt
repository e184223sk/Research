More than 3 years have passed since last update.ミニゲームを作ってUnityを学ぶ！[3Dマインスイーパー編]マインスイーパーのフィールドを作るためにはそれを構成するマスが必要です。
今回はせっかくの3Dですので平面的な「マス」ではなく、立体的な「ブロック」を並べることでフィールドを構築していきます。＊この変更とあわせて、以降は地雷マスを「爆弾ブロック」と呼称します。まずはCubeを利用してブロックのオブジェクトを作り、それをプレハブに書き出します。3Dマインスイーパーでは通常のそれと同じように、プレイヤーがブロックに対して「開ける・マーカーを付ける」のアクションを実行することができます。開けられたブロックに爆弾が設置されていた場合はそこでゲームオーバーとなり、爆弾の設置されていない通常ブロックを開けた場合はそのブロックの周囲に設置された爆弾の数を知ることができます。
この仕様に沿った場合、ブロックに必要な機能は以下の2つになります。まずは1つ目の機能「閉じている状態から開けられた状態への変化」をBlockにアタッチされたマテリアルを差し替えることで実装していきます。1: 「Sci-Fi Texture Pack 2/Materials/Wall_2_Diffuse」をインスペクタから設定Open()では自身（Blockオブジェクト）にアタッチされたマテリアルを差し替えることで見た目の状態を変化させています。
また同時に自身が開いているかどうかのフラグを立てていますので、Open()を呼び出す側でフラグの判定を行えばすでに開いているブロックを再度開けないように制御することができます。2つ目のブロックにマーカーや爆弾を表示する機能はブロックの上の面に表示用のテクスチャをアタッチした板状のオブジェクトを貼り付けることで実装します。まずは板状のオブジェクトにアタッチするマテリアルを用意しますが、今回は表示するそれぞれに対応した数のテクスチャではなく、それらを1つにまとめたテクスチャアトラスを使ってマテリアルを作成します。続いて、板オブジェクトを作ってBlockの上に乗せていきます。これでBlockオブジェクトの上面に新しいテクスチャを表示することができましたが、いまの段階ではテクスチャに本来設定されている透明部分が白く塗りつぶされていますので、これを修正します。マテリアルに透明部分が正しく反映されましたので、次は板オブジェクト「NmberPlane」のUVマップを変更してマーカーとして使用するチェックマークだけが表示されるようにしてみます。プロジェクトを実行することでNumberPlaneのテクスチャがチェックマークに切り替わることが確認できます。テクスチャの表示範囲を切り替えるためにChangeUvToCheck()ではオブジェクトのMeshを取得して、プロパティのuvに予め定義しておいたUV_CHECKを代入していますが、この部分について3Dオブジェクトの構造とあわせてもう少し詳しく見ていきます。Unityの3Dオブジェクトはそれが立方体でも円でも、複雑な形状のキャラクターでさえも、全ては三角形の板だけで形成されています。この三角形がそれぞれどんな大きさで、どのように組み合わせれば良いかを表した、いわば3Dの組み立て説明書がMesh = 形状データのことです。Meshの中には様々な種類のデータが格納されていますが、NumberChangerで値を代入したuvとはUVマップと呼ばれるデータ群で、3Dのオブジェクトに対して2Dのテクスチャをどのように貼り付ければ良いかを示したモノとなります。つまりChangeUvToCheck()ではテクスチャの全体が表示されている状態からチェックマークのみが表示されるように、このテクスチャの貼り付け方を変更したということになります。Meshの構造についてもっと知りたい場合はぜひ下記の紹介記事などをご参考ください。参考： UnityEngine.Meshの内部構造解説Meshの簡単な説明に続いて、次はUV_CHECKの値について見ていきます。UVマップは別名UV座標とも呼ばれますが、上記のVector2はそのままテクスチャの座標を表しています。
元画像の左下を原点(0, 0)として右上を(1.0f, 1.0f)としたときに、UV_CHECKが示すのは以下の範囲になります。このとき座標を指定する順番が決められていて、Quadに適用するUVマップは下の画像で言う0番から順番に指定する必要があります。それではNumberPlaneがチェックマークだけでなく、爆弾や数字といった全ての表示をできるようにNumberChangerを修正していきます。
尚、NumberChangerについてはこれが完成形のコードとなります。Awake()で実行されるChangeUvToBlank()によって、プロジェクト実行時のBlockの上面には何も表示されていない板が置かれていることになります。
必要に合わせて適切なChangeUvTo~()を呼び出すことでその時に適したテクスチャを板オブジェクトに表示していく仕組みです。また、ChangeNumber()は引数に「周囲に設置された爆弾の数」を与えることでテクスチャの表示を適切な数字に切り替えています。最後にBlockModelを修正してNumberChangerの機能を利用できるようにします。
尚、BlockModelについてもこれが完成形のコードとなります。1: Block自身の子に設定されているNumberPlane(NumberChanger)をインスペクタから設定新しいBlockModelではポジションやフラグのプロパティが増えたほか、自身のマテリアルを変更したり上面に乗せた板のテクスチャを切り替えたりといった機能を実装しています。これでフィールドを構成するブロックが完成しましたのでBlockのプレハブに変更を反映させた後、シーンに配置されているBlockオブジェクトは削除しておきます。次のページに進む
イントロダクションに戻る



