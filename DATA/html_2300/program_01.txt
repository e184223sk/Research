
// 画面のメインコントローラー
public class SomeScene : MonoBehaviour, IAdditiveSceneTask
{
    // 画面遷移システム
    [Inject]
    private SceneLoader _sceneLoader;

    // View
    [SerializeField]
    private Text _text;

    // サブコントローラー
    [SerializeField]
    private SomeSubController _subController;

    // 画面遷移トゥイーン
    // インスペクタでリストにトゥイーンを登録するコンポーネントです
    [SerializeField]
    private Tweens _tweens;

    // 初期化
    private void Start()
    {
        _text.text = "";
    }

    // 画面遷移システムから画面開始時に呼び出される独自のコールバックです
    // IAdditiveSceneTaskを実装すると呼ばれます
    public async Task Activate()
    {
        /* 画面開始時の処理 */
        // 通信
        var someData = await WebRequest.Factory.SomeInfo(param).Send();

        // データをUIにセット
        _text.text = someData.name;

        // サブコントローラーの実行
        _subController.Execute();

        // UI出現アニメーション
        await _tweens.PlayInAnimations();
    }

    public async Task Inactivate()
    {
        /* 画面終了時の処理 */
        // UIを消すアニメーション
        await _tweens.PlayOutAnimations();

        // 各種アンロード
    }

    private void OnDestroy()
    {
        // 後処理
    }

    // ボタンが押されたときの処理
    // インスペクタでButtonコンポーネントから呼び出すように設定します
    public void OnClickButton()
    {
        // 例でバトルトップ画面に遷移
        // 画面はシーンをAdditiveロードする仕組み
        // 次シーンをロードしてActivate()を呼び出し、現在シーンのInactivateを呼び出します
        _sceneLoader.LoadSceneAdditive(ScenesEnum.BattleTop, false);
    }
}

