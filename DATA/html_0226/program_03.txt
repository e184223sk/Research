
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

class SampleKeyInput
{
    static void Main(string[] args)
    {
        var myInput = new MyInput();
        myInput.Input();

        Application.Run();
    }
}

class MyInput
{
    [DllImport("user32.dll")]
    static extern void SendInput(int nInputs, ref INPUT pInputs, int cbsize);

    [StructLayout(LayoutKind.Sequential)]
    struct MOUSEINPUT
    {
        public int dx;
        public int dy;
        public int mouseData;
        public int dwFlags;
        public int time;
        public int dwExtraInfo;
    };

    [StructLayout(LayoutKind.Sequential)]
    struct KEYBDINPUT
    {
        public short wVk;
        public short wScan;
        public int dwFlags;
        public int time;
        public int dwExtraInfo;
    };

    [StructLayout(LayoutKind.Sequential)]
    struct HARDWAREINPUT
    {
        public int uMsg;
        public short wParamL;
        public short wParamH;
    };

    [StructLayout(LayoutKind.Explicit)]
    struct INPUT
    {
        [FieldOffset(0)]
        public int type;
        [FieldOffset(4)]
        public MOUSEINPUT no;
        [FieldOffset(4)]
        public KEYBDINPUT ki;
        [FieldOffset(4)]
        public HARDWAREINPUT hi;
    };

    public void Input()
    {
        INPUT input = new INPUT
        {
            // 1はキーボードを入力
            type = 1,
            ki = new KEYBDINPUT()
            {
                // 74はJキー
                wVk = 74,
                // DirectInputを介してキーボード入力をフェッチしているソフトウェアの場合は
                // 以下のようにスキャンコードをつけて送らないと無視されてしまうということがある
                // が今回はキーボードだけなので0(ゼロ)で
                //wScan = (short)MapVirtualKey((short)key, 0),
                wScan = 0,
                // キーボードダウンの場合は、0(ゼロ)
                dwFlags = 0,
                time = 0,
                dwExtraInfo = 0
            },
        };

        // 3秒後にJキーが入力されます
        Thread.Sleep(3000);
        SendInput(1, ref input, Marshal.SizeOf(input));
    }
}

