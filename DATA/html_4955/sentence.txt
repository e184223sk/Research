More than 3 years have passed since last update.蟻本P.62の問題。ちなみに私がこの問題を知ったのは
@drkenさんの「典型的なDP～」の記事中。
最近はこの記事に従って勉強している。非常に有難い記事。感動。これで合ってるのかなあ...
入力例と出力例が足りないので、複雑なケースで通るかはわからない。とくに怖いのは m[i] が全部 10,000 とかにされた場合。
オーダーが O(nkA) になってしまうから。よくよく考えてみたら
j&gt;=a[i]*k の時、そもそも j が A の値でちなみに@drkenさんの記事の文脈中では、
このようにしてbool値のdpを用いることはもったいないというようなことも書いてあったし、
dpの情報の持たせ方次第で改善可能っぽい。まあ、もうちょい考えてみよう。
なんか「個数制限付き部分和問題」で検索したら
これを回避できそうな内容のブログ記事も見つけられたし。思考停止して蟻本のC++のソースコードをC#で書き直しただけ。自分の力で問題を解くことはできなかった。
(ちなみに前の追記で書いた「これを回避できそうな内容のブログ記事」ってのは
あまり私にわかりやすい書き方ではなかったのでリンクしないでおく。)コードを書いた後、
なんども読み直し、板書したり、デバッグしたり、
dpテーブルをチェックしたりすることでなんとか流れが見えるようになった。
おそらく、
めんどくさがって頭の中で暗算的にdpテーブルをイメージしようとしたのが時間を浪費した原因。自分的には惜しいところまで考えが到達していた。
なのでどう惜しかったのかも
その思考の過程も追記にするか、ノートに残しておくことで振り返るつもり。
まあ、短期的な役にしか立ちそうがないので、おそらくノートに収めるだけで記事にはしない。dp[i][j]などと二次元配列にしていたものを
一次元の配列で事足りるようにできることはスッキリして感動したけど、
今振り返れば当然のことのように感じる。
DP、まだ勉強になったといえるほどに本質をつかめている感覚がない。計算量を考えて工夫することってすごく大事。
だけど、最初は素直にコードを書きまくって下書きしたほうが楽。
ちなみに最初に答えを探そうとググりまくると先入観で横着する可能性もある。「感想」じゃなくて「まとめ」が書きたかったなあ。
以上。


