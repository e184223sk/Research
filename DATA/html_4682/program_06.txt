
public static object FindType(object assembly, object assemblyLoadMethodInfo, string typeName)
{
    var getTypeMethodInfo = assembly.GetType().GetMethod("GetType", new[] { typeof(string) });
    var consoleType = getTypeMethodInfo.Invoke(assembly, new[] { typeName });
    if (consoleType != null)
    {
        return consoleType;
    }
    var getReferencedAssembliesMethodInfo = assembly.GetType().GetMethod("GetReferencedAssemblies");
    var assemblies = getReferencedAssembliesMethodInfo.Invoke(assembly, new object[0]) as object[];
    foreach (var refAssembyName in assemblies)
    {
        var invokeMethodInfo = assemblyLoadMethodInfo.GetType().GetMethod("Invoke", new [] { typeof(object), typeof(object[]) });
        var refAssembly = invokeMethodInfo.Invoke(assemblyLoadMethodInfo, new object[] { null, new object[] { refAssembyName } });
        consoleType = FindType(refAssembly, assemblyLoadMethodInfo, typeName);
        if (consoleType != null)
        {
            return consoleType;
        }
    }

    return null;
}

