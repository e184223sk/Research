
// Instance | NonPublicのフラグ作成
var bindingFlagsType = assemblyType.Assembly.GetType("System.Reflection.BindingFlags");
// 既存のEnum(MemberType)からenumの型情報取得
var enumType = assemblyLoadMethodInfo.MemberType.GetType().BaseType;
var toObjectMethodInfo = enumType.GetMethod("ToObject", new[] { enumType.GetType().BaseType, typeof(int) });
const int BINDING_FLAGS_INSTANCE_AND_NONPUBLIC = 36; 
var instanceAndNonPublic = toObjectMethodInfo.Invoke(null, new object[] { bindingFlagsType, BINDING_FLAGS_INSTANCE_AND_NONPUBLIC });

var typeType = assemblyLoadMethodInfo.GetType().GetType();
var getFieldMethodInfo = typeType.GetMethod("GetField", new[] { typeof(string), bindingFlagsType });
var invocationFlagsField = getFieldMethodInfo.Invoke(assemblyLoadMethodInfo.GetType(), new object[] { "m_invocationFlags", instanceAndNonPublic });

// invocationFlagsFieldがobjectなのでGet/Setもリフレクション経由
var filedGetValueMethodInfo = invocationFlagsField.GetType().GetMethod("GetValue", new[] { typeof(object) });
var filedSetValueMethodInfo = invocationFlagsField.GetType().GetMethod("SetValue", new[] { typeof(object), typeof(object) });

// INITIALIZEDのフラグ設定
var originalInvocationFlags = filedGetValueMethodInfo.Invoke(invocationFlagsField, new object[] { assemblyLoadMethodInfo });
const int INVOCATION_FLAGS_INITIALIZED = 0x00000001;
var invocationFlags = toObjectMethodInfo.Invoke(null, new object[] { originalInvocationFlags.GetType(), INVOCATION_FLAGS_INITIALIZED });
filedSetValueMethodInfo.Invoke(invocationFlagsField, new object[] { assemblyLoadMethodInfo, invocationFlags });

