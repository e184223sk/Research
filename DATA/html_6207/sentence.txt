More than 3 years have passed since last update.前回の記事の続きです。REST Webサービスの作成が僕には難しすぎたので、誰にでも分かるよう手順を残す。前回はサービス側プログラムの作成と動作確認まで行いましたが、今回はサービス側にリクエストを投げるクライアント側のコマンドプログラムを作ってみたいと思います。本記事で作成したプログラムの実行は、前回作成したサービスプログラム「ProductsApp」が起動していることを前提としています。「ProductsApp」の作成や起動の方法については、前回の記事を参照下さい。引数に指定したURLでサービス側にリクエストを投げ、サービス側からレスポンスされたデータを標準出力します。今回はコマンドとして作成するため「コンソールアプリ(.NET Framework)」を選択します。名前は「RestClient」としておきます。「NuGet パッケージの管理」から、System.Runtime.Serialization.Jsonをインストールします。以下にソースコードをベタ張りしておきます。HTTPリクエスト、レスポンスのところはメソッド名を見れば、何やってるかはなんとなく分かると思います。注意点としては、サービス側とのインタフェースとなるクラス（Product）やそのプロパティの名前（Id,Name,Category,Price）は、サービス側で定義した名前に合わせる必要があるということです。大文字／小文字の違いもNGです。ソースコードを書いたら、ビルドします。おめでとうございます。ところで配列が返ってきた場合、どうするかって？
コード中のProductをProduct[]に修正するだけでOKです。ということで、できました。リクエストを投げる前に、以下の一文を加えます。HTTPアクセスやJSON解析の方法については、こちらの記事を参考にさせていただきました。「６．プロキシサーバーの資格情報を設定する」は、こちらの記事を参考にさせていただきました。


