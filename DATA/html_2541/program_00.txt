    public class ユーザーID : ValueObject
    {
        private Guid _id { get; }

        public string Guid文字列 =&gt; _id.ToString();

        public static ユーザーID CreateNew() =&gt; new ユーザーID(Guid.NewGuid());
        public static ユーザーID Create(object o)
        =&gt; o switch {
            null =&gt; throw new ArgumentException("Guidに変換出来ません。Nullです。", "_ユーザーID"),
            string s =&gt; new ユーザーID(文字列をGuidに変換(s)),
            Guid g =&gt; new ユーザーID(g),
            _ =&gt; throw new ArgumentException("Guidに変換出来ません。" + o.ToString(), "_ユーザーID"),
        };

        private static Guid 文字列をGuidに変換(string s)
        {
            Guid g;
            var result = Guid.TryParse(s, out g);

            return (result) ? g : throw new ArgumentException("Guidに変換出来ません。" + s, "_ユーザーID");
        }

        private ユーザーID(Guid _id) =&gt; this._id = _id;

        protected override IEnumerable&lt;object&gt; GetAtomicValues()
        {
            yield return _id;
        }
    }

