More than 3 years have passed since last update.参考①.NET Frameworkで動作するプログラミング言語。
※.NET Framework:
マイクロソフトが提供するアプリケーション開発、実行環境②Visual Studioで始めよう。
※Visual Studio:
統合開発環境③オブジェクト指向言語であるが、コンポーネント指向もサポートしている。④ガベージコレクション有り。⑤ソースファイルは「.cs」という拡張子。
以下でコンパイルができ、
アプリケーションなら「.exe」
ライブラリなら「.dll」
というファイルが出来る。usingディレクティブを用いることで、
名前空間のメンバを省略して使える。.exeプログラムのエントリポイント。①Mainはstaticである必要がある。
②戻り値はvoidかint。
③引数は、コマンドライン引数を表している。値型も以下のように行うことで、オブジェクトとして扱われる。※break, continue※オーバーライドされた基底クラスのメンバを呼び出すときは、
「base」キーワードを使用する。「readonly」をつける。インスタンス化されたオブジェクト自身。同じメソッド名でも、引数が違えば何個でも定義できる。クラス名と同じ名前のメソッド名で宣言。JavaでいうSetter、Getter。メソッドの戻り値や引数の定義だけを事前にしておき、
実態は後からセットする仕組み。メソッドやプロパティで使用する型をパラメータとして定義し、
使用する時に決定する機能。オーバロードの冗長などを簡易にしたり、
動的なサイズを可能にするListやDictionaryもジェネリックを用いて、
使用することが出来る。※List、Dictionary・・・
多言語でいうList、ArrayList、Hash、Hashtableなどのオブジェクト。Tはお決まりなだけで、別になんでもいいらしい。あとは、好きなところでTを使っておいて、
インスタンス化やメソッド呼び出しの際に、Tに使いたい型を指定すると、
クラスないしメソッドのTがそれで置き換わる。


