
public static Func&lt;TArg1, TArg2, TResult&gt; CreateAddExpression&lt;TArg1, TArg2, TResult&gt;()
{
    ParameterExpression leftParameter = Expression.Parameter(typeof(TArg1), "leftParameter");
    ParameterExpression rightParameter = Expression.Parameter(typeof(TArg2), "rightParameter");
    try
    {
        //Func&lt;...&gt; f1 = (leftParameter,rightParameter) =&gt; return leftParameter + rightParameter;　というメソッドを作成し戻り値として返します。
        return Expression.Lambda&lt;Func&lt;TArg1, TArg2, TResult&gt;&gt;(Expression.Add(leftParameter, rightParameter), leftParameter, rightParameter).Compile();
    }
    catch (InvalidOperationException ex)
    {
        //Func&lt;...&gt; f1 = (_, __) =&gt; throw new InvalidOperationException(""); ただ例外を投げるメソッドを作成し戻り値として返します。
        return delegate { throw new InvalidOperationException(ex.Message); };
    }
}

