
public static Func&lt;TArg1, TArg2, TResult&gt; CreateSubtractExpression&lt;TArg1, TArg2, TResult&gt;()
{
    ParameterExpression leftParameter = Expression.Parameter(typeof(TArg1), "leftParameter");
    ParameterExpression rightParameter = Expression.Parameter(typeof(TArg2), "rightParameter");
    try
    {
        return Expression.Lambda&lt;Func&lt;TArg1, TArg2, TResult&gt;&gt;(Expression.Subtract(leftParameter, rightParameter), leftParameter, rightParameter).Compile();
    }
    catch (InvalidOperationException ex)
    {
        return delegate { throw new InvalidOperationException(ex.Message); };
    }
}

