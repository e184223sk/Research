
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UniRx;

public class CompositeDisposableTest : MonoBehaviour {

    private CompositeDisposable _compositeDisposable1 = new CompositeDisposable();

    private CompositeDisposable _compositeDisposable2 = new CompositeDisposable();

    private int _dispose = 0;
    private int _clear = 0;

    private IDisposable _test1, _test2, _test3, _test4;

    private void TestDispose()
    {
        _dispose++;

        //Disposeしてみる
        _compositeDisposable1.Dispose();

        _test1 = Observable.Interval(TimeSpan.FromSeconds(1))
            .Subscribe(_ =&gt; Debug.Log("Dispose1:" + _dispose))
            .AddTo(_compositeDisposable1);

        _test2 = Observable.Interval(TimeSpan.FromSeconds(1))
           .Subscribe(_ =&gt; Debug.Log("Dispose2:" + _dispose))
           .AddTo(_compositeDisposable1);
    }

    private void TestClear()
    {
        _clear++;

        // Clearしてみる
        _compositeDisposable2.Clear();

        _test3 = Observable.Interval(TimeSpan.FromSeconds(1))
            .Subscribe(_ =&gt; Debug.Log("Clear1:" + _clear))
            .AddTo(_compositeDisposable2);

        _test4 = Observable.Interval(TimeSpan.FromSeconds(1))
           .Subscribe(_ =&gt; Debug.Log("Clear2:" + _clear))
           .AddTo(_compositeDisposable2);
    }

    // Use this for initialization
    void Start () {

        //テスト用IDisposable
        _test1 = Observable.Interval(TimeSpan.FromSeconds(1))
            .Subscribe(_ =&gt; Debug.Log("Dispose1"))
            .AddTo(_compositeDisposable1);

        _test2 = Observable.Interval(TimeSpan.FromSeconds(1))
           .Subscribe(_ =&gt; Debug.Log("Dispose2"))
           .AddTo(_compositeDisposable1);

        _test3 = Observable.Interval(TimeSpan.FromSeconds(1))
            .Subscribe(_ =&gt; Debug.Log("Clear1"))
            .AddTo(_compositeDisposable2);

        _test4 = Observable.Interval(TimeSpan.FromSeconds(1))
           .Subscribe(_ =&gt; Debug.Log("Clear2"))
           .AddTo(_compositeDisposable2);

        //実験用
        Observable.Interval(TimeSpan.FromSeconds(1.5f))
            .Subscribe(_ =&gt; {
                TestDispose();
                TestClear();
            });
    }

}


