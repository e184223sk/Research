More than 3 years have passed since last update.フォーム上の文字列入力項目に、入力例や入力時の注意をあらかじめ表示しておく手段のひとつとして「プレースホルダ」や「プロンプト」などと呼ばれる要素があります（ご存知の方も多いと思いますが HTML5 フォームの input 要素には placeholder 属性があります）
.NET Framework の Windows フォームで用意される標準テキストボックスには無い機能なので、拡張して搭載してみます。上記コード（クラス）を組み込んで一旦ビルドすると、Visual Studio で任意のフォームを作成・編集するときに、ツールボックスへ 「TextBoxEx」コントロールが追加されます。これを標準の TextBox などと同じくフォーム上に張り付けて、Placeholder プロパティにプレースホルダテキストをセットしてやります。フォームの InitializeComponent メソッド内を編集したりして、標準の System.Windows.Forms.TextBox を拡張対応させる方法でももちろんよいでしょう。標準のテキストボックスコントロールを派生させて（サブクラス化して）、ウインドウプロシージャ (WndProc) の WM_PAINT　処理を拡張しています。標準の描画処理を行ったあと、プレースホルダを表示する条件（ここでは、Enabled=true, ReadOnly=false, ...）に該当していたら、一旦消してプレースホルダ文字列を描画させています。
わざわざ一旦消すことは無駄であろうになぜそうするか...標準の挙動とまったく同じくさせるコードを書くことが困難（しかも OS の仕様変更など将来にわたって）だからです（時間と気力があれば TextBoxBase クラスから派生させて独自コントロールを作ることも選択肢でしょうけれども、かけるコストと効果を比べると私はイヤ）
ちなみに System.Windows.Forms.TextBox コントロールでオーナードローをしたい（OnPaint や OnPaintBackground をオーバーライドして処理をしたい）場合は、Control.SetStyle メソッドをコンストラクタなどで呼び出し、ControlStyles.UserPaint スタイルを有効にする必要があります。ご参考までに「プレースホルダテキストはユーザーの短期記憶に負荷をかける」ためプレースホルダを使うべきではない、との主張もあります。


