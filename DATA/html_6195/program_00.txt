using GongSolutions.Wpf.DragDrop;
using System.Windows;
using System.Linq;
using System.IO;
using System.Collections.ObjectModel;

namespace DragAndDropTest
{
    public class MainWindowViewModel : IDropTarget
    {
        public ObservableCollection&lt;string&gt; Files { get; set; }

        public MainWindowViewModel()
        {
            Files = new ObservableCollection&lt;string&gt;();
        }

        public void DragOver(IDropInfo dropInfo)
        {
            var dragFileList = ((DataObject)dropInfo.Data).GetFileDropList().Cast&lt;string&gt;();
            dropInfo.Effects = dragFileList.Any(_ =&gt;
            {
                return IsCsv(_);
            }) ? DragDropEffects.Copy : DragDropEffects.None;
        }

        public void Drop(IDropInfo dropInfo)
        {
            var dragFileList = ((DataObject)dropInfo.Data).GetFileDropList().Cast&lt;string&gt;();
            dropInfo.Effects = dragFileList.Any(_ =&gt;
            {
                return IsCsv(_);
            }) ? DragDropEffects.Copy : DragDropEffects.None;

            foreach(var file in dragFileList)
            {
                if (IsCsv(file))
                {
                    Files.Add(file);
                }
            }
        }

        private bool IsCsv(string data)
        {
            var extension = Path.GetExtension(data);
            return extension != null &amp;&amp; extension == ".csv";
        }
    }
}

