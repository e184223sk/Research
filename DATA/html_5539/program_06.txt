
using SFML.Graphics;
using SFML.Window;
using SFML.System;

namespace Game_Project {
    static unsafe class Program {
        const uint fps = 60;

        static void Main() {
            var window = new RenderWindow(new VideoMode(320, 320), "", Styles.Close);
            window.Closed += (sender, e) =&gt; window.Close();
            window.SetFramerateLimit(fps);

            var texture = new Texture("0.png");

            var sprite = new Sprite(texture);
            sprite.Position = new Vector2f(20, 20);

            var spriteTester = new SpriteTester(texture);
            spriteTester.X = 20;
            spriteTester.Y = 50;

            while (window.IsOpen) {
                window.DispatchEvents();

                window.Clear();

                //既定のスプライトを表示
                window.Draw(sprite);
                //自作スプライトを表示
                window.Draw(spriteTester);
                //スプライトを使わずに画像を表示
                TextureDrawer.Draw(window, texture, 20, 100);

                window.Display();
            }
        }
    }

    //スプライトを使わずに画像を表示するためのクラス
    static class TextureDrawer {
        public　static Vertex[] Vertexs { get; } = new Vertex[4];

        public static void Draw(RenderTarget target,Texture texture, float x, float y){
            //描画データの指定
            var transform = Transform.Identity;

            //描画範囲を指定
            var left = x;
            var right = x + texture.Size.X;
            var top = y;
            var bottom = y + texture.Size.Y;

            //左上
            Vertexs[0].Position = new Vector2f(left, top);
            Vertexs[0].TexCoords = new Vector2f(0, 0);
            //左下
            Vertexs[1].Position = new Vector2f(left, bottom);
            Vertexs[1].TexCoords = new Vector2f(0, texture.Size.Y);
            //右上
            Vertexs[2].Position = new Vector2f(right, top);
            Vertexs[2].TexCoords = new Vector2f(texture.Size.X, 0);
            //右下
            Vertexs[3].Position = new Vector2f(right, bottom);
            Vertexs[3].TexCoords = new Vector2f(texture.Size.X, texture.Size.Y);

            for (var i = 0; i &lt; Vertexs.Length; i++) {
                //new Color(255, 255, 255, 255)
                //で画像の色変更なし
                Vertexs[i].Color = new Color(255, 255, 255, 255);
            }

            var states = default(RenderStates);
            //これも指定しないと表示されない
            states.BlendMode = BlendMode.Alpha;

            //描画データをstatesに指定する
            states.Transform = transform;
            //テクスチャをstatesに指定する
            //
            //states.Textureがnullの場合は矩形が表示される
            states.Texture = texture;

            //描画開始
            target.Draw(Vertexs, 0, (uint)Vertexs.Length, PrimitiveType.TrianglesStrip, states);
        }
    }

    //自作スプライト
    sealed class SpriteTester : Drawable {
        public Vertex[] Vertexs { get; } = new Vertex[4];
        public Texture Texture { get; }
        public Transform Transform { get; set; }

        public float X { get; set; }
        public float Y { get; set; }
        public float Width { get; set; }
        public float Height { get; set; }

        public float Left =&gt; X;
        public float Right =&gt; X + Width;
        public float Top =&gt; Y;
        public float Bottom =&gt; Y + Height;

        public SpriteTester(Texture texture) {
            //テクスチャの指定
            Texture = texture;
            //描画データの指定
            Transform = Transform.Identity;

            Width = Texture.Size.X;
            Height = Texture.Size.Y;
        }

        public void Draw(RenderTarget target, RenderStates states) {
            //左上
            Vertexs[0].Position = new Vector2f(Left, Top);
            Vertexs[0].TexCoords = new Vector2f(0, 0);
            //左下
            Vertexs[1].Position = new Vector2f(Left, Bottom);
            Vertexs[1].TexCoords = new Vector2f(0, Height);
            //右上
            Vertexs[2].Position = new Vector2f(Right, Top);
            Vertexs[2].TexCoords = new Vector2f(Width, 0);
            //右下
            Vertexs[3].Position = new Vector2f(Right, Bottom);
            Vertexs[3].TexCoords = new Vector2f(Width, Height);

            for (var i = 0; i &lt; Vertexs.Length; i++) {
                //new Color(255, 255, 255, 255)
                //で画像の色変更なし
                Vertexs[i].Color = new Color(255, 255, 255, 255);
            }

            //描画データをstatesに指定する
            states.Transform = Transform;
            //テクスチャをstatesに指定する
            //
            //states.Textureがnullの場合は矩形が表示される
            states.Texture = Texture;

            //描画開始
            target.Draw(Vertexs, 0, (uint)Vertexs.Length, PrimitiveType.TrianglesStrip, states);
        }
    }
}

