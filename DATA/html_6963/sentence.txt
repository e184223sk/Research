More than 3 years have passed since last update.@hyuki 先生著の『Javaで学ぶデザインパターン入門』（2004年、SB Creative）の1章ずつをベースに、サンプルコードをC#で置き換えながら勉強していく記事です。※著者の @hyuki 先生には適切に書籍への参照を入れれば問題ない旨ご確認いただいています。一部デザインパターンはアンチパターンに転落していますが、他のデザインパターンは日常的に使用され、コードの適応性を向上させています。と書いてあるので、使う上で気を付けるべきことがないか調べつつ書いていきたい（続けられる範囲で）。Iteratorパターン
第1回はIteratorパターンです。Iteratorパターンはコレクションの要素にループ変数をiとしてfor文で順にアクセスしていく際の変数iの働きを抽象化し、一般化したものです。コレクションの要素を列挙する手段を提供して、具体的な列挙方法をコレクションから隠ぺいすることができるんですね！早速具体的な事例を見てみましょう。『Javaで学ぶデザインパターン入門』（2004年、SB Creative）に掲載されているコードをC#で（大体）書き換えます。『Javaで学ぶデザインパターン入門』（2004年、SB Creative）に書いてある内容にとても納得感がありました。記事にしたらリンクもつく予定...①Iterator
②Adapter
③Template Method
④Factory Method
⑤Singleton
⑥Prototype
⑦Builder
⑧AbstractFactory
⑨Bridge
⑩Strategy
⑪Composite Pattern
⑫Decorator Pattern


