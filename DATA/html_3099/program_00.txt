public static class Cast&lt;T&gt;
{
    private static class Cache&lt;S&gt;
    {
        static Cache()
        {
            var p = Expression.Parameter(typeof(S));
            var c = Expression.ConvertChecked(p, typeof(T));
            Caster = Expression.Lambda&lt;Func&lt;S, T&gt;&gt;(c, p).Compile();
        }
        internal static readonly Func&lt;S, T&gt; Caster;
    }

    public static T From&lt;S&gt;(S source)
    {
        return Cache&lt;S&gt;.Caster(source);
    }
}


