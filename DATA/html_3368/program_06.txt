
// 第二引数にTypeHint&lt;T&gt;をとるが推論にのみ用いる
public static void HogeG&lt;TStore, T&gt;(TStore s, TypeHint&lt;T&gt; __ = default)
    where TStore : IStore&lt;T&gt;
{
    _ = s.Value;
}

// Store&lt;T&gt;からTypeHint&lt;T&gt;を取得するメソッド
public static TypeHint&lt;T&gt; GetTypeHint&lt;T&gt;(Store&lt;T&gt; _) =&gt; default;

public static void Fuga()
{
    var s = Create((1, 2, 3u, (byte)4, Create((5f, 6.0, "7")), '8'));

    // 型引数を書かなくてよい!!
    HogeG(s, GetTypeHint(s));

    // TypeHintを渡さないと推論できずにエラー...
    // HogeG(s);

    // ついでにIStore&lt;T&gt;.Valueの型のデフォルト値の変数を作ることもできる
    var v = GetTypeHint(s).Default;
}

