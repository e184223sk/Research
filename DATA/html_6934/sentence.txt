More than 3 years have passed since last update.ある正の整数 A を N 倍した値と、Aを右へ一桁分ローテートシフトした値が等しい数を「N-Parastic Number」と言います。 ただし、1&lt;=N&lt;=9 とします。例えば、N=4 の時、102564 は N-Parastic Numberとなります。となり、102564を右に1桁分ローテートシフトした値と、410256が等しくなります。ところで、Parastic Numberは日本語でどう訳せばいいんでしょうか。 勝手に「寄生数」と訳しましたが、どなたか知っていれば教えてください。 N = 4 で考えてみます。求める数Aの 1桁目が4であると仮定しましょう。つまり、となります。
この右辺の数が、数Aを右ローテートした値に等しいのだから、求める数Aの下２桁は 64 です。 
２桁目がわかれば、同じように 64 を4倍して 256 が得られますからとなり、これからAの 3桁目が 5であることがわかります。 実際には 64を4倍するのではなく、1桁目を 4 倍したときに得られた繰り上がり数である 1 を記憶しておき、
この１と 6を4倍した値24を加え、25を求めます。この1桁目の5が求める3桁目の値です。
ここまでで、求める数Aが ____564 であることがわかりました。
これを 4桁、5桁... と求めていきます。そして、上記右辺の最上位桁の数が 4 で、繰り上がりの数が 0 になるまで繰り返します。
このときの左辺の数が、求める数Aです。
こうすれば、求める数Aが巨大な数であっても対応できます。手順を言葉で理解するよりも、実際に紙と鉛筆をつかって手計算してみたほうが、 すぐに理解できると思います。WikipediaのParasitic numberを見てみると、「Smallest n-parasitic numbers」として、1&lt;=N&lt;=9の最小のN-Parasitic Numbersが掲載されています。これをC#で求めるコードを書いてみたいと思います。
ちなみにこの「Smallest n-parasitic numbers」は、Dyson numbersという数学パズルとしても知られているそうです。例えば、4-Parastic Numberを求めるには、上で示した手順で1桁目を1から9までに当てはめていって、最小値を求めればよいのですが、もしかしたら、1桁目が1の時は、4-Parastic Numberは存在しないかもしれません。そうなると、上で示した処理を永遠と続けることになり、いつまでたっても答えが求まらないことになります。
そのため、プログラムでこれに対応するにはちょっとした工夫が必要になります。まず、1桁の整数Aに対して、1桁目が1から9までの4-Parastic Numberがあるかどうかを調べます。見つかれば、これが最小の4-Parastic Numberです。（複数見つかる可能性もあるので、そこも考慮します）。見つからなければ、2桁の整数Aに対して同じ処理をします。見つからなければ、3桁の整数、4桁の整数...と調べていくことになります。この考えをコードに落としたのが次に示すコードです。以下のようになり、Wikipediaと同じ結果となりました。この記事は、Gushwell's C# Programming Pageで公開したものを加筆・修正したものです。


