More than 1 year has passed since last update.オレオレ解釈の覚え書き　その１０変更通知プロパティの話から派生して、強力なライブラリである ReactiveProperty についてご紹介します。前回ご紹介した変更通知プロパティは、View 側のバインドは楽ですが、値の変更通知はそれぞれのプロパティが自ら行う必要がありました。値の変更に合わせて処理を切り替える場合は、ViewModel 内で PropertyChanged のイベントを捉えて、どのプロパティが変更されたのかを判断する必要があるため、複数のプロパティが関わるようになれば途端に管理が難しくなります。変更通知や処理への橋渡しを ReactiveProperty は自動で行ってくれます。下記は ReactiveProperty による変更通知プロパティとそれを利用するコマンドの実装例です。[名前] にバインドされた "Name" が変更通知プロパティです。[ゲスト] ボタンは常に活性な "GuestCommand" に、[登録] ボタンは [名前] に値が設定されているときだけ活性化する "SubmitCommand" にバインドされています。ここでの「活性」「非活性」とはコマンドに紐づく処理（WithSubscribe 内の処理）が実行可能かどうかだけでなく、ボタンの Enabled の状態まで制御されます。注意が必要な点として、ReqctiveProperty とバインドする場合、内包された値にアクセスするため ".Value" の記載が必要になります。（ReqctiveCommand は ICommand の実装であるためこの記載は不要です。）ReactiveProperty は neuecc さんが作成し、現在は okazuki さんによってメンテナンスされています。ライブラリの使い方はブログ等で大変分かりやすくまとめて頂いているため、より詳しい情報は是非開発者様のページをご覧ください。
・ReactiveProperty : Rx + MVVMへの試み
・MVVMをリアクティブプログラミングで快適にReactivePropertyオーバービュー
・ReactiveProperty v7.0.0 をリリースしました次回は依存関係プロパティについてまとめます。


