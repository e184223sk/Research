
/// &lt;summary&gt;
/// ドット一つ分のサイズ(ピクセル)
/// &lt;/summary&gt;
private static readonly int SIZE_DOT = 20;

/// &lt;summary&gt;
/// 一辺のドットの数
/// &lt;/summary&gt;
private static readonly int COUNT_DOT = 5;

...

/// &lt;summary&gt;
/// アイデンティコンをランダム生成する
/// &lt;/summary&gt;
/// &lt;param name="random"&gt;&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
private Bitmap CreateIdenticonRandomly( Random random )
{
    // ドットパターンをランダムに生成
    var dotPattern = CreateSymmetricalDotPatternRandomly( COUNT_DOT, random );

    // 前景色・背景色を生成
    var foreColor = GetColorRandomly( random );
    var backGroundColor = CreateInvertedColor( foreColor );

    // アイデンティコンを描画
    var image = new Bitmap( pictureBox.ClientSize.Width, pictureBox.ClientSize.Height );
    var brush = new SolidBrush( Color.Black );
    using ( var g = Graphics.FromImage( image ) )
    {
        int posY = pictureBox.ClientRectangle.Y;
        for ( int row = 0; row &lt; COUNT_DOT; row++, posY += SIZE_DOT )
        {
            int posX = pictureBox.ClientRectangle.X;
            for ( int col = 0; col &lt; COUNT_DOT; col++, posX += SIZE_DOT )
            {
                brush.Color = ( dotPattern[row, col] ) ? foreColor : backGroundColor;
                g.FillRectangle( brush, posX, posY, SIZE_DOT, SIZE_DOT );
            }
        }
    }

    return image;
}

