More than 1 year has passed since last update.C#で文字列に対して単純に変数を埋め込むだけなら$"{変数名}"でいけますが、Listを回して埋め込もうとすると何かしらのライブラリを使用することになります。
で、何がいいのかと「c# テキストテンプレート」などで検索してみるとT4なんてものが引っ掛かりますが、使ってソースコードを生成するとか書いてるのでスルーします。（実はやりたいことが実現できるかもしれないけど、引っかかる使い道が今回の目的とは違うので多分無理なんだと判断しました）
で、asp.netや～coreでよく使うRazorをそもまま使えたらいいのにと思って検索したところ、RazorEngineがありその.NetCore版もあったので使ってみました。と、こんな感じであっさりとと埋め込むことができました。
※.NetCore2.Xの場合はあっさりと動きましたが、.NetCore3.0の場合は途中でスリムにした際に色々と変わってしまったので動きませんが、先のソースコードから動くように書き換えたプロジェクトファイルをソリューションに混ぜて参照すれば解決するので問題ないよね。サーバーサイドで実行する場合はこれでも行けると思いますが、問題はクライアントサイドでの実行です。
今回やりたいことはBlazorのクライアントサイドでテンプレートを登録し、そこに対してサーバーから取得したデータを埋め込むという処理なので、ページ切り替えの際には同じテンプレートを使用したページの場合はデータだけ切り替えてクライアントサイドで出力文字列を生成する必要があります。※もっとも、毎回サーバーへポストして埋め込んでからクライアントへ戻すという処理でもいいのかもしれませんが、それだったらBlazor使う意味無いやんと思ったのであえてクライアントのWebAssembly内で値の埋め込みを行うとしています。
で、コンソールでのサンプルコードが動いたので気をよくしてBlazorのコードに埋め込むと・・・実行時エラーが起きてしまいました。で、頑張ってソースを追いかけたところ、値の埋め込み処理でテンポラリファイルを使用していることが判明しました。ただ、正直何やってるのかよくわからない感じだったのでテンポラリファイルを使用せずに埋め込みできるように変更可能かどうかも判断できず一旦諦めていました。で、ついさっきもっぺんRazorEngineのオリジナルの方のissuesを見たら新しい話題が追加されていましたissues558。こいつを見ると「もう更新やめたっぽい？代替ってどない？」ってな内容で、それに対するコメントで「#Scriptアルヨ」とあったので試してみました。以下はBlazorのテンプレートのindex.razorの中身を書き換えで確認しています無事値の埋め込みができました。さらっと見てわかるとおり、テンプレートにMarkDownと値の埋め込みテンプレートを使用して出力するもので、感覚的にはwikiクローンっぽいものを出来るかな？と思って色々技術的に調べているところです。このテンプレートにDBから値を埋め込みたいってのは昔やってたブラウザゲームの攻略wikiで別ページのデータを埋め込んで使いまわすのをかなりやりまくっていて、1ページ内にincludexを100以上呼び出すといったやばい作りになっていました。レンタルwikiの管理人へお願いしてincludexのカスタマイズしてもらっていたのでやれた無茶だったんですが、その管理人さん、時々連絡が取れなくなることがあって別のwikiに移動しないとまずいって話が出たときにincludexが使えないところは論外といった感じで移転先に制限がかかってしまっていたのと、ページコメントの負荷がやばくて鯖落ちした時期があったのとでこういうデータの使いまわしがきくいい感じのwikiはつくれないかなぁと漠然と考えていたので気が向いたときにぼちぼちと調べていました。ついさっき解決したばかりの走り書きなので体裁もきちんとできていませんが、Blazorはまだプレビュー版とはいえ.NetCore3.0がリリースされてから触る人が増えてきたようなので、何かしら同じようなことをしようとして詰まる人が出てくるのでは？と思って取り急ぎでうｐしました。


