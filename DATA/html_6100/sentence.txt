もくじ
https://qiita.com/tera1707/items/4fda73d86eded283ec4f■連打防止関連
ボタン押したときに時間がかかる処理をawaitでやるときに、ボタン連打を防止したい
→https://qiita.com/tera1707/items/a6f11bd3bf2dbf97dd40
ボタン押したときに時間がかかる処理をawaitでやるときに、ボタン連打を防止したい その2
→https://qiita.com/tera1707/items/946116bf32d0f1203006prism(6.3)を使ったWPFアプリで、下記のような感じでボタンを押したときの処理を書きたい。が、上記をそのまま実行して、ボタンを連打すると、「時間のかかる処理」が終わってボタンの処理を抜ける前に何度も「時間のかかる処理」が走ってしまう。これを、一度ボタンを押したら一連のボタン処理が終わるまでボタンを押せないように(ボタンを押したときの処理が同時に複数回走ってしまわないように)したい。DelegateCommandが持つObservesPropertyメソッドとDelegateCommandの引数が2つある方のコンストラクタの第二引数canExecuteMethodを使用する。
やったことは言葉で書くと下記のとおり。時間のかかる処理を実行中に「無効」になっている間、スタイルによってはボタンがグレーアウトしているように見える。
そういうのが気になるという場合は、無効でも見た目が変わらないようにするとか、さらなる逃げをしないといけなくなる可能性がある。またなにより、そういうことをしたいボタンが一つだったらこのやり方も現実的ではあるが、たくさんこういうボタンが画面上にあったとしたら、似たフラグだらけになりそう。もっとうまいことできないものか...AsyncReactiveCommandでWPFのお手軽ダブルクリック抑制
https://qiita.com/soi/items/eca0601ad0fc4e401623
ReactivePropertyを使うと、今回やりたいことが簡単にできる様子。
ただ、元々ReactivePropertyを使っていたら使いたいが、今回の私の場合、二度押し防止のためだけにReactivePropertyを入れるというのもどうなのか...


