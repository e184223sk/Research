

using System;
using System.Text.RegularExpressions;

// 0x20-0x7Eは文字に変換。それ以外は &lt;16進&gt; で出力
// 先頭が x or X or 0x or 0X (正規表現 0?[xX]) の場合は読み捨てる。
// [0-9A-Fa-f]{2} を探す。

class HexToString
{
    [STAThread]
    static void Main(string[] args)
    {
        string instr = String.Join(" ", args).Trim();
        string[] ss = Regex.Split(instr, @"[-_ \t\r\n.,:;]+"); // 区切りとして扱う。

        Regex r = new Regex(@"^(?:0?[xX])?([0-9A-Fa-f]+)$");
        Regex rHexHex = new Regex(@"([0-9A-Fa-f]{2})");

        foreach(string s in ss) {
            if ( s == "" ) {
                continue;
            }

            Match m = r.Match(s);
            if (m.Success) {
                string hexStr = m.Groups[1].Value;
                if ( hexStr.Length%2 == 1 ) {
                    // 16進文字列の長さが 2 の倍数でない
                    Console.WriteLine();
                    Console.WriteLine("Error: Format hex-length unmatch!");
                    break;
                }
                MatchCollection mc = rHexHex.Matches(hexStr);
                foreach(Match mHexHex in mc) {
                    string hexhex = mHexHex.Groups[0].Value; // 2桁の16進文字列 ("12"とか"fc"とか)
                    int x = Convert.ToInt32(hexhex, 16);
                    Console.Write(MyConvertToChar(x));
                }
            }
            else {
                Console.WriteLine();
                Console.WriteLine("Error: Format unmatch!");
                break;
            }
            //Console.Write(", ");
        }
        Console.WriteLine();
    }

    static string MyConvertToChar(int x)
    {
        if ( 0x20 &lt;= x &amp;&amp; x &lt;= 0x7E ) {
            return ((char)x).ToString();
        }
        //if ( x == (int)'\t' ) { return "\t"; }
        //if ( x == (int)'\r' ) { return "\r"; }
        //if ( x == (int)'\n' ) { return "\n"; }
        return "&lt;"+x.ToString("X2")+"&gt;";
    }
}

