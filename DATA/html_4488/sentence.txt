More than 1 year has passed since last update.C#言語(.NET 4.7.2)とWindowsFormに、Geckofxを埋め込んで使うためのメモ。
NuGetでGeckofxをインストールすればFirefoxが扱えるようになり、いろんなことができるようになります。ただ、情報が少ないので作成している間に課題となってるところなどメモしておこうと思います。WPFでも作れます。UWPはわかりません。簡単な仕組みだけにするならWindowsFormでも大丈夫。そのまま、GeckoWebBrowser のインスタンスを作ってあれこれするだけなのですが、やることが決まっているならば継承クラスとして作り、拡張する方が便利かもしれません。（猫はそうしてます）コンストラクタ内で、Xpcomを初期化させています。プロファイルの位置も、初期化時に決定していないとだめなので、ここはどのように実装するかは考えものです。
なお、プロセス終了するまでメモリーは食い続け、解放する手段もないですので注意が必要です。あと、情報の大半は共有されているので、プロセス内で複数のブラウザに分けたとしても、設定情報は共有されてしまいますので、もし分けたい場合は子プロセスとして動作させる必要がありそうです。何もせずに生成させると、素の情報ができてしまいます。ある程度、環境設定をこちらで作っておくといいと思います。なお、UserAgentも正規の情報は入っていないので、そのままYahoo!を表示させると期限切れ情報が表示されます。で偽装しておく必要があります。
なお、GeckoPreferencesには、Default プロパティの他に User もあります。Userは、以下のメソッドでプロファイルに保存できるのでしょう（未検証）。クラスを作ってプロンプト（ダイアログボックス）を制御できます。これらは、インターフェイスを継承してそれぞれを上書きすることになります。インターフェイスの宣言を実装してあげてください。
数が多いので、ちょっと紹介以下略...です。
ブレイクポイント当てると、大概は引っかかるので、なんとか処理は出来そうです。のように使い、URLを指定します。
表示されたサイトのHTML等を操作するには、OnDocumentCompleted をオーバーライドします。(またはDocumentCompletedイベントを使います）このメソッドで、出力されたDOMを Documentオブジェクトを経由して操作することが可能です。つまり、読み取って解析が可能ということです。
this.Documentにしているのは、eにもあるのですが、最近流行のJavascriptでの動的動作によって、e 側から返るオブジェクトが一致しない現象があったから。もしかすると、気のせいかもしれませんけどね。


