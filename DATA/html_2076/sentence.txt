More than 1 year has passed since last update.MacでC#をやる場合に、VisualStudio for Macを選ぶのもいいですが、
ここはVSCodeでよしなに開発ができるようにしたいと思いました。あとdotnet-cliを使ってみたかった。Domain、InMemoryInfrastructureプロジェクトが、クラスライブラリで、
TestがxUnitプロジェクトとなります。InMemoryInfrastructureプロジェクトが、Domainプロジェクトを参照し、
Testプロジェクトが、InMemoryInfrastructureプロジェクトとDomainプロジェクトを参照するようにします。1つ目だけだと、Documentation Commentが記述（/// 打ったら→ &lt;summary&gt;&lt;/summary&gt;と出るやつ）できないため、2つ目も入れておくと良いと思います。
3つ目は、ソースコードを自動で整形したい人用。こちらの記事を参考にさせて頂きました。
Visual Studio CodeでC#プログラミング - Qiita.NET Tutorial | Hello World in 10 minutes
こちらのインストールガイドを元に、インストールをする。作るときに、ただ classlibテンプレートを選ぶだけだと、frameworkのバージョンがnetstandard2.0となってしまうので、frameworkのバージョンを変更したい場合は、fオプションで指定をする。この状態だと、まだソリューションに追加がされてないので、
ソリューションにプロジェクトを紐付けます。全て関連付けるとこんな形になります。プロジェクトの参照も追加します。最初ぱっと見て、慣れなかったのですが、
add [参照する側のプロジェクト] reference [追加するプロジェクト参照] となります。[参照する側のプロジェクト]を省略したら、カレントディレクトリのプロジェクトになる模様。
dotnet add reference コマンド - .NET Core CLI | Microsoft Docs参照追加が成功すると、csprojファイルに参照プロジェクトが追加されます。なお、参照を外したい場合には、removeで出来ますとりあえずテスト用に足し算をする為のソースを書いてみます。dotnet testコマンドを叩くだけで、[Fact]と書かれたテストケースを全て実行してくれます。デバッグテストも出来ます。
[Fact]属性を付けたメソッドに、Debug Testと選べるようになっているので、
そちらをクリックすれば、デバッグができます。

こちらの拡張機能を入れると見やすくなりました。.NET Core Test Explorer - Visual Studio Marketplace選択的単体テストの実行 - .NET Core | Microsoft Docs
こちらに詳細が書かれていますが、
dotnet testには--filterオプションがあり、特定のテストのみ実行というやり方も可能です。filter例Categoryは、xUnitの場合[Trait]属性でカテゴリ分けが出来ます。xUnitの場合、[Fact]の代わりに[Theory]属性を付けて、
パラメータ付きのテストを行えるようなので、試してみます。便利な外部ライブラリを追加する際には、dotnet add packageコマンドを使用します。※NugetパッケージマネージャーコンソールのInstall-Packageに相当するものだと思っています。参照追加したいプロジェクトを指定するか、もしくはプロジェクトフォルダまで移動して、コマンドを叩きます。なお、インストールしたパッケージは、dotnet list packageで確認ができますVisual Studioほどでは無いにしろ、そこそこ開発できる環境までは整いました。
なにより、Visual Studioのもっさり感が、VSCodeでは感じないのが嬉しいです。dotnet-cliは今回初めて使いましたが、リファレンスもちゃんと書かれており、結構扱いやすかったです。Visual Studio CodeでC#プログラミング - Qiita
.NET Core コマンドライン インターフェイス (CLI) ツール - .NET Core CLI | Microsoft Docs
選択的単体テストの実行 - .NET Core | Microsoft Docs


