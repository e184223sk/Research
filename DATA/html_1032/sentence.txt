More than 1 year has passed since last update.前回の記事「UiPathでライブラリを直接呼び出す」と「UiPathでライブラリに引数を設定して呼び出す」の拡張編です。
UiPathのプロジェクトファイルに格納されたDLLに対して、引数を設定して呼び出し、処理結果を方法を紹介します。最近では当たり前ですが、昔はUiPathでカスタムライブラリを作成するには、
Visual StudioでDLLを作成し、Nuget ExplorerなどでDLLをnuget化して利用しかありませんでした。UiPathでデバッグするにも、Immediate Panelがなかったり、現時点でもComやラムダ式をデバッグしたり
解析することができませんでした。この記事は2020年6月時点の情報を基に作成しております。
記事の内容は私個人の見解であり、所属する組織の公式見解ではありません。前回の記事で使用したサンプルのカスタムライブラリを使用します前回のソースと同じものです。
今回は、Test3のメソッドを使用します。こちらも、前回と同様の構成を想定しております。
カスタムライブラリのサンプル(UiPathCustomLibrary.dll)はプロジェクト直下に格納しています。基本的には、前回と同様の実装です。変更点は以下の3つです。UiPathでasmという変数を作成します。
asmの型をBrowse for Types...を選択します。
Type NameにSystem.Reflection.Assemblyを入力し、Asssemblyを選択します。
Assign(代入)アクティビティを追加し、左辺にasmを設定します。
Assignの右辺に以下の値を設定します。これで、DLLをロードすることができました。実行するメソッドの変数を追加します変数に値をそれぞれ設定します。実行結果を設定する変数 resultObj を追加し、変数の型をObjectに変更します。実行と実行結果を設定するAssignを追加します。resultObjの値に、以下の値を設定しますWriteLineアクティビティを追加し、resutObjの値を出力します。実行するとTest3の処理結果が、Outputパネルに出力されます。本投稿では、メソッドに引数を設定して呼び出し、処理結果を取得する方法をご紹介しました。もし、よければLGTMをお願いします。


