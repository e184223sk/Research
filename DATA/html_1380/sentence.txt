More than 1 year has passed since last update.TwainDotNetを使用してC#のWinFormからTWAINでスキャンしました。これを元に、スキャンアプリケーション ITScan - Qiitaを作成しています。「SelectSource」でスキャナを選択します。
「Scan」でTWAINドライバのダイアログを表示してスキャンします。TwainDotNetはnugetで取得できます。バージョン1.0.0を取得しました。
nugetする前にx86でビルドするように変更しないと、警告が表示されます。nugetした後に変更しても大丈夫です。WinForm用のTwainオブジェクトを作成し、イベントハンドラをセットします。WPF用もあります。後述のStartScanning()に渡すScanSettingsオブジェクトを作成します。StartScanning()のタイミングでTWAINドライバのダイアログを表示するためにShowTwainUIにtrueを代入します。ソース選択ダイアログを表示します。
ソース選択ダイアログスキャンを開始します。
最初にFormをdisableにしています。
ShowTwainUIをtrueにしているため、TWAINドライバのダイアログが表示され、スキャンを開始するボタンを押下するとスキャンが開始されます。ShowTwainUIがfalseのままだと、TWAINドライバのダイアログが表示されずにスキャンが開始されます。
他のアプリケーションでTWAINドライバが使用中の場合には、TWAINドライバがエラーダイアログを表示して(TWAINドライバの実装に依存する)、ダイアログを閉じた後に例外が発生します。Twain関連の例外をcatchして握りつぶしています。(全ての例外をcatchしてEnable = trueしたほうがより安全ではありますが)
TWAINドライバのダイアログ(Canon DR-G1130)1画像転送される毎にTransferImageが発生します。ADFスキャナの場合には1画像毎に連続して呼ばれます。ここでは0パディング6桁連番でPNGファイルとして保存しています。無条件上書きなので注意して下さい。
resultImage.Dispose()はTwainDotNetのテストプログラムでは行われていませんが、必要です。これがないと数ページ～十数ページ程度処理した後に、TwainDotNet内のnew Bitmap()で「使用されたパラメータが有効ではありません。」の例外が発生し、連続スキャンが止まります。TwainDotNet側ではDispose()していないのと、TransferImageEventArgsで渡されたBitmapをClone()せずに利用することを考えると、イベントハンドラ内でDispose()しないとメモリリークするからです。スキャン完了時にScanningCompleteが発生します。ADFスキャナの場合には、連続したスキャンが完了した時に1回呼ばれます。また、TWAINドライバのダイアログを閉じたときにも呼ばれます。
Formをenableに戻しています。


