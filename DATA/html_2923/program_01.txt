

public void Configure(IApplicationBuilder app, IHostingEnvironment env)
{
    if (env.IsDevelopment())
    {
        app.UseDeveloperExceptionPage();
    }

    app.Run(async (context) =&gt;
    {
        var req = context.Request;

        var output = new List&lt;string&gt;
        {
            "-------------Request Information Start-------------",
            $"Time[{DateTime.Now}]",
            $"Scheme[{req.Scheme}]",
            $"Path[{req.Path}]",
            $"QueryString[{req.QueryString}]",
            $"Method[{req.Method}]",
            $"ContentLength[{req.ContentLength}]",
            $"ContentType[{req.ContentType}]",

            "-------------Body-------------"
        };
        using (var reader = new StreamReader(req.Body))
        {
            var body = reader.ReadToEnd();
            output.Add(body);
        }

        output.Add("-------------Headers--------------");
        output.Add($"Headers Count[{req.Headers.AsEnumerable().Count()}]");

        foreach (var h in req.Headers.AsEnumerable())
        {
            output.Add($"{h.Key}[{h.Value}]");
        }
        output.Add("-------------Request Information End-------------");

        _logger.LogInformation(string.Join(Environment.NewLine, output));

        await context.Response.WriteAsync("Request Success");
        await context.Response.WriteAsync(Environment.NewLine);
        await context.Response.WriteAsync(string.Join(Environment.NewLine, output));
    });
}


