PostgreSQLをDapper経由で扱っている場合、テーブルのフィールドが列挙型として定義されている場合の取り扱い方がわかったのでまとめてみようかなって。環境は以下の通り以下のような列挙子とテーブルがあったとして、C#側でこんな感じでQueryをかけてみるじっさい、これは何の問題も無く動いて、以下のような結果を得ることができる。ココまではさして問題にならない。Queryがうまくいったのなら、Insertも普通に書いてうまくいくか試してみた。まずは普通に書いてみた。これだと残念ながら、以下のようなエラー吐いて無事死亡する。Npgsql.PostgresException: '42804: column "emotion" is of type mood but expression is of type integer'早い話が、moodなんだから、integer突っ込むなう゛ぉけといわれている。これは多分Dapperが裏側でC#のEnumを整数化してるんじゃないかなと予想。だったら、文字列ならイケる?ってことで試してみる。残念、これも以下のようなエラーを吐いて死んでしまった。Npgsql.PostgresException: '42804: column "emotion" is of type mood but expression is of type text'さっきと同じようにmoodなのに文字列入れてくれるなと怒られる。だったら、渡すParameterが文字列だから後はmoodに適宜妥当1に変換してくれと書いてみる。これはうまく動いた。じゃあ、UpdateしてみんなHappyになってもらおうってことで試してみた。結果はってことで、みんなHappyになれた。一般的にPostgreSQL方面はsnail_case、C#はUpperCamelを採用しているかなって。Dapperはその辺大分空気読んでくれてCollationを大体case-insensitiveで取り扱ってくれるのだけど、今回の事例では、stringのparameterをPostgreSQL側でキャストしてもらうことになるので、case-sensitiveになっているので、その辺の調整はC#側でする必要があるのでその点はご注意のほど。略して適当w ↩


