
using System;
using System.Linq;
using AtCoder;

class Program
{
    static void Main()
    {
        SourceExpander.Expander.Expand();

        // https://atcoder.jp/contests/practice2/tasks/practice2_j
        var line = Console.ReadLine().Split(' ');
        var N = int.Parse(line[0]);
        var Q = int.Parse(line[1]);
        var seg = new Segtree&lt;long, Op&gt;(Console.ReadLine().Split(' ').Select(long.Parse).ToArray());

        for (int q = 0; q &lt; Q; q++)
        {
            line = Console.ReadLine().Split(' ');
            int t = int.Parse(line[0]);
            int l = int.Parse(line[1]) - 1;
            int r = int.Parse(line[2]);
            switch (t)
            {
                case 1:
                    seg[l] = r;
                    break;
                case 2:
                    Console.WriteLine(seg.Prod(l, r));
                    break;
                case 3:
                    Console.WriteLine(1 + seg.MaxRight(l, num =&gt; num &lt; r));
                    break;
            }
        }
    }
}
struct Op : ISegtreeOperator&lt;long&gt;
{
    public long Identity =&gt; long.MinValue;
    public long Operate(long x, long y) =&gt; Math.Max(x, y);
}

