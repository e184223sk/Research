
using System;
class Program
{
    static void Main()
    {
        Console.WriteLine($"-1          : {nearPow2(-1)}");
        Console.WriteLine($"0           : {nearPow2(0)}");
        Console.WriteLine($"1           : {nearPow2(1)}");
        Console.WriteLine($"2           : {nearPow2(2)}");
        Console.WriteLine($"3           : {nearPow2(3)}");
        Console.WriteLine($"4           : {nearPow2(4)}");
        Console.WriteLine($"7           : {nearPow2(7)}");
        Console.WriteLine($"8           : {nearPow2(8)}");
        Console.WriteLine($"0x7fffffff  : {nearPow2((int)0x7fffffff)}");
    }

    static uint nearPow2(int n)
    {
        // nが0以下の時は0とする。
        if (n &lt;= 0) return 0;

        // (n &amp; (n - 1)) == 0 の時は、nが2の冪乗であるため、そのままnを返す。
        if ((n &amp; (n - 1)) == 0) return (uint)n;

        // bitシフトを用いて、2の冪乗を求める。
        uint ret = 1;
        while (n &gt; 0) { ret &lt;&lt;= 1; n &gt;&gt;= 1; }
        return ret;
    }
}

