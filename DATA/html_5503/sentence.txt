この記事は以下の環境で動いています。Unityの動作環境は以下です。インストールについてはROS講座02 インストールを参照してください。
またこの記事のプログラムはgithubにアップロードされています。ROS講座11 gitリポジトリを参照してください。今回はUnityを使ってROSのImageが見えて、画面タップでTwistが送れるアプリを作って、それをAndroidで動かしてみましょう。今回はROSとの通信を行うROS#とタッチ画面でjoystickのような動作をするjoystick packの2つを使います。前回と同様ですjoystick packはAssetストアからダウンロードできます。前回と同様です前回は3D空間上のPlaneに表示しましたが、これだと画面いっぱいに表示したり、解像度・アスペクト比の変更に対応しずらいです。そこで今回はuGUIのImageを使って表示します。カメラ画像はアスペクト比を固定して表示します。このための設定をします。デフォルトであるスクリプトでは3DのPlaneにしか画像を書き出せません。ROS#のスクリプトはシンプルな構成になっているので、オリジナルにあるものを改造して、Imageに書き出すものを作ります。ROS#の中のImageSucscriber.csを参考にしています。内容はシンプルで受信したImageメッセージをCanvasのimageに変換して書き込んでいます。これをRosConnectorにアタッチします。Joyの入力をTwistにしてpublishします。このスクリプトをRosConnectorにアタッチします。
* LeftJoyStick、RightJoyStickにそれぞれCanvasに張ったオブジェクトをアタッチします。
* LinearSpeedに0.5、AnguarSpeedに1.0辺りを入れます。 アプリがROSとつながっているのか切れているのか、それだけでも表示できると良いでしょう。これをRosConnectorにアタッチします。status_textとros_connector_objectにそれぞれオブジェクトを割り当てます。シミュレーションを起動します。画面上の三角形ボタンを押します。Android上でこのアプリを動かしてみます。Unity起動時にやっているとして省略アプリをAndroidスマホに書き込むには開発者モードを使う必要があります。この状態で「Build And Run」を押すとビルド、Androidへの転送が開始され、終了後にアプリが起動します。ROS講座の目次へのリンク


