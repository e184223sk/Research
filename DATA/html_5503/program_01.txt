
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace RosSharp.RosBridgeClient
{
    public class TwistPlublisher : UnityPublisher&lt;MessageTypes.Geometry.Twist&gt;
    {
        public Joystick left_joystick;
        public Joystick right_joystick;
        public float linear_speed = 0.5f;
        public float angular_speed = 1.5f;

        private MessageTypes.Geometry.Twist message;

        protected override void Start()
        {
            InitializeMessage();

            RosConnector ros_connector = GetComponent&lt;RosConnector&gt;();
            ros_connector.IsConnected.WaitOne(ros_connector.SecondsTimeout * 1000);
            base.Start();
        }

        private void Update()
        {
            UpdateMessage();
        }

        private void InitializeMessage()
        {
            message = new MessageTypes.Geometry.Twist();
        }

        private void UpdateMessage()
        {
            message.linear.x = linear_speed * left_joystick.Vertical;
            message.linear.y = -linear_speed * right_joystick.Horizontal;
            message.angular.z = -angular_speed * left_joystick.Horizontal;
            Publish(message);
        }
    }
}

