
public class StateContext
{
    public List&lt;State&gt; StateList = new List&lt;State&gt;();
    public State CurrentState { get; private set; }

    // Allow transit to self state
    public bool SelfTransit = true;

    object Locker = new object();

    public void setCurrentState(State state)
    {
        if (state == null || !StateList.Contains(state))
            return;

        CurrentState = state;
    }

    public void addState(State state)
    {
        if (state == null || StateList.Contains(state))
            return;
        StateList.Add(state);
    }

    public void transitState(State targetState)
    {
        if (targetState == null || (StateList.Contains(targetState) &amp;&amp; SelfTransit))
        {
            return;
        }

        lock (Locker)
        {
            CurrentState?.OnExit();
            CurrentState = targetState;
            CurrentState?.OnEnter();
        }
    }
}

