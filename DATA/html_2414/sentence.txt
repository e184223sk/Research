More than 1 year has passed since last update.c#を触り始めて、とりあえずCRUDを実装することが出来たので公開します。Railsとは違ってフォルダ構成など自由度が高いしデータの取ってきかたとかよくわかっていない部分が多いのでもっとこうしたら良いなどあれば指摘してほしいです。実装したフォルダはgithubに投稿しています。フォルダ構成に関してはDomainのEntitiesでPostクラスを定義している。
このPostクラスは投稿、表示する際のひな型として使う。DomainのRepositoriesではIPostRepositoryというインターフェイスを実装していてSave Update GetAllなどのメソッドを定義しているInfrastructureではSQLServerへの接続関係の処理を書いてるWinformのviewsではフォームを設定し、ここでは基本的に処理は書かないようにしている。具体的な処理はviewModelに書いており、viewで使う値はviewModelのインスタンス変数として設定し、viewModelから取り出して使う形にしている。Homeのコード上から順番に public static でForm1Instanceを定義してコンストラクタにてとすることで外部からフォームにアクセスできるようにしている。メイン画面のパネルに投稿画面、投稿表示画面に表示するためにchangeFormメソッドを作っています。外部のフォームからchangeFormを実行する場合はForm.Form1Instance.changeFormのように呼びだします。保存処理はviewModelで行います。title,bodyをviewModelにて使えるようにviewModelのプロパティのTitleText,BodyTextを設定します。NewPostViewModelでは引数なしでインスタンスが作成されたときはnew PostSQLiteが引数に渡されます。IPostRepositoryではSaveメソッドが定義されているので_post.Saveメソッドの実行が出来ます。Saveメソッド自体はPostSQLiteクラスで定義されていてPostEntityをもとにデータの作成を行います。sql関係に関してはInfrastructureフォルダで書いていてSQLHeperにてexecuteメソッドを実装このexecuteメソッドをもとにsave処理をこのように書いています。これでPostEntityをもとに保存処理が行われます。大体こんな感じでCRUDを実装してみました。実装の仕方に関してはUdemyのC#でドメイン駆動開発とテスト駆動開発を使って保守性の高いプログラミングをする方法
https://www.udemy.com/course/domain-1/を参考にしました。ドメイン駆動自体全然理解出来てないのでおそらく実装の仕方がだいぶ変だと思います。ドメイン駆動に関して少し調べてみたのですが結構情報少ないんですよね、それにドメイン駆動以外ではどんな感じに実装するんでしょうか.....終わり


