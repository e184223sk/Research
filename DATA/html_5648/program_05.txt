
using System.Reactive.Linq;
// 変数を宣言
public ReactiveProperty&lt;int&gt; Input1 { get; } = ReactiveProperty&lt;int&gt;();
public ReactiveProperty&lt;int&gt; Input2 { get; } = ReactiveProperty&lt;int&gt;();
public ReactiveProperty&lt;int&gt; Output1 { get; }
public ReactiveProperty&lt;bool&gt; Output2 { get; }
public ReactiveProperty&lt;string&gt; Output3 { get; }

// 定義する際に、どう加工するかをメソッドチェーンで示す
// (Output1は、Input1を2倍にした数値となる)
Output1 = Input1.Select(x =&gt; x * 2).ToReactiveProperty();
// この「Select」は、普通のLINQと同様、型変換にも使える
// (Output2は、Input1が偶数ならtrue、機数ならfalseとなる)
Output2 = Input1.Select(x =&gt; (x % 2 == 0)).ToReactiveProperty();
// 2つ以上のReactivePropertyを合成することも可能
// (Output3は、Input1 == Input2なら"同じ", それ以外なら"違う"となる)
Output3 = Input1.CombineLatest(Input2, (x, y) =&gt; (x == y ? "同じ" : "違う")).ToReactiveProperty();

