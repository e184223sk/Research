
public static class LoggerExtensions
{
    public static IDisposable BeginScope(this ILogger logger, string messageFormat, params object[] args);

    public static void Log(this ILogger logger
        , LogLevel logLevel, Exception exception, string message, params object[] args
    );
    public static void Log(this ILogger logger
        , LogLevel logLevel, EventId eventId, string message, params object[] args
    );
    public static void Log(this ILogger logger
        , LogLevel logLevel, string message, params object[] args
    );
    public static void Log(this ILogger logger
        , LogLevel logLevel, EventId eventId, Exception exception, string message, params object[] args
    );

    public static void LogCritical(this ILogger logger
        , string message, params object[] args
    );
    public static void LogCritical(this ILogger logger
        , Exception exception, string message, params object[] args
    );
    public static void LogCritical(this ILogger logger
        , EventId eventId, string message, params object[] args
    );
    public static void LogCritical(this ILogger logger
        , EventId eventId, Exception exception, string message, params object[] args
    );

    public static void LogDebug(this ILogger logger
        , EventId eventId, Exception exception, string message, params object[] args
    );
    public static void LogDebug(this ILogger logger
        , EventId eventId, string message, params object[] args
    );
    public static void LogDebug(this ILogger logger
        , Exception exception, string message, params object[] args
    );
    public static void LogDebug(this ILogger logger
        , string message, params object[] args
    );

    public static void LogError(this ILogger logger
        , string message, params object[] args
    );
    public static void LogError(this ILogger logger
        , Exception exception, string message, params object[] args
    );
    public static void LogError(this ILogger logger
        , EventId eventId, Exception exception, string message, params object[] args
    );
    public static void LogError(this ILogger logger
        , EventId eventId, string message, params object[] args
    );

    public static void LogInformation(this ILogger logger
        , EventId eventId, string message, params object[] args
    );
    public static void LogInformation(this ILogger logger
        , Exception exception, string message, params object[] args
    );
    public static void LogInformation(this ILogger logger
        , EventId eventId, Exception exception, string message, params object[] args
    );
    public static void LogInformation(this ILogger logger
        , string message, params object[] args
    );

    public static void LogTrace(this ILogger logger
        , string message, params object[] args
    );
    public static void LogTrace(this ILogger logger
        , Exception exception, string message, params object[] args
    );
    public static void LogTrace(this ILogger logger
        , EventId eventId, string message, params object[] args
    );
    public static void LogTrace(this ILogger logger
        , EventId eventId, Exception exception, string message, params object[] args
    );

    public static void LogWarning(this ILogger logger
        , EventId eventId, string message, params object[] args
    );
    public static void LogWarning(this ILogger logger
        , EventId eventId, Exception exception, string message, params object[] args
    );
    public static void LogWarning(this ILogger logger
        , string message, params object[] args
    );
    public static void LogWarning(this ILogger logger
        , Exception exception, string message, params object[] args
    );
}

