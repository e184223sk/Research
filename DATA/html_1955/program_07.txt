
// using System.Runtime.CompilerServices;

public static void LogDebugWithCaller(this ILogger logger, string message, object[] args = null
    , [CallerMemberName] string callerMember = ""
    , [CallerFilePath] string callerFilePath = ""
    , [CallerLineNumber] int callerLineNumber = -1)
{
    if (!logger.IsEnabled(LogLevel.Debug)) { return; }

    var state = new LogWithCallerState(message, args, callerMember, callerFilePath, callerLineNumber);

    if (logger is ILogFormatter&lt;LogWithCallerState&gt; formatter)
    {
        logger.Log(LogLevel.Debug, default, state, null, formatter.Format);
    }
    else
    {
        logger.Log(LogLevel.Debug, default, state, null, LoggerEnvironment.LogWithCallerFormatter);
    }
}

