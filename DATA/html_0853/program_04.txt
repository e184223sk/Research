
using System;
using System.Linq;

namespace Verify
{
    class Program
    {
        private static DateTime start;
        private static DateTime end;
        private static readonly int listCnt = 100000000;
        private static readonly int loopCnt = 100;
        private static readonly String resultFormat = "{0:0.0 ms}";

        /// &lt;summary&gt;
        /// 検証
        /// &lt;/summary&gt;
        /// &lt;param name="args"&gt;&lt;/param&gt;
        static void Main(string[] args)
        {
            LoopVerify();
        }

        /// &lt;summary&gt;
        /// ループ系関数の速度検証
        ///  1. for文
        ///  2. foreach文
        ///  3. while文
        ///  4. do-while文
        ///  5. LINQ文
        ///  6. LINQ文（パターン2）
        /// 予め用意した配列の要素トータルを計算する速度を検証する。
        /// &lt;/summary&gt;
        private static void LoopVerify()
        {
            double[] doForVerifyList = new double[loopCnt];
            double[] doForEachVerifyList = new double[loopCnt];
            double[] doWhileVerifyList = new double[loopCnt];
            double[] doDoWhileVerifyList = new double[loopCnt];
            double[] doLINQQueryVerifyList = new double[loopCnt];
            double[] doLINQMethodVerifyList = new double[loopCnt];

            int[] verifyList = Enumerable.Repeat&lt;int&gt;(1, listCnt).ToArray();

            for(int i = 0; i &lt; loopCnt; i++)
            {
                doForVerifyList[i] = DoForVerify(verifyList);
                doForEachVerifyList[i] = DoForEachVerify(verifyList);
                doWhileVerifyList[i] = DoWhileVerify(verifyList);
                doDoWhileVerifyList[i] = DoDoWhileVerify(verifyList);
                doLINQQueryVerifyList[i] = DoLINQQueryVerify(verifyList);
                doLINQMethodVerifyList[i] = DoLINQMethodVerify(verifyList);
            }
            // それぞれの平均値を出力
            Console.WriteLine("ForAvg：" + String.Format(resultFormat, doForVerifyList.Average()));
            Console.WriteLine("ForEachAvg：" + String.Format(resultFormat, doForEachVerifyList.Average()));
            Console.WriteLine("WhileAvg：" + String.Format(resultFormat, doWhileVerifyList.Average()));
            Console.WriteLine("DoWhileAvg：" + String.Format(resultFormat, doDoWhileVerifyList.Average()));
            Console.WriteLine("LINQQueryAvg：" + String.Format(resultFormat, doLINQQueryVerifyList.Average()));
            Console.WriteLine("LINQMethodAvg：" + String.Format(resultFormat, doLINQMethodVerifyList.Average()));
        }

        /// &lt;summary&gt;
        /// forの検証
        /// &lt;/summary&gt;
        /// &lt;param name="_verifyList"&gt;検証配列&lt;/param&gt;
        /// &lt;returns&gt;経過時間（ミリ秒）&lt;/returns&gt;
        private static double DoForVerify(int[] _verifyList)
        {
            int total = 0;
            start = DateTime.Now;
            for (int i = 0; i &lt;= _verifyList.Length - 1; i++)
            {
                total += _verifyList[i];
            }
            end = DateTime.Now;
            return (end - start).TotalMilliseconds;
        }

        /// &lt;summary&gt;
        /// foreachの検証
        /// &lt;/summary&gt;
        /// &lt;param name="_verifyList"&gt;検証配列&lt;/param&gt;
        /// &lt;returns&gt;経過時間（ミリ秒）&lt;/returns&gt;
        private static double DoForEachVerify(int[] _verifyList)
        {
            int total = 0;
            start = DateTime.Now;
            foreach (int i in _verifyList)
            {
                total += i;
            }
            end = DateTime.Now;
            return (end - start).TotalMilliseconds;
        }

        /// &lt;summary&gt;
        /// whileの検証
        /// &lt;/summary&gt;
        /// &lt;param name="_verifyList"&gt;検証配列&lt;/param&gt;
        /// &lt;returns&gt;経過時間（ミリ秒）&lt;/returns&gt;
        private static double DoWhileVerify(int[] _verifyList)
        {
            int total = 0;
            int i = 0;
            start = DateTime.Now;
            while (i &lt;= _verifyList.Length - 1)
            {
                total += _verifyList[i];
                i++;
            }
            end = DateTime.Now;
            return (end - start).TotalMilliseconds;
        }

        /// &lt;summary&gt;
        /// do-whileの検証
        /// &lt;/summary&gt;
        /// &lt;param name="_verifyList"&gt;検証配列&lt;/param&gt;
        /// &lt;returns&gt;経過時間（ミリ秒）&lt;/returns&gt;
        private static double DoDoWhileVerify(int[] _verifyList)
        {
            int total = 0;
            int i = 0;
            start = DateTime.Now;
            do
            {
                total += _verifyList[i];
                i++;
            }
            while (i &lt;= _verifyList.Length - 1);
            end = DateTime.Now;
            return (end - start).TotalMilliseconds;
        }

        /// &lt;summary&gt;
        /// LINQの検証（クエリ構文）
        /// &lt;/summary&gt;
        /// &lt;param name="_verifyList"&gt;検証配列&lt;/param&gt;
        /// &lt;returns&gt;経過時間（ミリ秒）&lt;/returns&gt;
        private static double DoLINQQueryVerify(int[] _verifyList)
        {
            start = DateTime.Now;
            int total = (
                from x in _verifyList
                select x
                ).Sum();
            end = DateTime.Now;
            return (end - start).TotalMilliseconds;
        }

        /// &lt;summary&gt;
        /// LINQの検証（メソッド構文）
        /// &lt;/summary&gt;
        /// &lt;param name="_verifyList"&gt;検証配列&lt;/param&gt;
        /// &lt;returns&gt;経過時間（ミリ秒）&lt;/returns&gt;
        private static double DoLINQMethodVerify(int[] _verifyList)
        {
            start = DateTime.Now;
            int total = _verifyList
                .Sum(x =&gt; x);
            end = DateTime.Now;
            return (end - start).TotalMilliseconds;
        }
    }
}

