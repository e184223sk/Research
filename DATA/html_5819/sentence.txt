More than 3 years have passed since last update.DBに保存されているデータをXML形式で受け取り、
LINQ to XMLの技術を用いて、そのXMLを簡単に解析するためのコードです。
(DB → XML → 解析)手軽さから、DBはSQLiteを使いました。
なので、nugetでSQLiteのパッケージを導入します。DBに格納するテスト用のデータは、大阪環状線の駅情報です。
「駅データ.jp」で公開している駅情報をそのままDBに保存して使わせて頂きました。DBは以下の様な構造です。(stationテーブル)以下のようなクラスを作成しました。取得したレコード情報は、一時的に全てDictionaryに格納しています。上記DictionaryをListにAddして、複数のレコード情報を保持しました。LINQ to XMLを使えば、簡単にXML形式の文字列が作成出来ます。LINQのクエリを使うと、簡単にXElementオブジェクトの作成が行えます。
もしかしたら、foreachしなくても一発でXElementオブジェクトが作成出来るかもしれません。
偉い人教えてください……。XElementオブジェクトさえ出来てしまえば、
後は、ToString()を行うだけでXMLのストリームが作成出来ます。 &lt;records&gt;
   &lt;record&gt;
     &lt;stationName&gt;天王寺&lt;/stationName&gt;
     &lt;longitude&gt;135.514124&lt;/longitude&gt;
     &lt;latitude&gt;34.647243&lt;/latitude&gt;
   &lt;/record&gt;
   &lt;record&gt;
     &lt;stationName&gt;新今宮&lt;/stationName&gt;
     &lt;longitude&gt;135.501076&lt;/longitude&gt;
     &lt;latitude&gt;34.650149&lt;/latitude&gt;
   &lt;/record&gt;
   
   ……
   
   &lt;record&gt;
     &lt;stationName&gt;寺田町&lt;/stationName&gt;
     &lt;longitude&gt;135.523437&lt;/longitude&gt;
     &lt;latitude&gt;34.647957&lt;/latitude&gt;
   &lt;/record&gt;
 &lt;/records&gt;ちなみにXElementを使うには、以下のusing宣言が必要です。
using System.Xml.Linq;DictionaryからXMLを作成するためにXElementを使用しましたが、
解析する場合もXElementを使用します。■ 実行結果駅名: 天王寺
緯度: 34.647243
経度: 135.514124駅名: 新今宮
緯度: 34.650149
経度: 135.501076……駅名: 寺田町
緯度: 34.647957
経度: 135.523437


