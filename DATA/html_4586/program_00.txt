[RequireComponent(typeof(Camera))]
sealed partial class Manager : MonoBehaviour
{
    [SerializeField] ScriptableObjects.Map mapTable;
    [SerializeField] Material unlit;
    [SerializeField] ScriptableObjects.EnemyDisplay enemyDisplay;
    [SerializeField] ScriptableObjects.Speed playerSpeeds;
    [SerializeField] ScriptableObjects.Speed enemySpeeds;
    [SerializeField] AudioSource BgmSource;
    [SerializeField] AudioClip[] BgmClips;
    [SerializeField] float heatDamageRatio;
    [SerializeField] float coolRatio;
    [SerializeField] float rainCoolPower;
    [SerializeField] float rainCoolTimeSpan;
    [SerializeField] float rainCoolFrequency;
    [SerializeField] ScriptableObjects.SkillSetting snowSkillSetting;
    [SerializeField] AudioClip takenokoBulletShoot;
    [SerializeField] AudioClip takenokoBulletBurst;
    [SerializeField] AudioClip snowBurst;
    [SerializeField] AudioSource[] sources;
    [SerializeField] Sprite playerSprite;
    [SerializeField] Material playerMaterial;
    [SerializeField] Sprite kinokoHammer;
    [SerializeField] Material kinokoMaterial;
    [SerializeField] GameObject 武器欄;
    [SerializeField] ScriptableObjects.Speed stage4EnemySpeed;
    [SerializeField] GameObject respawnDisplay;
    [SerializeField] AudioSource BGMSource;
    [SerializeField] ScriptableObjects.TitleSettings titleSettings;
    [SerializeField] ScriptableObjects.Result resultSettings;
    [SerializeField] ScriptableObjects.SkillSetting[] playerSkills;
    [SerializeField] ScriptableObjects.SkillSetting bombSkillEffect;
    private EntityManager manager;
    private Camera UICamera;
    private EnemyPlayerCollisionSystem EnemyPlayerCollisionSystem;
    private RainSystem RainSystem;
    private PlayerShootSystem PlayerShootSystem;

    void Start()
    {
        mainCamera = GetComponent&lt;Camera&gt;();
        UICamera = GameObject.Find("UI Camera").GetComponent&lt;Camera&gt;();
        sourceInfos = new (float, float, AudioClip)[sources.Length];
        var position = this.transform.position;
        position.x = titleSettings.Width * 0.5f;
        position.z = titleSettings.Height * 0.5f;
        this.transform.position = position;
        #if UNITY_EDITOR
           Validate();
        #endif
        InitializeAudio();
        InitializeWorld();
        InitializeUGUI();
        InitializeBGM();
        InitializeUniRx();
        InitializeStageWatch();
        InitializeGameOverUI();
    }
}

