
using System;

public static class TransformExtensions
{
    public class WrappedVector3
    {
        public Vector3 vector3;

        public float x { get =&gt; vector3.x; set =&gt; vector3.x = value; }
        public float y { get =&gt; vector3.y; set =&gt; vector3.y = value; }
        public float z { get =&gt; vector3.z; set =&gt; vector3.z = value; }
    }

    public static void SetPosition(this Transform self, Action&lt;WrappedVector3&gt; setter)
    {
        WrappedVector3 temp = new WrappedVector3();
        temp.vector3 = self.position;
        setter(temp);
        self.position = temp.vector3;
    }

    public static void SetLocalPosition(this Transform self, Action&lt;WrappedVector3&gt; setter)
    {
        WrappedVector3 temp = new WrappedVector3();
        temp.vector3 = self.localPosition;
        setter(temp);
        self.localPosition = temp.vector3;
    }

    public static void SetEulerAngles(this Transform self, Action&lt;WrappedVector3&gt; setter)
    {
        WrappedVector3 temp = new WrappedVector3();
        temp.vector3 = self.eulerAngles;
        setter(temp);
        self.eulerAngles = temp.vector3;
    }

    public static void SetLocalEulerAngles(this Transform self, Action&lt;WrappedVector3&gt; setter)
    {
        WrappedVector3 temp = new WrappedVector3();
        temp.vector3 = self.localEulerAngles;
        setter(temp);
        self.localEulerAngles = temp.vector3;
    }

    public static void SetLocalScale(this Transform self, Action&lt;WrappedVector3&gt; setter)
    {
        WrappedVector3 temp = new WrappedVector3();
        temp.vector3 = self.localScale;
        setter(temp);
        self.localScale = temp.vector3;
    }
}

