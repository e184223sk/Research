
public class PersonFD_ILSpy : INotifyPropertyChanged
{
    [field: NonSerialized]
    public event PropertyChangedEventHandler PropertyChanged;
    public virtual void OnPropertyChanged(string propertyName)
    {
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    public string Name
    {
        [CompilerGenerated]
        get { return this.&lt; Name &gt; k__BackingField; }
        [CompilerGenerated]
        set
        {
            if (string.Equals(this.&lt; Name &gt; k__BackingField, value, StringComparison.Ordinal))
            {
                return;
            }
            this.&lt; Name &gt; k__BackingField = value;
            this.OnPropertyChanged("FullName");
            this.OnPropertyChanged("Name");
        }
    }

    public string FullName { get { return string.Format("Anders {0}", this.Name); } }

    public PersonFD()
    {
        this.&lt; Name &gt; k__BackingField = "Hejlsberg";
        base..ctor();
    }
}

