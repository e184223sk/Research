More than 3 years have passed since last update.このあたりを今から実証していきます。今回は.Net Frameworkを使うのでC#を使ってみました。あたりでしょうか？実は全部満たしているものはほとんどなかった気がします。そもそも画像の読み込みは、今は、OSの機能や外部ライブラリを利用すれば大体使えるので、画像ビューアの本質は画像表示部分ではなくファイラーなのです。つまりファイラーを作成しなければならない訳です。古いフレームワークなのでWin16 APIをCでガチガチに叩いてた時代から比べると、かなり楽です。ただし遅い。Animation GIFを手動で動かしてみたら遅い。JavaFXで作ったプログラムより遅いんです。Windows.Formsの限界を感じます。スレッドセーフやパフォーマンスを考えて無いコードの所為かもしれませんけどねぇ(Timerの使い方を間違えてる可能性も)それはともかくSystem.Drawing.ImageからAnimation GIFの遅延データを取得する方法は以下の様になります。で取得出来ます。0x5100と直接書くのがポイントです。とりあえず作ったソースは供養
https://github.com/tsudon/IVWIN今度は、WPFを使ってみます。WPFのでアニメーションは、Storyboardにぶん投げれば終わりの様です。体感的にはFormsを使うより早そうですが、設計思想の問題からか細かく制御しようとするほど面倒になる気がします（データだけ投げろ、後は全部任せろ的な設計思想？）。
なおFormsで使っていた、イベントハンドリングや画像周りは書き直しですが、そんなに手間はかかりません（下記の部分に比べれば……）ファイラーの部分は全部使い回せます。相対座標と絶対座標変換コードを書くのが面倒になって放置と。WPFにDPIを取得する関数が無いんですよね。いっそのことxamarinで作ればクロスプラットフォームを意識してかけるからデバイスに依存するコードが純粋に除去できるかもと……。しかし、AndroidやiOSの場合、smbプロトコルなどのライブラリが逆に必要になりますね。
やはり、画像ビューアは、結局ファイラーだった……。


