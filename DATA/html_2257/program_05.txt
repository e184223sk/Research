
using UnityEngine;
using Photon.Pun;
/// &lt;summary&gt;
/// 同期させたいアバターのルートにアタッチ
/// &lt;/summary&gt;
public class NetworkPlayer : MonoBehaviourPunCallbacks, IPunObservable
{
    [SerializeField]
    GameObject avater_Face, avater_RightHand;

    [SerializeField]
    string avater_LayerMask;

    Transform cameraTransform;
    Transform rightHandTransform;

    void IPunObservable.OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info) { }

    void Start()
    {
        cameraTransform = Camera.main.GetComponent&lt;Transform&gt;();
        rightHandTransform = GameObject.Find("Controller (right)").GetComponent&lt;Transform&gt;();

        if (photonView.IsMine)
        {
            //親子関係を設定し、ローカルの座標系の原点に移動
            avater_Face.transform.parent = cameraTransform;
            avater_RightHand.transform.parent = rightHandTransform;

            avater_Face.transform.localPosition = Vector3.zero;
            avater_Face.transform.localRotation = Quaternion.identity;

            avater_RightHand.transform.localPosition = Vector3.zero;
            avater_RightHand.transform.localRotation = Quaternion.identity;

            //自分のアバターのみLayerを変更して視界に映らないようにする
            foreach (Transform child in  avater_Face.GetComponent&lt;Transform&gt;())
            {
                child.gameObject.layer = LayerMask.NameToLayer(avater_LayerMask);
            }         
        }
    }
}

