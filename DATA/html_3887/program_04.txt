

    /// &lt;summary&gt;ロガーインターフェース&lt;/summary&gt;
    public interface ILogger
    {
        /// &lt;summary&gt;デバッグログ出力&lt;/summary&gt;
        /// &lt;param name="log"&gt;ログ&lt;/param&gt;
        void Debug(string log);

        /// &lt;summary&gt;情報ログ出力&lt;/summary&gt;
        /// &lt;param name="log"&gt;ログ&lt;/param&gt;
        void Info(string log);

        /// &lt;summary&gt;警告ログ出力&lt;/summary&gt;
        /// &lt;param name="log"&gt;ログ&lt;/param&gt;
        /// &lt;param name="ex"&gt;例外情報&lt;/param&gt;
        void Warn(string log, Exception ex = null);

        /// &lt;summary&gt;エラーログ出力&lt;/summary&gt;
        /// &lt;param name="log"&gt;ログ&lt;/param&gt;
        /// &lt;param name="ex"&gt;例外情報&lt;/param&gt;
        void Error(string log, Exception ex = null);

        /// &lt;summary&gt;致命ログ出力&lt;/summary&gt;
        /// &lt;param name="log"&gt;ログ&lt;/param&gt;
        /// &lt;param name="ex"&gt;例外情報&lt;/param&gt;
        void Fatal(string log, Exception ex = null);
    }

    /// &lt;summary&gt;コンソール出力するロガー&lt;/summary&gt;
    /// &lt;seealso cref="TNakUtility.Logger.ILogger" /&gt;
    public class ConsoleLogger : ILogger
    {
        public void Debug(string log) =&gt; System.Diagnostics.Debug.WriteLine(CreateLogString(log));

        public void Info(string log) =&gt; ConsoleWriteLine(log);

        public void Warn(string log, Exception ex = null) =&gt; ConsoleWriteLine(log, ex);

        public void Error(string log, Exception ex = null) =&gt; ConsoleWriteLine(log, ex);

        public void Fatal(string log, Exception ex = null) =&gt; ConsoleWriteLine(log, ex);

        private void ConsoleWriteLine(string log, Exception ex = null, [CallerMemberName] string header = "")
        {
            // ログ出力
            Console.WriteLine(CreateLogString(log, header));
            if (ex != null)
            {
                // 例外情報出力
                Console.WriteLine(CreateLogString(ex.ToString(), header));
            }
        }

        /// &lt;summary&gt;ログに時間、ヘッダ(メソッド名)を付与&lt;/summary&gt;
        /// &lt;param name="log"&gt;The log.&lt;/param&gt;
        /// &lt;param name="header"&gt;The header.&lt;/param&gt;
        /// &lt;returns&gt;[{時間}][{メソッド名}]{ログ}&lt;/returns&gt;
        private static string CreateLogString(string log, [CallerMemberName] string header = "") =&gt;
            $"[{DateTime.Now:G}][{header}]{log}";
    }

