
    /// &lt;summary&gt;Disposableで実行するアクションをラップ&lt;/summary&gt;
    /// &lt;seealso cref="System.IDisposable" /&gt;
    public class DisposableAction : IDisposable
    {
        /// &lt;summary&gt;空オブジェクト&lt;/summary&gt;
        public static readonly DisposableAction Empty = new DisposableAction(() =&gt; { });

        /// &lt;summary&gt;Disposeで実行する処理&lt;/summary&gt;
        private readonly Action _disposableAction;

        /// &lt;summary&gt;Initializes a new instance of the &lt;see cref="DisposableAction"/&gt; class.&lt;/summary&gt;
        /// &lt;param name="disposableAction"&gt;TDisposeで実行する処理&lt;/param&gt;
        /// &lt;exception cref="ArgumentNullException"&gt;disposableAction&lt;/exception&gt;
        public DisposableAction(Action disposableAction)
        {
            _disposableAction = disposableAction ?? throw new ArgumentNullException(nameof(disposableAction));
        }

        public void Dispose() =&gt; _disposableAction.Invoke();
    }

