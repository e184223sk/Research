using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ango
{
    class code
    {
        public string encrypt(string original,string key)
        {
            string str = original;
            byte[] arr = Encoding.GetEncoding("Shift_JIS").GetBytes(str);
            string str2 = key;
            byte[] arr2 = Encoding.GetEncoding("Shift_JIS").GetBytes(str2);

            string out_string = "";
            int str2_index = 0;
            int str2_next_index;

            for (int i = 0; i &lt; arr.Length; i++)
            {
                str2_next_index = str2_index + 1;
                if (str2_next_index &gt;= arr2.Length) str2_next_index = 0;

                arr2[str2_index] = (byte)((arr2[str2_index] + arr2[str2_next_index]) ^ arr2[str2_next_index]);
                arr2[str2_next_index] = (byte)(arr2[str2_index] + arr2[str2_next_index]);

                out_string = out_string + (arr[i] ^ arr2[str2_index]).ToString() + ",";

                str2_index++;
                if (str2_index &gt;= arr2.Length) str2_index = 0;
            }

            return out_string;
        }

        public string decrypt(string cryptogram,string key)
        {
            string[] arr = cryptogram.Split(',');
            byte[] byte_arr = new byte[arr.Length];

            string str2 = key;
            byte[] arr2 = Encoding.GetEncoding("Shift_JIS").GetBytes(str2);

            int str2_index = 0;
            int str2_next_index;

            for (int i = 0; i &lt; arr.Length - 1; i++)
            {
                str2_next_index = str2_index + 1;
                if (str2_next_index &gt;= arr2.Length) str2_next_index = 0;

                arr2[str2_index] = (byte)((arr2[str2_index] + arr2[str2_next_index]) ^ arr2[str2_next_index]);
                arr2[str2_next_index] = (byte)(arr2[str2_index] + arr2[str2_next_index]);

                byte_arr[i] = Convert.ToByte(arr[i]);
                byte_arr[i] = (byte)(byte_arr[i] ^ arr2[str2_index]);

                str2_index++;
                if (str2_index &gt;= arr2.Length) str2_index = 0;
            }


            string out_str = Encoding.GetEncoding("Shift_JIS").GetString(byte_arr);

            return out_str;
        }
    }
}

