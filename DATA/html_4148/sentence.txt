StreamRelay.NET.exe/StreamRelay.NET.x86.exeには、いくつかの機能をプラグインとして実装できるようにインターフェイスを公開している。今回は、フィルタストリーム(ストリームを受け取ってストリームを返すストリーム)をStreamRelay.NET.exeから呼び出させるインターフェイスを使って、プラグインを作成する方法を記述する。圧縮ストリームとか、BASExx系の変換ストリームとか、そういうものを既存として作った。プラグイン的には、このあたり。-[Local/Remote]Proxy オプションのnetstreamスキームの引数として渡された引数に応じて、ストリームを包んだりするという感じ。以下のインターフェイスを継承したクラスを実装すればよいこのクラス一つだけ実装すればよい。StreamRelay.NET.exeから、引数/オプションの解析処理中に呼び出して、引数の指定内容によって、IPluginFilterStreamEntityを返す。
すると、IPluginFilterStreamEntityから、Streamを包んでStreamを返すものを呼び出したりする。という感じ。例えば-RemoteProxy netstream:///?GzipCompress=lv1&amp;GzipDeCompressという引数の「GzipCompress」とか「GzipDeCompress」というのが、IPluginFilterStreamEntity CreateFilterStreamEntity(String name, String value, PluginManagePublicObj iObj, ref String errMsg) の「name」に渡されるので、自分の引数であれば、IPluginFilterStreamEntityオブジェクトを返してほしい。ちなみに「value」には「name=GzipCompress」時には「lv1」が、「name=GzipDeCompress」時には「null」が渡される感じ。そしてストリームの生成時に、IPluginFilterStreamEntity#CreateStream(Stream) 
が呼ばれるので、ストリームを包んでくれればよい。実装する必要があるのは以下jp.dip.rocketeer.Plugins.IPluginFilterStreamEntityインターフェイスで定義されているのは、以下のとおり実装する必要があるのは以下jp.dip.rocketeer.Plugins.IPluginFilterStreamインターフェイスで定義されているのは、以下のとおりjp.dip.rocketeer.Plugins.IPluginBaseインターフェイスで定義されている分については、インターフェイス IPluginBase についてを参照jp.dip.rocketeer.Plugins.InOutStream クラスは、既存の圧縮ストリームとか、暗号ストリームが双方向ストリームではないので、双方向化するためにラップされたストリーム。例えば、インプットとして設定された圧縮ストリームに、アウトプット(Write)しようとするとエラーとなるので、そういうのをスルーして上位ストリームへ渡したりしてくれるストリーム。
(StreamRelay.NET.exeは、双方向ストリームを前提としているので)なんとなくのなんちゃってコードだとこんな感じみたいな感じで InOutStreamを生成して、返してほしい。目次というか最初の一歩


