More than 1 year has passed since last update.今回は型について説明します．
型には値型と参照型があり，それぞれ違った特性を持っています．値型はデータを直接保持するものです．変数自身がデータであると考えておいてください．その名の通り整数を扱う型です．整数リテラルを入力すると，自動でint型，uint型，long型，ulong型のうち，その値を格納できる最も範囲の狭い型(大抵の場合はint型)として処理されます．なので，uint型，long型，ulong型であることを特別強調したい時はサフィックスを付けます．コンピュータで実数を扱う際，浮動小数(詳しくは知りませんが小数点を動かしてごにょごにょするみたいです)という考え方で近似的に表すのでfloat型と呼ぶようです．double型は倍精度浮動小数とも言われ，大体倍の精度になるため，double型です．decimal型は，float型，double型よりも扱える値の範囲が狭い代わりに精度が高く，2進小数で正確に表すことができない0.1などを正確に表すことができます．実数リテラルも入力すると自動的にdouble型として扱われるため，float型，decimal型を表す際はサフィックスをつけます．また，上記のような指数表記もできます．真か偽かのみを格納する型．一文字だけ格納できる型です．値型がデータを直接保持するのに対して，参照型はデータが保存されているアドレスを保持します．変数はデータが格納されている領域のアドレスであると考えておいてください．参照型の変数にはnullという何もないことを意味する値を格納できます．文字列を格納できる型です．char型を何個も連ねて文字を表します．全ての型の元になっている型でなんでも格納できます．以下は使用例です．ここで挙げた基本的な型以外にもたくさんの型があるので調べてみてください．次回は演算子について説明します．float型のPIを定義し3.14で初期化したものを画面に出力してください．解答例

サフィックスを付けるのは当然ですが，PI定数にしましたか？円周率がデタラメな値に書き換えられちゃうと困りますからね．細かいですが，こういうところをしっかり書いていくことがバグの少ないコードを書くことに繋がります．


TypeSample.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TypeSample
{
    class Program
    {
        static void Main(string[] args)
        {
            const float PI = 3.14f;
        }
    }
}






