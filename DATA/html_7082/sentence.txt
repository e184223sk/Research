More than 5 years have passed since last update.何かを見てしまった結果、以下のようなコードを書いてしまった。このプログラムは任意の人数でジャンケンをした結果をシミュレーションできる。このコードにはプレーヤーの増減、ならびに必要に応じて特殊な手の形に対応する余地がある。オブジェクト指向プログラミングの大きなメリットは再利用性だとされた時代もあったが、個人的にはどちらかというとプログラムの拡張性を保ちやすいのが有り難く思える。この点については、それこそC言語でもポインタだらけの怪しげな構造体を準備して再現を試みようとするくらいには有益だ。問題は顕在化しない仕様変更への耐性にお金を出してくれるお客様はまずいないこと。そして仕様変更はしばしば想定の斜め上を行くため、これだけのコードを書いても対応できない特殊ルールもありえるという点にある。例えばジャンケン十三奥義のひとつである"科学力"は「高温のはんだごてを相手の手に押し付ける」という技だ。これが発動した場合、参加プレーヤーが一人以上減ることが予期されるが、上記の設計でそれを完全に再現することはできない。それでも避けがたい仕様変更の惨禍に立ち向かうために私たちにすべきことはオブジェクト指向がしっくりくるとか来ないとかの次元の話ではなく、もっと単純かつ誰もが知っている普遍的なものであるように思う。すなわちコードブロックを短く保つこと、そして可能な限り値を不変に保つことだ。手が石にされたりハサミと交換されてしまうことなど、プログラムの値がいつの間にか変わっている恐怖に比べれば些細なものではないか。さあ、君もconst教に入りたまえ。


