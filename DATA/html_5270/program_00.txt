using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Threading.Tasks;

namespace UnitTestProject1
{
    [TestClass()]
    public class AssertTests
    {
        [TestMethod()]
        public void AssertTest()
        {
            Assert.AreEqual(1, 1);
            Assert.AreEqual(1.0, 1.05, 0.1);
            Assert.AreEqual("A", "a", true);
            Assert.AreNotEqual(1, 2);
            Assert.AreNotEqual(1.0, 1.15, 0.1);
            Assert.AreNotEqual("A", "b", true);
            Assert.AreNotSame(new StringBuilder("A").ToString(), new StringBuilder("A").ToString());
            string a1 = "A";
            string a2 = a1;
            Assert.AreSame(a1, a2);
            Assert.IsFalse(false);
            Assert.IsInstanceOfType("A", typeof(string));
            Assert.IsNotInstanceOfType("A", typeof(int));
            Assert.IsNotNull("A");
            Assert.IsNull(null);
            Assert.IsTrue(true);
            var e = Assert.ThrowsException&lt;ArgumentNullException&gt;(() =&gt; throw new ArgumentNullException("AAA"));
            Assert.AreEqual("AAA", e.ParamName);
            var t = Assert.ThrowsExceptionAsync&lt;ArgumentNullException&gt;(() =&gt; Task.Factory.StartNew(() =&gt; throw new ArgumentNullException("AAA")));
            Assert.AreEqual("AAA", t.Result.ParamName);
        }
    }
}

