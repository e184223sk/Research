
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Collections;

namespace UnitTestProject1
{
    class NoCaseStringComparer : IComparer
    {
        public static NoCaseStringComparer Instance { get; } = new NoCaseStringComparer();

        public int Compare(object x, object y)
        {
            if (x == null) return y == null ? 0 : 1;
            if (y == null) return -1;
            return string.Compare((string)x, (string)y, true);
        }
    }

    [TestClass]
    public class CollectionAssertTests
    {
        [TestMethod()]
        public void CollectionAssertTest()
        {
            CollectionAssert.AllItemsAreInstancesOfType(new string[] { "A", "B", }, typeof(string));
            CollectionAssert.AllItemsAreNotNull(new string[] { "A", "B", });
            CollectionAssert.AllItemsAreUnique(new string[] { "A", "B", });
            CollectionAssert.AreEqual(new string[] { "A", "B", }, new string[] { "A", "B", });
            CollectionAssert.AreEqual(new string[] { "A", "B", }, new string[] { "a", "b", }, NoCaseStringComparer.Instance);
            // AreEquivalentは順不同
            CollectionAssert.AreEquivalent(new string[] { "A", "B", }, new string[] { "B", "A", });
            CollectionAssert.AreNotEqual(new string[] { "A", "B", }, new string[] { "A", });
            CollectionAssert.AreNotEqual(new string[] { "A", "B", }, new string[] { "A", "C", });
            CollectionAssert.AreNotEquivalent(new string[] { "A", "B", }, new string[] { "B", });
            CollectionAssert.AreNotEquivalent(new string[] { "A", "B", }, new string[] { "C", "B", });
            CollectionAssert.Contains(new string[] { "A", "B", }, "A");
            CollectionAssert.DoesNotContain(new string[] { "A", "B", }, "C");
            CollectionAssert.IsNotSubsetOf(new string[] { "D", "B", }, new string[] { "A", "B", "C", });
            // IsSubsetOfは順不同
            CollectionAssert.IsSubsetOf(new string[] { "C", "B", }, new string[] { "A", "B", "C", });
        }
    }
}

