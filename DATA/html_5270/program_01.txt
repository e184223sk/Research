
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Threading.Tasks;

namespace UnitTestProject1
{
    public static class AssertExtensions
    {
        public static void IsOfType&lt;T&gt;(this Assert assert, object obj)
        {
            if (typeof(T).Equals(obj.GetType())) return;
            throw new AssertFailedException("AssertExtensions.IsOfType");
        }

        public static void AreEqual(this Assert assert,
            System.Windows.Point expected, System.Windows.Point actual,
            double delta)
        {
            Assert.AreEqual(expected.X, actual.X, delta);
            Assert.AreEqual(expected.Y, actual.Y, delta);
        }

        public static async Task&lt;Exception&gt; ThrowsExceptionAsync&lt;T1, T2&gt;(
            this Assert assert, Func&lt;Task&gt; action)
            where T1 : Exception
            where T2 : Exception
        {
            if (action == null) throw new ArgumentNullException(nameof(action));
            try
            {
                await action();
            }
            catch (Exception ex)
            {
                if (typeof(T1).Equals(ex.GetType())) return ex;
                if (typeof(T2).Equals(ex.GetType())) return ex;
            }
            throw new AssertFailedException("AssertExtensions.ThrowsExceptionAsync");
        }
    }
}

