More than 1 year has passed since last update.決まったディレクトリにあるログファイルの一覧を作って、そこから選んだらログファイルを閲覧できる。
まあ、それだけなら楽ちんなのですが、「特定のキーワードでは色付けしたい」「今見ている行がすぐわかるようにしたい」「キーボードで今見ている行を移動できるようにしたい」
ということを実現しようとしています。
当初は、Windows FormsでRichTextBoxを使うという方法を考えました。特定のキーワードで色付けはすでに実績があります。
簡単に言うと、しかし、「今見ている行がすぐわかるようにしたい」の実現がなかなか難しい。
現在のカレット位置に合わせてPictureを動かすというかなり強引な手法で実装してみたのだけど、どうも位置がうまくあわない。いろいろ悩んだ挙げ句に、Windows Formsを捨ててWPF(Windows Presentation Foundation)でちょっと試してみることにしました。
Windows FormsのRichTextBoxは上記のように読み込んだテキストファイルをRichTextBox.Textに代入して、そこにRtfを編集するか、RichTextBox上で選択-&gt;カラー変更　を繰り返すなんて手法になります。Rtfの編集は早いのですが、かなりハードルは高いです。WPFのRichTextBoxはぜんぜん違います。
簡単に言うと、FlowDocumentというオブジェクトをRichTextBox.Documentに割り付けます。
FlowDocumentオブジェクトの下にBlockオブジェクトを起き、そのBlockオブジェクトの中にさらに下位のオブジェクトを配置するなんていう迂遠なことをやります。なお、それぞれのオブジェクト単位でしか色づけとかはできません。
というわけで、なんて形で書きます。ここで重要なのはPatternに書く正規表現です。例えば、「OK」「完了」という文字を色付けしたければ、
"(OK)|(完了)"と書きます。
こうすると、RegEx.Split()で分割する際に分割パターンも配列に入ります。
後は、RichTextBoxのSelectionChangedイベントをトリガーにして、fd以下のすべてのBlockオブジェクトのBackcolorを変更します。こんな感じですかね。みたいな感じで書けば、カレットが動くたびにその行の色が反転してくれます。


