
// &lt;auto-generated /&gt;
using Example.Library;
using System;

namespace ExampleGenerated
{
    [AttributeUsage (AttributeTargets.Class)]
    internal sealed class PreserveAttribute : Attribute
    {
    }
}

namespace Example.Client.Network
{
    using global::ExampleGenerated;

    [Preserve]
    public class IHogeApiProxy : IHogeApi
    {
        private readonly global::Example.Library.Engine engine;

        public IHogeApiProxy(global::Example.Library.Engine engine)
        {
            this.engine = engine;
        }

        private readonly global::Example.Library.MethodMetadata methodMetadata0 = global::Example.Library.MetadataFactory.CreateMethodMetadata(typeof(IHogeApi), "Add", new Type[] { typeof(int), typeof(int) });

        public int Add(int x,int y)
        {
            return (int)engine.Call(this.methodMetadata0, x, y);
        }

        private readonly global::Example.Library.MethodMetadata methodMetadata1 = global::Example.Library.MetadataFactory.CreateMethodMetadata(typeof(IHogeApi), "Sub", new Type[] { typeof(int), typeof(int) });

        public int Sub(int a,int b)
        {
            return (int)engine.Call(this.methodMetadata1, a, b);
        }
    }
}

