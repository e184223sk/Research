More than 3 years have passed since last update.このようなアーキテクチャでLambdaを運用し始めたのですが、DLQの通知先として選択したメールでしか通知を行っていません。詳細はfreee developers Advent Calendar 2017 21日目『Rubyがマジョリティな会社でC#を使ってAWS Lambdaの本番運用を開始した話』に書きました。次のような課題がありました。エラー回数もあまり多くないので、エラーの発生を直接通知してみることにしました。CloudWatch Logsにログを吐き出しているLambda内に直接通知ロジックを組み込んでしまうのも1つの手だと思います。しかし、通知先や通知手段を変えたくなったり、他でも使いまわしたりできるはずなので通知用のLambdaを準備することにしました。アイディアはつぎの記事からいただきました。AWS Lambda で CloudWatch Logs のログ本文をSlack通知(2)そのため、自社で運用しているLambdaは最終的にこんなアーキテクチャになるイメージです。
※DLQの通知も残します最初のLambdaをC#で書いたので、せっかくなので通知用のLambdaもC#で実装することにしました。出来上がったものはこちらにおいてあります。フォルダ構成等はGitHubのソースコードを参照してください。toshi0607/ErrorNotificationLambdaまずコードです。メトリクスフィルタを設定し、LambdaにストリーミングするとLambdaにはつぎのようなイベントが通知されます。Amazon CloudWatch Logs のイベント例 よりLambda レコードの [Data] 属性は、Base64 でエンコードされており、gzip 形式で圧縮されていますという説明もあります。例 2: AWS Lambda のサブスクリプションフィルタこれをFunctionHandlerで受け取る際はAmazon.Lambda.Serialization.Json.JsonSerializerを使ってデシリアライズされるため、デシリアライズされる結果（クラス）を定義する必要があります。その結果がLogEventです。aws-lambda-dotnetではS3用のイベントクラスやDynamoDB用のイベントクラスが定義されており、今回のように定義する必要はありません。CloudWatch Logsの情報がそれほど複雑でないからでしょうか。
※この記事のあとに出したPRがマージされたため、2017.12.23時点ではCloudWatch Logs用のイベントクラスは存在します。
Amazon.Lambda.CloudWatchLogsEventsFunctionHandlerの最初の数行で環境変数から3つのURLを読み込んでいます。SLACK_WEBHOOK_URLはつぎのページに説明があります。Incoming WebhooksSlackの設定ページから取得できます。通知メッセージ内のリンク用のURLも2つ追加しています。エラーが発生したとき、Lambdaのログを吐き出すロググループのページとメトリクスのページ（時間ごとのLambda呼び出し回数やエラー数が確認できるダッシュボードのページ）も見たくなるかなぁくらいの意味合いです。Slackへの通知は次のようになり、アイコンやユーザ名も上書きできます。先ほども触れたように、Amazon CloudWatch Logs のイベントはエンコードされています。それをデコードするためのメソッドがDecodeです。ます、dataの中身をBase64デコードしてバイト配列にしています。（Convert.FromBase64String(encodedString)）次に、unzipしてJObjectにパースし、必要なメッセージだけを取得しています。json全体は次のようになっています。1つのlogEventsにはそれほど多くのmessageは詰め込まれない（？？？）はずなのでStringBuilderでなく+演算子でdecodedStringを組み立てています。例外処理まったくないのでだいぶ脆いですね。※Amazon.Lambda.CloudWatchLogsEventsが追加されたときにデコード後のデータもCloudWatchLogsEventクラスでプロパティとして持つようになりました。.NETでLambda開発を行う場合、ローカルで動作確認を行うときはテストを利用すると便利です。AWS Toolkit for Visual StudioをインストールしたじょうたいでLambdaプロジェクトを作成するとき、テスト付きのテンプレートを選択することができます。コードはこんな感じです。本番実行する際、環境変数はポータルで設定したものか、Visual Studioから発行するときに設定するものを使用できます。ローカルではテストケース実行前にxUnitのClass Fixturesを利用して環境変数を設定しています。Shared Context between TestsDisposeはサボってます…これ（本番デプロイした本体の方）をCloudWatch Logsメトリックフィルタの接続先に設定するとSlackで通知を受け取ることができます。先ほどこんなことを書きました。aws-lambda-dotnetではS3用のイベントクラスやDynamoDB用のイベントクラスが定義されており、今回のように定義する必要はありません。というわけで、CloudWatch Logs用のクラスを追加してみましょう。Lambdaは次のイベントソースからのイベントで呼び出すことができ、イベントのサンプルも見ることができます。サポートされているイベントソースイベントソースによって公開されたサンプルイベントこれらの中でjsonをaws-lambda-dotnetの定義するクラスにデシリアライズできるものは限られています。2017.12.17時点でこれだけです。aws-lambda-dotnet/Libraries/src/これらのクラスはどんなことをしてくれているのでしょうか？たとえば、AWS Configイベントの対応関係はつぎのようになっています。つまり、Json.NETでデシリアライズするためのクラスを定義しているだけです。aws-lambda-dotnet/Libraries/src/Amazon.Lambda.ConfigEvents/一番単純なプロジェクトはクラス定義 + README.md + テストです。というわけで真似してPRを出してみました。add cloudwatch logs event #188ちょっとよくわからない部分もあったのでどうなるかわかりませんが、本番で便利に使えるよう粘ります。※2017.12.23にマージされました🎉Echo招待来ないです。Google Home miniが届きました。そういうわけで、SlackだけでなくGoogle Home miniでも通知してみましょう。特に詳細に説明することはないのですが、Google Homeに喋らせるには現状noelportugal/google-home-notifierを利用するのが便利そうです。Googleアシスタント用のIFTTTもいくつかありますが、Google Homeにしゃべらすことはできません。そこでgoogle-home-notifierをサーバで立ち上げ、それを経由してGoogle Homeで通知してもらいます。とりあえずこの記事が最高です。Google Home開発入門 / google-home-notifier解説設定はこの記事が詳しいです。https://qiita.com/azipinsyan/items/db4606aaa51426ac8dac本家のexample.jsのままでは日本語を喋ってくれないことに注意してください。ややこしい部分はPR出してみました。to enable language settings #31Lambdaにはこんなコードを追加すればOKです。動作確認してみましょう。Qiita用/ CloudWatch Logに特定のエラーが吐かれたことをGoogle Homeに喋らせる https://t.co/wdRJno14IwGoogle Homeは完全な出来心ですが、使いながら改善していこうと思います。


