
using System;
using System.Runtime.InteropServices;
using System.Windows;

namespace SampleApp2
{
    /// &lt;summary&gt;
    /// MainWindow.xaml の相互作用ロジック
    /// &lt;/summary&gt;
    public partial class MainWindow : Window
    {
        /// &lt;summary&gt;
        /// メニューのハンドル取得
        /// &lt;/summary&gt;
        /// &lt;param name="hWnd"&gt;&lt;/param&gt;
        /// &lt;param name="bRevert"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        [DllImport("user32.dll")]
        private static extern IntPtr GetSystemMenu(IntPtr hWnd, bool bRevert);

        /// &lt;summary&gt;
        /// メニュー項目の削除
        /// &lt;/summary&gt;
        /// &lt;param name="hMenu"&gt;&lt;/param&gt;
        /// &lt;param name="uPosition"&gt;&lt;/param&gt;
        /// &lt;param name="uFlags"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        [DllImport("user32.dll")]
        private static extern bool RemoveMenu(IntPtr hMenu, uint uPosition, uint uFlags);

        /// &lt;summary&gt;
        /// ウィンドウを閉じる
        /// &lt;/summary&gt;
        private const int SC_CLOSE = 0xf060;

        /// &lt;summary&gt;
        /// uPositionに設定するのは項目のID
        /// &lt;/summary&gt;
        private const int MF_BYCOMMAND = 0x0000;

        public MainWindow()
        {
            InitializeComponent();
        }

        /// &lt;summary&gt;
        /// 初期化時
        /// &lt;/summary&gt;
        /// &lt;param name="sender"&gt;&lt;/param&gt;
        /// &lt;param name="e"&gt;&lt;/param&gt;
        private void Window_SourceInitialized(object sender, EventArgs e)
        {
            IntPtr hwnd = new System.Windows.Interop.WindowInteropHelper((Window)sender).Handle;
            IntPtr hMenu = GetSystemMenu(hwnd, false);
            RemoveMenu(hMenu, SC_CLOSE, MF_BYCOMMAND);
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            Close();
        }
    }
}

