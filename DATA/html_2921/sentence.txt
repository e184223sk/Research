More than 1 year has passed since last update.ユニバーサルWindowsプラットフォームアプリケーション（UWP）という仕組みを、
前々から触ってみたいと思っていまして。
たまたまXamarinに関わるきっかけがあったので、触りがてら遊んでみました備忘録です。VisualStudio Installerを使用して、[.NETによるモバイル開発]のインストールを行っておきます。
VisualStudioを起動し、[テンプレートの検索(Alt+S)]欄に「xamarin」と入力します。
[モバイルアプリ（Xamarin.Forms）]を選択します。
適当なプロジェクト名を設定します。今回は「xamarin_sample」を設定しました。
VisualStudioによりxamarin_sampleプロジェクトの初期化が行われます。
完成後のイメージは以下の通り。
初期状態でF5キーを押して実行すると、初期画面が起動しました。
マテリアルデザインちっくな、クロスプラットフォーム向けのデザインですね～。Macのアプリみたい。
適当なコードにブレークポイントを貼ってやれば、難なくデバッグも可能です。さすがVS！
デフォルトのままだとなんとなく個性がない‥。没個性社会のたまもの‥。
というところで、アプリケーション全体のテーマを変更したいと思います。XAMLを読んでいると、背景色が事前に定義されたリソースとバインドされているようです。
これは、テーマを変更すると一括でアプリケーションのデザインが変えられるのでは？
テーマの設定個所を探すと、ありました。
以下の通りXAMLを書き換え、テーマを変更します。実行すると、テーマカラーがDarkテーマに変更になっている！ イカしますね～。
ところで、XAMLを使用しているということは、MVVMモデル(ModelViewViewModel)で構築されているのでは？
ViewModelClassを探したところ、設定されているページがありました。
さっそくMVVMモデルを使用して画面上のコンテンツを変更してみます。以下の[About]タブのアプリケーション名称を変更したいと思います。
[AboutPage]にバインドされている[AboutViewModel]の継承元である[BaseViewModel]に、AppNameプロパティを追加します。
最終的にはこのプロパティを画面上にバインドするイメージですね。続いて、[AboutPage]にバインドされている[AboutViewModel]のコンストラクタに、
AppNameプロパティの値を設定する記述を追加します。AboutPageViewModelのAppNameプロパティをアプリケーション名称にバインドするよう、XAMLを書き換えます。すると、[About]欄のアプリケーション名称が設定した値で表示されるようになりました！
今回は[About]ページでボタンをクリックしたときにアプリケーション名を変更するよう、コードを書き換えます。
ふつうあり得ないですけどね、アバウトページの情報がボタンクリックするたびに書き換わったらいやじゃないですか。ワイはいやです。
でも今回はその仕様で組んでみます。MVVMモデルの場合、画面上のオブジェクトを直接書き換えるのではなく、バインドされているViewModelを書き換えるお作法です。
お作法に乗っ取り、AboutPageにバインドされているViewModelを取得・値を書き換えるようにコードを編集します。すると、ボタンをクリックした時、ViewModelに設定された値を書き換えることで、バインドされている画面上のラベルも書き換わるクソプログラムが完成しました！ 
(GIF画像)
今回は簡単にですが、Xamarinのテンプレートプロジェクトを触ってみました。最近は.NET Coreの対応やSQLServer on Linuxなど、Microsoftからクロスプラットフォーム向けのしくみが続々提供されていますね。
WPFの経験がある方であれば、UWPもかなり触りやすいのではないかな、と思います。引き続きなにか一本プログラムを組んでみたいと思いますので、落ち着き次第報告させていただきます！


