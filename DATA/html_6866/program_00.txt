    public class WPFControlUtility
    {

        /// &lt;summary&gt;
        /// Visaul要素を出力
        /// &lt;/summary&gt;
        /// &lt;param name="tgt"&gt;&lt;/param&gt;
        public static void ShowVisualControls(DependencyObject tgt)
        {
            ShowVisualControl(tgt);
        }

        private static void ShowVisualControl(DependencyObject tgt, int position = 0)
        {
            for (int i = 0; i &lt; VisualTreeHelper.GetChildrenCount(tgt); i++)
            {
                DependencyObject childObj = VisualTreeHelper.GetChild(tgt, i);
                // ログ出力
                ShowLog(childObj, position);

                if (VisualTreeHelper.GetChildrenCount(childObj) &gt; 0)
                {
                    int nextPosition = position + 1;
                    ShowVisualControl(childObj, nextPosition);
                }
            }
        }

        /// &lt;summary&gt;
        /// Logical要素を出力
        /// &lt;/summary&gt;
        /// &lt;param name="tgt"&gt;&lt;/param&gt;
        public static void ShowLogicalControls(DependencyObject tgt)
        {
            ShowLogicalControl(tgt);
        }

        private static void ShowLogicalControl(DependencyObject tgt,int position = 0)
        {
            if (tgt == null) return;

            ShowLog(tgt, position);
            foreach(var ctl in LogicalTreeHelper.GetChildren(tgt))
            {
                if(ctl is DependencyObject)
                {
                    int nextPosition = position + 1;
                    ShowLogicalControl((DependencyObject)ctl, nextPosition);
                }
            }

        }


        /// &lt;summary&gt;
        /// コントロールの情報を出力
        /// &lt;/summary&gt;
        /// &lt;param name="tgt"&gt;&lt;/param&gt;
        /// &lt;param name="position"&gt;&lt;/param&gt;
        private static void ShowLog(DependencyObject tgt, int position = 0)
        {
            string tab = null;
            string baseInfo = tgt.ToString();

            for (int i = 0; i &lt; position; i ++)
            {
                tab += "\t";
            }

            // 下記情報を出力
            // 基本情報 : コンテンツ
            Debug.WriteLine(tab + baseInfo);
        }
    }

