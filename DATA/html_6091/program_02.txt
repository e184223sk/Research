
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CollectionSpike
{

    class NewInt
    {
        public int Value { get; private set; }
        public NewInt(int value)
        {
            Value = value;
        }
    }
    class OldInt
    {
        public int Value { get; private set; }
        public OldInt(int value)
        {
            Value = value;
        }
    }
    class ArraySpike
    {
        public void Exec()
        {
            OldInt[][] jaggedArray =
            {
                new OldInt[] {new OldInt(1), new OldInt(2), new OldInt(3), new OldInt(4)},
                new OldInt[] {new OldInt(5), new OldInt(6), new OldInt(7)},
                new OldInt[] {new OldInt(8)},
                new OldInt[] {new OldInt(9)}
            };

            NewInt[,] multiDimArray =
            {
                {new NewInt(1), new NewInt(2), new NewInt(3), new NewInt(4)},
                {new NewInt(5), new NewInt(6), new NewInt(7), new NewInt(0)},
                {new NewInt(8), new NewInt(0), new NewInt(0), new NewInt(0)},
                {new NewInt(9), new NewInt(0), new NewInt(0), new NewInt(0)}
            };

            var sw = new System.Diagnostics.Stopwatch();

            var times = 10000000;

            sw.Start();
            for (int i = 0; i &lt; times; i++)
            {
                foreach (var items in jaggedArray)
                {

                    foreach (var item in items)
                    {
                        if (item.Value == 8)
                        {

                        }
                    }
                }
            }
            sw.Stop();
           Console.WriteLine($"jagged.foreach.foreach: {sw.Elapsed}");

            sw.Restart();
            for (int i = 0; i &lt; times; i++)
            {
                jaggedArray.SelectMany(x =&gt; x).Select(x =&gt; x.Value % 2 == 0);
            }
            sw.Stop();
            Console.WriteLine($"jagged.SelectMany.Select: {sw.Elapsed}");

            sw.Restart();
            for (int i = 0; i &lt; times; i++)
            {
                foreach (var item in multiDimArray)
                {
                    if (item.Value == 8)
                    {

                    }
                }
            }

            sw.Stop();
            Console.WriteLine($"multiDim foreach: {sw.Elapsed}");

            Console.WriteLine($"jagged: {jaggedArray} multi: {multiDimArray}");
        }
    }
}


