More than 1 year has passed since last update.Qiitaに投稿した記事のリンクを楽にWordPressに送りたい #2
Qiitaに投稿した記事のリンクを楽にWordPressに送りたい #3
Qiitaに投稿した記事のリンクを楽にWordPressに送りたい #4WordPressのHPにQiitaに投稿した記事のリンクを公開しているのですが、その方法がQiitaリンクをWordPressに手動で張り付けるというものであり、これが結構手間で、自動化できないかと思い、自作することにしました。RPAで実現すればいいのかな・・・？欲を言えば、Qiitaに投稿した瞬間に自動で連携してくれればベストですが、記事を投稿した時のイベントをフック(検知)する必要があります。
→QiitaにはWebhookというものがありました。
これは、記事投稿時等に指定されたURLへ作成した記事の情報をPOST送信する機能です。その他には定期的にQiitaの記事を監視して同期するサービスでもいいですね・・・やりたいこと実現するにはいきなりベストの構築をやろうとするとなんかめんどくさいので、段階的に作っていって、動作や使用間を確認しながら、完成にもっていくようにしようと思います。以下手順に沿って進めていきたい。プロセスまずは1. Qiitaから記事を読み取って、WordPressに記事をインポートするアプリケーションを作る(c# コンソールアプリ)からやっていきたいと思います。IDE：VisualStudio2019
アプリケーション：コンソールアプリ
フレームワーク：.NET Core 3.1Qiita記事一覧取得
↓
WordPress記事一覧取得
↓
二つの一覧を比較して、記事追加／更新Qiita API v2 の概要(非公式)を参考にさせていただいて、指定ユーザの投稿記事一覧取得APIの/api/v2/users/:user_id/itemsを使用したいと思います。GETのリクエストにはHttpClientを使用しようと思います。基底クラス
HttpClientを使いまわすため、基底クラスを用意します。Qiitaの記事一覧取得WordPressの記事取得
公式のリファレンスを参考にしました。
WordPress API 投稿の「Post一覧」の部分です。
※取得処理はGetArticleListだけ参照してください。上記2つのサービスクラスを操作するクラスメインクラスQiita、WordPressの両方共取得処理は正常動作しました。
公開されているデータなので認証等も必要ありません。追加、更新処理については認証が必要であり、クッキー認証／OAuth認証／アプリケーションパスワード認証を利用する必要があるようです。
今回はアプリケーションパスワード認証を用います。
まずWordPress側で設定をする必要があるようです。WordPress 認証
現状私のほうでその設定をする権限がないため(ある方のWordPressの環境を使わせてもらっており、その方が管理者のため・・・)
今回はここまでとします。次回は、設定を有効後、記事追加と更新をやっていきます。


