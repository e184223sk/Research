ブロックチェーンやスマートコントラクトの勉強を始めようと思い立ちましたが、
EthereumだとSolidityだったり新たな言語を勉強する必要があり、すぐには手が出せないなと
思っていたところ、IOSTはスマートコントラクトをJavaScriptで記述できるということで、
ここを切り口にブロックチェーンやスマートコントラクトの勉強を始めてみました。色々とネット上の情報を物色していたところ、スマートコントラクトではないですが、
偶然.NET用のクライアントSDKを見つけたので使ってみたという記事です。このSDKはブロックチェーンへアクセスするクライアント側の処理をライブラリ化したものかと思います。
チェーンの情報を参照できたり、スマートコントラクトを呼び出したりトランザクションを発生させたりできそうなので、このSDKを使えば.NETアプリでのIOSTウォレットとか作れそうです。※このSDKではスマートコントラクトは作れないです。必要なもの
.NET Framework4.7.2
Visual Studio 2019SDKのダウンロード
以下のURLからSDKをダウンロードできます。
※zipファイルとなっていて、解凍するといくつかアセンブリが格納されています。
これらのアセンブリをVisualStudioのプロジェクトで参照を追加して使っていきます。アカウント名を入力してボタンをクリックすると、テキストボックスにIOSTの保有量が表示されるシンプルなアプリケーションを作ってみます。
今回は一番使い慣れているC#のWindowsFormアプリケーションで・・・SDKには.NET CORE(UWP)用と.NET Framework4.7.2用がありますが、今回は.NET Framework用を使用。参照を追加したのはIOST.dllのみ今回使用するのは、IOSTクラスとClientクラス(名前空間：IOST)、
TokenBalanceクラス(名前空間：IOST.model.account)IOSTクラスでは、スマートコントラクト呼び出し時のgaslimit等を管理しているようです。
今回はスマートコントラクトは呼び出さないので引数なし(SDKで設定されているデフォルト値)でnewしています。
Clientクラスは、クライアントから行われる操作がまとまっているクラスでコンストラクタの引数で
接続するIOSTノードのURLを指定します。ClientクラスのGetBalanceメソッドを使用してトークンの保有量を取得します。
引数は、アカウント名、トークン名、取得の方法(true:最長のブロックから取得、false:不可逆ブロックから取得)の３つです。
戻り値はTokenBalance型で戻るのでbalanceプロパティから保有量を取得します。このSDKに関するドキュメントがほとんどないので手探りでやってみましたが
他にも色々できそうな雰囲気があります。ライブラリ化されているので.NETアプリにIOSTチェーンへの
クライアント機能を組み込む際に使えるかもしれません。


