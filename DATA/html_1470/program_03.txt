
using Microsoft.CodeAnalysis.CSharp.Syntax; // 追加

// (snip)

static void Main(string[] args) {
    // 続き
    foreach (var m in root.Members) {
        System.Console.WriteLine($"\tThe member in root is {m.Kind()}.");

        var ns = (NamespaceDeclarationSyntax)m; // Microsoft.CodeAnalysis.CSharp.Syntax

        System.Console.WriteLine($"\tThere are {ns.Members.Count} members declared in this namespace.");

        foreach (var t in ns.Members) {
            System.Console.WriteLine($"\t\tThe member in this namespace is {t.Kind()}.");

            if (t is InterfaceDeclarationSyntax) {
                var intf = (InterfaceDeclarationSyntax)t;
                System.Console.WriteLine($"\t\tThis type is {intf.Identifier} interface.");
                System.Console.WriteLine($"\t\tThis type has {intf.Members.Count} members.");

                foreach (var mm in intf.Members) {
                    System.Console.WriteLine($"\t\t\tThe member in this type is {mm.Kind()}.");

                    if (mm is MethodDeclarationSyntax) {
                        var method = (MethodDeclarationSyntax)mm;
                        System.Console.WriteLine($"\t\t\tThis method name is {method.Identifier}.");
                        System.Console.WriteLine($"\t\t\tThis method has {method.Modifiers.Count} modifiers.");
                        System.Console.WriteLine($"\t\t\tThis method returns {method.ReturnType}.");
                        System.Console.WriteLine($"\t\t\t\tThe return type nullable in method is {method.ReturnType.IsNotNull}.");
                        System.Console.WriteLine($"\t\t\tThis method receives {method.ParameterList.Parameters.Count} args.");

                        foreach (ParameterSyntax arg in method.ParameterList.Parameters) {
                            System.Console.WriteLine($"\t\t\t\tThe arg in this method is {arg.Kind()}.");
                            System.Console.WriteLine($"\t\t\t\tThe arg name is {arg.Identifier}.");
                            System.Console.WriteLine($"\t\t\t\tThe arg type is {arg.Type}.");
                            System.Console.WriteLine($"\t\t\t\t\tThe arg nullable is {arg.Type.IsNotNull}.");                                
                        }
                    }
                    else {
                        System.Console.WriteLine($"\t\t???? This member syntax is {t.GetType().FullName}.");
                    }
                }
            }
            else {
                System.Console.WriteLine($"\t\t???? This type syntax is {t.GetType().FullName}.");
            }
        }
    }
}

