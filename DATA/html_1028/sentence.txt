More than 1 year has passed since last update.@otchy さんの Node でお手軽スクレイピング 2020 年夏 を見て自分も C# でやってみようと思いました。C#でモダンにスクレイピングするならAngleSharp で紹介されている AngleSharp を使ってみようと思います。node.js とかのお手軽なところとして CLI でサクッと作れてファイルにおもむろに console.log('xxx'); のように書き始められるところがあると思います。
C# 9.0 (現時点ではまだプレビュー) でも トップ レベル ステートメント という機能が追加されて、同じ要領で書けるようになります。素敵。.NET 5 のプレビュー SDK を入れます。VSCode の C# の拡張機能も入れておきましょう。私が試した .NET の SDK のバージョンは以下の通りです。では、コンソール アプリのプロジェクトを作って HTML パーサーのパッケージを追加します。どうせ、ちょっと未来を体験するつもりなので最新のプレビュー版を入れることにしました。コマンドとしては以下のようになります。拡張子が csproj のファイルを開いて言語のバージョンをプレビューにしておきます。最新の VS2019 プレビューだとデフォルトが C# 9.0 になってるっぽいけど、この定義を追加しないで CLI からビルドするとエラーになった。何が違うんだろう…。コードは、以下のような感じになります。Main メソッドと、それを囲むクラスや名前空間とかの定義がまるっといらなくなって凄くすっきりしますね。実行してみましょう。dotnet run で実行できます。因みに exe にしたかったら dotnet publish コマンドで出来ます。本番用なら -c Release にすることでリリース モードでのビルドです。プロジェクトの bin\Release\net5.0\publish フォルダーに、こんな感じの成果物が出来上がります。ここではやりませんが、やろうと思えばランタイム不要な単一 exe にもビルド出来ます。では、exe も実行してみましょう。当然ですがちゃんと動きました。.NET Core 2.1 以降は .NET Core ツールという仕組みもあって、これを使うと npm install でインストールできるツールのようなのと同じ感覚でインストール可能なツールを作ることが出来ます。.NET Core ツールの管理方法Visual Studio 2019 Preview 版を入れると CLI でやってたことが GUI でもぽちぽちできます。Visual Studio Code でもコードを書けますが追加するパッケージを GUI で確認したり、コード補完が Code よりも強力な部分があったりと、まだ VS Code より多少重くても（個人の感覚）C# を書く場合には VS 2019 のほうを使ってしまいます。C# でもスクレイピングをさくっと出来たのと C# 9.0 のトップ レベル ステートメントは、単純にコードが短くなって素敵なので正式リリースが待ち遠しいです。


