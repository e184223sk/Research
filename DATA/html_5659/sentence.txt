前回、マウスロガーを作成しましたが、マウス位置情報のダミーを Windows 側に送ることで、スクリーンセーバーを無効化できることがわかりました。（マウスのダミー位置情報を提供するだけで、実際のマウス操作には影響ありませんでした。）そこで、今回はスクリーンセーバを C# アプリで無効化するアプリのプロトタイプを作成しました。なお、本アプリは WindowsFormsApp で作成しました。参考 1：ノートパソコンの画面の明るさをボタン一つで変更する【C#】
参考 2：ノートパソコンの画面の音量をボタン一つで変更する【C#】
参考 3：ノートパソコンの画面のバッテリー状況をボタン一つで取得する【C#】
参考 4：ノートパソコンの画面の通信料状況をボタン一つで取得する【C#】
参考 5：ノートパソコンで現在使用中のアプリをボタン一つで把握する【C#】
参考 6: ノートパソコンで現在使用中のオーディオ機器情報をボタン一つで取得する【C#】
参考 7：パソコンのユーザー情報取得やアプリ起動・終了、ディスプレイ画面の切替などを、ボタンを作って動かす【C#】参考 1：パソコンに接続しているディスプレイ情報をボタン一つで取得する【C#】
参考 2：パソコンに入力されたキーを表示する【C#】
参考 3：パソコンに入力されたマウスの位置を表示する【C#】今回の UI は非常にシンプルで、無くても良いぐらいでした。ただ、UI をなくしてしまうとアプリが起動中か個人的に分からなくなってしまうので、非常に小さい UI を作成しました。なお、このアプリが起動中は、特にマウス操作・キーボード動作をしなくてもスクリーンセーバーは起動しなくなります。個人的にデスクトップアプリ側で、スクリーンセーバーの制御（主にスクリーンセーバーを表示させなくすること）ができればいいなと思っていたのですが、このようにマウスのダミー位置情報を与えれ上げればスクリーンセーバを表示させなくすることができると知れたので、大きな収穫でした。


