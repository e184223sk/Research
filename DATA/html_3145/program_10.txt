
    public class ShapeDetectService
    {
        private Dictionary&lt;ShapeType, IShapeResolver&gt; _resolvers;

        public ShapeDetectService()
        {
            _resolvers = new Dictionary&lt;ShapeType, IShapeResolver&gt;{
                {ShapeType.BOX, new BoxShapeResolver()},
                {ShapeType.STAR, new StarShapeResolver()},
                {ShapeType.RIBBON, new RibbonShapeResolver()},
                {ShapeType.CROSS, new CrossShapeResolver()},
                {ShapeType.CIRCLE, new CircleShapeResolver()}
            };
        }

        public bool Check(ShapePointList pointList, Action&lt;ShapeType, IShapeResolver, ResolveShapeInfo&gt; callback)
        {
            ResolveShapeInfo shape = null;
            foreach (var shapeResolver in _resolvers)
            {
                shape = shapeResolver.Value.Check(pointList);
                if (shape != null)
                {
                    callback?.Invoke(shapeResolver.Key,shapeResolver.Value,shape);
                    return true;
                }
            }
            return false;
        }
    }

