More than 3 years have passed since last update.この投稿は以下の構成となっております完成！！！！え？API側は？って人はリファレンスを見よう！日本語だしどちゃくそ丁寧！
僕がBot作ったときはC#、ASPで作った！
別にリクエストが受け取れるなら何でもいい！！！！リクエストは こんな感じ
通知は全部一つのAPIにでかいリクエストが送られてきて、その中のtypeを見て何のイベントか判断します
テキストが送られてきた時も、画像を送るときも、友達追加したときも、ブロックしたときもAPIは全部一つ！
ただ、eventオブジェクト配下のtypeが違ってて、リクエスト内でそのtypeで処理を分岐させます  画像や動画のバイナリデータはここから取る
イベントタイプがmessageの時でさらにmessageオブジェクト配下のtypeがimageやvideoだった時にContentに対してAPIを投げるとバイナリデータが取れます  リプライを返す時はここ！
一度に返せるリプライは最大5つまで（爆撃はできないのね・・・やろうと思ったらPush通知のほうが必要かな？）プッシュ通知はここ
だけどお金がかかる！
プッシュ通知がしたかったら有料！
でも逆にプッシュ通知しないなら無料で作れる！！！！マジか～～～～～～～
僕がLINE Botで作ったのはLINEから受け取った画像からAzureのCognitiveServiceを使って顔情報を取得、そのまま画像を加工してリプライを返す・・・というものだった
ユーザから通知を受けとった際に、イベント種別より画像、動画、音声等々のバイナリデータをContentから取得します
で、CognitiveSerciceに渡すのもバイナリデータ、BitmapとかGraphicsで画像を加工するのもバイナリデータ・・・
なのにリプライを返す時にはバイナリじゃなくURL！
いったんどこかに保存しないといけないし、それが外部から見える位置にないといけない・・・
まぁ画像が返ってくるAPI作っておけば画像自体は見えなくてもいいんだけど
仕方ないのかなぁ・・・マジか～～～～～～～～～～～～～～
これ何かっていうとConfirmやCarousel等をリプライで返すとユーザにボタンを押してもらえるテンプレートが通知できます
このボタンを押したときにpostbackでデータを受け取れるんだけど、ボタンを押したときにユーザに発現させるテキストについても
APIが動いちゃって2つリクエストを受け取ることになる・・・
だからテキストで反応するBotを作るときは要注意まじか～～～～～～～～～～～～～～！！！！！！！！！
まぁCurlコマンドで確認すれば済む話なんですけどね・・・
LINEからWebhookでAPI飛ばしてもらおうと思うと
* 外部サーバから見えるAPIである必要がある
* HTTPSである必要がある
っていう・・・
Curlも一回作っちゃえばいいんだけど・・・
僕はAzureにWebApp乗っけて確認してました
発行から選んでポチーでAPIが公開できるからかーんたん♪
でもおかげで使用料1万～2万円くらいが簡単に飛んできました・・・作りました
https://github.com/ShassBeleth/LineBotTemplate
MasterブランチPullしてくださいVisual Studio 2017
C# 7.0これでとりあえず動くはず
で、あとはもっかいControllerのTODOで検索すると〇〇の時はここに実装　ってのがあるからサンプル見ながら好きなように実装する！これねで、URLとマッピングしてるPostメソッドは基本的に触らない
リクエストの内容毎に分岐してるから
分岐した先にあるメソッドではそのイベントで使えるパラメータだけが引数として渡されてる例えばこれは友達登録とかしたときに飛んでくる追加イベント
ここでリクエストパラメータとして使いたいのはリプライを飛ばすためのリプライトークンreplyTokenとどこに追加されたかのイベント送信元種別sourcetypeとイベント送信元IDsourceId
こういうのを制限してLINE Botつくろーって時に来もしないパラメータ見る必要を極力少なくしてみましたリプライを飛ばすときはReplyMessageServiceを使うこんな感じにServiceクラスをnewして、それに送るリプライ分Addメソッドつないで、最後にSendメソッドを呼ぶ
こんだけ！一通りAPIを網羅してテンプレートとして使えるものにしたいね
入力チェックとかもしてないし
後、リプライ送るときにAddせずにSendメソッドが呼べないようにしたい
他にはー・・・カラムを追加するときとかルール無視でModelの配列渡したりとかできるからできないようにしたいね
改良はまだまだこれから
またLINE Bot触りたくなったら続きやるQiita初投稿でつたない文章だと思いますが、最後までご覧いただきありがとうございました
LINE Bot作るのすごい簡単だったのでみんなも是非作ってみてほしい！


