
abstract class AHumanFactory
{
    public abstract Human Create(string name);
} 
class HumanFactory : AHumanFactory
{
    private Dictionary&lt;string, Type&gt; humans = new Dictionary&lt;string, Type&gt;()
    {
        {"Takeshi", typeof(Takeshi)},
        {"Kasumi", typeof(Kasumi)},
        {"Satoshi", typeof(Satoshi)},
    };
    public override Human Create(string name)
    {
        Type type = null;
        if (humans.TryGetValue(name, out type)) 
            return (Human)Activator.CreateInstance(type);
        return null;
    }
}

abstract class AFoodHeaterFactory { } // 割愛
abstract class AFoodFactory { } // 割愛

