using System;
using System.Collections.Generic;
using System.Linq;

    public static class IoUtil
    {
        /// &lt;summary&gt;
        /// キーワードが出てきたら次のキーワードが出てくるまでのシーケンスを返す
        /// &lt;/summary&gt;
        /// &lt;param name="fileText"&gt;入力ソース&lt;/param&gt;
        /// &lt;param name="keyword"&gt;キーワード&lt;/param&gt;
        /// &lt;returns&gt;キーワードの行を除いたシーケンス&lt;/returns&gt;
        public static IEnumerable&lt;IEnumerable&lt;string&gt;&gt; RepeatSkipToKeyword(this IEnumerable&lt;string&gt; fileText, string keyword)
        {
            // データがなければ終了
            if (!fileText.Any())
            {
                yield break;
            }

            while (fileText.Any())
            {
                var text = fileText.SkipWhile(x =&gt; !x.Contains(keyword)).Skip(1);
                var targetText = text.TakeWhile(x =&gt; !x.Contains(keyword));
                yield return targetText;
                fileText = text.SkipWhile(x =&gt; !x.Contains(keyword));
            }
        }
    }


