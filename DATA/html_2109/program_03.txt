
public class AccountServiceBuilder {
    private readonly AccountService _accountService;
    private readonly Mock&lt;IAccountRepository&gt; _mockAccountRepo;

    public Mock&lt;Account&gt; MockAccount {
        get;
        private set;
    }

    public AccountServiceBuilder() {
        _mockAccountRepo = new Mock&lt;IAccountRepository&gt;();
        _accountService = new AccountService(_mockAccountRepo.Object);
    }

    public AccountServiceBuilder WithAccountCalled(string accountName) {
        MockAccount = new Mock&lt;Account&gt;();
        _mockAccountRepo.Setup(r =&gt; r.GetByName("Trading Account"))
                        .Returns(MockAccount.Object);

        return this;
    }

    public AccountServiceBuilder AddTransactionOfValue(decimal transactionValue) {
        MockAccount.Setup(a =&gt; a.AddTransaction(200m)).Verifiable();
        return this;
    }

    public AccountService Build() {
        return _accountService;
    }
}

