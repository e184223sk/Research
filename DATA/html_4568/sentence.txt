More than 1 year has passed since last update.ユニットテストとは、プログラム（小規模、関数とか）が正しく動くかをチェックするものです。
これまでユニットテストは勝手に敬遠していましたが、全然難しくありませんでした（多分）。
私自身テストを始めたばかりですが、テストのおかげですぐに原因特定が出来たバグもありました。
深く考えず、すぐに使えるやつで始めてみましょう!環境：
Version:Unity 2017.4of1
（2018.1以降は方法が少し変わっているみたいです。
参考:Unity 2018.1でTest Runnerの使い方が変わっていた話）
Create/Testing/EditMode Test C# Scriptから作成します。
この時、Editorフォルダに作られますが、勝手に動かすとUnityが認識してくれなくなるのでそっとしておきましょう。(Assets直下でなくてもフォルダの名前がEditorならScripts/Editorとかでも良い)今回は、以下のLineByNumberクラスのテストを作成します。デフォルトで作られるファイルが以下になります。[Test]はUnityが無くても意味があるメソッドに付けます。
[UnityTest]は使ったことがないので分かりません。これをこう書き換えます。メソッド名はUnity側からテスト実行時に見えるので、失敗した時のためにも分かりやすい名前を付けた方が良いんじゃないでしょうか。
テスト用のメソッドはpublic void を付けます。
テストには、Assertメソッドを使います。
Assert.That(値, 条件)という書式が推奨されているようなのでこれで統一していきます。
条件の部分にはたくさんメソッドが用意されているので最適なものを探してみてください。
参考:NUnitのAssert.ThatメソッドにIsとかHasとかを入れて柔軟なテストコードを書こうWindow/Test Runnerを開きます。

下のようなウィンドウが開くのでRunAllを選択しましょう。

成功しました!
単体テストはプログラマの相棒といわれる事もあるそうなので、敬遠せずに積極的に使えるようになりたいですね。


