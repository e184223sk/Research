

    [TestClass]
    public class EnumUtilsTest
    {
        /// &lt;summary&gt;プログレのキーボード&lt;/summary&gt;
        [Flags]
        private enum ProgKeyboards
        {
            None = 0b000,
            Mellotron = 0b001,
            MiniMoog = 0b010,
            HammondOrgan = 0b100,
        }

        /// &lt;summary&gt;ParseToEnumFlags正常系Test&lt;/summary&gt;
        [TestMethod]
        public void ParseToEnumFlags正常系Test()
        {
            "000".ParseToEnumFlags&lt;ProgKeyboards&gt;().Is(ProgKeyboards.None);
            "001".ParseToEnumFlags&lt;ProgKeyboards&gt;().Is(ProgKeyboards.Mellotron);
            "010".ParseToEnumFlags&lt;ProgKeyboards&gt;().Is(ProgKeyboards.MiniMoog);
            "100".ParseToEnumFlags&lt;ProgKeyboards&gt;().Is(ProgKeyboards.HammondOrgan);

            "011".ParseToEnumFlags&lt;ProgKeyboards&gt;()
                .Is(ProgKeyboards.Mellotron | ProgKeyboards.MiniMoog);
            "111".ParseToEnumFlags&lt;ProgKeyboards&gt;()
                .Is(ProgKeyboards.Mellotron | ProgKeyboards.MiniMoog | ProgKeyboards.HammondOrgan);
        }


        /// &lt;summary&gt;ParseToEnumFlags正常系Test&lt;/summary&gt;
        [TestMethod]
        public void ParseToEnumFlags異常系Test()
        {
            "020".ParseToEnumFlags(ProgKeyboards.None).Is(ProgKeyboards.None);
            "aaa".ParseToEnumFlags(ProgKeyboards.None).Is(ProgKeyboards.None);
        }

        /// &lt;summary&gt;ToBinaryStringTest&lt;/summary&gt;
        [TestMethod]
        public void ToBinaryStringTest()
        {
            ProgKeyboards.None.ToBinaryString().Is("0");
            ProgKeyboards.None.ToBinaryString(3).Is("000");
            ProgKeyboards.HammondOrgan.ToBinaryString(3).Is("100");
            ProgKeyboards.HammondOrgan.ToBinaryString(4).Is("0100");
            (ProgKeyboards.Mellotron | ProgKeyboards.MiniMoog | ProgKeyboards.HammondOrgan).ToBinaryString()
                .IndexOf("111");
        }
    }

