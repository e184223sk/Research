More than 1 year has passed since last update.小ネタ。仕事で必要になったので。
既存DBに"1100"みたいな感じの２進数文字列で値が保存されてて、それを読み出すのをスマートにしたかった。皆さんご存知の(嘘)プログレッシブ・ロックで使われるキーボード３種の神器のenumをFlagsで定義したものの例。(要:chaining assertion)そもそもFlags付きenumは知らない人も要るのであんまり使うべきで無い。ということで結局このライブラリ関数は作ったものの使用しませんでした。Flags付きenumの代わりに普通のenumで定義しておいて、enumの配列という形で読み出すようにしました。その方がコードが全体的にシンプルになりました。「実現したいことに比べてソースコードが複雑な場合、たとえうまく動いていても方針を見直す」ことはよくやります。予見できないバグを防ぐために。参照：社会を「脆く」する犯人「フラジリスタ」とは誰だ？　『反脆弱性』が暴く問題の本質人々の考えとは裏腹に、複雑系には、複雑なシステムも規制も政策も不要だ。「シンプルであればあるほどよい」のだ。複雑化すると、想定外の影響が連鎖的に膨らんでいく。不透明性のせいで、干渉は予測不能な影響をもたらす。“予測不能”な結果について詫びたあと、二次的な影響を正すために別の干渉をする。すると、“予測不能”な反応は枝分かれ的に急増する。しかも、先に進むたびに影響は深刻になっていく。もちろんFlags付きenumを使うとスマートになるシナリオもあるので使うこともあります。それでは良いプログラミングライフをﾉｼ


