・WebスクレイピングをするためにSeleniumを使ったが色々ハマった＋C#は情報が少ない
・環境はWin10, VS2017, Google Chrome 83.0.4103.116 (Firefoxでもほぼ変わらず書ける)
・初投稿のため、お手柔らかにご指摘いただけましたら幸いです2020.10.11更新
・この記事を読めばChromeDriberを新規プロジェクトから実行できるよう追記
　「VSC#のインストール」や「ウィンドウズフォームアプリの作成」はGoogleで検索を
2021.05.08
・属性値：例(a href="http:...")などのテキスト部分取得する方法について追記
  「取得した要素の属性値を取得する」
2021.08.11
・公式ページを見つけたのでリンクを張っておきます・他言語ですが辞書的に使えるページがありますので貼っておきますChromeDriverのインスタンス名はchromeとした
文中のHTMLはぼかして書いているので、実際の挙動と齟齬がある可能性がありますがご容赦を・・・右ペインの一覧をご参照くださいChromeDriverは「https://chromedriver.chromium.org/downloads」よりダウンロードできる。
バーションはChromeのバージョンと合わせる必要があり、以下の方法で確認できる1.Chromeを起動する
2.右上の点3つのボタンを押す
3.設定をクリック
4.設定画面＞Chromeについてをクリック
5.バージョンを確認する
　※公開されているChromeDriverのバージョンと一致するものがない場合、
　　バージョンが85.0.4183.121なら、85.0の最新版のChromeDriverを使えば大丈夫　　＜手順1-3＞

&lt;手順4-5&gt;
プロジェクトがおいてあるフォルダに置いてあればよい (なくても良い時があるが、理由は不明)
NugetからChromeDriverのNugetパッケージをインストールする必要がある。
Selenium.WebDriverとSelenium.WebDriver.ChromeDriverをインストールする。＜Nuget管理マネージャを開く＞
＜必要なNugetパッケージをインストールする＞
下記をインクルードする実行するとコマンドプロンプトが立ち上がり、空っぽのウィンドウが立ち上がる他にもページを印刷したり色々できるらしい例では末尾のタブに切り替えているwebページが開けない場合のタイムアウト時間を設定・FindElementsByClassNameを使う
・FindElement"s"にするとぶら下がっている要素すべてをListで受け取れる
・FindElementsで見つからない場合は要素が0個のListが生成される
・FindElementにすると、最初に見つかった要素を拾えて、要素が見つからない場合例外を吐く例)クラス名List_itemの要素を取得
・itemListにList_itemの要素2つが追加される
・Tag名"li"の要素を拾いたい場合はFindElementsByTagNameを使うスペースが有るとダメなことに気づくまでかなりハマったライブラリのメタデータ"RemoteWebDriver"から引用
FindElementsも同じものが用意されている
FindElementとFindElementByCssSelectorについては後述するFindElementByClassNameで取得した要素に対して、さらにFindElementByClassNameで要素を取得することができない
これにはFindElement/FindElementsを使う。すべての要素を取得したい場合、ワイルドカードが使える
例ではli,liの2要素が取得できる例の"Text1"を拾いたい場合についてFindElementsで取得した要素のTextプロパティより取得できる例の"List_item"というクラス名を拾いたい場合、FindElementsで取得した要素に対してGetAttributeを使って取得できる例では、textの中身が
&lt;li class="List_item"&gt;Text1&lt;/li&gt;
 &lt;li class="List_item"&gt;Text2&lt;/li&gt;
になる。
改行コードがLFの場合がほとんどなので、メモ帳に貼り付けると1行に。。。例の"ul"というTag名を拾いたい場合、FindElementsで取得した要素のTagNameプロパティが使える
クラス名がGetAttribute("class");で拾えるのでTagNameとすれば拾えるかと思いきやダメだった属性値を取得するGetAttribute(string)を使えば属性値を取得できる
リンクの場合はhrefが属性値になるので例ではGetAttribute("href")としている。
GetAttribute("target")とすれば、"_blank"を取得することができる以上で解説終わり！
これで簡単なWebページ解析ができるようになるはずです！　Chromeでページを完全ページとして保存したかったため、Ctrl+sキーを送信して
　Webページを保存しようとした。htmlだけの保存だと中途半端なので。。。
　がしかし、ウィンドウに対するキー操作は受け付けてくれない模様。
　※Ctrl+aで全選択はできるのにWhy!? もちろんFirefoxもダメ!
 例)
　chrome.FindElementByTagName("html").SendKeys(Keys.LeftControl + "s" );　継ぎ接ぎだらけではあるが、下記を参考に保存できたのでメモしておく
　要約すると、Firefoxのプロセスを探して強制的にActiveにして、外部からCtrl+sを送っている
　＜参考URL＞
　　感謝！
　　https://qiita.com/yaju/items/af308376f04ef2ff1325　※他にwebブラウザを開いているとそっちを拾ってしまうので全て閉じておいてください
    button5_Clickは適当に作ったボタンTask実行しないとウィンドウが固まってしまうため、timerで定期的に実行するようにしたら、なぜか動かない。未解決。
DoEventsを途中で挟むとそれ以降保存できなくなるのでそのあたりになにかあると思われる。


