More than 1 year has passed since last update.今日はSendGridを使ってメールを送ってみます。問い合わせフォームのメールからMA的なメール送信まで幅広く利用することを想定しています。利用用途は幅広く提供されている機能も多いので何度かに分けて整理したいと思います。 マイクロソフトからもドキュメントがまとめられているので、こちらのドキュメントも参照してください。https://docs.microsoft.com/en-us/azure/sendgrid-dotnet-how-to-send-emailVisual Studio 2019, C#, ASP.NET Core 2.2
SendGrid API Version 3
もうすでにASP.NET Core プロジェクトがあるものとします。SendGridはメール配信サービスです。名だたるサービスがSendGridを使ってメール配信をおこなっています。自社でメールサーバーを持つような時代は終わって、SendGridに面倒なメンテ作業を任せて、メールを送ることだけにフォーカスすることができます。Send Grid Official Page
https://sendgrid.com/Azureからもマーケットプレイスで購入することができます。Azure Marketplaceから購入すると月25,000通まで無料。Azureのアカウントを持っている方はこちらのリンクからSendGridのサービスを購入。https://portal.azure.com/#create/Sendgrid.sendgrid赤いマークがついてるフィールは必須なので埋めてください。今日は一番右にあるフリープランで進めますSendGridを使ってメールを送信するには便利なライブラリーがあるので下記のNugetコマンドから入手します。 SendGrid、C#用SDKGitHubはこちらから
https://github.com/sendgrid/sendgrid-csharp
.Net Core要のサンプルコードはこちらから
https://github.com/sendgrid/sendgrid-csharp/tree/master/ExampleCoreProjectパッケージマネージャーコンソールよりSendGrid Version 9.11.0 がインストールされています。作成したSendGridメニューにあるManageをクリックします。
SendGridの管理画面がたちがりますので、右側にあるSettingからAPI Keysをクリックします。右上にあるCreate API Keyをクリック。APIアクセスのアクセスレベルを選択して、名前を入力して作成します。ここで生成されたAPI KeyをAppSettings.jsonに入力します。
これで一旦設定はおしまいです。次は実際にサービスを書いてみます。まず、メールを送るサービスである
サービスクラスとインターフェイスを書きます。他のサービスクラスも格納するため、サービスフォルダーとインターフェイスフォルダーを作成し。　サービスフォルダーに EmailSernder.csというクラス、インターフェイスフォルダーの中にIEmailSender.cs というEmailSender のインターフェイスを作成します。これでサービスをDIすることによって、メールが送れる状態になっています。次は具体的にメールフォームを送信したときの処理を書いてみます。まずは問い合わせフォームのRazorページこんな感じの問合せページからメールが送れている事が確認できました。次回はフォームのバリデーションや、本人へも問合せ内容を知らせるメールを送ったりなどリッチな問合せフォーム体験を書きたいと思います。今日は一旦SendGridを動かすところまでに。


