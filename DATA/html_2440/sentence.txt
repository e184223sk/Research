More than 1 year has passed since last update.もくじ
→https://qiita.com/tera1707/items/4fda73d86eded283ec4fWinIoT on ラズパイでのI2C通信関連
- [C#/WinIoT/I2C] ラズパイ＋WindowsIoTCore＋C# で9軸センサ(MPU-9150)の値をとる電子工作で、ラズパイ3にWindows IoT Coreを入れて、サーマルカメラをつなげて、いわゆるサーモグラフィを作ってみたい。さっと調べたところ、一番安くて(amazonで7000円くらい)手に入りやすそうな「MLX90640」を使おうと思うが、そのサーマルカメラがI2C接続のようなので、以前、9軸センサで練習したI2Cを生かせそう。と思い立って作ったのが下記のようなもの。作るうえでいろいろ調べた事、やったことをメモしておく。■動画
https://youtu.be/cPm-WGY2Y8c■コード一式
https://github.com/tera1707/ThermalCamera■写真(私の手をサーマル撮影)
下図のような回路をつくる。

実際の配線

電源は、作成中、デバッグ中はコンセント～USBで。実際動かすときはモバイルバッテリーでの予定。以前実験した9軸センサのI2Cをもとに、通信部分の実装を行う。9軸センサのI2Cの方で同じ作業をしているので、そちら参照。データシートによると、このサーマルカメラは、2バイトを一単位としてデータのやり取りを行う。9軸センサ(MPU-9150)の場合は、1バイト単位でデータをやり取りしていたので、そこが違う。
9軸センサの場合は、下記のようにしていた。今回のサーマルカメラでは、下記のようなメソッドを作って、ushortでアドレス指定、データ指定を行うようにした。下記のような流れで初期化を行う。
(というか、I2cDevice.FromIdAsync();まではWinIotのI2C通信の準備)ここで「リフレッシュレートを変更」しているが、今回は32Hzを使用した。(最速の64Hzにしなかったことに特に理由なし。)
試したところ、リフレッシュレートの設定によって、下のデータ取得のところで出てくる「isReady」フラグ(0x8000のbit3)がONになるまでの時間が変わってくるので注意。ここから下は、ほぼサンプルプログラムを基に作成しています。
⇒https://github.com/sparkfun/SparkFun_MLX90640_Arduino_ExampleサンプルはC言語で描かれていますので、それをもとに、C#の処理を作成しました。また、EEPROMの個別の中身や生データから温度に変換する計算など、データシートをじっくり読めばわかるのかもしれませんが、今回はあまり理解せずに(というか難しくてすぐに理解できなかった)サンプルを基に作らせて頂いてます。上の初期化の中の一番下、下記の部分。EEPROMに保存されているパラメータが、読み出したサーマルデータの生データを温度の値に変換する際に使われるので、EEPROMから各種パラメータを読みだして、所定のクラスに格納しておく。(ここではParamsMLX90640クラスにいれた。)データシートより、EEPROMはレジスタ0x2400番地から0x273F番地。
※EEPROMの読み出し項目は非常に多数あるので、コードは、githubのこちらを参照。まずは、I2Cでサーマルの生データを取得する。
生データは温度データではないので、EEPROMから読み出したパラメータを使って温度に変換が必要。データ取得は、データシートの「Measurement Flow」の項の流れに沿った処理を行う。
メソッドMLX90640_CalculateTo()より上は、生データ取得処理。生データを取る際、for分で2回回している。
データを採る際、「Subpage」という番号も一緒にとるのだが、これで全体のどの部分のデータが取れているかがわかる。
具体的には、データは下記の図のようなイメージで2回とって1画面分のデータとなる。
ステータスレジスタの設定により2パターンの取れ方があるが、今回は上のパターン(横一行分のデータが1行飛ばしで取れるパターン)を使った。つまり、subPageが0のデータは奇数行目のデータ、subPageが1のデータが1のデータは偶数行目のデータとなっている。そのsubPageの値と、取れてきた1行飛ばしのデータは、生データを温度データに変換するメソッドMLX90640_CalculateTo()の中で使っている。(中の計算ロジックは難しいのであまり見ず。)変換した温度データを、最終的に配列に格納。(ここではTotalFrameData[])この配列の中身が、サーマルカメラに映った画面(32*24)の1ピクセルごとの温度の値となる。温度データを画面に表示するための値にさらに変換する。
画面に温度を表す点を打つ方法は、こちらの以前の記事を参照。上記の中の、指定の温度下限～上限の値を、0.0～1.0の値に変換するメソッドColorScaleBCGYR()は、こちらのサイトを参考にさせていただいています。ありがとうございます。これで作成したbitmapを画面に表示したら、サーモグラフィの完成。
意外となめらかに動いているが、サーマルカメラの解像度が32*24と結構低いので、モザイク状に見える。最初、解像度、一桁間違えてないか？320*240の間違いでは？と思ったが、32*24であってた。
サーマルカメラは、割と解像度が低いものらしい。(高いものには、もっと高解像度のものもあるが、手が出ない)ここまでで挙げてきた初期化やらデータ取得やらのメソッド以外にも、画面だったりC++のサンプルをもとに作ったEEPROM読み込み機能やらが多数ある。下記に一式置いているので参照ください。コンセントから離れても動かせるよう、携帯の乾電池式充電器に接続。
あとサーマルカメラもブランブランならないよう、手抜きだが形だけユニバーサル基盤にくっつけて一旦のできあがり。
電気電子やらメカのプロの方からしたら怒られそうだが、個人的には手作り感満載で、落としたら一撃死しそうな感じがたまらなく良い。

↓↓↓敬礼する、メガネをかけた嫁

※真ん中の四角の中の、3*3マスの平均温度を画面下に表示しているのだが、
　体温が異常に低く見えてる。放射率？とかパラメータ調整必要なのかも。公式ページ
https://shop.pimoroni.com/products/mlx90640-thermal-camera-breakoutデータシート
https://cdn.sparkfun.com/assets/7/b/f/2/d/MLX90640-Datasheet-Melexis.pdf値の大きさをサーモグラフィのような色に変換する
https://qiita.com/krsak/items/94fad1d3fffa997cb651サンプルプログラム(arduino)
https://github.com/sparkfun/SparkFun_MLX90640_Arduino_Example/tree/master/Firmware通信手順(どういうデータが取れるか、とか通信のお作法の参考になる)
https://github.com/sparkfun/SparkFun_MLX90640_Arduino_Example/blob/master/Firmware/Example1_BasicReadings/MLX90640_API.cpp通信ドライバ(データの送り方の参考になる)
https://github.com/sparkfun/SparkFun_MLX90640_Arduino_Example/blob/master/Firmware/Example1_BasicReadings/MLX90640_I2C_Driver.cpp


