using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GCTest
{
    class Program
    {
        static void Main(string[] args)
        {

            Console.WriteLine($"The maximum generation is {GC.MaxGeneration}.");
            GC.Collect();

            Console.WriteLine($"1. Before CreateQueue() :{GC.GetTotalMemory(false)}");

            var q = CreateQueue();
            Console.WriteLine($"2. After CreateQueue()  :{GC.GetTotalMemory(false)}");
            GC.Collect();

            Console.WriteLine($"3. After GC.Collect()   :{GC.GetTotalMemory(false)}");
        }
        static Queue&lt;string[]&gt; CreateQueue()
        {
            var q = new Queue&lt;string[]&gt;();

            string[] a = new string[1000];
            for (int i = 0; i &lt; 1000; i++)
            {
                a[i] = new String('A', 1000);
            }
            q.Enqueue(a);

            string[] b = new string[1000];
            for (int i = 0; i &lt; 1000; i++)
            {
                b[i] = new String('A', 1000);
            }
            q.Enqueue(b);

            string[] c = new string[1000];
            for (int i = 0; i &lt; 1000; i++)
            {
                c[i] = new String('A', 1000);
            }
            q.Enqueue(c);

            string[] d = new string[1000];
            for (int i = 0; i &lt; 1000; i++)
            {
                d[i] = new String('A', 1000);
            }
            q.Enqueue(d);

            return q;
        }
    }
}

