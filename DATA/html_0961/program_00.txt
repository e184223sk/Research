using Reactive.Bindings.Interactivity;
using System;
using System.Reactive.Linq;
using System.Windows;
using System.Windows.Input;

namespace RxPropLabWpf
{
    public class MouseEventToStringReactiveConverter : ReactiveConverter&lt;MouseEventArgs, string&gt;
    {
        protected override IObservable&lt;string&gt; OnConvert(IObservable&lt;MouseEventArgs&gt; source) =&gt;
            source
                // MouseEventArgs から GetPosition でマウスポインターの位置を取得（AssociateObject で EventTrigger を設定している要素が取得できる)
                .Select(x =&gt; x.GetPosition(AssociateObject as IInputElement))
                // ReactiveProperty に設定する文字列に加工
                .Select(x =&gt; $"({x.X}, {x.Y})");
    }

    public class MouseEventToStringDelegateConverter : DelegateConverter&lt;MouseEventArgs, string&gt;
    {
        protected override string OnConvert(MouseEventArgs source)
        {
            // MouseEventArgs から ReactiveProperty に設定する文字列に加工
            var pos = source.GetPosition(AssociateObject as IInputElement);
            return $"({pos.X}, {pos.Y})";
        }
    }
}

