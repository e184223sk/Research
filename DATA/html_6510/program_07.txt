
class Program
{
    public static void Main()
    {
        var random = new Random();
        var data = Enumerable
            .Range(0, 10000000)
            .Select(a =&gt; random.Next(100))
            .ToList();
        var stopwatch = new Stopwatch();

        Console.WriteLine("式木");
        stopwatch.Start();
        var testClass = new TestClass&lt;int&gt;();
        Console.WriteLine(data.Aggregate((a, b) =&gt; testClass.AddWithExpressionTree(a, b)));
        stopwatch.Stop();
        Console.WriteLine(stopwatch.Elapsed);

        stopwatch.Reset();

        Console.WriteLine("dynamic");
        stopwatch.Start();
        Console.WriteLine(data.Aggregate((a, b) =&gt; testClass.AddWithDynamic(a, b)));
        stopwatch.Stop();
        Console.WriteLine(stopwatch.Elapsed);
    }
}

class TestClass&lt;T&gt;
{
    private GenericOperation&lt;T&gt; go = new GenericOperation&lt;T&gt;();

    public T AddWithDynamic(T a, T b)
    {
        return (dynamic)a + (dynamic)b;
    }

    public T AddWithExpressionTree(T a, T b)
    {
        return go.Add(a, b);
    }
}

