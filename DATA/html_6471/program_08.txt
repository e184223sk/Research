
/* 旧コード */
// .xaml
&lt;Button Click="Button_Click"/&gt;
// MainWindow.xaml.cs
private void Button_Click(object sender, RoutedEventArgs e) {
    (中略)
}

/* 新コード */
// .xaml
&lt;Button Command="{Binding ButtonCommand}"/&gt;
// CommandBase.cs
public class CommandBase : ICommand
{
    // デリゲートを保持するためのフィールド
    Action action;
    // ICommandを継承したことで生じるプロパティ
    public bool CanExecute(object parameter) =&gt; true;
    public event EventHandler CanExecuteChanged;
    // デリゲートを実行するメソッド
    public void Execute(object parameter) { action(); }
    // コンストラクタ
    public CommandBase(Action action) { this.action = action; }
}
// MainViewModel.cs
class MainViewModel : ViewModelBase
{
    public ICommand ButtonCommand{ get; private set; }
    private void ButtonAction(){
        (中略)
    }
    // コンストラクタ
    public MainViewModel() {
        ButtonCommand = new CommandBase(ButtonAction);
    }
}

