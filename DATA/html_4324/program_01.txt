
public void Setup()
{
    // Listen to notification activation
    ToastNotificationManagerCompat.OnActivated += toastArgs =&gt;
    {
        // Obtain the arguments from the notification
        ToastArguments args = ToastArguments.Parse(toastArgs.Argument);

        // Obtain any user input (text boxes, menu selections) from the notification
        ValueSet userInput = toastArgs.UserInput;

        // Need to dispatch to UI thread if performing UI operations
        Application.Current.Dispatcher.Invoke(delegate
        {
            if(args.TryGetValue(_ActionTypeCode, out string value))
            {
                switch(value)
                {
                    case _ActionTypeStartTask:
                        userInput.TryGetValue(_SelectionTaskKey, out object key);
                        StartSelectedWorkTask(key?.ToString());
                        break;
                }
            }
            else
            {
                ((MainWindow)Application.Current.MainWindow).ShowWindow();
            }
        });
    };
}

private void StartSelectedWorkTask(string workTaskId)
{
    var contents = MainWindowViewModel.Instance.Contents.OfType&lt;WorkUnitRecorderViewModel&gt;().First();

    var selectedTask = contents.PlanedTaskCards.FirstOrDefault(c =&gt; c.Dto.TaskId.Value.ToString() == workTaskId);
    selectedTask?.StartOrStopWorkTask();
}

