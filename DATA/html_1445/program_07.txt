
public class _スタブクラス生成に関するテスト {
    // (snip)

    [Test]
    public void _名前空間宣言の生成() {
        var u1 = SyntaxGeneratorHelper.ToUsingDirective("System");

        Assert.That(u1.Kind(), Is.EqualTo(SyntaxKind.UsingDirective), "生成されたusing[1]");
        Assert.That(u1.Name, Is.Not.InstanceOf&lt;QualifiedNameSyntax&gt;(), "生成された名前空間のSyntax[1]");
        Assert.That(u1.Name.ToString(), Is.EqualTo("System"), "生成された名前空間名[1]");

        var u2 = SyntaxGeneratorHelper.ToUsingDirective("System.Collections.Generic");

        Assert.That(u2.Kind(), Is.EqualTo(SyntaxKind.UsingDirective), "生成されたusing[2]");
        Assert.That(u2.Name, Is.InstanceOf&lt;QualifiedNameSyntax&gt;(), "生成された名前空間のSyntax[2]");
        Assert.That(u2.Name.ToString(), Is.EqualTo("System.Collections.Generic"), "生成された名前空間名[2]");

        var u2_3 = (QualifiedNameSyntax)u2.Name;

        Assert.That(u2_3.Right, Is.Not.InstanceOf&lt;QualifiedNameSyntax&gt;(), "生成された名前空間[2]の第3パートSyntax");
        Assert.That(u2_3.Right.ToString(), Is.EqualTo("Generic"), "生成された名前空間[2]の第3パート名");
        Assert.That(u2_3.Left, Is.InstanceOf&lt;QualifiedNameSyntax&gt;(), "生成された名前空間[2]の第2パートSyntax");

        var u2_2 = (QualifiedNameSyntax)u2_3.Left;

        Assert.That(u2_2.Right, Is.Not.InstanceOf&lt;QualifiedNameSyntax&gt;(), "生成された名前空間[2]の第2パートSyntax");
        Assert.That(u2_2.Right.ToString(), Is.EqualTo("Collections"), "生成された名前空間[2]の第2パート名");
        Assert.That(u2_2.Left, Is.Not.InstanceOf&lt;QualifiedNameSyntax&gt;(), "生成された名前空間[2]の第1パートSyntax");
        Assert.That(u2_2.Left.ToString(), Is.EqualTo("System"), "生成された名前空間[2]の第1パート名");
    }
}

