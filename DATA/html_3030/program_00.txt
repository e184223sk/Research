using System.Drawing;

// RGB から相対輝度を算出（0.0 ～ 1.0）
public static double RelativeLuminance(byte R, byte G, byte B)
{
    // RGB の各値を相対輝度算出用に変換
    Func&lt;byte, double&gt; toRgb = (rgb) =&gt; {
        double srgb = (double)rgb / 255;
        return srgb &lt;= 0.03928 ? srgb / 12.92 : Math.Pow((srgb + 0.055) / 1.055, 2.4);
    };

    return 0.2126 * toRgb(R) + 0.7152 * toRgb(G) + 0.0722 * toRgb(B);
}

// 2つの相対輝度値から、相対輝度比率を算出（0.0 ～ 21.0）
// 相対輝度比率が 7.0 以上の値だと見やすい
public static double RelativeLuminanceRatio(double relativeLuminance1, double relativeLuminance2)
{
    // 相対輝度比率 = (大きい値 + 0.05) / (小さい値 + 0.05)
    return (Math.Max(relativeLuminance1, relativeLuminance2) + 0.05) / (Math.Min(relativeLuminance1, relativeLuminance2) + 0.05);
}

// 背景色から白文字か黒文字を判定
public static Color chooseTextColor(byte R, byte G, byte B)
{
    // 背景色の相対輝度
    double background = RelativeLuminance(R, G, B);

    const double white = 1.0D;  // 白の相対輝度
    const double black = 0.0D;  // 黒の相対輝度

    // 文字色と背景色のコントラスト比を計算
    double whiteContrast = RelativeLuminanceRatio(white, background);   // 文字色：白との比
    double blackContrast = RelativeLuminanceRatio(black, background);   // 文字色：黒との比

    // コントラスト比が大きい文字色を採用
    return whiteContrast &lt; blackContrast ? Color.Black : Color.White;
}

