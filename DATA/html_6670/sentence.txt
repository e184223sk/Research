WPFコントロールの中でよく使われるものとしてTabControlがあります。
普通にそのまま使うことが多いのですが、MahAppsを入れて作ったところ、ヘッダーが文字ベースでしかも大きいという、なかなかに使い勝手の難しそうな描画になりました。以下のみたいな状態です。(見た目が分かりやすいように色付けしてます)
２年位前に、初めてMahAppsを試ししてみた時があったのですが、そのときは、このTabControlの描画を見て使うのをやめたという経緯がありました。
Webアプリとかスマホアプリだったら、文字ベースやアイコンベースにして使うことが多いので、むしろこのようなTabControlのほうが使いやすいと思いますが、自分が作っていたのは、Windowsの業務アプリで、どちらかといえばWindows Fromsの見た目のほうがお客さんにもわかりやすいのです。
じゃあ、MahAppsとか使わなければいいじゃんということになりますが、WPFのみでのアプリはすでに完成していて、今回そのアプリをMahApps、MaterialDesignを使って見た目や操作性を上げたいという思いがあり、取り組み始めたというのがきっかけです。
とりあえず、MahAppsはおいておいて、標準コントロールのヘッダーの変更方法など、いろいろと調べ、試してみることにしました。表示する必要もないほどですが、比べ安いように標準コントロールも書いておきますググるとよく出てくるサンプルがヘッダーの形を変更したいというもの。
シンプルにまとめてみました
ヘッダーの右上の部分が丸くなるようにStyleでCornerRadius="0,10,0,0"と設定しています。
ところが、ここで問題が発生しました。
タブが選択されたても、図の蛍光ペンのところのように、Borderが見えたままになっています。
標準コントロールでは消えているのですが、これがうまくいきませんでした。
これはどういうこと？と再びググり続けること数日、結構たくさんの方々が、同じ問題にぶつかり、質問をあげていました。大体の回答の傾向として、BorderThickness="1"になっているので、Marginを"-1"にしましょうというものです。さきほどのサンプルと異なるのは、内のセッターでMarginを"0,0,0,-1"と設定しているところです。
これで下の枠線が消えて、解決と思ったのですが、使っているとやや気になる点がでてきました。
タブをクリックすると、Margin-1分だけ、ヘッダーの文字が下に下がります。
文字がその分動くので、クリックしたなという感じになるのですが、文字が動くというのは、気になるといえば気になるのです。そこで改めて標準コントロールはどうなっているのかと確認してみると・・・文字とヘッダーが上に引き出されたみたいに、少し上方向に移動しています。
もう少し正確に表現すると、「選択したタブが前方に出てきた」みたいに見える描画になっていました。どんな仕組みなんだろうかと、標準コントロールのTemplateを見てみました。すると・・・さきほどまではControlTemplate内でBorderを設定していました。ところが標準コントロールはこのBorderの中にさらにBorderをセットしていました。
その名も mainBorderとinnerBorder　そのまんまですね。
これを参考に、必要な部分だけでシンプルにしてみましたinnerBorderを作り、Opacity=0として、最初は隠しておきます。
選択されたときに(IsSelected=True)、Opacity=1にして表示されるようにしていました。
さらに、細かいところで、「前方に出てきているような表示」は、Margin=-2,-2,-2,0という設定値で表現していました。このinnerBorderという作り方は、ググッても僕は見つけられなかったので、発見でした。一つの部品でうまくいかないなら、別の部品で補完してしまえばいいという発想ですね。
なるほどーと思いつつ、その昔、VB6でアプリを作っていたころ、そういえば、表コントロールとかで、セルが選択されたときに、そのセルに重ねるようにテキストボックスを表示させて、入力が終わったら、セルに値を設定するなんということをしていたことを思い出しました(共感してもらえる人いるかな・・・)。というわけで、記事はここまで。
自分としてはこれをMahAppsを使用した場合でも使えるように微調整していきたいと思っています。


