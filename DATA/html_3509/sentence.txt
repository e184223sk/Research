More than 1 year has passed since last update.いちいちプレイ押してDebugするの面倒だったので調べました。Editor上でパラメーターいじりながら調整する状態が理想形です。今回はコルーチンを使うので難しいのかな～と思いましたが
uniRxを使うといけるという記事を目にしたので試しました。過去に書いたクソコードを再利用しました。
アタッチしたオブジェクトがTargetに設定したオブジェクトに向かって進みます。このコードをEditor上で動かすのが今回のゴールです。Editor上でDebugする方法として、
ボタンを押したら、メソッドが実行される仕組みを作ります。その仕組みに必要なのがGUILayout.Buttonです。使い方は、Editor拡張コードの中に組み込めばOKです。私もまだ学び始めてばかりなので、
"これを書いたらこう動く"程度でしか理解していません。とにかく、このFromCoroutineというのを使えば、
コルーチンを動かした上で
コルーチンの終わりを監視することができるようです。しかも、StartCoroutineを必要としないのでEditor上でも動かすことができます。これを先程のGUILayout.Buttonと組み合わせます。これでEditor上でコルーチンを呼び出すことに成功しました。ただし、このままではコルーチンが実行された後に
オブジェクトが移動したままになってしまいます。それだとDebugとして軽く調整するには不十分なので
動き終わったらもとの位置に戻るコードを加えます。もとの位置に戻るコードはFromCoroutineが
コルーチンの終わりを監視しているので、その中に書いてしまえば終了です。イメージ通りいけました。
2019/04/22 追記プレイモード中でもEditor上のボタンが反応してしまう状態だったので
EditorApplication.isPlayingを書き加えて防ぎました。EditorApplication.isPlayingはEditorがプレイモード中かどうかを判定してbool値を返します。もう少し便利にしました→続き


