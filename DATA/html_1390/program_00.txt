public class MyBenchmark
{
    [Benchmark]
    public int[] HashSetConstructor()
    {
        var res = new HashSet&lt;int&gt;(arr).ToArray();
        Array.Sort(res);
        return res;
    }
    [Benchmark]
    public int[] SortedSetConstructor()
    {
        return new SortedSet&lt;int&gt;(arr).ToArray();
    }

    [Benchmark]
    public int[] HashSetAdd()
    {
        var set = new HashSet&lt;int&gt;();
        foreach (var item in arr)
            set.Add(item);
        var res = set.ToArray();
        Array.Sort(res);
        return res;
    }
    [Benchmark]
    public int[] SortedSetAdd()
    {
        var set = new SortedSet&lt;int&gt;();
        foreach (var item in arr)
            set.Add(item);
        return set.ToArray();
    }
    [Benchmark]
    public int[] LINQ()
    {
        var res = arr.Distinct().ToArray();
        Array.Sort(res);
        return res;
    }


    int[] arr;
    public MyBenchmark()
    {
        var rnd = new Random(0);
        arr = Enumerable.Range(0, 100000).Select(i =&gt; rnd.Next(10000)).ToArray();
    }
}

