More than 1 year has passed since last update.作ったもの
ざっくり設計・機能
学び
おわりにまほうのクッキング | unityroom
リンク先で遊べます。PC推奨、スマホなどでも一応動作はするようですがサポート外のためデザインが崩れます。
イラストなど諸々込で制作期間2週間、制作時間15時間ちょいくらい。完成したのは11月頃。子ども向け。遊びに来るお客さんのためにケーキを作ろう！というストーリー。ヒントからお客さんは誰か・使うべき食材は何か考え、調理パートで食材を選ぶ。選んだ食材によって完成するケーキが変化し、クリア分岐します。
スクリプト一覧 | Git〆切的にイラストが間に合わなそうで諦めたけどお客さんをランダムに設定したかったところ。
主に頑張ったのはケーキ土台とトッピングを数種用意し、選んだ食材によってケーキの完成図を変化させる部分。

「これでつくる」ボタンに変数を用意。食材を選ぶと、インスペクターで指定した値分「これでつくる」の変数を変化させるメソッドを呼ぶ仕様。↓一部抜き出し
「これでつくる」ボタン側スクリプト


Judge
    public int which_cake = 0;
    public int whichi_decoration = 0;

   //食材側で呼び出される、判定値を変更
    public void Pc1()
    {
        which_cake += 1;
        Debug.Log("which_cake: " + which_cake);
    }

    public void Pw1()
    {
        whichi_decoration += 1;
        Debug.Log("whichi_decoration: " + whichi_decoration);
    }
   void OnMouseDown()
    {
        if(which_cake == 7)
        {
            cake_freshcream.SetActive(true);
        }
        else if(which_cake == 17)
        {
            cake_chocolate.SetActive(true);
        }
        else
        {
            cake_failed.SetActive(true);
        }

        if (whichi_decoration == 3 &amp;&amp; (which_cake == 7 || which_cake == 17))
        {
            banana.SetActive(true);
            strawberry.SetActive(true);
            P.SetActive(true);
        }
        else if (whichi_decoration == 1 &amp;&amp; (which_cake == 7 || which_cake == 17))
        {
            banana.SetActive(true);
            P.SetActive(true);
        }

        else if(whichi_decoration == 2 &amp;&amp; (which_cake == 7 || which_cake == 17))
        {
            strawberry.SetActive(true);
            C.SetActive(true);
        }
        else
        {
            B.SetActive(true);
        }
    }



食材側スクリプト


Judge
   //足す値をインスペクター上で指定
    public int plus = 1;

    void OnMouseDown()
    {
        //ループ用の変数を定義
        int p = plus;

        //+値が0になるまでJudgeで足す
        while (p != 0)
        {
            judger.GetComponent&lt;Judge&gt;().Pc1();
            --p;
        }

        this.gameObject.SetActive(false);
    }



他オブジェクトのスクリプトから値を変化させる方法上記のようにpublicかつstaticな変数であればクラス外からもアクセスでき、異なるシーン間でも共有することができる。またクラス外からも値を変更できます。ただしエラーのもとのためprivateにして、プロパティで操作するのが原則らしい。
今回はそもそも他オブジェクトのスクリプトから値を変化させないことで解決しました。プロパティについては↓
プロパティ - C# プログラミング ガイド | Microsoft Docs
プロパティ？フィールド？メンバー？C#のクラス構造のおさらい制作前の自分用ざっくりメモ
見ていただきありがとうございました！


