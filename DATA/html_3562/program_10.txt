
[Test]
public void MemCpySpeedTest()
{
    const int COUNT = 1 &lt;&lt; 10;
    const int size = 1 &lt;&lt; 18;
    var ptr = stackalloc byte[size];
    var ptr2 = stackalloc byte[size];
    var p = (long*)ptr;
    var p2 = (long*)ptr2;
    watch.Reset();
    watch.Start();
    const int V = size &gt;&gt; 3;
    for (int i = 0; i &lt; COUNT; i++)
        for (int j = 0; j &lt; V; j++)
            p[j] = p2[j];
    watch.Stop();
    UnityEngine.Debug.Log(watch.ElapsedMilliseconds);
    watch.Reset();
    watch.Start();
    for (int i = 0; i &lt; COUNT; i++)
        for (int j = 0; j &lt; size; j++)
            ptr[j] = ptr2[j];
    watch.Stop();
    UnityEngine.Debug.Log(watch.ElapsedMilliseconds);
    watch.Reset();
    watch.Start();
    for (int i = 0; i &lt; COUNT; i++)
        Buffer.MemoryCopy(ptr, ptr2, size, size);
    watch.Stop();
    UnityEngine.Debug.Log(watch.ElapsedMilliseconds);
    watch.Reset();
    watch.Start();
    for (int i = 0; i &lt; COUNT; i++)
        UnsafeUtility.MemCpy(ptr2, ptr, size);
    watch.Stop();
    UnityEngine.Debug.Log(watch.ElapsedMilliseconds);
}

