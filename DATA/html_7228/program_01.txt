
/// &lt;summary&gt;
///     シーケンスを指定した要素数ごとに分割したブロックシーケンスに変換します。
/// &lt;/summary&gt;
/// &lt;typeparam name="T"&gt;要素の型&lt;/typeparam&gt;
/// &lt;param name="source"&gt;シーケンス&lt;/param&gt;
/// &lt;param name="numInBlock"&gt;1ブロック当たりの要素数&lt;/param&gt;
/// &lt;returns&gt;&lt;paramref name="numInBlock"/&gt;ごとに分割したブロックシーケンス&lt;/returns&gt;
public static IEnumerable&lt;T[]&gt; ToBlockSequence&lt;T&gt;( this IEnumerable&lt;T&gt; source, int numInBlock ) {

    // 各要素にインデックスを付加し、numInBlockで割った値と要素の値とのペアを作成します。
    return source.Select( ( v, i ) =&gt; new KeyValuePair&lt;int, T&gt;( i / numInBlock, v ) )
                    // numInBlockで割った値でグループ化し、そのグループに属する要素の値を抽出します。
                    .GroupBy( v1 =&gt; v1.Key, v2 =&gt; v2.Value )
                    // グループに属する要素の値を配列に変換します。
                    .Select( block =&gt; block.ToArray() );
}

