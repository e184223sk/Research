More than 3 years have passed since last update.下の図のようにリング状に１から８の数字が並んでいます。1から8までの任意の数字からはじめ、右回りあるいは左回りに数字を取り出し８ケタの数字を作ります。 全部で16個の数字が得られますが、この最大公約数を求めてください。 結局、この問題は、

12345678
23456781
34567812
45678123
56781234
67812345
78123456
81234567
87654321
76543218
65432187
54321876
43218765
32187654
21876543
18765432
の１６個の数字の最大公約数を求める問題です。 この問題は、答えが9の倍数であることは簡単にわかるのですが、それが9の何倍なのかは、僕にはすぐにはわかりませんでした。最大公約数ということから9なのかなとは思いますが、そうでない可能性も考えられます。ということで、プログラムでどう書くかを考えます。が成り立つので、以下の２つのメソッドを作成できれば、この問題を解くプログラムが作成できそうです。作成したプログラムは以下のようになります。簡単にプログラムの説明をします。汎用性を持たせるために、12345678 という数値以外の値も受け取れるようにしています。 
Mainメソッドでは、8桁の数値を入力してもらい、RingNumberGcd.Solveに渡し最大公約数を求めています。問題を解くRingNumberGcdクラスの主なメソッドは以下の通りです。引数から、16個の数を生成するGetNumbersメソッドを呼び出し。
この16個の数の最大公約数を求め、結果を返しています。
なお、16個の数が正しく生成されているか知りたかったので、
生成された値を引数にコールバック関数を呼び出しています。16個の数を生成するメソッドです。
左回りの8個の数は、反転した値を_GetNumbersに渡すことで求めています。与えられた数の右回りで得られる8個の数を求めるメソッドです。    最大公約数を求めるメソッドです。このは、「C#:最大公約数を求める（ユークリッドの互除法）」のページで示したものと同じです。上記のプログラムを実行した結果です。
答えは、9であることが分かります。実に面白いことに、65432187 8523174 82635147 13647825　など、1から8までの数字で成り立つどんな数を入れても最大公約数は9となります。（すべてを試したわけではありませんが...）これって、紙と鉛筆だけで9であることを証明できそうな気もするのですが、
数学的知識が不足している僕にはちょと厳しそうです...この記事は、Gushwell's C# Programming Pageで公開したものをに加筆・修正したものです。


