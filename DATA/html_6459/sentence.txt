More than 3 years have passed since last update.UnityでInspectorから設定値を変更するためには、 public で値を宣言する必要がある。ここでinspectorには表示したくないが、他のクラスからアクセスさせたい変数を設けたい場合がある.
その手段についてメモ。メリット
- 初期値が設定できるデメリット
- Serializeで値保持の問題 (※1)
- 公開権限をいじれない (get可能 set不可など).
- get/set時に処理記述ができない. (ちょっとした変換とか)※1
- Prefab化した後にアノテーションを追加すると、値が保持される続けるような予期せぬ挙動をする
- HideInInspectorはinspector常に表示しないだけ、Serialize objectの値保存は行なってしまう.
- 下記は Valueに abc を入れた状態でPrefab化したobjectからHideInSpectorをつけた場合のPrefabの値の状態
- objectの値が保存されている &amp; そのfieldがSerializableなので、予期せずinspectorの値が復元されてしまうメリット
- 初期値が設定できる
- Serializeで値保持の問題なしデメリット
- 公開権限をいじれない (get可能 set不可など).
- get/set時に処理記述ができない. (ちょっとした変換とか)メリット
- get, setで公開範囲と権限を自由に絞れる
- getterの中で処理を書いたり、 setだけprivateにしたりできる　(private set;)
- Serializeで値保持の問題なしデメリット
- 初期値が宣言時に入れられない.　Awakeの中などで初期化する必要がある.個人的にはこのパターンが好みです。
getter, setterを通して他クラスからアクセスさせるというのも自然な記述だなと。HideInInspectorは予期せぬ挙動あるので原則やめよう.
NonSerializedかpropertyを使おう


