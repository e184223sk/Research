
 public class TextPredicator {

    public static void Predicate(List&lt;string&gt; search, List&lt;List&lt;string&gt;&gt; choices) 
    {

        //全ての候補の転置インデックスを作成する
        var indexs = choices.Select(choice =&gt; new InversedIndex(choice));


        // 初期のPathを作成する
        var paths = new List&lt;Path&gt;();
        for (int i = 0; i &lt; search.Count; i++)
        {
            foreach (var index in indexs)
            {
                var nodes = index.Positions(search[i]);
                foreach (var node in nodes)
                {
                    paths.Add(new Path(index, node, i));
                }
            }
        }

        // Searchの全文字列を各Pathに渡してPathを更新する
        for (int i = 0; i &lt; search.Count; i++)
        {
            foreach (var path in paths)
            {
                path.Select(i, search[i]);
            }
        }

        //一番スコアの高いPathを採択
        var selectedChoice = paths.OrderByDescending(Path =&gt; Path.Score()).First().Source();
        Debug.Log(selectedChoice);
    }
}

