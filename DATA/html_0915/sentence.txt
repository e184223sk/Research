More than 1 year has passed since last update.今日はShopifyのページネーションに関してまとめます。　コードのは解説はASP.Net Core 3.1 C#になります。ページネーションとは訳の通りページ送りです。例えば、APIを介してなにかをリクエストした際に100万行のデータが返ってきても処理しきれない、レスポンスを返すShopifyのサーバーからしても負荷が大きすぎるため、分散（ページにわけて）レスポンス（依頼に対しての返信）をします。たとえば、Shopifyにあるcustomersavedsearch内にいる顧客一覧を取得する際に、10万人の顧客情報がある、なんてこともあります。customersavedsearchの詳細はこちら
https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#other-2020-07そして、10万人いるのですが、デフォルトで50人、最大で250人づつしか返してくれません。なので、ページ送りをする必要があります。Shopifyにリクエスト（依頼）を送ると、レスポンス（返信）のヘッダー部分に次のページを示す値が付帯されています。その次ページの値を読み取って、次のリクエストを送るという仕組みです。　じゃ、loopすればいいな、と思うかもしれませんが、このリクエストをループで処理すると、ShopifyのApi上限を超えることもありますので注意が必要です。RESTAPIの場合1秒間に2リクエストを上限としていますので、数秒間隔でリクエストを送るように制御することをお勧めします。上限に関しては下記を参照ください。
https://shopify.dev/concepts/about-apis/rate-limitsShopify APIにリクエストを送信する際に指定できるパラメターは下記です。例: 1ページに3レコード返してほしい時上記は初期リクエスト時に1ページにいくつのレコードを返してほしいか指定するときに使います。次のページを参照したいというときはpage_infoも指定する必要があります。page_infoの値はAPIレスポンスに含まれるヘッダー情報を読み取る必要があります。（それは後ほど）リクエスト時に指定できるページネーションに関するプロパティは下記です。postmanのリクエストとレスポンスは下記です
下記のヘッダープロパティーを解読します。ヘッダー内のプロパティはLinkです。次のページがない時はLinkプロパティー自体がありません。上記の値から page_info= 部分を読み取ります。下記のコードで抽出しています。実際のコードで解説したいと思います。　下記の環境はASP.NET Core 3.1 C#です。まず全体のコードは下記です。まずはこちらからこちらのメセッドの入力値に pageInfoを設けています。ここでの想定はpageInfo自体をこのメソッドに渡しています。注意点としては、このメソッド自体でページネーションの処理は行っていません。あくまでの独立性を担保するためにページネーションを実際に行うメソッドはもうひとつ上のレイヤーにおいています。次の部分でこれから行う処理に使われるオブジェクトを作っておきます。ここでは、DBに保存しているマーチャント情報の取得と、エラー検知・デバグ用のApplication Insightへログを記載しています。ShopifyCustomerSavedSearcheCustomersは受用のオブジェクトで下記のように定義しています。次から実際にShopifyへリクエストしている部分です。上記のコードをさらに詳しく見てみます。ここではヘッダー部分にAccessTokenを指定し、リクエスト用のUrl文字列を生成しています。もしpageInfoが空白またはnullでなければ、リクエスト用URLの文字列最後に追加します。次は実際のリクエスト行い、帰ってきた値に対して処理を行います。今回はヘッダー部分にあるLinkというプロパティーも読み込んでいます。このLinkは次のページがなければレスポンスの値に含まれませんので linq構文で検索を行い結果にあるか確認をします .Any()部分です。そのあとはデバグ用にレスポンスの文字列そのものをapplication insightに記録し、事前に定義したオンジェクトに対してjsonをマッピングしています。そして最後のlinkの値を付随しています。このようにレスポンスのヘッダー値を確認してページネーションを行います。本日は以上です。トランスコスモス技術研究所では引き続きShopifyに関わる開発人員やプロジェクトマネージャーを募集しています。こちらをご参照ください。
http://t-rnd.com/Jobs/


