VRアプリを開発する際、バーチャル空間をどのように移動するかは悩みどころの一つだと思います。既存のアプリで多い実装は、瞬時に指定位置に移動する「テレポーテーション」や、従来の2Dゲームを踏襲した「ジョイスティック移動」、それに加えて移動の際に視野を絞って視界の変化を減らす対策などが採られることが多いと思います。VR空間を移動する際にVR酔いが起きてしまうのは、現実世界での体の動きとVR空間での視界の動きに乖離が生まれることが主な理由で、これを防ぐためにはなるべく大きいフィジカルな動作を採用した方が良さそうです。そこで今回は、前腕（ぜんわん）を上下に運動させる通称「手振り歩行」を実装してみました。Unity と Oculus Quest 2 を用いて、VR空間で「手振り歩行」を実装すること。前提として、Oculus Integration をインストールします。パッケージに含まれる"PlayerController.cs"の処理に倣いつつ、同クラスに登場する"PreCharacterMove()"を新しく定義する形で処理を記述しました。上のコードをスクリプトに貼り付け、シーン中のGameObjectにアタッチすると動作しました。ベストな実装かはわかりませんが、意図した動作は実現できました。
実装のポイントは、「HMDの正面の方向に移動」ではなく、「速度の大きい方のコントローラーの向いている方向」へ移動する点です。この点は他の「VR, arm swing, walk in place (WIP)」などで検索して出てくる実装と異なる点かな、と思っています。両手を同時に振り上げると「ジャンプ！」をする処理なども入れています。実行した際のキャプチャを撮影しました：

インスペクタからAccelerationやDampなどの値を調整することで、それなりにヌルヌルと動くようになりました。Oculus Integration のデフォルトではGravityの値もかなり大きめに設定されているので、この値も0.1程度に下げた方が落下した際に酔いを感じにくくなります。実装当初は「コントローラーの速度情報を一次配列に格納して、腕振りの波形データとの類似度を計算して…」などと考えていましたが、フレーム毎の速度情報のみでも、きちんと動きたい方向に動けていることは確認できました。自分しか試していない（N=1）ので実際はわかりませんが、主観的にはそれなりにVR酔いを抑えられていそうです。（私の知る限りでは）Oculus Store などに並ぶアプリでこの移動手法が使われている例を見たことがありませんが、こういうゲームがあってもいいような気がしています。そのうち自分で作ろう！


