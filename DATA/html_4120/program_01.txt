
using UnityEngine;

public static class AppUtil
{
    private static Vector3 TouchPosition = Vector3.zero;

    /// &lt;summary&gt;
    /// タッチ情報を取得(エディタと実機を考慮)
    /// &lt;/summary&gt;
    /// &lt;returns&gt;タッチ情報。タッチされていない場合は null&lt;/returns&gt;
    public static TouchInfo GetTouch()
    {
        if (Application.isEditor)
        {
            if (Input.GetMouseButtonDown(0))
            {
                return TouchInfo.Began;
            }
            if (Input.GetMouseButton(0))
            {
                return TouchInfo.Moved;
            }
            if (Input.GetMouseButtonUp(0))
            {
                return TouchInfo.Ended;
            }
        }
        else
        {
            if (Input.touchCount &gt; 0)
            {
                return (TouchInfo)((int)Input.GetTouch(0).phase);
            }
        }
        return TouchInfo.None;
    }

    /// &lt;summary&gt;
    /// 複数のタッチ情報を取得(エディタと実機を考慮)
    /// エディタはマルチ非対応
    /// &lt;/summary&gt;
    /// &lt;returns&gt;タッチ情報。タッチされていない場合は null&lt;/returns&gt;
    public static TouchInfo[] GetTouches()
    {
        TouchInfo[] touchInfoArray = new TouchInfo[1]{TouchInfo.None};

        if (Application.isEditor)
        {
            if (Input.GetMouseButtonDown(0))
            {
                touchInfoArray[0] = TouchInfo.Began;
                    return touchInfoArray;
            }
            if (Input.GetMouseButton(0))
            {

                touchInfoArray[0] = TouchInfo.Moved;
                return touchInfoArray;
            }
            if (Input.GetMouseButtonUp(0))
            {
                touchInfoArray[0] = TouchInfo.Ended;
                return touchInfoArray;
            }
        }
        else
        {
            if (Input.touchCount &gt; 0)
            {
                touchInfoArray = new TouchInfo[Input.touchCount];
                for (var loopValue = 0; loopValue &lt; Input.touchCount; loopValue++)
                {
                    touchInfoArray[loopValue] = (TouchInfo)((int)Input.GetTouch(loopValue).phase);
                }
                return touchInfoArray;
            }
        }
        return touchInfoArray;
    }

    /// &lt;summary&gt;
    /// タッチポジションを取得(エディタと実機を考慮)
    /// &lt;/summary&gt;
    /// &lt;returns&gt;タッチポジション。タッチされていない場合は (0, 0, 0)&lt;/returns&gt;
    public static Vector3 GetTouchPosition(int id = 0)
    {
        if (Application.isEditor)
        {
            TouchInfo touch = AppUtil.GetTouch();
            if (touch != TouchInfo.None)
            {
                return Input.mousePosition;
            }
        }
        else
        {
            if (Input.touchCount &gt; 0)
            {
                Touch touch = Input.GetTouch(id);
                TouchPosition.x = touch.position.x;
                TouchPosition.y = touch.position.y;
                return TouchPosition;
            }
        }
        return Vector3.zero;
    }

    /// &lt;summary&gt;
    /// タッチワールドポジションを取得(エディタと実機を考慮)
    /// &lt;/summary&gt;
    /// &lt;param name='camera'&gt;カメラ&lt;/param&gt;
    /// &lt;returns&gt;タッチワールドポジション。タッチされていない場合は (0, 0, 0)&lt;/returns&gt;
    public static Vector3 GetTouchWorldPosition(Camera camera)
    {
        return camera.ScreenToWorldPoint(GetTouchPosition());
    }
}

/// &lt;summary&gt;
/// タッチ情報。UnityEngine.TouchPhase に None の情報を追加拡張。
/// &lt;/summary&gt;
public enum TouchInfo
{
    /// &lt;summary&gt;
    /// タッチなし
    /// &lt;/summary&gt;
    None = 99,

    // 以下は UnityEngine.TouchPhase の値に対応
    /// &lt;summary&gt;
    /// タッチ開始
    /// &lt;/summary&gt;
    Began = 0,
    /// &lt;summary&gt;
    /// タッチ移動
    /// &lt;/summary&gt;
    Moved = 1,
    /// &lt;summary&gt;
    /// タッチ静止
    /// &lt;/summary&gt;
    Stationary = 2,
    /// &lt;summary&gt;
    /// タッチ終了
    /// &lt;/summary&gt;
    Ended = 3,
    /// &lt;summary&gt;
    /// タッチキャンセル
    /// &lt;/summary&gt;
    Canceled = 4,
}

