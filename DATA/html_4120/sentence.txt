More than 1 year has passed since last update.スマホでの操作周りの制御って共通化できるよね。
ただ、普通に実装したらEditor上で操作できないよね。
ってことで、操作周りの制御をスマートにしてみました。今回の使用想定はこちら。
・スマホでのリリース向け（だけど、Editorでも確認できるように）
・操作検出とゲーム内の操作制御のロジックを完全に分けていろんなプロジェクトで使えるように操作検出はシーン毎で変わらないが、操作制御はシーン毎で変わりそう…
スマホの操作向けなので、フリック判定もあるのでコルーチンを使いたい…ってことで、操作検出はstatic、操作制御はMonoBehaviourって感じ?
ただ、操作制御が複数あることは無さそうなので、SingletonMonoBehaviourにしておく。今回はこちらのSingletonMonoBehaviourクラスで実装。今回検出したいスマホにおける操作は6つ
・タッチなし
・タッチ開始
・タッチ移動
・タッチ静止
・タッチ終了
・タッチキャンセル
マルチタッチも考慮して配列で検知情報を管理しておく今回の目的は”操作周りをスマートに”ということなので、必要な制御を後から登録して呼び出される感じにしたい。
なので、Action使って呼び出すようにしたいと思う。下準備は完了したので、どう使用できるか確認してみる。使用例はこんな感じ！OperationSystemManagerのActionにゲーム内の制御を登録しておくだけ！
めちゃくちゃスマートになったんじゃない？今回用意したActionはコレ。
TapAction：タップした時に呼ばれる
FlickAction：フリックした時に呼ばれる
DragAction：ドラッグした時に呼ばれる（引数にドラッグ方向がVector3で貰えます）
CancelAction：キャンセルした時に呼ばれる今回の実装で操作周りがスマートになったので、ハッカソンでも大活躍しそうな予感！
DragActionを拡張してドラッグした距離を取得できたら良かったかも？
引っ張りアクション系を想定するとまだまだ使いにくい部分がありそうなので、DragStartAction,DragEndActionとか用意してより使いやすいように改良しよう…


