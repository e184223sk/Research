More than 3 years have passed since last update.Photon Unity Networkの基本機能メモ【PUN】ログイン
【PUN】アバター生成・同期
【PUN】ゲーム終了判定Unity Collaborateでプロジェクトを共有して、PCを2台並べて開発するのがおすすめ。
（3台で見たい場合はアプリでビルド）PhotonNetwork.Instantiate
https://doc.photonengine.com/ja-jp/pun/current/gameplay/instantiation
生成するゲームオブジェクトはResources以下にプレファブとして格納
生成対象はクライアント間通信の橋渡しであるPhotonViewコンポーネントをもつことが必須シーンにローカルプレイヤー用のオブジェクトを置いておいて、配下にアバターを生成するアバターにPhotonTransformViewコンポーネントをアタッチ
PositionとRotationを同期にチェック
PhotonViewコンポーネントのObservedComponentsに登録して監視対象にするAvatar.csを作成、アバターにアタッチ
MonoBehaviourからPhoton.MonoBehaviour（自身のスクリプトが紐づくオブジェクトにアタッチされているPhotonViewコンポーネントへのアクセスを提供するヘルパークラス）に変更
PhotonViewコンポーネントのObservedComponentsに登録して監視対象にするOnPhotonSerializeView
定期的に呼ばれ、パラメータを送信・受信する202 2 連続的な値の同期方法PhotonView.RPC
他クライアントのメソッドを実行する[PunRPC]
void Method(){}
メソッドを定義する際に[PunRPC]属性をつける202 3 離散的な値の同期方法


