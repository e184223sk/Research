More than 3 years have passed since last update.　WinFormsでは、グラフ表示と言えばChartコントロールでした。
　WPFでもWindowsFormsHostを使えば表示できますが、データビハインドでゴリゴリしなきゃならない点が美しくありませんよね？
　　C#:Chartコントロールを使う
　　https://qiita.com/nocd5/items/064a783240c1e8590169
　そこで、WPFその他に使えるグラフ描画ライブラリOxyPlotを使おう……と思ったのですが、その際に試行錯誤した記憶をメモしておきます。　ここで表示させるデータは、「時刻―数値」のペアが並んだ時系列データです。C#風に書くとこんな感じ。　supplyDataには「種類―時系列データ」のペアが含まれていますが、種類数は動的に決まります。折れ線グラフで言えば、「何本折れ線が入るのかは実行時まで分からない」といったイメージです。　まあとりあえずググるよね、と思って見つけたサイトはこんな感じです。
　　OxyPlotでグラフを表示する(WPF) - SDD(Sleep-Driven Development)
　　グラフ描画ライブラリ「OxyPlot」の導入方法 - ぴよぴよエンジニアの日記
　　OxyPlot を使い WPF アプリケーションでグラフを表示する。 - 自分の歩いた道に落ちてるコード
　一見豊富に見えますが、どれも「導入法とチュートリアル」といった感じで、後述する壁(折れ線本数の動的制御)に答えるものではありませんでした。というわけで次に調べるのは公式サイトのレファレンスなのですが、　　Welcome to OxyPlot’s documentation! — OxyPlot 2015.1 documentation
　今2017年ですよね？　2015年じゃないですよね？
　……というのは「(いい意味で)枯れたライブラリなんだろう」ということでスルーしていましたが、問題はAPIやプロパティ一覧的なものが全然ないということです。例えば「X軸やY軸に設定するプロパティについての詳細」を知りたい際は
　　Axes — OxyPlot 2015.1 documentation
を読むことになりますが、このページにおける「Position」や「Minimum/Maximum」などの詳細がキッチリと書かれていないんですよね。例えばChartコントロールのAxisに関するレファレンスはこんな感じで分かりやすいことを考えると……。また、MajorStepプロパティやIntervalLengthプロパティなどは左上の検索欄に入力して検索しても出てこないという体たらく。こ れ は ひ ど い　というわけでWebサイトがさっぱり役に立たないのがOxyPlotなのですが、ググってすぐ見つけたマニュアルPDFはまだ役に立ちました。
　　OxyPlot Documentation Release 2015.1
　ただこのリンク先のサイトはどういったものなのかがイマイチよく分からず……トップページによると「ドキュメントの類を配布するためのサイト」らしいのですが、そもそも自前のサイトあるんだからそっちに書けよOxyPlot。　前述のように、今回表示したいグラフの線は可変です。これが固定でしたら、次のコードのようにXAML全開で分かりやすくなったところでした(前述の「チュートリアル」サイトはみんなこんな感じ)　ただ、前述の公式レファレンスPDFを読んだ限りでは、グラフ線の数を動的に制御するにはoxy:Plotでは駄目で、oxy:PlotViewを使う必要があるようです。……このことに気づくまでは、oxy:Plot.Seriesを入力時にそこからプロパティがIntelliSenseで出てこないことに困惑していました(それぐらい対応してくれよ……)。　oxy:PlotViewを使うと、前述のコードは次のようになります。　ポイントとしては、ということですね。ゴリゴリ部分の感触はChartコントロールに似ていたので難しくありませんでしたが、MVVMとは何だったのか感があってちょっと残念です。InvalidatePlotメソッドを呼ぶ部分は次のページを参考にしました。
　　OxyPlotのコントロール(PlotView)をリアルタイムにアップデートする方法 - Qiita　とりあえず使い方には慣れましたが、レファレンスがガバガバだと調べ事に苦労しますねorz
　次にグラフ描画が必要な場合は、LiveChartsを使ってみて感触を確かめようと思います。　冒頭で説明したDictionary&lt;string, TimeSeriesData&gt; supplyDataですが、これを表示させる場合はちょっとした工夫が必要です。つまり、「時刻」をどうプロットするかということです。というわけでサンプルコードを置いておきます。　なお、書式文字列に使用する書式一覧は流石に公式レファレンスに書いていました。
　DateTimeAxis — OxyPlot 2015.1 documentation　目盛りの間隔は、大きなもの(Major)と小さなもの(Minor)の2種類が存在します。これはExcelなどでおなじみの設定方法でしょう。その設定方法についてもサンプルコードを置いておきます。　ちなみにDateTimeにおける「1日」は実数表記だと「1」ですので、例えば1時間毎に区切りたい場合は「1.0/24」を指定することになります。また、OxyColors型やその実態であるOxyColor型はOxyPlot独自のもので、System.Windows.Media.Color型などからキャストできません。　Chartコントロールでは、Series型のYAxisTypeにAxisType.Secondaryを代入することで示していました。
　一方OxyPlotでは、Y軸にKeyを設定し、同じ文字列をSeriesのYAxisKeyに設定すればOKです。　SeriesとしてPieSeries型を用意し、それのSlicesプロパティにList&lt;PieSlice&gt;型を代入すればOKです。
　PieSliceのコンストラクタは引数として(string 名前, double 数値)を取ります。この「数値」は％の値ではなく素の値で大丈夫です。
　　参考：
　　　　PieSeries — OxyPlot 2015.1 documentation
　　　　Xamarin FormsとOxyplotでPCLなグラフをタダで描く - Qiita　相変わらず公式ドキュメントがクソの役にも立たないので苦労しましたが、StackOverFlowなどを調べ回った結果、次のポイントに注意すればOKなことが分かりました。


