
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace CSharpConsole
{
    class Program
    {
        static void Main(string[] args)
        {
            var asm = Assembly.LoadFrom("CSharpDll.dll");       // アセンブリの読み込み
            var module = asm.GetModule("CSharpDll.dll");        // アセンブリからモジュールを取得
            var Person = module.GetType("CSharpDll.Person");    // 利用するクラス(or 構造体)を取得

            if (Person != null)
            {
                // CSharpDll.Personクラスをインスタンス化.
                // コンストラクタへ引数を渡すことも可能.
                dynamic p1 = Activator.CreateInstance(Person, "Aiueo", 29);    

                // dynamicで受けているので, 面倒なプロパティ取得やメソッド取得を省略できる.
                Console.WriteLine($"name= {p1.Name}");
                Console.WriteLine($"age= {p1.Age}");
                Console.WriteLine(p1.ToString());
            }

            Console.ReadKey();
        }
    }
}

