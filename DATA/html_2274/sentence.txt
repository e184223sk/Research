More than 1 year has passed since last update.ASP.NET MVC で多言語対応をこころみてみます。多言語対応だけシンプルにこころみます。(2020-03-07)アップグレード版を書きました。これだけやります。図にするとこうですね。解説していきます。今回使うプロジェクトは次のように New しました。リソースファイルは拡張子 resx のファイルですね。多言語対応のためのリソースファイルは xxxx.[culture name].resx という名称でつくります。デフォルトの言語リソースと、多言語のリソースは同じ階層に並べましょう。リソースファイルのアクセス修飾子は忘れず Public にします。場所は?場所はどこでもよさそうです。私は Resource/I18n/Foo/Localize.resx みたいなフォルダ階層をつくって置きます。 I18n は internationalization の略です。カルチャ?カルチャというのは、 http リクエストヘッダ Accept-Language の値のことみたいです。サイトの閲覧者さんが、何語を求めているかということですね。resx なくない?ないですね。ないときもあるみたいです。そういうときはリストにとらわれず resx の拡張子を手打ちしてファイルを作成すれば OK です。(えぇー?!
あるいはすでにある resx ファイルをどこかから見つけてきて、 Add Existing Item から追加することもできます。リソースに書いたテキストを使うには?String1 というテキストを用意したなら……こういうふうに呼び出します。実はこの時点で CurrentUICulture の値に応じた言語スイッチが可能になっています。 CurrentUICulture というのは System.Threading.Thread.CurrentThread.CurrentUICulture のことで、上述したカルチャの情報を設定する項目みたいですね。値を en-GB とかにすると Localize.en.resx の String1 が呼び出されます。プログラム内で言語を切り替えるだけでよいのならここでおしまいです。トップディレクトリの Web.config の system.web タグ内に &lt;globalization culture="auto" uiCulture="auto" /&gt; を記述します。リクエスト・ヘッダの Accept-Language に応じて、自動で CurrentUICulture が変わるようになります。ということはつまり、 Accept-Language に応じて言語が切り替わるようになるってことですね。Accept-Language はどう変更する?毎回ブラウザの再起動が必要になってしまうので、ふたつ開いてそれぞれでアクセスして確認するとラクでした。


