C# string.Trimメソッドは文字列の前後の「空白」を削除するメソッドです。.NET の文字列からの文字のトリミングと削除単語の両端に空白（空白とも呼ばれます）が含まれる単語になってしまう可能性があります。String.Trim Method文字列の最初と最後から、文字の配列で指定された空白または文字を削除します。ただ、一口に「空白」といっても半角スペース・全角スペース・タブ、改行コード...などさまざま空白が存在します。string.Trimメソッドで取り除かれる「空白」はChar.IsWhiteSpaceにマッチする文字を指します。空白文字は Unicode 標準で定義されています。この Trim メソッドは true、Char.IsWhiteSpace メソッドに渡されたときの戻り値を生成する先頭と末尾の文字をすべて削除します。Char.IsWhiteSpace がマッチする文字は下記の通りです。ここからは補足で、なぜ上記の調査をしたか記述いたします。外部から連携される電話番号が問題ないように見えるのに正規表現にマッチせずバリデーションエラーになっていました。電話番号の文字列の先頭でカーソルキーが滑るので、先頭にゼロ幅スペース（Zero Width Space U+200B）があると考えました。ゼロ幅スペース | Unicode キャラクター図鑑ただ、string.Trimしてもエラーが出続けました。※※この時点ではU+200Bがstring.Trimで取り除かれる対象だと勘違いしていました。※※そこで、具体的に「空白」判定される文字（char）は何なのか調べることにしました。電話番号の文字列の Unicode を確認しました。すると先頭に双方向テキストの「左から右への埋め込み」（Left-To-Right Embedding U+202A）というものが付いていました。左から右への埋め込み | Unicode キャラクター図鑑string.TrimにはChar型の配列を引数に取るオーバーロードもあります。U+202Aも取り除くようにして最終的に解決しました。※Char型の配列を引数に取るオーバーロードメソッドは「空白」のトリム処理は行われないのでTrimを２度呼び出しています。


