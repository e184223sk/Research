/// &lt;summary&gt;
/// テスト対象クラス
/// &lt;/summary&gt;
public class TestTargetClass
{
    /// &lt;summary&gt;
    /// Privateメンバ変数
    /// &lt;/summary&gt;
    private int _privateMember = 0;

    /// &lt;summary&gt;
    /// PrivateStaticメンバ変数
    /// &lt;/summary&gt;
    private static string _privateStaticMember = "";

    /// &lt;summary&gt;
    /// Publicメソッド
    /// &lt;/summary&gt;
    /// &lt;param name="param"&gt;&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public int PublicMethod(int param)
    {
        return param + 1;
    }

    /// &lt;summary&gt;
    /// Privateメソッド
    /// &lt;/summary&gt;
    /// &lt;param name="val1"&gt;&lt;/param&gt;
    /// &lt;param name="val2"&gt;&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    private int PrivateMethod(int val1, int val2)
    {
        return _privateMember + val1 + val2;
    }

    /// &lt;summary&gt;
    /// Privateメソッド(非同期)
    /// &lt;/summary&gt;
    /// &lt;param name="val1"&gt;&lt;/param&gt;
    /// &lt;param name="val2"&gt;&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    private async Task&lt;int&gt; PrivateMethodAsync(int val1, int val2)
    {
        await Task.Delay(0);
        return val1 + val2;
    }

    /// &lt;summary&gt;
    /// PrivateStaticメソッド
    /// &lt;/summary&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    private static string GetPrivateStaticMember()
    {
        return _privateStaticMember;
    }
}

