
using System;
using System.Collections.Generic;

namespace UMLでプリキュア
{
    class 変身シーンのセリフ
    {
        // List自体を、外から差し替えられないようにprivateにしている
        private List&lt;セリフ&gt; 開始の合図 = new List&lt;セリフ&gt;();
        private List&lt;セリフ&gt; ツケ = new List&lt;セリフ&gt;();
        private List&lt;セリフ&gt; 心意気 = new List&lt;セリフ&gt;();
        private List&lt;セリフ&gt; 個人の名乗り = new List&lt;セリフ&gt;();
        private List&lt;セリフ&gt; 相手へのメッセージ = new List&lt;セリフ&gt;();
        private List&lt;セリフ&gt; 目的メッセージ = new List&lt;セリフ&gt;();
        private List&lt;セリフ&gt; チームの名乗り = new List&lt;セリフ&gt;();

        public 変身シーンのセリフ(
            List&lt;セリフ&gt; 開始の合図,
            List&lt;セリフ&gt; ツケ,
            List&lt;セリフ&gt; 心意気,
            List&lt;セリフ&gt; 個人の名乗り,
            List&lt;セリフ&gt; 目的メッセージ,
            List&lt;セリフ&gt; チームの名乗り,
            List&lt;セリフ&gt; 相手へのメッセージ)
        {
            // Listは「変身シーンのセリフ」の特性であると考えられるため、
            // 引数のリストをそのまま代入せずに、中身だけを代入する
            if( 開始の合図 != null)
            {
                foreach (セリフ serif in 開始の合図)
                {
                    this.開始の合図.Add(serif);
                }
            }
            if (ツケ != null)
            {
                foreach (セリフ serif in ツケ)
                {
                    this.ツケ.Add(serif);
                }
            }
            if (心意気 != null)
            {
                foreach (セリフ serif in 心意気)
                {
                    this.心意気.Add(serif);
                }
            }
            if (個人の名乗り != null)
            {
                foreach (セリフ serif in 個人の名乗り)
                {
                    this.個人の名乗り.Add(serif);
                }
            }
            if (目的メッセージ != null)
            {
                foreach (セリフ serif in 目的メッセージ)
                {
                    this.目的メッセージ.Add(serif);
                }
            }
            if (チームの名乗り != null)
            {
                foreach (セリフ serif in チームの名乗り)
                {
                    this.チームの名乗り.Add(serif);
                }
            }
            if (相手へのメッセージ != null)
            {
                foreach (セリフ serif in 相手へのメッセージ)
                {
                    this.相手へのメッセージ.Add(serif);
                }
            }
        }

        public void 開始()
        {
            if (開始の合図 != null &amp;&amp; 開始の合図.Count &gt; 0)
            {
                foreach (セリフ serif in 開始の合図)
                {
                    プリキュアがセリフを叫ぶ(serif);
                }
                Console.WriteLine();
            }
            if (ツケ != null &amp;&amp; ツケ.Count &gt; 0)
            {
                foreach (セリフ serif in ツケ)
                {
                    プリキュアがセリフを叫ぶ(serif);
                }
                Console.WriteLine();
            }
            if (心意気 != null &amp;&amp; 心意気.Count &gt; 0)
            {
                foreach (セリフ serif in 心意気)
                {
                    プリキュアがセリフを叫ぶ(serif);
                }
                Console.WriteLine();
            }
            if (個人の名乗り != null &amp;&amp; 個人の名乗り.Count &gt; 0)
            {
                foreach (セリフ serif in 個人の名乗り)
                {
                    プリキュアがセリフを叫ぶ(serif);
                }
                Console.WriteLine();
            }
            if (目的メッセージ != null &amp;&amp; 目的メッセージ.Count &gt; 0)
            {
                foreach (セリフ serif in 目的メッセージ)
                {
                    プリキュアがセリフを叫ぶ(serif);
                }
                Console.WriteLine();
            }
            if (チームの名乗り != null &amp;&amp; チームの名乗り.Count &gt; 0)
            {
                foreach (セリフ serif in チームの名乗り)
                {
                    プリキュアがセリフを叫ぶ(serif);
                }
                Console.WriteLine();
            }
            if (相手へのメッセージ != null &amp;&amp; 相手へのメッセージ.Count &gt; 0)
            {
                foreach (セリフ serif in 相手へのメッセージ)
                {
                    プリキュアがセリフを叫ぶ(serif);
                }
                Console.WriteLine();
            }
        }

        private void プリキュアがセリフを叫ぶ(セリフ serif)
        {
            foreach (プリキュア pricure in serif.発言者)
            {
                Console.Write(pricure.プリキュア名 + ":");
                pricure.叫ぶ(serif.言葉);
            }
        }
    }
}

