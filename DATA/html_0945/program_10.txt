
// newしたいクラス Service, Service2, Client
class Service { }

class Service2 { }

class Client
{
    public Client(Service service, Service2 service2) { }
    public void Work() { /* service, service2 を使って何かする */ }
}

// ConfigureGenericHost 属性をつけると、GenericHostで使えるようになる
[Factory]
[ConfigureGenericHost]
interface IFactory
{
    Service ResolveService();
    Service2 ResolveService2();
    Client ResolveClient();
}

class GenericHostSample
{
    public void Run()
    {
        var services = new ServiceCollection();

        // GenericHost の ServiceCollection インスタンスに、ファクトリーのインスタンスを登録する
        services.UseDeptorygenFactory(new Factory());

        var serviceProvider = services.BuildServiceProvider();

        // Factory クラスで解決できる依存関係が、ServiceProvider からも解決できるようになる
        serviceProvider.GetService&lt;Client&gt;().Work();
    }
}

