More than 1 year has passed since last update.これまで、「ASP.NET Core 3.0 RazorPages事始め」ってタイトルを使ってたけど、今回から「事始め」は取ることにします。Razor Pages では、FormTagHelperが form要素に偽造防止トークンを挿入してくれます。これで、以下のような非表示のinputタグ（偽造防止トークン）が自動挿入されます。これは、クロスサイトリクエストフォージェリ（Cross site request forgeries、CSRF）と呼ばれる脆弱性対策を行うためのものです。試しに、ブラウザの開発者ツールを使ってトークンを書き替えてsubmitしてみます。HTTP ERROR 400 のエラーになりました。調べてみたら、AutoValidateAntiforgeryToken とか ValidateAntiForgeryToken という属性があるんですが、自動生成されたソースにはこれらの属性を使っている個所はどこにもありません。デフォルトで、AutoValidateAntiforgeryToken が適用されてるようです。次のように書くと偽造防止トークンは生成されません。まあ、あえてそうする理由は普通はないと思いますが...IgnoreAntiforgeryToken属性を使うと、特定のページ あるいは、特定のページハンドラ（どうもこの名前が覚えられない...）だけ、偽造防止トークンの必要性を無くすことができます。試しに、チュートリアルで作成したプログラムの EditModel クラスにIgnoreAntiforgeryToken 属性を適用してみます。今度は、ブラウザの開発ツールで、トークンを書き替えてもエラーにならずに、データを更新することができました。この属性も前述のasp-antiforgeryと同様に、通常の RazorPages アプリケーションでは、これを使うことはほとんど無いように思います。


