using System;
using System.Threading;
using System.Threading.Tasks;

class Program{
    static async Task BasicAsync(){
        var catchAsync="\nSTART";
        var myAsync=(Func&lt;string,int,Task&gt;)(async(name,wait)=&gt;{
            Console.WriteLine("{0}:START",name);
            await Task.Delay(wait);
            Console.WriteLine("{0}:{1}",name,wait);
            catchAsync+="=&gt;"+name;
        });

        Console.WriteLine("Begin Async");

        var WaitA=myAsync("A",800);
        var WaitB=myAsync("B",100);
        var WaitC=myAsync("C",1500);

        await Task.WhenAll(WaitA,WaitB,WaitC);
        Console.WriteLine("--- Wall1 ---");

        var WaitD=myAsync("D",800);
        var WaitE=myAsync("E",100);
        var WaitF=myAsync("F",1500);
        var WaitGroup=new[]{WaitD,WaitE,WaitF};

        await Task.WhenAny(WaitGroup);
        Console.WriteLine("--- Wall2 ---");

        await myAsync("G",690);
        Console.WriteLine("--- Wall3 ---");

        await Task.WhenAll(WaitGroup);
        Console.WriteLine("--- Wall4 ---");

        Console.WriteLine("End Async");
        Console.WriteLine(catchAsync);
    }

    static void Main(){
        BasicAsync().Wait();
    }
}

