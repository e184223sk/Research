//doubleと文字列のコンバーター
public class DoubleToStringConverter : System.Windows.Data.IValueConverter
{
  private string convertBackString; //入力文字列

  //doubleから文字列への変換（表示時に使われる）
  public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)
  {
    try
    {
      if (!(value is double)) return null;

      string format = (parameter as string) ?? string.Empty;
      if (!string.IsNullOrEmpty(convertBackString))
      {
        //フォーマットを「整数部」と「小数部」に分ける
        var formatParts = format.Split('.');
        if (formatParts.Length &gt;= 2)
        {
          //入力文字列が小数点で終わっていたら、「整数部」＋「小数点そのもの」をフォーマットにする
          if (convertBackString.EndsWith(culture.NumberFormat.NumberDecimalSeparator))
          {
            format = formatParts[0] + @"\" + culture.NumberFormat.NumberDecimalSeparator;
          }
          else
          {
            var pos = convertBackString.IndexOf(culture.NumberFormat.NumberDecimalSeparator);
            if (pos &gt;= 0)
            {
              //入力文字列に小数部があれば、「整数部」＋「ピリオド」＋「入力文字列の小数の桁数分の０」をフォーマットにする
              var digitLength = convertBackString.Length - pos - 1;
              format = formatParts[0] + @"."
                  + new string('0', digitLength)
                  + formatParts[1].Substring(Math.Min(digitLength, formatParts[1].Length));
            }
          }
        }
      }
      return ((double)value).ToString(format);
    }
    finally
    {
      convertBackString = null;
    }
  }

  //文字列からdoubleへの変換（入力時に使われる）
  public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)
  {
    //入力文字列を保存する
    convertBackString = value as string;

    if (!string.IsNullOrEmpty(convertBackString)
      &amp;&amp; double.TryParse(convertBackString, out double newValue))
    {
      //入力文字列をパーズして戻す
      return newValue;
    }
    else
    {
      return null;
    }
  }
}

