using System;
using System.Drawing;
using System.Text;
using System.Windows.Forms;

namespace MyTrainingCsFrm1
{
    public partial class Form1 : Form
    {
        // フォーム呼び出しで作成するボタン(Windowsフォームのボタン - Buttonを継承する)
        private Kazumi75Button[] manyButtons;

        // フォーム呼び出しで作成するテキストボックスとその識別名
        private TextBox[] manyTextBoxes;
        private string[] txtbxNm;

        // 配列の要素数(ここでは8個)
        private const int ElementNum = 8;

        public Form1()
        {
            InitializeComponent();
            this.manyButtons = null;
            this.manyTextBoxes = null;
            this.txtbxNm = null;
        }

        // フォームを呼び出すボタン
        private void formCallButton_Click(object sender, EventArgs e)
        {
            if (this.manyButtons != null || this.manyTextBoxes != null)
            {
                MessageBox.Show("すでに表示されています");
                return;
            }

            // ボタンの各メッセージはここであらかじめ設定する
            string[] msgs = new string[ElementNum];
            msgs[0] = "浦賀";
            msgs[1] = "鎌倉";
            msgs[2] = "三崎";
            msgs[3] = "観音崎";
            msgs[4] = "横須賀中央";
            msgs[5] = "城ヶ島";
            msgs[6] = "七里ガ浜";
            msgs[7] = "馬堀";

            // テキストボックスの各識別名はここであらかじめ設定する
            this.txtbxNm = new string[ElementNum];
            this.txtbxNm[0] = "txbUraga";
            this.txtbxNm[1] = "txbKamakura";
            this.txtbxNm[2] = "txbMisaki";
            this.txtbxNm[3] = "txbKannonzaki";
            this.txtbxNm[4] = "txbYokosuka";
            this.txtbxNm[5] = "txbJogashima";
            this.txtbxNm[6] = "txbShichirigahama";
            this.txtbxNm[7] = "txbMabori";

            // ボタン(Windowsフォームのボタンを継承する)とテキストボックスの作成
            this.manyButtons = new Kazumi75Button[ElementNum];
            this.manyTextBoxes = new TextBox[ElementNum];

            // ボタンとテキストボックスの各要素に対するプロパティ設定とフォーム配置
            for (int i = 0; i &lt; this.manyButtons.Length; i++)
            {
                // インスタンス作成
                this.manyButtons[i] = new Kazumi75Button();
                this.manyTextBoxes[i] = new TextBox();

                // ボタンの名前とテキストのプロパティを設定
                this.manyButtons[i].Name = "OriginalButton" + i;
                this.manyButtons[i].Text = "ボタン" + i;
                // テキストボックスの名前とテキストのプロパティを設定
                this.manyTextBoxes[i].Name = txtbxNm[i];
                this.manyTextBoxes[i].Text = "(" + (i + 1) + "つ目に何か入れてね)";

                // ボタンクリック時に参照するリストボックスを指定
                this.manyButtons[i].targetLbox = listBox1;

                // ボタンクリック時のメッセージを設定
                this.manyButtons[i].buttonMsg = msgs[i];

                // ボタンのサイズと配置
                this.manyButtons[i].Size = new Size(100, 20);
                this.manyButtons[i].Location = new Point(10, 10 + i * 22);
                // テキストボックスのサイズと配置
                this.manyTextBoxes[i].Size = new Size(150, 20);
                this.manyTextBoxes[i].Location = new Point(120, 10 + i * 22);

                // フォームへの追加
                this.Controls.Add(this.manyButtons[i]);
                this.Controls.Add(this.manyTextBoxes[i]);

                // クリック時のボタンごとのイベント動作を作成する
                this.manyButtons[i].eventMaking();
            }

            // フォーム呼び出し後は、テキストボックスの内容確認ボタンを有効化する
            buttonCheckEntry.Enabled = true;
        }

        // 動的に呼び出したテキストボックスの内容を確認するボタン
        private void buttonCheckEntry_Click(object sender, EventArgs e)
        {
            StringBuilder sb = new StringBuilder();

            // テキストボックスを識別名で探し、その内容を取得する
            for (int i = 0; i &lt; ElementNum; i++)
            {
                sb.Append("[" + i + "]");

                // フォーム上の識別名に該当するコントロールを探す
                Control[] txtboxctrls = this.Controls.Find(this.txtbxNm[i], false);

                for (int j = 0; j &lt; txtboxctrls.Length; j++)
                {
                    // 取得したテキストボックスの内容を文字列取得
                    TextBox tbox = (TextBox)txtboxctrls[j];

                    sb.Append(tbox.Text);
                }

                // 最終要素以外の場合は「/」で区切る
                if (i &lt; ElementNum - 1)
                {
                    sb.Append(" / ");
                }
            }

            // メッセージを表示する
            MessageBox.Show("入力したものは…" + sb.ToString() + " です。");
        }
    }
}

