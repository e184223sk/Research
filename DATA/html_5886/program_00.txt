public class MainWindowViewModel : INotifyPropertyChanged
{
    //INotifyPropertyChanged実装
    public event PropertyChangedEventHandler PropertyChanged;
    private void NotifyPropertyChanged([CallerMemberName]string propertyName = null)
        =&gt; PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));

    private List&lt;object&gt; dayOfWeeks = typeof(DayOfWeek).GetEnumValues().Cast&lt;object&gt;().ToList();
    private List&lt;object&gt; dateTimeKinds = typeof(DateTimeKind).GetEnumValues().Cast&lt;object&gt;().ToList();

    //添付プロパティでItemSourceは不要になる
    private List&lt;object&gt; _ItemSource;
    public List&lt;object&gt; ItemSource
    {
        get =&gt; _ItemSource;
        set
        {
            if (_ItemSource == value)
                return;
            _ItemSource = value;
            NotifyPropertyChanged();
        }
    }

    private object _SelectedItem;
    public object SelectedItem
    {
        get =&gt; _SelectedItem;
        set
        {
            if (_SelectedItem == value)
                return;
            _SelectedItem = value;
            NotifyPropertyChanged();
        }
    }

    private bool _IsDayOfWeek = false;
    public bool IsDayOfWeek
    {
        get =&gt; _IsDayOfWeek;
        set
        {
            if (_IsDayOfWeek == value)
                return;
            _IsDayOfWeek = value;

            ItemSource = value ? dayOfWeeks : dateTimeKinds;
            SelectedItem = value ? (object)DayOfWeek.Monday : DateTimeKind.Unspecified;

            NotifyPropertyChanged();
        }
    }

    public MainWindowViewModel()
    {
        IsDayOfWeek = true;
    }
}

