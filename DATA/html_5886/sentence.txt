More than 3 years have passed since last update.UWPやWPFで列挙型から1つの値を選ぶ目的でComboBoxやListBoxを使用することはよくあります。
その場合、ItemSourceに列挙型の値のリストを入れる必要があります。以前の記事では列挙型を指定することで、その型の全値を提供するMarkUpExtensionをXAML側でItemSourceに使用する方法を紹介しました。しかし、XAML側で型を指定するため、その内容を動的に変更することは出来ません。
また、多くの用途において、SelectedItemの型と同じなので、できればSelectedItemに自動で合わせてくれたほうがよいです。
そこで今回は添付プロパティを用いて、SelectedItemに合わせてItemSourceを自動生成します。
2つListBoxが並んでおり、片方を選択するともう片方に伝わります。
さらに下のCheckBoxをクリックするとListBoxの候補値が切り替わります。
Viewは
（左）VMのItemSourceとSelectedItemに同名のプロパティをバインドした通常のListBox
（右）今回紹介する添付プロパティをVMのSelectedItemのみにバインドしたListBox
の２つがあります。
さらにその下のCheckBoxはIsCheckedがVMのIsDayOfWeekにバインドしてあります。ViewModelでは
・ItemSource   通常のListBoxで使用するための列挙値の配列プロパティ
・SelectedItem 選択された列挙値プロパティ
・IsDayOfWeek  列挙型の切り替えプロパティ
が変更通知プロパティとして実装されています。
またIsDayOfWeekが変更された場合、ItemSourceとSelectedItemの中身がdayOfWeeks⇔dateTimeKinds全値配列間で変更されます。今回の添付プロパティを使用した場合、ItemSourceとその元の２つの配列（dayOfWeeks, dateTimeKinds)は不要になります。
その場合の切り替え方法はSelectedItemへのDayOfWeekとDateTimeKindの任意の値の入力です。添付プロパティの基本的な説明などは
WPF4.5入門 その45 「添付プロパティ」 - かずきのBlog@hatena
などを参考にして下さい。この添付プロパティの仕事は値が入力された際に、
・ItemSourceにその値の列挙型の全値リストを設定する
・SelectedItemとこの添付プロパティをバインドする
の２点です。つまり、UIからの変更は
ViewのSelectorのSelectedItem→添付プロパティのSelectedEnumItem→VMのSelectedItem
の順で伝わります。
逆にVMからの変更は
VMのSelectedItem→添付プロパティ→ViewのSelectorのSelectedItem
の順です。さらに変更された値の実行型が違うなら、添付プロパティの変更時にViewのItemSourceが変更されます。VisualStudio2017
.NET Framework 4.7
C#7.1


