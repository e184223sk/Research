More than 1 year has passed since last update.お勉強のために.NETでDDDっぽく開発していたらドメイン層はF#で記述したほうが(C#より)より良いんじゃないかぁと思ったので投稿してみます。とんちんかんなこと書いてたらすいません。
以下、良いところ。値オブジェクトって不変だったり等価性だったり交換可能性がないとダメじゃないですか。
C#でこれを担保しようと思うと値オブジェクトの実装に記載されているValueObjectを継承するかオレオレでEqualsをオーバーライドしないといけないから実装が億劫になるんですよね。
上記リンクに載っているAddressを例にするとこれがF#だとレコードで書けるんですよ。これをC#側で見てみるとと等価性についてがっつり実装してくれてます。コンストラクタも自動で生成してくれてます。レコード型でもメソッドやプロパティを追加できるのでクラスのように使えます。ドメイン層には業務知識を記述するんですけどたいてい、「～が～したら～する」ってなるはずなので入力と出力がしっかりしている関数型言語で記述したほうがより良いのかなぁと思いました。特に便利だと思ったのがunitとignoreですね。戻り値がunitだと副作用があるとわかるしignoreが記述されていると設計が臭い気がします。実装の教本として「リーダブルコード」や「新装版　リファクタリング　既存のコードを安全に改善する」を読んでるんですが、メソッドは副作用なく簡潔で一度に一つのことをやるべき旨が書かれているので、そう書きやすい関数型言語がおすすめです。データの入出力部や画面の入出力部のように例外処理やnullと付き合っていかないといけない場所はF#だと面倒くさいので、そこはC#なりVBで記述したほうが良いと思います。DIP(依存性逆転の原則)で作成しておけばドメイン層にはインターフェースだけ記述すれば良いわけですし。これは.NETの良いところですね。もちろんC#が駄目って話ではないです。より良いって感じです。
F#だとだらだらと手続き的に書きづらいところが逆に良いところかなと思いました。


