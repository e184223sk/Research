using System;
using System.Linq;
using System.Collections.Generic;

namespace MergeSortApp {
    static class MargeSort {
        public static IEnumerable&lt;T&gt; Sort&lt;T&gt;(IEnumerable&lt;T&gt; items, Comparison&lt;T&gt; compare) {
            if (items.Count() &gt; 1) {
                int m = items.Count() / 2;
                var a1 = items.Take(m).ToArray();
                var a2 = items.Skip(m).ToArray();
                return Merge(Sort(a1, compare), Sort(a2, compare), compare);
            }
            return items;
        }

        // 再帰版　Mergeメソッド
        private static IEnumerable&lt;T&gt; Merge&lt;T&gt;(IEnumerable&lt;T&gt; a1, IEnumerable&lt;T&gt; a2, Comparison&lt;T&gt; compare) {
            if (!a1.Any()) {
                return a2;
            } else if (!a2.Any()) {
                return a1;
            }
            var x1 = a1.First();
            var x2 = a2.First();
            if (compare(x1, x2) &lt; 0) {
                return (new T[] { x1 }).Concat(Merge(a1.Skip(1), a2, compare));
            } else {
                return (new T[] { x2 }).Concat(Merge(a1, a2.Skip(1), compare));
            }
        }
    }
}

