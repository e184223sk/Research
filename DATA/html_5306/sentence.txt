WebAPIを利用した時にネストしたJSON、ルートが配列のJSONが返ってきて、
その扱い方がわからず調べたのでメモしときます。例としてMicrosoft TlanslatorのAPIを利用した際のレスポンスを想定して話を進めます。まずはネストについてです。入れ子になっている構造のことを指します。
下記のようなネストしたJSONがレスポンスBodyとして返ってきたと想定します。早速ですがコードです。TranslateDataという構造体の中にネストして構造体を定義しています。
JSONデータと似たような作りになるので見やすいかと思います。知っていれば大したことないですが、初見で時間を使ってしまった点をメモに残します。JSONのKEYと定義した構造体の変数名が一致している必要があります。
不一致の場合はNullが返ってきました。配列及びリストからオブジェクトを作成する際に、
ルートのオブジェクトが配列やリストにならないようにする必要があるようです。
例えば下記のようなJSONデータがあったとします。こちらを下記のように配列のままJsonUtility.FromJsonのジェネリクスに渡して変換し、
Valueを取り出そうとするとエラーとなります。一つ構造体を定義し、その中で配列を宣言すればOKです。最初のJSONデータの例では挙げませんでしたが、
Microsoft Tlanslatorのレスポンスとして返ってくるJSONデータはルートが配列で返ってきます。[で囲われているのがわかります。すなわちルートが配列ということです。
これをそのまま利用してオブジェクトを作成することはできません。解決策として2つのアプローチを試しました。まず、配列の上に新たにKeyを定義して配列をルートの一階層下にする方法です。次に、[を消してしまう方法です。
最初と最後の文字列を消すというごり押しです。割と似たような現象に何度も遭遇するようなので、
ヘルパークラスなるものを定義した方が良いかもしれません。How to load an array with JsonUtility?
【Unity】JsonUtilityでルート配列のデシリアライズ
はなちるのマイノート
JSONについて調べてみた


