
using System.Linq;

namespace StackQueue
{
    class MyQueue
    {
        #region Field
        private int size { get; set; }
        private string[] queue { get; set; }
        private int idxEnQueue { get; set; }
        private int idxDeQueue { get; set; }
        #endregion

        public MyQueue(int size)
        {
            this.size = size;
            this.queue = new string[size];
            this.queue.Select(x =&gt; "");
        }

        /// &lt;summary&gt;
        /// EnQueue
        /// &lt;/summary&gt;
        /// &lt;param name="num"&gt;&lt;/param&gt;
        public void EnQueue(string num)
        {
            if (!string.IsNullOrEmpty(queue[idxEnQueue])) { return; }

            queue[idxEnQueue] = num;

            idxEnQueue = (idxEnQueue + 1) % size;
        }

        // &lt;summary&gt;
        /// DeQueue
        /// &lt;/summary&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public string DeQueue()
        {
            if (string.IsNullOrEmpty(queue[idxDeQueue])) { return ""; }

            string buf = queue[idxDeQueue]; 
            queue[idxDeQueue] = "";

            idxDeQueue = (idxDeQueue + 1) % size;

            return buf;
        }

        /// &lt;summary&gt;
        /// キュー出力
        /// &lt;/summary&gt;
        public string ExportQueue()
        {
            var queueFormat = new string[size];

            this.queue.CopyTo(queueFormat, 0);

            // EnQueue対象に[]を付ける
            if (this.queue.Any(x =&gt; x != ""))
            {
                queueFormat[idxDeQueue] = $"[{queueFormat[idxDeQueue]}]";
            }

            return string.Join(", ", queueFormat);
        }
    }
}

