using System.Linq;

namespace StackQueue
{
    class MyStack
    {
        #region Field
        private int size { get; set; }
        private string[] stack { get; set; }
        private int idxStack { get; set; }
        #endregion

        public MyStack(int size)
        {
            this.size = size;
            this.stack = new string[size];
            this.stack.Select(x =&gt; "");
        }

        /// &lt;summary&gt;
        /// Push
        /// &lt;/summary&gt;
        /// &lt;param name="num"&gt;&lt;/param&gt;
        public void Push(string num)
        {
            stack[idxStack] = num;

            if (idxStack &lt; size - 1)
            {
                idxStack++;
            }
        }

        /// &lt;summary&gt;
        /// Pop
        /// &lt;/summary&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public string Pop()
        {
            if (this.isNeededDecrementByStack())
            {
                idxStack--;
            }

            string buf = stack[idxStack];
            stack[idxStack] = "";

            return buf;
        }

        /// &lt;summary&gt;
        /// スタック出力
        /// &lt;/summary&gt;
        public string ExportStack()
        {
            var stackFormat = new string[size];

            this.stack.CopyTo(stackFormat, 0);

            // Pop対象に[]を付ける
            if (this.stack.Any(x =&gt; x != ""))
            {
                if (this.isNeededDecrementByStack())
                {
                    stackFormat[idxStack - 1] = $"[{stackFormat[idxStack - 1]}]";
                }
                else
                {
                    stackFormat[idxStack] = $"[{stackFormat[idxStack]}]";
                }
            }

            return string.Join(", ", stackFormat);
        }

        /// &lt;summary&gt;
        /// スタックがデクリメント必要かの確認
        /// &lt;/summary&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        private bool isNeededDecrementByStack()
        {
            if (0 &lt; idxStack &amp;&amp; idxStack &lt; size - 1
            || idxStack == size - 1 &amp;&amp; string.IsNullOrEmpty(this.stack[idxStack]))
            {
                return true;
            }
            else
            {
                return false;
            }
        }
    }
}

