
public class PopertyChangedHistoryTest
{
    private class NotifyPropertyChanged : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        private void SetProperty&lt;T&gt;(ref T field, T value, [CallerMemberName] string propertyName = null)
        {
            if (!EqualityComparer&lt;T&gt;.Default.Equals(field, value))
            {
                field = value;
                this.PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private int _Number;
        public int Number
        {
            set =&gt; this.SetProperty(ref _Number, value);
            get =&gt; this._Number;
        }

        private string _Text = "";
        public string Text
        {
            set =&gt; this.SetProperty(ref _Text, value);
            get =&gt; this._Text;
        }
    }

    [Fact]
    public void PopertyChangedTest()
    {
        var notifyPropertyChanged = new NotifyPropertyChanged();
        var history = new PopertyChangedHistory(notifyPropertyChanged);

        Assert.Equal(0, history.GetPropertyChangedCount(nameof(NotifyPropertyChanged.Number)));
        Assert.Equal(0, history.GetPropertyChangedCount(nameof(NotifyPropertyChanged.Text)));
        notifyPropertyChanged.Number = 2;
        Assert.Equal(1, history.GetPropertyChangedCount(nameof(NotifyPropertyChanged.Number)));
        Assert.Equal(0, history.GetPropertyChangedCount(nameof(NotifyPropertyChanged.Text)));
        notifyPropertyChanged.Text = "foo";
        Assert.Equal(1, history.GetPropertyChangedCount(nameof(NotifyPropertyChanged.Number)));
        Assert.Equal(1, history.GetPropertyChangedCount(nameof(NotifyPropertyChanged.Text)));
        notifyPropertyChanged.Number = 2;
        Assert.Equal(1, history.GetPropertyChangedCount(nameof(NotifyPropertyChanged.Number)));
        Assert.Equal(1, history.GetPropertyChangedCount(nameof(NotifyPropertyChanged.Text)));
        notifyPropertyChanged.Number = 0;
        Assert.Equal(2, history.GetPropertyChangedCount(nameof(NotifyPropertyChanged.Number)));
        Assert.Equal(1, history.GetPropertyChangedCount(nameof(NotifyPropertyChanged.Text)));
    }
}

