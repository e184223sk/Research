
        [Theory]
        [InlineData(0, 1)]
        [InlineData(1, 2)]
        [InlineData(2, 0)]
        public void じゃんけんで勝てるか(int player, int opponent)
        {
            TestExecuter(player, opponent, "勝ち！");
        }

        [Theory]
        [InlineData(0, 2)]
        [InlineData(1, 0)]
        [InlineData(2, 1)]
        public void じゃんけんで負けるか(int player, int opponent)
        {
            TestExecuter(player, opponent, "負け！");
        }

        [Theory]
        [InlineData(0, 0)]
        [InlineData(1, 1)]
        [InlineData(2, 2)]
        public void じゃんけんであいこできるか(int player, int opponent)
        {
            TestExecuter(player, opponent, "あいこでした！");
        }

        private void TestExecuter(int player, int opponent, string result)
        {
            var opponentInput = new StubOpponentInput(opponent);
            var playerInput = new StubPlayerInput(player);

            var output = new StubOutput();
            var jankenChecker = new JankenChecker(output);

            var jankenService = new JankenService(
                opponentInput,
                playerInput,
                jankenChecker
            );

            jankenService.Execute();

            Assert.Equal(result, output.Output);
        }

