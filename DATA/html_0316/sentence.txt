Unityにおけるシーン切り替えの処理にはSceneManager.LoadScene 
関数を用いるが、以下の難点がある。
・ロードが発生する時間画面が止まってしまう
・単純な画面切り替えなので演出が物足りなく感じる
これら解消のためフェードアウト風の処理をはさむことにした。・Unity - 2019.3.13f1比較のため、はじめにSceneManager.LoadScene関数によって
scene_1からscene_2へどのように遷移するか確認する。フェードアウト遷移を以下の手順で実現するHierarchyタブ上で右クリック ＞ UI ＞ Raw Imageを選択
inspectorフィールドのColorを黒に変更する
※オブジェクト名は便利のため、Masking＿Imageという名前に変更した。・Start()でマスク画像の最大化、透明化、非活性化を行っている
・transition()で画面遷移とフェードアウト処理を同時に開始するフェードアウト処理にコルーチンを使用することにより、非同期処理で
画面遷移を同時に行うことができる。本来の非同期処理というのはマルチスレッド（複数処理を並行して行う）のことを指すが
コルーチンはシングルスレッドであり、擬似的に非同期処理を実装できる仕組みらしい。今回のケースでは1フレームの中でまずマスク画像の透明度を0.01下げ、
残りの尺で画面遷移処理をする。これを毎フレーム繰り返すことであたかも
フェードアウト処理と画面遷移を同時に行っているように見せている、ということになる。今回の内容は自分と同じように個人でゲームを作成している方の助けになればと思い、書きました。
ローディング画面までガッツリ作りたい派の方々には不足が多いかもしれません‥orz
自己流な部分が多いと思いますので、指摘・感想等自由にコメント欄にお寄せ頂ければと思います。


