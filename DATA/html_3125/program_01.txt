
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public static partial class GameObjectExtensions
{

    public static bool HasChild(this GameObject gameObject)
    {
        return 0 &lt; gameObject.transform.childCount;
    }

    public static bool HasComponent&lt;T&gt;(this GameObject self) where T : Component
    {
        return self.GetComponent&lt;T&gt;() != null;
    }

    public static Transform FindInParents&lt;T&gt;(this GameObject g) where T : Component
    {

        object comp;
        Transform t = g.transform;

        while (t != null)
        {
            comp = t.GetComponent&lt;T&gt;();
            if (comp == null)
            {
                t = t.transform.parent;
            }
            else
            {
                break;
            }

        }
        return t;
    }
}

public static partial class TransformExtensions
{
    public static bool HasChild(this Transform transform)
    {
        return 0 &lt; transform.childCount;
    }

    public static bool HasComponent&lt;T&gt;(this Transform self) where T : Component
    {
        return self.GetComponent&lt;T&gt;() != null;
    }

    public static Transform FindInParents&lt;T&gt;(this Transform t) where T : Component
    {

        object comp;

        while (t != null)
        {
            comp = t.GetComponent&lt;T&gt;();
            if (comp == null)
            {
                t = t.transform.parent;
            }
            else
            {
                break;
            }
        }

        return t;
    }
}

