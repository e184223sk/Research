More than 1 year has passed since last update.LuaインタプリタのC#ラッパーであるNLuaを試してみる。NLuaはVisual StudioからだとNuGetで参照に追加できる。
ただしバージョンが古い。14年あたりで止まってる。
バージョンは5.2あたり。DoStringを使えば文字列でスクリプトを渡せる。
ファイルから実行したい場合はDoFileを使う。インデクサーを使えばグローバル変数にアクセスできる。
ただしインデクサーの戻り値はobjectになる。
戻り値の型がわかっているならGetNumberのような、関数経由で取り出したほうがいい。以降のサンプルではインスタンスの確保は省略。特に変な挙動はない。keyがdoubleなのと1オリジンを除けば。順番は不定(実行するたびに変わる)。配列のkeyはdouble、連想配列のkeyはstringで与えられる。
配列にstringを指定した場合、連想配列にdoubleを指定した場合はInvalidCastExceptionが発生する。LuaTable.Keysを一旦読み出した後に型をチェックすれば、配列か連想配列かを判定できる。複数のインスタンスのメソッドを呼び分けられる。DoStringでfunction hoge() ... endを与えれば関数として登録される。
DoStringで関数呼び出しもできる。関数呼び出しとテーブルの取り出しの合わせ技。DoStringで関数を呼び出しただけでは何も返してくれない。
returnで関数からの戻り値を返す必要がある。他にもモジュールとかいろいろな機能があるけど、とりあえず上記のあたりを使えばC#のプログラムに簡単なスクリプト機能を追加できる。
C#のプログラムにスクリプトを追加したいだけならC#でいいんじゃ?正直LuaにC#のメソッドを登録するregisterをやるのがめんどい。
Luaに登録する関数は適当な接頭辞つけて、GetMethodsをforeachで回してNameで判定しつつ投げていけば、登録は自動でできる。けどやっぱりラッパー関数作るのめんどい。。。そういえばコルーチン試してないな。。。それはまたの機会に。。。


