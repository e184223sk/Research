public class RegexWindow : EditorWindow
{
    private string _defaultText;

    [MenuItem("Window/RegexWindow")]
    private static void Open()
    {
        var window = GetWindow&lt;RegexWindow&gt;();
    }

    private void OnGUI()
    {
        EditorGUILayout.BeginVertical();
        _defaultText = EditorGUILayout.TextField("通常表示", _defaultText);
        if (!string.IsNullOrEmpty(_defaultText))
        {
            //元データと比べたいためコピーを作る
            string result = string.Copy(_defaultText);
            //検索パターン。今回は先頭末尾以外の大文字を検索する
            var regex = new Regex(@"\B[A-Z]");
            //パターンに一致した文字列を配列で確保
            var matches = regex.Matches(result);

            //先頭文字には挿入させないため1にしておく
            int searchIndex = 1;
            //次の文字列の検索するための増加分
            const int ADD_SEARCH_NUM = 2;
            //挿入したい文字を入れる。今回はアンダーバー
            const string INSERT_TEXT = "_";

            //パターンにマッチした分だけ回す
            foreach (var match in matches)
            {
                //文字列の場所を検索。成功すると0以上の数字が返ってくる
                int findIndex = result.IndexOf(match.ToString(), searchIndex);
                if (findIndex &gt;= 0)
                {
                    result = result.Insert(findIndex, INSERT_TEXT);
                    searchIndex = findIndex + ADD_SEARCH_NUM;
                }
            }
            EditorGUILayout.LabelField("結果", result);
        }
        EditorGUILayout.EndVertical();
    }       
}

