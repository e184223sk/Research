
using Ono.MVP.Model;
using Ono.MVP.View;
using UniRx;
using UnityEngine;

namespace Ono.MVP.Presenter
{
    /// &lt;summary&gt;
    /// ViewとModelを繋ぐPresenter
    /// &lt;/summary&gt;
    public class CubeRotationPresenter : MonoBehaviour
    {
        [SerializeField] private SliderView _sliderView;

        void Start()
        {
            var cubeRotationLogic = CubeRotationModel.Instance;

            // ================================
            // Sliderの値の更新を監視
            // ================================

            _sliderView.SliderValueRP_X
                .Subscribe(value =&gt; { cubeRotationLogic.SetRotationX(value); }).AddTo(this);

            _sliderView.SliderValueRP_Y
                .Subscribe(value =&gt; { cubeRotationLogic.SetRotationY(value); }).AddTo(this);

            _sliderView.SliderValueRP_Z
                .Subscribe(value =&gt; { cubeRotationLogic.SetRotationZ(value); }).AddTo(this);
        }
    }
}

