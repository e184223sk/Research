もくじ
https://qiita.com/tera1707/items/4fda73d86eded283ec4f画面(View/ViewModel)側に、例えば何かのセンサの値を取ってきてくれる奴ら(Model)が値を渡すときに、そのModelのプロパティを定期的に見るようなやり方ではなく、ViewModelが用意したメソッドを、Model側が、値が変化したタイミングで呼んでくれるようなそういうカッコイイ(?)のをやってみたい。C#のデリゲート(delegate)/イベント(event)を使う。
下記のページを参考にさせて頂き、いろいろと試した。参考ページ(++C++)画面は、ボタンが一個だけ配置されたものを作って、押したときにButton_Clickを通るようにした。上に挙げた参考ページの方でも書かれているが、イベントが発生するほうを「発生側」、そのイベントのデータをもらうほうを「受取側」と呼ぶようにする。下のサンプルでいうと、という位置づけになる。今回は簡単に実験するために、発生側のデリゲートやイベントを呼ぶメソッドを、画面側で直接呼んでしまっているが、本当は、発生側のクラスで、例えばセンサの値が取れた！というタイミングでデリゲートやイベントを呼ぶはず。デリゲートやイベントは、受取側(ViewとかViewModel)側が、発生側クラス(Model)でイベントが起きたときに、そのイベントの値を使って、自分のメソッドを実行できるようにするもの、と理解した。例えば、センサの値が変化したときに、Viewが画面上のテキストボックスに出した数字を更新したい、という場合は、ということをする。例えば、温度センサの値を取ってくれるModelに、温度の値を表示するView/ViewModelのメソッドを登録する場合だと、というメソッドをView/ViewModelが用意したら、そいつをみたいな感じで登録しておくと、データが更新されたらOnSensorDataReceivedを呼んでもらえるイメージ。いろいろやってみて、自分でこうなんだなと理解した内容をメモ。


