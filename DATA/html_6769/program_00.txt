using System;
using System.Diagnostics;
using System.Windows;

namespace WpfApp62
{
    public partial class MainWindow : Window
    {
        public MainWindow() =&gt; InitializeComponent();

        // 「呼出側」クラスの中の、実際に呼び出すヤツ
        private void Button_Click(object sender, RoutedEventArgs e)
        {
            var c = new TestClass();

            c.myDelegate += func1;  // デリゲートの登録
            c.myAction += func1;    // アクション(デリゲート)
            c.myEvent += func1;     // イベントの登録

            c.doFunc(null);
        }

        // 呼出側が、発生側のクラスに登録するメソッド
        private void func1(string txt) =&gt; Debug.WriteLine(txt);
    }

    // 「発生側」のクラス
    public class TestClass
    {
        // デリゲートを登録
        public delegate void TestDelegate(string txt);
        public TestDelegate myDelegate;

        // イベントを登録
        public event TestDelegate myEvent;

        // Actionもデリゲートなので、eventにできる
        public event Action&lt;string&gt; myAction;

        // 登録したイベント/デリゲートを読んでみるメソッド
        public void doFunc(TestDelegate func)
        {
            myDelegate?.Invoke("デリゲートです");
            myAction?.Invoke("アクションです");
            myEvent?.Invoke("イベントです");
        }
    }
}

