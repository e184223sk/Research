More than 3 years have passed since last update.EntityFrameworkはOleDBに非対応で事実上利用不可、
UWPではついにSQLiteにその座を奪われたりと、
もはや過去の遺物みたいな扱いを受けてるAccessですが、
JetEntityFrameworkなるものを見つけたので、試してみます。Microsoft Access Entity Framework Provider - GitHubちなみにこのJetEntityFrameworkですがaccdbでなくmdbも対応しているそうです。
（OleDbでいけるから当然といえば当然）VB＆Windowsフォームでmdb…
負の遺産レガシーな業務アプリを細々と運用する現場には
あながちありがちな組み合わせではないでしょうか。NuGetパッケージマネージャを開き、JetEntityFrameworkをインストールします。
（依存関係のEntityFramework6は勝手についてきます。）
App.configに先ほど作成したAccessデータベースのConnectionStringsを追記します。
MainConnectionの名前で作成しました。コードファーストなので、まずはモデルを表すコードを書きます。
クラス名がテーブル名、プロパティがフィールド名になります。Entityクラスとデータベースの橋渡しとなるのがコンテキストクラスです。
DbContextを継承したContextクラスを作成します。準備は整ったので、実際にテーブルが生成されるところを確認します。アプリをビルド＆実行します。
ここまでにミスが無ければ、さくっとアプリが立ち上がると思います。Accessデータベースを見てみます。
ShohinとBunruiに多対多の関係を持たせたので、テーブルShohins、Bubruis、
そして中間テーブルShohinBunruisの3テーブルが作成されました。賢いですね！

（クラス名/テーブル名に日本語使ってしまったので複数形が残念なテーブル名になってます…）Fluent APIも使えますし、
通常のEntityFrameworkと同じ形で違和感なくAccessが扱えるようです。EFv1は2008年リリースです。今更EFなんて～、と思う人も多いと思うんですが、
このJetEntityFrameworkが2015年に登場して、未だそれなりに更新されているあたりに
Accessの根強い人気（？）根深い闇（？）を感じます。


