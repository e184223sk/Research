

    /// &lt;summary&gt;
    /// メインエントリ
    /// &lt;/summary&gt;
    /// &lt;param name="args"&gt;&lt;/param&gt;
    static void Main(string[] args)
    {
        // ----------------- 問題1--------------------
        //Question1();
        // ----------------- 問題2--------------------
        //Question2();
        // ----------------- 問題3--------------------
        //引数は４パターン試してね！ 
        //完全一致パターン
        var ret3a = Question3("りん");
        //表示
        foreach (var a in ret3a)
            Console.Write(a);
        //前方一致パターン
        var ret3b = Question3("み%");
        //表示
        foreach (var b in ret3b)
            Console.Write(b);
        //後方一致パターン
        var ret3c = Question3("%お");
        //表示
        foreach (var c in ret3c)
            Console.Write(c);
        //部分一致パターン
        var ret3d = Question3("%づき%");
        //表示
        foreach (var d in ret3d)
            Console.Write(d);
    }

    /// &lt;summary&gt;
    /// 問題3 : 難易度 REGULAR
    /// -----------------------------------
    /// [入力] : LIKE検索文字列
    /// [説明] : LIKE検索を実装しよう！
    ///          入力が「みお」の場合→ {"みお"}（完全一致）
    ///          入力が「み%」の場合→ {"みお","みく"}（前方一致）
    ///          入力が「%お」の場合→ {"みお","なお"}（後方一致）
    ///          入力が「%づき%」の場合→ {"うづき"}（部分一致）
    ///          ※それぞれ、IEnumerable型で返して下さい！
    /// &lt;/summary&gt;
    /// &lt;param name="v"&gt;&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    private static IEnumerable&lt;string&gt; Question3(string value)
    {
        //data sources
        var datas = new[] { "うづき", "りん", "みお", "みく", "なお" };

        //部分一致
        //一文字目が%かつ末尾が%の場合
        if (value.StartsWith("%") &amp;&amp; value.EndsWith("%"))
        {
            // valueから%を除いたものとdatasの中に存在してるのが一致してる列挙を取得
            var partMatchedCase = datas.Where(a =&gt; a.Contains(value.Trim('%')));
            foreach (var matchedD in partMatchedCase)
                yield return matchedD;
        }
        //前方一致
        //末尾が%の場合
        else if (value.EndsWith("%"))
        {
            // valueから%を除いたものとdatasの中に存在してる一文字目が一致してる列挙を取得
            var forwardMatchedCase = datas.Where(b =&gt; b.StartsWith(value.Trim('%')));
            foreach (var matchedB in forwardMatchedCase)
                yield return matchedB;
        }
        //後方一致
        //一文字目が%の場合
        else if (value.StartsWith("%"))
        {
            // valueから%を除いたものとdatasの中に存在してる末尾が一致してる列挙を取得
            var backMatchedCase = datas.Where(c =&gt; c.EndsWith(value.Trim('%')));
            foreach (var matchedC in backMatchedCase)
                yield return matchedC;

        }
        //完全一致
        // それ以外
        else
        {
            // valueとdatasの中に存在してる文字列が一致してる列挙を取得
            var matchedCase = datas.Where(d =&gt; d.Equals(value));
            foreach (var matchedA in matchedCase)
                yield return matchedA;
        }

    }


