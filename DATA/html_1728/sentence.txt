　前回 はActivity Creatorでのアクティビティの外観の設定方法について見ていきました。
　今回はスコープをもったアクティビティの作成方法について見ていきます。　ActivityCreatorのWizardでACtivityの定義画面でType項目をScopeに設定するとScopeをもったアクティビティになります。また同一のWizard画面内でScopeを持ったアクティビティとSimple設定のアクティビティを作成すると、そのSimpleアクティビティはScopeアクティビティのChildアクティビティとして設定されます。

TestScopeアクティビティのプロパティを以下のように設定しました。
またTestChildアクティビティのプロパティを以下のように設定しました。
TestScopeアクティビティとして以下のコードが自動生成されます。　ScopeアクティビティからChildアクティビティへのデータの受け渡しは、ActivityCreatorで用意しているobjectContainerを利用します。
　今回はScopeアクティビティにInArgument&lt;string&gt;型のプロパティStrがありますので、これをChildアクティビティでも使えるようにします。具体的には以下のように _objectContainerにAddメソッドでデータを追加します。TestChild側ではobjectContainerインスタンスに対してGet&lt;T&gt;で値を取得します。
以下の例ではTestScopeアクティビティのプロパティとして取得した値の前に"000"を付加してOutStringプロパティとして返しています。　動作確認のためUiPath Studioで以下のようなワークフローを作成してみます。
　TestChildには入力プロパティがありませんが、TestScopeで入力した値を内部で参照しています。そのためTestScopeの入力で仮に"123"とした場合、strOutputには"000123"が返ってきます。　Scopeアクティビティを作成した後にChildアクティビティを追加したい場合があると思います。
　この場合はWizardでTypeをSimpleにしたアクティビティを作成した後、以下の設定を加えることによりChildアクティビティにすることができます。
1. using UiPath.Shared.Activities.Utilities; の追加
2. コンストラクタにScope内でのみの利用制限の追加
3. 実行部分にobjectContainerの定義の追加後で追加したTestChild2アクティビティに対する具体的な変更個所は以下になります。次回はnupkg周りの設定について説明します。（その５　おわり）その１　その２　その３　その４ その５　その６


