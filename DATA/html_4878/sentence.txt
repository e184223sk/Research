More than 3 years have passed since last update.COM(Component Object Model)を使うと、プログラムをExcelやVBScriptなどから呼び出すことができる。
呼び出される側をCOMサーバ、呼び出す側をCOMクライアントと呼ぶ。
COMサーバにはIn-Process ServerとOut-Of-Process Serverの2種類に分けられる。Component Object Modelここでは、In-Process ServerをC#で実装する方法を紹介する。まずソリューションを作り、その下にC#プロジェクトを作る。
プロジェクト種別はクラス ライブラリ(.NET Framework)を選択する。COMサーバのインタフェースを定義する。
外部からはこのインタフェース下のメソッドやプロパティを介してアクセスする事となる。備考: IDispatchとIUnknownCOMサーバのクラスを作成する。  In-process C# COM server (CSDllCOMServer) Properties -&gt; 「署名」 を開き、「アセンブリに署名する」にチェックを入れ、キーファイルを作成する
(※これをしておかないと、後のRegAsm処理に失敗する) 構成マネージャで、x86またはx64を選択した後、
プロジェクトをビルドし、dllファイルを生成する作成したCOMサーバを利用可能にするには、レジストリに登録する必要がある。
その為の登録処理を行うプログラム「RegAsm.exe」が用意されている。パスは以下の通り(なお、v4.0.30319の部分は.NET Frameworkのバージョンにより異なる)  管理者権限でPowerShell(またはコマンドプロンプト)を起動し、/codebaseオプションを付けてRegAsm.exeを実行する
(Sample.dllは対象のdll名)これで、登録が完了した例えば、ExcelマクロやVBScriptでは、以下のように呼び出すことができる。なお、COM In-Procサーバーは、呼び出し元のプラットフォーム(x86/x64)と呼び出し先が一致している必要がある?模様。
Excelからの呼び出しでは、x64のIn-Procサーバーを呼び出せず、
VBScriptからの呼び出しでは、x86のIn-Procサーバーを呼び出せなかった。RegAsmを実行した後、regeditでレジストリを確認したところ、以下の項目が登録されていた。
なお、RegAsmを使わずに直接レジストリに同様の設定を行うこともできる。


