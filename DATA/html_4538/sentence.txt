この記事はUniVRM 0.44時点でのサンプルになります。UniVRM 0.68からランタイムインポートの方法がより使いやすくなりました。
最新のランタイムロードの方法は公式ページのサンプルをご覧くださいUniVRMを使ってVRMモデルをランタイムロードするときのサンプル
UniVRM-RuntimeLoaderSample-0.44_67a6.unitypackage
を使用してVRMをランタイムロードしようとすると、多くのObsolete警告を受けたり、
.NET4.xで使用しようとするとそもそもエラーになって使用できません。修正したプルリクエストをUniVRMTestの方に取り込んでもらえたので、
多分次のリリースでは直ってると思いますが、(修正されています)ただランタイムロードしたいだけであればとても簡単なので、
UniVRMTest内で行われるランタイムロードの手順を、環境ごとに分けて紹介します。サンプルはVRMファイルのパスを固定で記述しています。ファイルを開くダイアログ等は別のサンプルや、上述のRuntimeLoaderSampleを参照してください。
この記事ではVRMファイルをランタイムロードする方法のみ記載しています。Unity 5.6.3p1や新しいUnityでScripting Runtime Versionがデフォルトの .NET 3.5 Equivalentになっている場合の読込方法です。非同期処理を使用せず、一番シンプルな同期処理で読み込む方法です。
読込中動作が固まってしまうため、非同期の方を使用することをお勧めします。モデルデータの読み込みを非同期で行います。ReadAllBytesは同期なので注意です。
また、OnLoadedが完了しないとモデルが読み込み終わっていないことに注意してください。
ImportVRMAsyncを呼んだ直後にモデルデータを開こうとしてもまだ読込終わっていないのでエラーになります。
読み込んだモデルに対して何かする場合は、OnLoaded内か、それ以降の処理で行ってください。新しいUnityでScripting Runtime Versionが.NET 4.xになっている場合の方法です(可能ならこれを推奨します).NET 4.xの場合Taskを使用してawaitすることが出来るため、最も分かりやすく書くことが出来ます。
同期処理は推奨しませんがどうしても必要な場合は.NET2.0の方をそのまま使えますのでそちらを参照してください。Byte配列の読込も非同期で行いたい場合は例えば以下のような実装があります。のかわりにとすることでByte配列の読込も非同期で行うことが出来ます。VRMモデルをランタイムロードする方法を環境別に紹介しました。
もしMetaデータを読み込む必要がないとき(既にメタデータを表示していて、あとはモデルを表示するだけの場合)はこの部分は削除しても構いません。また、読み込んだモデルを特定の座標に配置したい場合、以前は出来ませんでしたが、最近のバージョンではこのShowMeshesを実行するまでモデルが非表示になっているので、好きなParentを指定したりPositionを変えたりしてから
ShowMeshesを実行して、特定の位置に表示できるようになっています。同じ方法でVRMをランタイムロードしてVR機器で操作するアプリ、
バーチャルモーションキャプチャーを開発しています。
今後もUniVRMのバージョンが上がるごとに対応していく予定ですので、良かったらご覧ください。
GitHub上でソースコードも公開しています。
公式ページ
GitHub


