using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.UI;

public class PaintController : MonoBehaviour
 {
    [SerializeField]
    private RawImage m_image = null;

    private Texture2D m_texture = null;

    [SerializeField]
    private int m_width = 4;

    [SerializeField]
    private int m_height = 4;

    private Vector2 m_prePos;
    private Vector2 m_TouchPos;

    private float m_clickTime, m_preClickTime;

    public void OnDrag( BaseEventData arg ) //線を描画
    {
        PointerEventData _event = arg as PointerEventData; //タッチの情報取得

        // 押されているときの処理
        m_TouchPos = _event.position; //現在のポインタの座標
        m_clickTime = _event.clickTime; //最後にクリックイベントが送信された時間を取得

        float disTime = m_clickTime - m_preClickTime; //前回のクリックイベントとの時差

        int width  = m_width;  //ペンの太さ(ピクセル)
        int height = m_height; //ペンの太さ(ピクセル)

        var dir  = m_prePos - m_TouchPos; //直前のタッチ座標との差
        if(disTime &gt; 0.01) dir = new Vector2(0,0); //0.1秒以上間隔があいたらタッチ座標の差を0にする

        var dist = (int)dir.magnitude; //タッチ座標ベクトルの絶対値

        dir = dir.normalized; //正規化

        //指定のペンの太さ(ピクセル)で、前回のタッチ座標から今回のタッチ座標まで塗りつぶす
        for(int d = 0; d &lt; dist; ++d)
        {
            var p_pos = m_TouchPos + dir * d; //paint position
            p_pos.y -= height/2.0f;
            p_pos.x -= width/2.0f;
            for ( int h = 0; h &lt; height; ++h )
            {
                int y = (int)(p_pos.y + h);
                if ( y &lt; 0 || y &gt; m_texture.height ) continue; //タッチ座標がテクスチャの外の場合、描画処理を行わない

                for ( int w = 0; w &lt; width; ++w )
                {
                    int x = (int)(p_pos.x + w);
                    if ( x &gt;= 0 &amp;&amp; x &lt;= m_texture.width )
                    {
                        m_texture.SetPixel( x, y, Color.black ); //線を描画
                    }
                }
            }
        }
        m_texture.Apply();
        m_prePos = m_TouchPos;
        m_preClickTime = m_clickTime;
    }

    public void OnTap( BaseEventData arg ) //点を描画
    {
        PointerEventData _event = arg as PointerEventData; //タッチの情報取得

        // 押されているときの処理
        m_TouchPos = _event.position; //現在のポインタの座標

        int width  = m_width;  //ペンの太さ(ピクセル)
        int height = m_height; //ペンの太さ(ピクセル)

        var p_pos = m_TouchPos; //paint position
        p_pos.y -= height/2.0f;
        p_pos.x -= width/2.0f;

        for ( int h = 0; h &lt; height; ++h )
        {
            int y = (int)(p_pos.y + h);
            if ( y &lt; 0 || y &gt; m_texture.height ) continue; //タッチ座標がテクスチャの外の場合、描画処理を行わない
            for ( int w = 0; w &lt; width; ++w )
            {
                int x = (int)(p_pos.x + w);
                if ( x &gt;= 0 &amp;&amp; x &lt;= m_texture.width )
                {
                    m_texture.SetPixel( x, y, Color.black ); //点を描画
                }
            }
        }       
        m_texture.Apply();
    }

    private void Start ()
    {
        var rect = m_image.gameObject.GetComponent&lt;RectTransform&gt;().rect;
        m_texture = new Texture2D((int)rect.width, (int)rect.height, TextureFormat.RGBA32, false);
        m_image.texture = m_texture;
    }
}

