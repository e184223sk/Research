
public abstract class ViewModelBase : INotifyPropertyChanged
{
    public event PropertyChangedEventHandler PropertyChanged;
    protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = "")
    {
        if (PropertyChanged == null) return;
        PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    }

    private ShowMessageBoxRequest _showMessageBoxRequest = null;
    public ShowMessageBoxRequest ShowMessageBoxRequest
    {
        get =&gt; _showMessageBoxRequest;
        set
        {
            _showMessageBoxRequest = value;
            if (value != null) OnPropertyChanged();
        }
    }

    private ShowProgressBarRequest _showProgressBarRequest = null;
    public ShowProgressBarRequest ShowProgressBarRequest
    {
        get =&gt; _showProgressBarRequest;
        set
        {
            _showProgressBarRequest = value;
            if (value != null) OnPropertyChanged();
        }
    }

    private CloseWindowRequest _closeWindowRequest = null;
    public CloseWindowRequest CloseWindowRequest
    {
        get =&gt; _closeWindowRequest;
        set
        {
            _closeWindowRequest = value;
            if (value != null) OnPropertyChanged();
        }
    }
}

