using UnityEngine;
using UnityEngine.UI;
using System.Linq;

[RequireComponent(typeof(VerticalLayoutGroup))]
[RequireComponent(typeof(RectTransform))]
public class MyContentSizeFitter : MonoBehaviour {

    [SerializeField] VerticalLayoutGroup _LayoutGroup;
    [SerializeField] RectTransform MyRect;
    [SerializeField] RectTransform[] ChildRects;

    [ContextMenu("InitSize")]
    public void InitSize()
    {
        float totalHeight = _LayoutGroup.padding.top + _LayoutGroup.padding.bottom;
        foreach (var item in ChildRects)
        {
            totalHeight += item.sizeDelta.y;
            totalHeight += _LayoutGroup.spacing;
        }
        MyRect.sizeDelta = new Vector2(MyRect.sizeDelta.x, totalHeight);
    }

    private void Reset()
    {
        MyRect = GetComponentInChildren&lt;RectTransform&gt;();
        //自身のRectTransformと子のLayoutElementでignoreLayoutのものは除外する
        ChildRects = GetComponentsInChildren&lt;RectTransform&gt;().Where(x=&gt;x != MyRect).Where(x=&gt;x.GetComponent&lt;LayoutElement&gt;() == null ? true : !x.GetComponent&lt;LayoutElement&gt;().ignoreLayout).ToArray();
        _LayoutGroup = GetComponent&lt;VerticalLayoutGroup&gt;();
    }
}


