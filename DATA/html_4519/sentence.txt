More than 1 year has passed since last update.Windows用の常駐型アプリを標ぼうするため、タスクトレイ（通知領域）にアイコンを表示させを実装してみます。「起動時には非表示」のため、フォームの Visible プロパティ初期値を False に設定する。これは残念ながら最初からフォームが表示されてしまいます。「起動時には非表示」のため、フォームの WindowState プロパティ初期値を Minimized にしてかつ ShowInTaskbar プロパティを False に設定し、タスクトレイアイコンをダブルクリックしたら WindowState プロパティを Normal にすればよい。起動時の非表示化は成功しますが、ダブルクリックイベントで表示させるときに、変な場所からとび出てきて表示されて、格好悪いです。課題を実現してみたコードです。Visual Studio 2017 (15.8.1)から、SampleAppという名前のプロジェクトを「Windowsフォームアプリケーション(.NET Framework : C#)」(.NET Framework 4.5.2) で作成しました。初期作成される Form1 に、NotifyIcon（notifyIcon1：タスクトレイアイコン）と、Button（buttonExit：アプリを終了させるボタン）を、それぞれ配置しています。フォームの SetVisibleCore 仮想メソッドをオーバーライドして、コントロールの表示状態を強制させることができます。Visible (Visibility) の Setter メソッドのさらに中核ということで SetVisibleCore というメソッド名なのかしら...
このプログラムでは、初回の呼び出し時のみ Visible = False を強制して、初期表示を非表示にさせています。通知領域（タスクトレイ）の座標やタスクバーの位置を得る方法があればズバリかもしれませんが、当方残念ながら存じません（ご存知の方、ぜひ教えてください！）
そこで代替手段、プライマリスクリーンの作業領域座標からタスクバーの位置、ひいては通知領域の位置を推測します。Form.Screen プロパティのPrimaryScreen.WorkingArea プロパティには、プライマリスクリーンの作業領域座標（タスクバーなどを除いたデスクトップ座標）が入っています。
作業領域座標の上端が0ではない場合は、上側に作業領域ではない領域（タスクバーなど）があると考えます（左端の場合も同様）
タスクバーを自動で隠す設定にされていてタスクバーが隠れている状態だと、このスクリーン座標と作業領域座標とは一致してしまって検出できなくなるのですが、「通知領域アイコンがダブルクリック」されるときにはタスクバーは必ず表示されているので、そこのところは気にしなくて済みそうです。もっとエレガントな方法がありましたら、ぜひ教えてください！


