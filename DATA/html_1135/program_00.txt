using System.IO;
using System.Runtime.InteropServices;
using Excel = Microsoft.Office.Interop.Excel;

namespace ExcelEdit
{
    class Program
    {
        static void Main(string[] args)
        {
            // 色んなオブジェクトの定義
            Excel.Application excel = null;
            Excel.Workbooks books = null;
            Excel.Workbook book = null;
            Excel.Sheets sheets = null;
            Excel.Worksheet sheet = null;
            Excel.Range cells = null;
            Excel.Range range = null;
            // フォルダの取得
            string folderPath = @"C:\Users\xyy\Desktop\Folder";
            // フォルダの中の拡張子が.xlsxのファイルの取得
            string[] files = Directory.GetFiles(Path.GetFullPath(folderPath), "*.xlsx");
            try
            {
                // Excelを起動する
                excel = new Excel.Application();
                // ブック一覧の定義
                books = excel.Workbooks;
                // 各ファイルに対して下記処理を繰り返し行う
                foreach (string file in files)
                {
                    try
                    {
                        // ブックを開く
                        book = books.Open(file);
                        // シート一覧の定義
                        sheets = book.Worksheets;
                        // 最初のシートの選択
                        sheet = sheets[1];
                        // セル一覧の定義
                        cells = sheet.Cells; 
                        // セル[2,1]の選択
                        // range = sheet.Cells[2, 1] という書き方だと、sheet.Cellsとsheet.Cells[2, 1]という二つのExcel.Rangeオブジェクトが隠れて、
                        // オブジェクトの解放漏れが発生するので、注意してください。    
                        range = cells[2, 1];
                        // セル[2,1]の値をtestに設定する
                        range.Value = "test";
                        // ブックを保存して閉じる
                        book.Close(true);
                        // Excelを終了する
                        excel.Quit();
                    }
                    finally
                    {
                        // 定義されたオブジェクトの解放、ループのたびに毎回解放しないとExcelのプロセスが残り続ける
                        Marshal.FinalReleaseComObject(range);
                        Marshal.FinalReleaseComObject(cells);
                        Marshal.FinalReleaseComObject(sheet);
                        Marshal.FinalReleaseComObject(sheets);
                        Marshal.FinalReleaseComObject(book);
                    }
                }
            }
            finally
            {
                // ブック一覧とExcelオブジェクトの解放は最後に一回行っていい
                Marshal.FinalReleaseComObject(books);
                Marshal.FinalReleaseComObject(excel);
            }
        }
    }
}


