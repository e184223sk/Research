この記事はUnity #3 Advent Calendar 2020 18日目の記事ですノベルゲーム最近少なくて寂しいなぁ
データが簡単に作れたらもしかして誰か作るかもしれないなぁ
...せや！シンプルなノードベースのシナリオエディタ作ったろ！Mac
Unity 2019.4.8.f1プロジェクト一式
https://github.com/dwl398/GraphViewSample・シンプルなノベルシステムを作りたすぎる人・GraphViewの基本的な使い方
・GraphViewで作ったノードの保存、読込(つまづきポイントのみ)GraphViewを使うためにはまずEditorWindowを用意しますGraphViewを作成します
※UnityEngine.UIElementsに依存した機能が各所に使われているのでusingミスに注意(1敗)これでエディタのメニューからTools/ScriptGraphを選んで開いてみます
なんもでません　そりゃそうだ
このまま次のノード作成に行く前にちょっとおしゃれにしたいので寄り道します
エディタの背景が殺風景だと殺風景なシナリオしか出てこないんです
無駄じゃないんですResourcesに以下のファイルを追加しますファイルを読み込んで背景を追加しますグリッドっぽいものが追加されました
作成したussファイルをいじれば即反映されるのでカスタマイズも簡単です次は作成したGraphViewに載せるノードを作りますこれをGraphViewに追加してみますノードが生成されて配置されました
　これで全てのノードをプログラムで追加しまくりのハードコーディングしまくりで
色々な賞も受賞しまくりですもちろん嘘なのでShaderGraphの右クリックで出てくるアレを作りますこれをScriptGraphView側で生成して設定しますこれで右クリックでノード生成できるようになりましたここまでやって受賞しまくりですentries.Add(new SearchTreeEntry(new GUIContent(nameof(MessageNode))) { level = 1, userData = typeof(MessageNode)});
何度もこんなコードを書くのは辛いので少し楽にしますこれでScriptGraphNodeを継承したNodeが自動でノード作成メニューに表示されるようになりますノードのついているIn Out のポートを接続します
ポートの接続に関する条件付けができる関数がGraphViewに用意されているので
オーバーライドして条件を記載しますノードが増えてきた頃に重要になりそうですGraphViewの基本的な機能はここまでになります
なまじノードの拡張性が高いせいで保存、読み込みなどは各自で用意する必要があります私のつまづきポイントのみの解説となります
冒頭に記載したgithubにコードがあるので詳細はそちらで確認お願いします手順としては以下になります1.保存するデータ(ScriptableObject)を用意
2.編集がScriptableObjectに反映されるように
3.ノードのシリアライザ、デシリアライザを用意
4.ProjectウィンドウのScriptableObject選択でEditorWindowが開くように
5.開いた際にノードが生成されるように
6.ノードをつなぐエッジが保存されるように
7.ノードをつなぐエッジが生成されるように保存するデータはこんな感じですノード作成時にスクリプタブルオブジェクトにデータを追加すればとりあえずの保存はできます
罠ですなぜか、これでは正しいpositionが保存されません_scriptGtaphView.AddElement()と同じフレームでnodeのpositionを取得しようとすると
Rect(0,0,float.Nan,float.Nan)が帰ってきます対策としてパッケージマネージャのEditorCoroutineなどでノード作成の次のフレームで保存するように調整しましょうかなりざっくりとですが今graphViewを扱う上で最低限の情報を書きました実際にこのシステムでノベルゲームを作るとなると拡張が必要になりますが
拡張のためのサンプルもあるので(BranchNode)プログラマの人なら割と誰でも拡張ができると思いますストーリー、グラフィック、サウンド、さまざまな拡張に対応し、いずれノベルゲームが完成するそんな未来を信じています


