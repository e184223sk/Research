More than 3 years have passed since last update.C# 中 Struct 与 Class 的区别，以及两者的适用场合
1，class 是引用类型，structs是值类型
既然class是引用类型，class可以设为null。但是我们不能将struct设为null,因为它是值类型。2，当你实例一个class，它将创建在堆上。而你实例一个struct，它将创建在栈上
3，你使用的是一个对class实例的引用。而你使用的不是对一个struct的引用。（而是直接使用它们）4，当我们将class作为参数传给一个方法，我们传递的是一个引用。struct传递的是值而非引用。5，structs 不可以有初始化器，class可以有初始化器。6
Classes 可以有明显的无参数构造器，但是Struct不可以7 类使用前必须new关键字实例化，Struct不需要8 class支持继承和多态，Struct不支持. 注意：但是Struct 可以鹤类一样实现接口
9 既然Struct不支持继承，其成员不能以protected 或Protected Internal 修饰
10 Class的构造器不需要初始化全部字段，Struct的构造器必须初始化所有字段11 Class可以定义析构器但是Struct不可以
12 Class比较适合大的和复杂的数据，Struct适用于作为经常使用的一些数据组合成的新类型。适用场合：Struct有性能优势，Class有面向对象的扩展优势。
用于底层数据存储的类型设计为Struct类型，将用于定义应用程序行为的类型设计为Class。如果对类型将来的应用情况不能确定，应该使用Class。


