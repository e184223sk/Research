// tranform 移動させたいtranform
// time     何秒かけて推移させるか
// position 目標とするposition...nullを入れると値は変化しない
// rotation 目標とするrotation...nullを入れると値は変化しない
IEnumerator AnimateCoroutine(Transform transform, float time, Vector3? position, Quaternion? rotation)
{
    // 現在のposition, rotation
    var currentPosition = transform.position;
    var currentRotation = transform.rotation;

    // 目標のposition, rotation
    var targetPosition = position ?? currentPosition;
    var targetRotation = rotation ?? currentRotation;

    var sumTime = 0f;
    while (true)
    {
        // Coroutine開始フレームから何秒経過したか
        sumTime += Time.deltaTime;
        // 指定された時間に対して経過した時間の割合
        var ratio = sumTime / time;

        transform.SetPositionAndRotation(
            Vector3.Lerp(currentPosition, targetPosition, ratio),
            Quaternion.Lerp(currentRotation, targetRotation, ratio)
        );

        if (ratio &gt; 1.0f)
        {
            // 目標の値に到達したらこのCoroutineを終了する
            // ~.Lerpは割合を示す引数は0 ~ 1の間にClampされるので1より大きくても問題なし
            break;
        }

        yield return null;
    }
}

