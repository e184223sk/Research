More than 1 year has passed since last update.どうも、筋トレ臨床工学エンジニアkenです。Qiitaで初めての投稿です。僕は普段はC#を使って医療システムの開発業務を行っています。
機械学習の方にも力を入れていこうと思い、pythonの学習を始めました。学習といってもProgateのpythonコースを一回りやったほどですが、C#と記述の仕方など異なるところについて簡単にまとめます。C#、C＋＋、VBあたりを普段使っていて、これからpythonを学習したいという人は、この両者の違いを予め知っておくと学習が捗るかと思います。ステートメントの末尾のセミコロンがpythonの場合は不要です。
普段C#のようなセミコロンが必要な言語を使っているとまずここが慣れませんでした。pythonは「動的型付け言語」であり、変数宣言時にデータ型を指定する必要がありません。C#のような静的型付け言語でもvarキーワードを使うことで実際に入るデータの型を推論してくれる（型推論）ことができますが、コードを読む際にデータ型が明示されてないのは少し難しく感じます。コードを書く際は楽そうだなという感じもします。ちなみにpythonは関数の戻り値、引数にも型指定しません。コードの中では配列の中身を出力する処理
（C#ではforeach,pythonではforの部分）を見てもらうとわかると思うのですが、
pythonは条件式後の処理を：（コロン）とインデントで区別しています。
if文などの場合も同様です。インデントの有無が動作に影響するのも面白いですね。
これだと誰が書いても見やすいように書けます。リストとはC#でいう配列のことです。
一つのリストの要素に文字列、数値型などなんでも混ぜて入れられるのも、C#にはない特徴です。C#にもArrayListというコレクションがあり、そちらは要素の型を問わず入れることができます。ただし、取り出す際はキャスト（型変換）が必要です。ちなみにpythonでは配列の中身を取り出す処理をforと記述します。
C#のfor文とは処理が異なります。
この辺がややこしいかもしれません。以上、pythonの学習を初めて感じた他言語（C#）との違いを簡単にまとめました。
ここまでのコードの違いをまとめて比べると以下のようになります。
出力は同じになります。pythonの場合コードを見てわかるように、C#は変数の型指定など、細かく記述するためコードが長くなりがちです。
反面、pythonは非常にすっきりしています。pythonのみならず、動的型付け言語は記述もシンプルに書けるので、高速で開発するのに向いているのかなと感じました。今後はpythonを用いた簡単なデータ分析などにも取り組んでいこうと思います。
読んでいただきありがとうございました。個人のブログもやっておりますので、良ければそちらもよろしくお願いします。


