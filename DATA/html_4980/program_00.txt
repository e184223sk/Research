namespace Event
{
    /// &lt;summary&gt;
    /// MainWindow.xaml の相互作用ロジック
    /// &lt;/summary&gt;
    public partial class MainWindow : Window
    {
        /// &lt;summary&gt;
        /// コンストラクタ
        /// &lt;/summary&gt;
        public MainWindow()
        {
            InitializeComponent();

            // イベントハンドラの登録
            // 以降すべて同じ意味

            this.イベント変数 += new EventHandler( this.Func_Event );

            this.イベント変数 += this.Func_Event;

            this.イベント変数 += delegate( object sender, EventArgs e )
            {
                処理A;
            }

            this.イベント変数 += ( sender, e ) =&gt; { 処理A; }

            // 処理Aが1文のとき
            this.イベント変数 += ( sender, e ) =&gt; 処理A;
        }

        /// &lt;summary&gt;
        /// 処理Aを行うイベントハンドラ
        /// &lt;/summary&gt;
        /// &lt;param name="sender"&gt;イベント送信元&lt;/param&gt;
        /// &lt;param name="e"&gt;イベント引数&lt;/param&gt;
        private void Func_Event( object sender, EventArgs e )
        {
            処理A;
        }
    }
}


