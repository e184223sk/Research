using UnityEngine;
using System.Collections.Generic;

public class GameSetting : ScriptableObject {
    private static GameSetting s_instance = null;
    public static GameSetting Instance {
        get {
            if (s_instance == null) {
                InitMaskTable();
                s_instance = CreateInstance&lt;GameSetting&gt;();
            }
            return s_instance;
        }
    }

    private static Dictionary&lt;int, int&gt; _masksByLayer;

    private static void InitMaskTable() {
        _masksByLayer = new Dictionary&lt;int, int&gt;();
        for (int i = 0; i &lt; 32; i++) {
            int mask = 0;
            List&lt;string&gt; name = new List&lt;string&gt;();
            for (int j = 0; j &lt; 32; j++) {
                if (!Physics.GetIgnoreLayerCollision(i, j)) {
                    mask |= 1 &lt;&lt; j;
                    //Debug
                    if (LayerMask.LayerToName(j) != "") {
                        name.Add(LayerMask.LayerToName(j));
                    }
                }
            }
            //Debug
            if (LayerMask.LayerToName(i) != "") {
                Debug.Log("[" + LayerMask.LayerToName(i) + "] is masked [" + string.Join(",", name) + "]");
            }
            _masksByLayer.Add(i, mask);
        }
    }

    public int MaskForLayer(int layer) {
        return _masksByLayer[layer];
    }
}


