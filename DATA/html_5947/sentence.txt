More than 1 year has passed since last update.未だにLINQを使いこなせていなかったので、
忘れる前に備忘録。特に有用そうなものをピックアップ。
　　ラムダ式の引数は
foreach(var item in DataList)
でいうところのitemを指す。
→これに気付くまでなかなか
　LINQ内でのラムダ式が理解できませんでした…　　
　　①whereではData[]の配列　IEnumerable型で返ってくるので
　必要に応じてListへ変換する。
　
　→ToList()について、コメントをいくつかいただいたので削除しました。
　TPOに応じて、ToArray()などの使い分けが必要のようですね。
　無意味なToList()はリソースの無駄遣いとなるようです。.ToList()すると、Listの実体が作られるため、処理コストがかかる＆あとでガベージになります。もしListとして扱う必要がないのなら（ただ一覧として持っておきたいだけ、すぐにforeachするだけ）なのであれば、あえて.ToList()しないほうがいい場合もありそうですね。もちろん、最終結果をListとして保持しておく必要がある場合は、.ToList()は必要です　　②.First：一致するデータがないとExceptionが発生するので注意。
　.FirstOrDefault, .Find：参照型ならデフォルト値としてnullを返します。　個人的にはFindの方が可読性的に好みですね。
　(ただし、パフォーマンスはFirstの方が上のようです。)
　
　FirstOrDefault, .Findについてコメントをいただきました。
　.FirstOrDefault：IEnumerableのメソッド
　.Find：Listのメソッド
　なので前者の方が統一的に使えるようです。.FirstOrDefault vs .Find ですがこれ、宣言されている場所がそれぞれ違います。FindはListが持っているメンバメソッドです。なのでList以外では"使えません"。
 一方FirstOrDefaultはLINQというかIEnumerableに（拡張メソッドとして）実装されているのでどんなリストの型でも使えます
。　　その他ではExcel関数的な、
Sum, Average, Max, Minあたりは
使えそうですね。　　
また最近気づいた便利なメソッド。
フォーム内のコントロールにまとめて処理したい時に使いました。これら２つのメソッドは
ジェネリックなIEnumerable&lt;T&gt;型でなくても使えるので、
Controls(Control[]型)に直接使えます。OfType：isで判定。型変換できたものだけを抽出する。
Cast：()で判定。キャスト失敗するとInvalidCastException投げる。　
まだまだ未熟者ですので、
記述に間違い等あればご指摘よろしくお願いいたします。こちらもご覧ください
LINQでのJOINについての備忘録参考：
そのforeach本当に要りますか？～for/foreach等をLINQに書き換える～ - Qiita
OfTypeメソッドとCastメソッド 


