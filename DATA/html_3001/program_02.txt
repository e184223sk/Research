
namespace Fibonacci_Form
{
    public class Calc
    {
        #region 買い計算
        // 損切ライン・利確ライン・損失・利益を計算(買いポジションなので0%をlow、100%をhighとする)
        public List&lt;string&gt; CalcAskResult(int lot, int tsuka, double low, double high, string entry)
        {
            List&lt;string&gt; sList = new List&lt;string&gt;();
            ListMake lm = new ListMake();

            // 0%と100%の大小が逆の場合、空のリストを返す
            if (high &lt;= low)
            {
                return sList;
            }

            double lose_line;
            double win_line;
            double loss;
            double profit;
            double entry_point;

            // 取引金額を計算
            int amount = lot * tsuka;

            if (entry == "100%")
            {
                // 損切ラインを計算
                lose_line = Math.Round((low + (high - low) * 0.764) * 1000) / 1000;
                // 利確ラインを計算
                win_line = Math.Round((low + (high - low) * 1.618) * 1000) / 1000;
                // 損失を計算
                loss = Math.Round(amount * (high - lose_line));
                // 利益を計算
                profit = Math.Round(amount * (win_line - high));

                // ListAdd
                sList = lm.ListAdd(lose_line.ToString(), win_line.ToString(), loss.ToString(), profit.ToString());
            }
            else if (entry == "161.8%")
            {
                // エントリーポイントを計算
                entry_point = Math.Round((low + (high - low) * 1.618) * 1000) / 1000;

                // 損切ラインは100%ラインなので、high

                // 利確ラインを計算
                win_line = Math.Round((low + (high - low) * 2.618) * 1000) / 1000;
                // 損失を計算
                loss = Math.Round(amount * (entry_point - high));
                // 利益を計算
                profit = Math.Round(amount * (win_line - entry_point));

                // ListAdd
                sList = lm.ListAdd(high.ToString(), win_line.ToString(), loss.ToString(), profit.ToString());
            }
            else if (entry == "261.8%")
            {
                // エントリーポイントを計算
                entry_point = Math.Round((low + (high - low) * 2.618) * 1000) / 1000;

                // 損切ラインを計算
                lose_line = Math.Round((low + (high - low) * 1.618) * 1000) / 1000;
                // 利確ラインを計算
                win_line = Math.Round((low + (high - low) * 4.236) * 1000) / 1000;
                // 損失を計算
                loss = Math.Round(amount * (entry_point - lose_line));
                // 利益を計算
                profit = Math.Round(amount * (win_line - entry_point));

                // ListAdd
                sList = lm.ListAdd(lose_line.ToString(), win_line.ToString(), loss.ToString(), profit.ToString());
            }

            return sList;
        }
        #endregion

        #region 売り計算
        #endregion
    }
}

