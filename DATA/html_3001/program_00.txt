namespace Fibonacci_Form
{
    public partial class Form1 : Form
    {
        private IntPtr HHook;

        #region フォーム初期化
        public Form1()
        {
            InitializeComponent();
        }
        #endregion

        #region 横線描画
        // 画面中央に引く横線を作成するメソッド
        private void Form1_Paint(object sender, PaintEventArgs e)
        {
            // グラフィックオブジェクトの作成
            Graphics g = this.CreateGraphics();

            // Penを作成
            Pen grayPen = new Pen(Color.Gray, 2);

            // lineの始点と終点を設定
            Point start_point = new Point(25, 250);
            Point end_point = new Point(480, 250);

            // lineを描画
            g.DrawLine(grayPen, start_point, end_point);

            // Penを解放する
            grayPen.Dispose();

            // Graphicsを解放する
            g.Dispose();
        }
        #endregion

        #region 買ボタン押下
        // 買ボタン押下時
        private void Buy_btn_Click(object sender, EventArgs e)
        {

            try
            {
                Property p = new Property();

                // ロット数
                p.Lot = int.Parse(lot_text.Text);
                // 通貨数
                p.Tsuka = int.Parse(tsuka_combo.Text);
                // 0%座標
                p.Zero = double.Parse(zero_text.Text);
                // 100%座標
                p.Hundred = double.Parse(hundred_text.Text);
                // エントリーポイント
                p.Entry = entry_combo.Text;


                // 結果を入れるリスト
                List&lt;string&gt; sList = new List&lt;string&gt;();
                Calc c = new Calc();
                sList = c.CalcAskResult(p.Lot, p.Tsuka, p.Zero, p.Hundred, p.Entry);

                // 結果を表示
                lost_num.Text = sList[0];
                win_num.Text = sList[1];
                loss_amount.Text = "-" + sList[2] + " 円";
                profit_amount.Text = sList[3] + " 円";

            } catch
            {
                SetHook(this);
                MessageBox.Show("値を正しく入力してください",
                                "エラー",
                                MessageBoxButtons.OK,
                                MessageBoxIcon.Error);

                lost_num.Text = null;
                win_num.Text = null;
                loss_amount.Text = null;
                profit_amount.Text = null;
            }
        }
        #endregion

        #region 売ボタン押下
        #endregion

        #region メッセージボックスを中央に表示するための処理(外部引用)
        #endregion
    }
}

