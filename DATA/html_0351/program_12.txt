
using System.Collections.Generic;
namespace SourceExpander.Expanded
{
    public static class ExpandedContainer
    {
        public static IReadOnlyDictionary&lt;string, SourceCode&gt; Files { get { return _Files; } }
        private static Dictionary&lt;string, SourceCode&gt; _Files = new Dictionary&lt;string, SourceCode&gt;{
            {"Z:\\source\\repos\\SourceExpander\\Sample\\SampleProject\\Program.cs",SourceCode.FromDictionary(new Dictionary&lt;string,object&gt;{{"path","Z:\\source\\repos\\SourceExpander\\Sample\\SampleProject\\Program.cs"},{"code","using SampleLibrary;\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.Intrinsics.X86;\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        SourceExpander.Expanded.ExpandedContainer.Files\r\n        SourceExpander.Expander.Expand(ignoreAnyError: false);\r\n        Put2.Write();\r\n        Console.WriteLine(\"fofao\");\r\n        Console.WriteLine(SampleLibrary.Bit.ExtractLowestSetBit(13));\r\n    }\r\n}\r\n#region Expanded\r\nnamespace SourceExpander { public class Expander { [Conditional(\"EXPANDER\")] public static void Expand(string inputFilePath = null, string outputFilePath = null, bool ignoreAnyError = true) { } public static string ExpandString(string inputFilePath = null, bool ignoreAnyError = true) { return \"\"; } } } \r\nnamespace SampleLibrary { public static class Bit { [MethodImpl(MethodImplOptions.AggressiveInlining)] public static int ExtractLowestSetBit(int n) { if (Bmi1.IsSupported) { return (int)Bmi1.ExtractLowestSetBit((uint)n); } return n &amp; -n; } } } \r\nnamespace SampleLibrary { public static class Put2 { public static void Write() =&gt; Put.WriteRandom(); } } \r\nnamespace SampleLibrary { public static class Put { private static readonly Xorshift rnd = new Xorshift(); public static void WriteRandom() { Trace.WriteLine(rnd.Next()); } } } \r\nnamespace SampleLibrary { public class Xorshift : Random { private uint x = 123456789; private uint y = 362436069; private uint z = 521288629; private uint w; private static readonly Random rnd = new Random(); public Xorshift() : this(rnd.Next()) { } public Xorshift(int seed) { w = (uint)seed; } protected override double Sample() { return InternalSample() * (1.0 / uint.MaxValue); } private uint InternalSample() { uint t = x ^ (x &lt;&lt; 11); x = y; y = z; z = w; return w = (w ^ (w &gt;&gt; 19)) ^ (t ^ (t &gt;&gt; 8)); } } } \r\n#endregion Expanded\r\n"},})},
            {"Z:\\source\\repos\\SourceExpander\\Sample\\SampleProject\\obj\\Debug\\netcoreapp3.1\\SampleProject.AssemblyInfo.cs",SourceCode.FromDictionary(new Dictionary&lt;string,object&gt;{{"path","Z:\\source\\repos\\SourceExpander\\Sample\\SampleProject\\obj\\Debug\\netcoreapp3.1\\SampleProject.AssemblyInfo.cs"},{"code","[assembly: System.Reflection.AssemblyCompanyAttribute(\"naminodarie\")]\r\n[assembly: System.Reflection.AssemblyConfigurationAttribute(\"Debug\")]\r\n[assembly: System.Reflection.AssemblyFileVersionAttribute(\"2.2.0.101\")]\r\n[assembly: System.Reflection.AssemblyInformationalVersionAttribute(\"2.2.0\")]\r\n[assembly: System.Reflection.AssemblyProductAttribute(\"SampleProject\")]\r\n[assembly: System.Reflection.AssemblyTitleAttribute(\"SampleProject\")]\r\n[assembly: System.Reflection.AssemblyVersionAttribute(\"2.2.0.101\")]\r\n[assembly: System.Reflection.AssemblyMetadataAttribute(\"RepositoryUrl\", \"https://github.com/naminodarie/SourceExpander\")]\r\n\r\n// MSBuild WriteCodeFragment クラスによって生成されました。\r\n\r\n#region Expanded\r\n#endregion Expanded\r\n"},})},
            {"Z:\\source\\repos\\SourceExpander\\Sample\\SampleProject\\obj\\Debug\\netcoreapp3.1\\.NETCoreApp,Version=v3.1.AssemblyAttributes.cs",SourceCode.FromDictionary(new Dictionary&lt;string,object&gt;{{"path","Z:\\source\\repos\\SourceExpander\\Sample\\SampleProject\\obj\\Debug\\netcoreapp3.1\\.NETCoreApp,Version=v3.1.AssemblyAttributes.cs"},{"code","using System;\r\nusing System.Reflection;\r\n[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(\".NETCoreApp,Version=v3.1\", FrameworkDisplayName = \"\")]\r\n#region Expanded\r\n#endregion Expanded\r\n"},})},
        };
    }
}

