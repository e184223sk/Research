
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using UnityEditor;
using UnityEditor.IMGUI.Controls;
using UnityEngine.UIElements;

public class AssetPathDropdown : AdvancedDropdown
{
    private static readonly float MIN_LINE_COUNT = 15.0f;
    public event Action&lt;string&gt; onItemSelected = null;
    private Dictionary&lt;int, string&gt; pathDictionary = null;

    public AssetPathDropdown(AdvancedDropdownState state) : base(state)
    {
        pathDictionary = new Dictionary&lt;int, string&gt;();

        var minimumSize = this.minimumSize;
        minimumSize.y = MIN_LINE_COUNT * EditorGUIUtility.singleLineHeight;
        this.minimumSize = minimumSize;
    }

    protected override AdvancedDropdownItem BuildRoot()
    {
        var root = new AdvancedDropdownItem("AssetPath");

        foreach (var path in AssetDatabase.GetAllAssetPaths())
        {
            var splitStrings = path.Split('/');
            var parent = root;
            AdvancedDropdownItem lastItem = null;

            foreach (var str in splitStrings)
            {
                var foundChildItem = parent.children.FirstOrDefault(item =&gt; item.name == str);

                if (foundChildItem != null)
                {
                    parent = foundChildItem;
                    lastItem = foundChildItem;
                    continue;
                }

                var child = new AdvancedDropdownItem(str);
                parent.AddChild(child);

                parent = child;
                lastItem = child;
            }

            if (lastItem != null)
            {
                pathDictionary[lastItem.id] = path;
            }
        }

        return root;
    }

    protected override void ItemSelected(AdvancedDropdownItem item)
    {
        base.ItemSelected(item);
        onItemSelected?.Invoke(pathDictionary[item.id]);
    }
}

[CustomEditor(typeof(Sample))]
public class SampleEditor : Editor
{
    private static readonly float BUTTON_WIDTH = 225.0f;
    private AssetPathDropdown sampleDropdown = null;

    public override VisualElement CreateInspectorGUI()
    {
        var root = new VisualElement();
        var button = new Button()
        {
            text = "Display Dropdown"
        };

        button.style.width = BUTTON_WIDTH;
        button.style.alignSelf = Align.Center;
        button.style.color = Color.white;
        root.Add(button);

        sampleDropdown = new AssetPathDropdown(new AdvancedDropdownState());

        sampleDropdown.onItemSelected += OnItemSelected;
        button.clicked += () =&gt; OnClick(button.worldBound);

        return root;
    }

    private void OnClick(Rect rect)
    {
        sampleDropdown.Show(rect);
    }

    private void OnItemSelected(string path)
    {
        Debug.Log(path);
    }
}

