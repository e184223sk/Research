
            int QRsize = 21;
            int[,] bitAry = new int[QRsize, QRsize];

            //初期化
            for (int i = 0; i &lt; QRsize; ++i)
            {
                for (int j = 0; j &lt; QRsize; ++j)
                {
                    bitAry[i,j] = 0;
                }
            }

            //タイミングパターン
            for (int i = 0; i &lt; QRsize; ++i)
            {
                if(i % 2 ==0)
                {
                    bitAry[i, 6] = 1;
                    bitAry[6, i] = 1;
                } 
            }
            bitAry[13, 8] = 1;

            //位置検出パターン
            int startrow, startcol;
            startrow=0;
            startcol=0;
            for (int i = 0; i &lt;= 6; ++i)
            {
                for (int j = 0; j &lt;= 6; ++j)
                {                    
                    if ((i == 0) || (j == 0) || (i == 6) || (j == 6)) { bitAry[startrow + i, startcol + j] = 1; }
                    if ((i != 1) &amp;&amp; (j != 1) &amp;&amp; (i != 5) &amp;&amp; (j != 5)) { bitAry[startrow + i, startcol + j] = 1; }
                }
            }
            startrow = 0;
            startcol = 14;
            for (int i = 0; i &lt;= 6; ++i)
            {
                for (int j = 0; j &lt;= 6; ++j)
                {
                    if ((i == 0) || (j == 0) || (i == 6) || (j == 6)) { bitAry[startrow + i, startcol + j] = 1; }
                    if ((i != 1) &amp;&amp; (j != 1) &amp;&amp; (i != 5) &amp;&amp; (j != 5)) { bitAry[startrow + i, startcol + j] = 1; }
                }
            }
            startrow = 14;
            startcol = 0;
            for (int i = 0; i &lt;= 6; ++i)
            {
                for (int j = 0; j &lt;= 6; ++j)
                {
                    if ((i == 0) || (j == 0) || (i == 6) || (j == 6)) { bitAry[startrow + i, startcol + j] = 1; }
                    if ((i != 1) &amp;&amp; (j != 1) &amp;&amp; (i != 5) &amp;&amp; (j != 5)) { bitAry[startrow + i, startcol + j] = 1; }
                }
            }

