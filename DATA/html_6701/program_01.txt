
// 矢のプレハブ
[SerializeField] GameObject arrow;
// クールダウン
ReactiveProperty&lt;int&gt; cooldown = new ReactiveProperty&lt;int&gt;(0);

void Start()
{
    // 1. 矢を打つスキル実装
    this.UpdateAsObservable()
        .Subscribe(_ =&gt;
        {
            // 攻撃ボタンを押した時&amp;クールダウンが解消されてる時、処理に入る
            if (Input.GetButtonDown("Attack1") &amp;&amp; cooldown.Value == 0)
            {
                // 矢を発射する(スキルを使用する)
                Instantiate(arrow, transform.position, transform.rotation);
                cooldown.Value = 300; // スキル使用後なので、クールダウンにする
            }
        });

    // 2. クールダウン実装
    this.UpdateAsObservable()
        .Where(_ =&gt; cooldown.Value &gt; 0) // クールダウン中の時のみ
        .Subscribe(_ =&gt;
        {
            // 毎フレーム、クールダウンを消費していく
            cooldown.Value--;
        });
}

