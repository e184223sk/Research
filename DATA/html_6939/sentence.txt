More than 3 years have passed since last update.@hyuki 先生著の『Javaで学ぶデザインパターン入門』（2004年、SB Creative）の1章ずつをベースに、サンプルコードをC#で置き換えながら勉強していく記事です。※著者の @hyuki 先生には適切に書籍への参照を入れれば問題ない旨ご確認いただいています。Adapterパターン
第2回はAdapterパターンです。Adapterパターンは本の表現を借りると、「すでに提供されているものと必要なものの間のずれを埋める」ようなデザインパターンです。
Adapterパターンには①Class Adapterパターン（継承を使う）と②Object Adapterパターン（委譲を使う）の二種類があります。早速具体的な事例を見てみましょう。『Javaで学ぶデザインパターン入門』（2004年、SB Creative）に掲載されているコードをC#で（大体）書き換えます。まずはClass Adapterパターンからです。①Class Adapterパターン次にObject Adapterパターンです。②Object Adapterパターン①Class Adapterパターンと②Object Adapterパターンのどちらを使うのか？について『C#実践開発手法』に記述がありました。Class Adapterパターンは、それほど使用されないAdapterパターンです。これは主に、開発者が継承よりも合成を優:先するように教えられているためです。継承はホワイトボックスの再利用であり、サブクラスをそのインターフェイスだけでなくクラスの実装にも依存させます。合成はブラックボックスの再利用であり、依存関係はインタイフェースに限定されるため、クライアントに悪影響をおよぼさずに実装を変更することが可能です。まとめると、ということでしょうか。①Iterator
②Adapter
③Template Method
④Factory Method
⑤Singleton
⑥Prototype
⑦Builder
⑧AbstractFactory
⑨Bridge
⑩Strategy
⑪Composite Pattern
⑫Decorator Pattern


