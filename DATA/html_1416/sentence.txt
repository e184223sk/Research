More than 1 year has passed since last update.Freeradicalの中の人、yamarahです。
InteractionEventsなどを使ってSketch要素を操作する場合は、対象のSketchEntityが編集中の(Activeな)Sketchに含まれるのか、はたまた他のSketchの要素なのかを判断したくなるでしょう。
「SketchEntity.Parent == ActiveDocument.ActivatedObjectで良いんじゃない?」と思うかもしれませんが、そう簡単にはいかないのです。Sketch編集中と言っても、実は色々な状況があります。すぐに思いつくのは、アセンブリ環境でパーツをInPlace編集している場合です。
同じパーツのオカレンスが他にもある可能性があるので、アセンブリ環境ではProxyに対して比較/操作する必要があります。
次に、忘れがちなのが、Sketchブロックです。Sketchブロック編集には2種類あって、通常のSketch編集中にInPlaceでブロック編集する方法と、モデルツリー内のブロックフォルダーから編集する場合です。ですので、の掛け合わせで、計6パターンの状況があります。SketchBlockは、Sketchにおけるブロックの実体です。
SketchBlockDefinitionは、SketchBlockの雛形です。
Assembly/Partの関係に例えると、次のようになります。(*1) SketchBlockを内包する親SketchBlockDefinitionの可能性もあるなお、SketchBlockDefinitionはPlanarSketchを継承していますので、状況によってはSketchBlockDefinitionをPlanarSketchと扱って処理できます。次に、ActiveEditDocument.ActivatedObjectに入っているものを確認しておきましょう。なんとなく、2番目の処理がやっかいそうなのが分かります。まずは、ActivatedObjectを可能性のある各形式に変換します。先に述べた通り、SketchBlockDefinitionはPlanarSketchに変換可能なので注意してください。
次に、SketchBlockが取得できた場合は、そこからactiveSketchとactiveBlockDefを取得します。この時点ではactiveSketch == nullの可能性があるので、それをはじきます。次に、アセンブリ環境中にパーツをInPlace編集している場合を考慮します。その場合は、各ObjectをActiveOccurrence経由のproxyに差し替えます。Proxyに差し替えたので、以後はAssembly中かどうか気にしなくて良いです。
残りの条件分け、Blockがらみの条件を抽出します。ここまでが下準備です。毎回評価する必要はないので、OnExecuteなりOnNewEditObjectで更新すると良いでしょう。では、実際にSketchEntityがActivatedObjectに含まれるか検証しましょう。
実験用のSketchEntityの供給元として、毎度おなじみのSelectSetを使います。やっと実際の確認部分です。ここで、isDirectChildOfActivatedObjectの意味ですが、名前の通り、ActivatedObjectに直接所有されている(ユーザーに操作可能に見える)かどうかです。
例えば、通常のSketch編集中に、そのSketchに含まれているBlock内の各要素は、Sketch(== ActivatedObject)に内包されていると言えます。しかし、ここで判断したいのは、その要素がActivatedObjectの直接の子要素かどうかなので、Block経由の場合はfalseになって欲しいわけです。最後に、おまけです。アセンブリ環境でパーツをInPlace編集中に、あるSketchEntityがInPlace編集中のOccurrenceに含まれるかどうかを確認します。
このコードは動作確認していないのですが、問題ないと思います。以上です。繰り返しになりますが、上記コードを1つにまとめたものを貼っておきます。Autodesk Inventor API Hacking (概略)


