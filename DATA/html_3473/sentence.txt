More than 1 year has passed since last update.良いタイトルが思いつかなかった。。。
PDFファイルとかを一纏めにしたZIPファイルのバイナリデータをWebサーバから取得して
クライアント端末に保存したい。
ということで、C#(.Net FW 4.5.2)で作成してみます。ざっくりとこういうイメージで作ります。
という処理の流れになります。まずはクライアント端末に配置するコンソールアプリケーションから。やっていることはシンプルです。
コード上の番号付きコメントを見れば大方わかると思います。
GETのURLの中身はテキトーです。環境に合わせて変更が必要です。いくつかポイントを解説します。なぜWaitしているのか？
と思われた方がいらっしゃると思いますが、
コンソールアプリケーションで非同期メソッドを使用する場合、
Waitで処理の終了を待ってあげないと一瞬でMainの処理が終了してしまい、期待通りの動作になりません。
※今回はGETでWeb I/Fを呼び出す方法として「HttpClient」を使用しているため、DownloadZipAsyncメソッドは非同期メソッドとなっています。今回のサンプルで呼び出すWeb I/Fは「asmx.cs」に定義されているメソッドになります。
ここからバイナリデータを返却するとbase64でエンコードされるので、
クライアントで受け取った際にbase64でデコードしてやる必要があります。
※特に意識せずとも自動的にbase64でエンコードされて返却されるようなのですが、こういう仕様なのでしょうか？わかる方いらっしゃいましたらご教授いただけると幸いです。次にコンソールアプリケーションからコールされるWeb I/F。すみません、説明簡略化のためにAPIの処理もここに含めてしまっています。
本来privateのGetBinaryメソッドはここにいるべきではありません！
ビジネスロジックをWebの顔に書くのはやめましょう。では、こちらもポイントを解説します。これ非常に便利です。
ZipArchiveとZipArchiveEntryを絵で説明するとこんな感じです。

ZipArchiveという箱(要するにzipファイル)の中に
ZipArchiveEntryという物(要するに画像やPDFのファイル)を
入れ込んでいるといったイメージです。このコード例ではエントリを１つしか書き込んでいませんが、
複数書き込むことで複数のファイルをzipファイルの中に入れることができます。備忘録代わりにと思ってだいぶ駆け足で書いてしまいました。
それでも誰かの参考になれば幸いです。


