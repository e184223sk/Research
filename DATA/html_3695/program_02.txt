
private static readonly string BASE64_MAP_BASIC   = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
private static readonly string BASE64_MAP_URLSAFE = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";

public static string encode(byte[] data, bool isUrlSafe = false) {
    StringBuilder sb = new StringBuilder();

    for(int i = 0; i &lt; data.Length; i += 3) {
        int[] src = new int[3];
        byte[] tgt = new byte[4];

        //copy or default.
        for(int j = 0; j &lt; 3; j++) {
            int k = i + j;
            if(k &lt; data.Length) {
                src[j] = data[k];
            } else {
                //(bit: 0001 0000)
                src[j] = 0x0100;
            }
        }

        // reformat.
        tgt[0] = (byte)((0x00)                 | (0x00)                 | (0x3F &amp; (src[0] &gt;&gt; 2)));
        tgt[1] = (byte)((0x00)                 | (0x3F &amp; (src[0] &lt;&lt; 4)) | (0x0F &amp; (src[1] &gt;&gt; 4)));
        tgt[2] = (byte)((0x40 &amp; (src[1] &gt;&gt; 2)) | (0x3F &amp; (src[1] &lt;&lt; 2)) | (0x03 &amp; (src[2] &gt;&gt; 6)));
        tgt[3] = (byte)((0x40 &amp; (src[2] &gt;&gt; 2)) | (0x3F &amp; (src[2] &lt;&lt; 0)) | (0x00));

        // to character.
        if(isUrlSafe) {
            foreach(byte b in tgt) {
                if(b &lt; 0x40) {
                    sb.Append(BASE64_MAP_URLSAFE[b]);
                }
            }
        } else {
            sb.Append(BASE64_MAP_BASIC[tgt[0]]);
            sb.Append(BASE64_MAP_BASIC[tgt[1]]);
            sb.Append(BASE64_MAP_BASIC[tgt[2]]);
            sb.Append(BASE64_MAP_BASIC[tgt[3]]);
        }
    }
    return sb.ToString();
}

