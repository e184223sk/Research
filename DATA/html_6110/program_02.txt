
class Hoge : IDisposable
{
    // コンポジション
    private List&lt;Piyo&gt; m_piyos = new List&lt;Piyo&gt;();

    public Hoge()
    {
    }

    public void Dispose()
    {
        Dispose(true);
        GC.SuppressFinalize(this);
    }

    protected virtual void Dispose(bool disposing)
    {
        if (disposing)
        {
            foreach(Piyo piyo in m_piyos)
            {
                piyo.Dispose();
            }
            m_piyos.Clear();
            m_piyos = null;
        }
    }

    ~Hoge()
    {
        Dispose(false);
    }

    public void Addpiyo(Piyo piyo)
    {
        m_piyos.Add(piyo);
    }

    public bool Removepiyo(Piyo piyo)
    {
        return m_piyos.Remove(piyo);
    }
}

