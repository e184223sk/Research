More than 1 year has passed since last update.前回の続きです。
前回は、目標に対して、UserControlのインスタンス公開と、その利用のところまでいかず、
コードによるバインディングの確認に終わりました。
今回で、目標まで達成し、終了です。そもそも、このサンプルを作った動機は、
Visual Studio WPFで、任意のclientから利用可能なコンポーネントを作りたかったのですが、
そこには、少し特殊な要求があったのです。
画面を持っていないコンポーネントなら良かったのですが、画面が欲しいと。
しかも、画面を持っているのだけれど、Windowではなくて、UserControlの画面のインスタンスを提供したい。
Clientは、コンポーネントからUserControlのUI部品インスタンスを拾って、自分（Client）側のWindowに、はめ込んで使える。
というサンプルを作りたかったのです。図で描くと、↓の感じ。
サンプルの画面としては、↓の感じです。MainWindowは、ClientのMainWindowです。[Push]ボタンは、MainWindow側で直接実装したものです。[オリジナル画面という表記とその下の数字]は、上の図のUserControl1で、ClassLibrary1が提供するものです。
これを、MainWindowは直接実装するのではなく、ClassLibrary1から取得して、MainWindow内に組み込む。
というのが、やりたい画面のつくりです。独自UserControlを持っていて、利用者側に公開する側のプロジェクトが、上の「ClassLibrary1」。ClassLibrary1のFactoryクラスを使って、ClassLibrary1の中を生成し、公開されたUserControlを利用して、
画面に取り込んで表示する側のプロジェクトが、下の「WpfApp14」。「WpfApp14」の参照に、「ClassLibrary1」を入れてね。


