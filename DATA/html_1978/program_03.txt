
using System.Windows;
using System.Windows.Controls;

namespace ClassLibrary1
{
    /// &lt;summary&gt;
    /// UserControl1.xaml の相互作用ロジック
    /// &lt;/summary&gt;
    public partial class UserControl1 : UserControl
    {
        public UserControl1()
        {
            InitializeComponent();
        }

        // オリジナルのUserControl1に表示される値とつながる依存関係プロパティ

        public static readonly DependencyProperty 値2Property = DependencyProperty.Register("値2", typeof(int), typeof(UserControl1),
                new FrameworkPropertyMetadata(default(int), new PropertyChangedCallback(On値2Changed)));
        public int 値2
        {
            get { return (int)GetValue(値2Property); }
            set { SetValue(値2Property, value); }
        }
        private static void On値2Changed(DependencyObject obj, DependencyPropertyChangedEventArgs e)
        {
            // 値が変化したときに動く処理。値が設定されたときに動く訳ではないので、注意。
            UserControl1 ctrl = obj as UserControl1;
            if (ctrl != null)
            {
                // ここで画面更新
                ctrl.label2.Content = ctrl.値2;
            }
        }
    }
}

