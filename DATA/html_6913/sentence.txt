More than 3 years have passed since last update.仕事でMicrosoft関係のものを扱うようになったので、これを機にちょいと古いMacBook ProからSurface Pro 4に買い替えたので、それにVisual Studio Communityを入れてC#で遊んでいる。昨日、Microsoft Virtual AcademyでC#を勉強していて、どうにも動きが良くわからんと思った「派生クラスにおいて基底クラスのメソッドをnewまたはoverrideし、それらを基底クラスにキャストして呼び出したときにどういう動きをするか」についてちょっと整理してみた。基底クラスを「派生」(Derive)したクラスを作成すると、基底クラスのプロパティ、メソッドが子クラスに「継承」(Inherit)されるということらしい。Overrideクラスと、NewクラスをそれぞれBaseClassから派生させた。つまり、OverrideクラスとNewクラスには、それぞれName()とBow()とが継承されている。そこで、OverrideクラスではName()をOverrideし、NewクラスではName()をNewで書き換えている。したがって、BaseClass, OverrideClass, NewClassのBow()メソッドは、すべてBaseClassのBow()が呼ばれている。面白いのは、OverrideしたほうのName()は自身を呼んでいるが、NewしたほうのName()は基本クラスを呼び出している点だ。C#の言語仕様によると、NewとOverrideは以下のように説明されている。new キーワードを宣言の修飾子として使用すると、基底クラスから継承されたメンバーを明示的に隠ぺいできます。  継承されたメンバーを隠ぺいすると、派生バージョンのメンバーで基底クラスのバージョンが置き換えられます。override メソッドは、基本クラスから継承されたメンバーの新しい実装を提供します。  Newは隠ぺいしているだけ（→基底クラスにキャストしたときには、基底クラスのものをそのまま呼び出す）、Overrideは上書きしている（→基底クラスにキャストしたときには、自身のものを呼び出す）ということらしい。合っているのか……。実際の動きから考察した結果だけど、基本的なところが抜けてるからちゃんと説明できない。


