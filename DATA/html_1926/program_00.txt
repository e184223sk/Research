using System;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Windows;
using System.Windows.Data;

namespace WpfApp48
{
    public partial class MainWindow : Window, INotifyPropertyChanged
    {
        #region INotifyPropertyChanged
        public event PropertyChangedEventHandler PropertyChanged;
        protected void OnPropertyChanged(string propertyName)=&gt; this.PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        #endregion

        // ガンダム情報を格納
        public ObservableCollection&lt;MyData&gt; DataList { get; set; } = new ObservableCollection&lt;MyData&gt;();

        // ソート/グルーピングに使うCollectionViewSource 
        CollectionViewSource _UICollectionViewSource;
        public CollectionViewSource UICollectionViewSource { get { return _UICollectionViewSource; } set { _UICollectionViewSource = value; } }

        public MainWindow()
        {
            InitializeComponent();
            this.DataContext = this;

            // CollectionViewSourceのソースにDataListを設定
            UICollectionViewSource = new CollectionViewSource();
            UICollectionViewSource.Source = DataList;
        }

        // ボタンをおしたらデータの中身を追加
        private void Button_Click(object sender, RoutedEventArgs e)
        {
            DataList.Add(new MyData() { MachineName = "ガンダム", PilotName = "アムロ" });
            DataList.Add(new MyData() { MachineName = "シャアザク", PilotName = "シャア" });
            DataList.Add(new MyData() { MachineName = "グフ", PilotName = "誰やったっけ？" });
            DataList.Add(new MyData() { MachineName = "Zガンダム", PilotName = "カミーユ" });
            DataList.Add(new MyData() { MachineName = "ガンダムmk-Ⅱ", PilotName = "アムロ" });
            DataList.Add(new MyData() { MachineName = "ジ・オ", PilotName = "シロッコ" });
            DataList.Add(new MyData() { MachineName = "百式", PilotName = "シャア" });
            DataList.Add(new MyData() { MachineName = "ZZガンダム", PilotName = "ジュドー" });
            DataList.Add(new MyData() { MachineName = "νガンダム", PilotName = "アムロ" });

            //ソートの指定
            SortDescription sortDescription;
            UICollectionViewSource.SortDescriptions.Clear();

            sortDescription = new SortDescription
            {
                PropertyName = "MachineName",
                Direction = ListSortDirection.Ascending
            };
            UICollectionViewSource.SortDescriptions.Add(sortDescription);

            sortDescription = new SortDescription
            {
                PropertyName = "PilotName",
                Direction = ListSortDirection.Ascending
            };
            UICollectionViewSource.SortDescriptions.Add(sortDescription);

            //グループの指定
            PropertyGroupDescription groupDescription;
            UICollectionViewSource.GroupDescriptions.Clear();

            groupDescription = new MyDataGroupDescription
            {
                // なにでグループを作るか決める
                PropertyName = "PilotName"
            };
            UICollectionViewSource.GroupDescriptions.Add(groupDescription);

            UICollectionViewSource.View.Refresh();
        }
    }

    // ガンダム情報クラス
    public class MyData
    {
        public string MachineName { get; set; }
        public string PilotName { get; set; }
    }

    class MyDataGroupDescription : PropertyGroupDescription
    {
        // データの中身からグループのヘッダに出すものを決める
        public override object GroupNameFromItem(object item, int level, System.Globalization.CultureInfo culture)
        {
            var uiobject = (MyData)item;

            return uiobject.PilotName;
        }
    }
}

