/// &lt;summary&gt;
/// 要素IDから解析モデルのサーフェスを取得する
/// &lt;/summary&gt;
/// &lt;param name="elementIds"&gt;&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
private List&lt;AnalyticalModelSurface&gt; GetAnalyticalModelSurfaces(List&lt;ElementId&gt; elementIds)
{
    List&lt;AnalyticalModelSurface&gt; surfaces = new List&lt;AnalyticalModelSurface&gt;();

    foreach (ElementId id in elementIds)
    {
        try
        {
            Element element = this.doc.GetElement(id);
            if (element is AnalyticalModelSurface)
            {
                AnalyticalModelSurface surface = element as AnalyticalModelSurface;
                surfaces.Add(surface);
            }
            else
            {
                this.excemsg = "解析モデルID：" + id.ToString() + "：解析モデルサーフェスではありません。";
                log.put_log("DEBUG", System.Reflection.MethodBase.GetCurrentMethod().Name, this.excemsg);
            }
        }
        catch (Exception exce)
        {
            this.excemsg = "解析モデルID：" + id.ToString() + "：" + exce.Message;
            log.put_log("WARN", System.Reflection.MethodBase.GetCurrentMethod().Name, this.excemsg);
        }
    }

    if (surfaces.Count() &lt;= 0)
    {
        this.outmsg = "構造解析モデルのサーフェス情報が取得できませんでした。";
        log.put_log("ERR", System.Reflection.MethodBase.GetCurrentMethod().Name, this.outmsg);
    }

    return surfaces;
}

