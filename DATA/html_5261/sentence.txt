More than 3 years have passed since last update..NET の enum のパフォーマンスに対する記事を目にする機会は多いと思います。（追記あり）他にもジェネリクス関係で IEquatable&lt;T&gt;, IComparable&lt;T&gt; を実装してないとか、HasFlag の制約が甘いとか、Enum.GetValues の typeof がいちいち面倒臭いなどなど…。そんなときふとこんなライブラリを発見しました。その名も Enums.NET ！どんな機能があるかは github のデモ を見ればおおよそわかると思いますが、何点か特徴をあげます。

あれ！？ Enum ってジェネリクスの制約につかえなくね？（追記あり）しかし、実は C# でできないだけで、MSIL 等で記述すれば可能なのです。
C# のジェネリックで Enum/Delegate 制約を使う - 捨てられたブログEnums.NET では Fody.ExtraConstraints を使って制約を付加しています。
いつも Fody.PropertyChanged のお世話になっていて MSIL の件も知っていたのに、こんな発想は1ミリも出てこなかった…。世のエンジニアの方々には脱帽するほかありません。@mak_in さんより C# 7.3 にて Enum と Delegate が制約に使えることを教えていただきました。
まだリリース前なので、アップデートを待ちましょう。
C# 7.3 の新機能 未確認飛行 C.NET Core 2.1 では HasFlag のパフォーマンスが上がるそうです。
Enum.HasFlag(Enum) のパフォーマンスの測定


