以下のgifのように、クリックしたオブジェクトにのみアウトラインを設定するようなものを、Unityの機能であるCommandBufferを利用して作成しました。
プロジェクトのソースコードはこちら
https://github.com/Arihide/unity-selective-outlineCommandBufferを用いると、レンダリングパイプラインの任意の箇所に、別の描画処理を挟み込むことができます。
今回はこの機能を用いて、以下の図のように、一部メッシュに対してだけレンダリング・輪郭抽出を行った後に合成を行いました。
次からは具体的なスクリプト部分について説明します。まずは、CommandBufferを用いたスクリプト部分を見てみましょう。具体的な内容はソースコードのコメントを見ていただくとして、大まかな処理の流れとしては、
OnEnable関数内でCommandBufferオブジェクトを作成し、さらにSetCommandBuffer関数内でどのような流れで描画するのかを設定しています。
その後、とすることによって、設定したCommandBufferをImageEffectsの直前（一通りメッシュの描画が完了したあと）に挟み込むようにします。またUpdate関数内でオブジェクトがクリックされたのを検出したとき、そのオブジェクトにアウトラインをつけるように、CommandBufferの再設定を行っています。さて、処理の流れがわかったところで、次にアウトラインを抽出するシェーダーを見てみましょう。よく見かけるアウトラインシェーダーは深度や法線による方法が多いですが、
今回はあるピクセルの近くが不透明だったら自分のピクセルも不透明とみなして輪郭を広げ、もともと不透明だったピクセル部分はくり抜く。という単純な方法で実装しました。
理由としては今回は描画対象が１つなので、重なりなどを考慮する必要がないからです。


