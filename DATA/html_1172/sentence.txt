More than 1 year has passed since last update.最近になってUnityで開発することが増え、C#に触ることが多くなったので「使ってこれは便利だな」と感じたものをここに備忘録がてらまとめておきます。（主はC++からC#を触ってるのでC++と比較しての視点で書いてます。）
Unity2019.4.0f1時点でのバージョンはC#7.3が標準だそうです。C++ではことあるごとにGetter/Setterを作らないといけなかったがC#ならこのように記述できる。参照するときはこのようにメソッドを呼び出すことなくメンバ変数のように扱える。Unityでゲーム作ってるとどうしてもクラス間の値の受け渡しが多くなるため、この機能はとても助かる。
ちなみにget/setのどちらかは省略することが可能である。
また自動実装プロパティといって単純に「get; set;」記述することもできる。その際はプロパティ自体がデータを保有することになる。良く調べたらこの機能C++ではないそうです。（C#は4.0から実装されたみたい）
簡単に言えば指定した引数だけを渡せれるってやつです。
デフォルト引数と兼ねたコード例です。何気にこの機能最近知ったので、上手いこと使いこなしていきたいですね。
VBには昔からある機能だそうです。最初、LINQとはなんぞやとなりましたが要はC#独自のSQLみたいなやつです。（正式名称は統合言語クエリと呼ぶみたい）
データベース関係に疎いので上手い使い方は出来ていないかもしれませんが、現在開発中のコードではこんな感じで使っています。やってることとしては「where」の部分でエッジリストから「エッジの出力ポート名と対象のポートのポート名が同じ　かつ　対象ノードと出力先のノードが同じ」という条件のエッジを抽出しています。
そして「Any()」の行で抽出したエッジがあれば if 文内の処理をするようにしています。
指定した条件の要素を抽出したいときに結構使う便利だなと感じます。この機能もC++には現状ありません。（これぞとばかりにC++に恨みがあるんかって感じですけど）
何が出来るかというと、クラスの情報をデータとして扱えます。（メタデータ）Typeクラスを使って実装します。
コード例も開発のものから引っ張てきました。まだこれは単純ですが、BaseNodeのメンバにTypeクラスの変数を宣言し、コンストラクタの「GetType()」でBaseNodeクラスをタイプオブジェクトとして格納しています。また文字列としても取得することが出来ます。「type.Name」でクラス名を取得し、"Node"部分を削除してそのままNodeのタイトルとして流用しています。
こうすることでこのBaseNodeクラスを継承したクラスでも機能が働き、子クラスのクラス名を勝手に取得して反映させてくれます。
Typeクラスからインスタンスを生成をすることもできます。詳しくは参考記事をご覧ください。Unityを触ってて便利だなと感じたC#の機能はこんな感じです。（あとの機能はC++にもある機能だったりので省いてます。）
まだ他にも「式木」とかあるんですけど、使いどころがあまりないと感じたので割愛。
もっとこういう使い方あるよとか便利な機能があるよっていうアドバイスがありましたら気軽にコメントしてくれるととても助かります。C#とC++の比較
Unityで使える！C#の便利な機能７選
オプション引数・名前付き引数
C#のプロパティについて調べてみた
はじめてのLINQ
C#リフレクションTIPS 55連発
リフレクションを利用して文字列からクラス操作


