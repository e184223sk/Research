More than 1 year has passed since last update.この記事はUnityアセット真夏のアドベントカレンダー 2019 Summer!31日目の記事です。LIDIQ氏がAssetStoreにて製作、販売をしている、
あらゆるオブジェクトの時間を操れるアセットです。
時間を遅くしたり止めたり、加速させたり戻したり…
時間の調整が細かく出来ます。
一括で管理したり、いくつかのグループに分けて管理したり、1つずつ管理したり、範囲(エリア)内のオブジェクトのみを管理したり…
カスタマイズ性が高いのも特徴です。どのような挙動をするかはこちらの動画をご覧下さい。それでは、使い方に移っていきます。
まず、Chronosの時間操作を扱うためにはシーン上に「Timekeeper」というコンポーネントを持つオブジェクトが必要です。
なのでまずはそれを追加してみましょう！
(既にプロジェクトを作成し、Chronosを購入、インポートしている前提で進めていきますので、まだの方は先にインポートまで終わらせておいてください)

Hierarchyビュー上で右クリックします。

下にある「Timekeeper」をクリック

これで、Chronosを使う準備が出来ました。それでは時間を操作していきます。
時間を操作したいオブジェクトに、「Localclock」と、「Timeline」というコンポーネントを追加します。

Addcomponentをクリックして(今回は物理演算を適用するためRigidbodyも追加しています)

「Localclock」を追加。

続いて同じ方法で「Timeline」も追加します。
これで時間操作を適用させる準備が出来ました。
時間を操作するためにスクリプトを書いていきます。

Projectビュー上で右クリックし、createからC#Scriptを押します
スクリプト名を適当に決め(私はTimeControlsしました)そのスクリプトファイルを開きます。このコードを書き、時間操作をしたいオブジェクトに適用することで時間を遅くする(100分の1)にすることができます。
コードの解説をしますと

GetComponent&lt;LocalClock&gt;()

まずオブジェクトが持つ「Localclock」を取得し

localTimeScale = 0.01f;

その時間を0.01倍速にしています。
この0.01の部分を変えれば任意の速度に変更できます。次にこれをオブジェクト単位ではなく、一括で変更できるようにしていきましょう。
まず親にしたいオブジェクトに「GlobalClock」を追加しますが、Timekeeperに既についているので、Timekeeper以外を親にしたい場合以外は追加する必要はありません。
それでは「GlobalClock」と「LocalClock」を関連付けしていきます。

「GlobalClock」のKeyの部分の名前を覚えておきます。

そして「Timeline」のModeをLocalからGlobalに変えます。

最後に「Timeline」のGlobalClockを先程のKeyの名前を選択して、完了です。
これをまとめて動かしたいオブジェクトの数だけ行ってください。それでは先程のコードを改変して、Tキーを押した時に全体の時間を止め、もう一度Tキーを押すと時間が元に戻るコードを書いていきます。このコードを「GlobalClock」を持つオブジェクトに適用します。
そしてゲームを初めTキーを押してみると…？
一度押すと止まり、もう一度押すと動いたと思います。
最後にコードの解説をしますとif (Input.GetKeyDown(KeyCode.T))
        {
の部分で「もし、Tキーが押されたなら〜」という条件式を作りif (GetComponent&lt;GlobalClock&gt;().localTimeScale == 0)
GetComponent&lt;GlobalClock&gt;().localTimeScale = 1
の部分で「既に時間が止まっているなら〜」という条件式をさらに作り
その下の文で時間を等倍にする処理をしています。
つまり「時間が既に止まっているな時間を等倍にする」という処理をここで行っています。else
                GetComponent&lt;GlobalClock&gt;().localTimeScale = 0;

この文で「時間が止まっていないなら」という先程の条件式の反対の状況になっていれば処理し時間を止めます。
ここで「時間が止まっていないなら時間を止める」という処理です。Chronosではここで紹介した以外にもまだまだ使い方があります！
是非Chronosをマスターして時間を自在に操ってみてください！


