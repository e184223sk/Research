
/// &lt;summary&gt;
/// 機械学習
/// &lt;/summary&gt;
private void Training()
{
    // ネットワークの生成
    network = new DeepBeliefNetwork(
        new GaussianFunction(),          // 活性化関数の指定
        inputsCount: 4,                  // 入力層の次元
        hiddenNeurons: new int[] { 1 }); // 出力層の次元

    // ネットワークの重みをガウス分布で初期化する
    new GaussianWeights(network).Randomize();
    network.UpdateVisibleWeights();

    // DBNの学習アルゴリズムの生成（誤差関数を決める部分）
    var teacher = new PerceptronLearning(network);

    // 学習実行。同じデータを1000回学習させる。
    for (int i = 0; i &lt; 1000; i++)
       teacher.RunEpoch(inputs, outputs);

    // 重みの更新
    network.UpdateVisibleWeights();
}

