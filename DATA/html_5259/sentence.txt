More than 3 years have passed since last update.C# のイテレータは遅延評価です。
イテレータメソッドに引数チェックがある場合でも、メソッド呼び出し時にはチェックが行われず、評価時に例外が発生します。素数を返すイテレータを例に見てみます。上記のイテレータメソッドはと例外が投げられるはずですが、メソッド呼び出し時に例外は発生しません。今回のように例外の発生個所と実際に例外をスローするコードが近い場合には問題の発見は簡単です。
しかし、大規模なプログラムになればイテレータを作るコードと列挙を開始するコードが近くにあるとは限らないため、問題の発見が困難になる場合があります。イテレータメソッドをローカル関数として内部に持つことでこの問題は解決します。
Generate が呼び出された時に引数が不正である場合、その場で例外がスローされるようになります。ローカル関数として実装を持つメリットは以下が挙げられます。More Effective C# 6.0/7.0 を参考にしました。下記の書籍を参考にしました。
実戦で役立つ C#プログラミングのイディオム/定石&amp;パターン


