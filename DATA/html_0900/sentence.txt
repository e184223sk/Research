とある理由でmagicleapを触り始めたのでその時の困ったことをメモします．
※C#すらろくに触ったことないレベルのメモ書きですこのチュートリアルは"レイキャスト"をmagicleapで扱うためのものです．レイキャストとは光線を飛ばしてそれがぶつかった先の情報を取得するものです．今回はその先にキューブを生成するようにつくっているみたいです．2.2 Unityでのレイキャストをやっているとエラーが出てきた．その中でも，エラーメッセージ通りに修正しても消えなかったのはこれ．error CS0117: GetWorldRays' does not contain a definition forMLRaycast'このエラーの原因はGetWorldRaysという命令が存在しないことのようだ．結局はこのチュートリアルはSDK0.22用に作られたもので，今使っているSDKは0.24でした．現在使っているレイキャスト用のサンプルスクリプトが公開されていました．Raycast Snippet - Unityというv0.24用に書かれた記事を見つけたのでこれを自分なりに解釈して進めていく．基本は0.22用のチュートリアルと同じ．今回は3番についてつまずいたのでそれについて書いていく．※参照したページをコピペしただけですこのように内容を置き換えます．この内容を読み解いていきます．このあたりで各関数を呼び出す準備をしています．SystemはC#の基本系，UnityEngineはunityの基本系MagicLeapはマジックリープ固有の命令が収納されているようです．各オブジェクトの準備です．camTransformはこのあとレイキャストに使うパラメータを引き出す先を登録しておきます．この場合はカメラなのでヘッドセットの動きに合わせて光線が飛びます．prefabにはレイキャストで作成されるオブジェクトを登録します．_raycastParamsはレイキャストに使うパラメータを収納します．前提として 連載C#入門第3回クラスとオブジェクトを読んでおくとスムーズかもしれません．簡単に言うとクラスは命令の設計図，オブジェクトはその設計図から作った命令自体だと思って読んでいます．magicleap名前空間を追加するみたいです．名前空間というのはクラス（命令文のようなもの？）をまとめたくくりです．フォルダのように名前空間の中にさらに小さな名前空間がある場合もあるみたいです．これがあることによって同じ名前のクラスもどの名前空間の中にいるかで区別できるようになります．つまりは，この宣言をすることによってmagicleap関係の命令文を使えるようになります．※ちなみにSystem.Collectionsはunityで標準的な名前区間（Cでいうstdioヘッダーのようなもの？），UnityEngineはunity関係の名前空間です．RaycastSnippetというクラスを宣言しました．publicは名前空間の宣言に関係なくいつでも使える言葉です．これを使うことでこのコードの外からもこのクラスを使うことができるようになります．つまりは，unityエディタからRaycastSnippetが使えるようになります．:MonoBehaviorはこのクラスの属性を追加しています．MonoBehaviorはunityで作ると自動でつけてくれる属性で物体の動きをきっかけとする属性のようです．publicを使って外からも使える形で，camTranfromというクラスをTranfromというカタチで宣言しています．Transfromはgameobjectを動かすためのクラスで，今回はカメラを移動させるために用います．これによりgameobjectの位置情報を使う準備ができました．publicを使って外からも使える形で，スクリプトからgemeobjectを扱えるようになります．レイキャストによるキューブの生成に使うようです．privateはpublicと同じように名前空間の宣言に関係なくいつでも使える言葉です．publicとは反対にこのスクリプトの外からアクセスできないようになるります．後で使用するMLRaycast.Raycastというクラスに送るRayの情報を入れるためのクラスです．newを付けることによって宣言と同時にオブジェクト化しています．Startメゾットです．メゾットとは複数のクラスが1つの塊になったものです．特にStartは特別な名前で，このスクリプトが実行されたときに1回だけ実行されます．MLRaycast.Start();によりレイキャストが始まります．これもStartメゾッドと同様に特定のタイミングで呼び出されるメゾッドです．これはgameobjectが削除した時に呼び出されるメゾッドです．今回は，MLRaycast.Stop();によりレイキャストが終了されるように設定されています．これもStartメゾッドと同様に特定のタイミングで呼び出されるメゾッドです．Updateメゾッドはunityで画面が更新されるたびに実行されるメゾッドです．今回は毎回カメラの移動と入力の確認をしているみたいです．前もって用意しておいた_raycastPatams.〇〇にcamTransfrom.〇〇を代入しています．つまりはmaincameraの状態を常にMLRaycastのパラメータとして受け取っています．これによりmaincameraと光線が同じように移動します．実際にMLRaycast.QueryParamsやTransfromがどのような構成・機能を持っているかはunityスクリプトカンファレンスなどで逐次調べる必要がありそうです．レイキャストを実際に動かすクラスです．引数に光線のパラメータと物体とぶつかったときの動作を受け取ります．光線が物体にぶつかったときにキューブを生成するためのクラスです．


