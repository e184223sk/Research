
// 表情のスクリプトのつづき

Dictionary&lt;string, int&gt; boneIndex = new Dictionary&lt;string, int&gt;(); // ボーンのインデックス番号
HashSet&lt;int&gt; changedBoneIndex = new HashSet&lt;int&gt;();
float mag = 6.0f; // 回転情報を渡すときの倍率

void Start() {
    // 略
    foreach (var tmp in model.boneList) {
        boneIndex.Add(tmp.boneData.nameJp, tmp.boneID);
    }
}

void Update() {
    // 略
    setBone("頭", Mathf.Abs(mag * -mouse.y) &lt;= 20f ? mag * -mouse.y : 20f * -Mathf.Sign(mouse.y),
                  Mathf.Abs(mag * -mouse.x) &lt;= 10f ? mag * -mouse.x : 10f * -Mathf.Sign(mouse.x),
                  Mathf.Abs(mag / 2 * mouse.x) &lt;= 5f ? mag / 2 * mouse.x : 5f * Mathf.Sign(mouse.x));

    setBone("腰", Mathf.Abs(mag / 2 * -mouse.y) &lt;= 3f ? mag / 2 * -mouse.y : 3f * -Mathf.Sign(mouse.y),
                  Mathf.Abs(mag / 2 * -mouse.x) &lt;= 10f ? mag / 2 * -mouse.x : 10f * -Mathf.Sign(mouse.x),
                  Mathf.Abs(mag / 2 * mouse.x) &lt;= 5f ? mag / 2 * mouse.x : 5f * Mathf.Sign(mouse.x));
}

// ボーンの名前を渡すと値をセットしてくれる関数
void setBone(string name, float x, float y, float z) {
    Vector3 value = new Vector3(x, y, z); 
    model.boneList[boneIndex[name]].userEulerAngles = value;
    changedBoneIndex.Add(boneIndex[name]);
}

