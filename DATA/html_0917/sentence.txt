More than 1 year has passed since last update.Tera Term のマクロ言語 (Tera Term Language) の通信コマンドのほとんどはなにがしかのホストに接続していないと実行できません。職場の Windows 10 デスクトップ環境には Tera Term が入っていて TTL の通信コマンドの動作を実行させて確かめたいのですが、開発系でないので気安く接続できるようなホストはありません。Tera Term は名前付きパイプに接続でき、 Windows に .NET が入っていればローカルに名前付きパイプ サーバーを立てられるそうなので、試みてみました。C# および .NET の学習が不十分なので、これで問題ないのか心もとないですが、動作はしているようです。基本的に文献 1. の非同期バージョンを C# に書き直しただけですが、クライアントからの入力をエコーするのではなく、双方向から入力できるようにしてみました。その際に参考になったのが文献 3. と 4. です。なお、文献 1. の同期バージョンの PowerShell スクリプト1を実行すると Ctrl + C も Ctrl + Break もきかなくなることもあり、不慣れな C# にチャレンジしてみました2。これらのコールバック メソッドはそのコールバック メソッドを指定したメソッドの最後の引数のオブジェクトを result.AsyncState で受け取れるらしいのですが、当該の引数のオブジェクトの型にキャストしてやらなければメンバーにアクセスできないようです。 (文献 5.)PipeServer.exe の引数にパイプの名前 (例 test) を指定します。 Tera Term の 新しい接続 の ホスト に例として \\.\pipe\test と入力して接続します。接続後、 Tera Term 側でキー入力すると対応する文字が PipeServer.exe 側のコンソールに出ます。その逆も同様です。なお、 Enter キーを押しても入力されるのは CR (Ctrl + M) のみのようです。「改行」するには Ctrl + M, Ctrl + J と入力しなければなりません。 Tera Term で 接続断 を選択するかコンソールで Ctrl + C を入力して接続を切ります。名前付きパイプはパイプ ストリームを複数もつことができ、それぞれにクライアントを接続できます。よって、名前付きパイプを介して二つの Tera Term のインスタンスで通信できれば所期の目的は達成できることに気が付きました。また、文献 2. をもうすこし丁寧に見直したら、うってつけのメソッドがありました。PipeServer2.exe の引数にパイプの名前 (例 test) を指定します。Tera Term を二つ起動してそれぞれの 新しい接続 の ホスト に例としては \\.\pipe\test と入力して接続します。パイプ名は同一ですが、それぞれが別々のパイプ ストリームにつながります。接続後、一方の Tera Term でキー入力すると対応する文字が他方の Tera Term に出ます。こちらの方法では XMODEM などのファイル転送も可能です3 4。Tera Term で 接続断 を選択するかコンソールで Ctrl + C を入力して接続を切ります。これで片方の接続が切れても再接続させることができます。ただし、両方の接続を切ってもパイプ サーバーは終了しません。パイプ サーバー起動中のコンソールで Ctrl + C を入力するしかないです。Tera Term では Unicode を UTF8 に置換する必要あり。また、 exit と quit は Tera Term からだとインプット メソッド (IME で半角英数に変換) をかまさないと効果がありません。 ↩当該の同期バージョンのスクリプトを C# に書き直してみると Ctrl + C がききます。 ↩XMODEM だと転送先のファイルの末尾に ^Z が付加されますが、これはコメントでご指摘をいただきましたとおり XMODEM の仕様とのことです。 ↩B-Plus を除きます。 ↩


