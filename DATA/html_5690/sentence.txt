More than 3 years have passed since last update.Visual Studio Codeではありません。あしからず。IDE便利ですよね。
静的型付け言語だと、特に力を発揮してくれる気がしています。簡単なプログラムを作りつつ、IDEの使い方を説明します。簡単な数値計算プログラムの作成を通して、IDEの使い方をみてみます。既にプロジェクトは作成済みだとします。まずは、コードを書いてみます。この時点では、MyMathクラスも、addメソッドも存在しないので赤線で警告がでます。ここで、赤線のところにカーソルを当てて、クラスを作成します。
右クリックで選択していってもよいのですが、ショートカットもあります。
macの場合は、option + enter。すると勝手にファイル（空のクラスを作成してくれます）。スコープがinternalなのが個人的にはいまいちかな、と思ってます。Program.csに戻ります。今度はメソッドがないのでメソッドが赤線になっています。また同じようにメソッドを作成してみます。勝手にメソッドの雛形作成されました。後は中身を作っていくだけです。
ちなみに今回の例は、返り値を指定しなかったのでvoidで作られました。こんな感じに返り値をIDEにわかるように作成すると、もっと簡単にメソッドを作れます。このようにファイルを変更します。
```csharp:Program.cs
using System;
using System.Runtime.InteropServices;namespace HelloWorld
{
    static class Program
    {
        static void Main()
        {
            var a = 1;
            var b = 1;}
```subの返り値がわかるようにint ansで結果を受け取るようにしました。
エラー部分を選んで、option + enter、メソッドを作ってみましょう。作ったら、command + d でメソッドに飛びます。細かいことですが、こういった操作で効率化できますね。MyMathというクラス名がイケてないので、Calculatorという名前に変えてみましょう。MyMath.add の MyMathの部分を選択して、command + r でリネームできます。ファイル名も一発で変わります！ビルドは、command + b
実行は、command + enterで行います。C#のパッケージマネージャであるNuGetとか使うともっと便利になりますね。
こういった操作になれると、テスト駆動開発がしやすくなります。テストファイルを起点として、例えばといった流れをテンポよく行えます。以前はWindows環境で開発していたので、ショートカットが色々と違ってとまどいました　。VisualStudioいいですよね。では、良いC#ライフを！！！


