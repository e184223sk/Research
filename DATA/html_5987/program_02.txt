
public class Customer : NotificationObject
{
    public string Name
    {
        get { return _Name; }
        set { SetValue(ref _Name, value); } 
    }
    string _Name;
}

public class CustomerWatcher : IDisposable
{
    IDisposable listener;
    Customer Target;
    public void Dispose(Customer customer)
    {
        Target = customer;
        listener = new PropertyChangedEventListener(Target, (sender, e)=&gt;{
            // ...do something
        });
    }

    public void Dispose()
    {
        listener?.dispose();
    }
}

...

var customers = new ObservableCollection&lt;Customer&gt;();
ReadonlySyncedCollection&lt;CustomerWatcher&gt; customerWatchers;
customerWatchers = CreateReadonlySyncedCollection(customers, 
(m)={return new CustomerWatcher(m);});

// customerWatchers は customers と同期する
customers.Add(new Customer());
customers.Clear();

