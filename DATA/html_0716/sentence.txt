C#のActionをコールバックのリスナとして利用していたところ「思てたんとちがう！」という挙動があったので、改めて検証しました。
Unityの.NET 4.xで実行していますが、C#ならどのプラットフォームでも同じことが起こると思います。このコードを実行するとこうなります。本来ならばOnSomething1〜3は独立のため、2でExceptionが起きても3が実行されてほしいところですが、出力されていません。こんな感じでtry-catchしてあげると3も実行されます。「コールバック公開しておくから、誰でも好きにイベント登録しといてくれよな！」というのがわりと一般的な使い方と思いますが、この挙動だと「他のところで登録した誰かがthrowしたら自分のところにイベントが来なくなる(しかもそれを知ることすらできない)」というなかなか恐ろしいことになります。C#のActionは他にもラムダ式でイベント登録すると解除できなかったり、いろいろ「コワ〜」な挙動が多いです。それすらもなかった昔よりはマシになっているだろうと言われればそうなのですが……。なにはともあれ、良い子はイベント購読側で、イベントを購読しているという状態をインスタンスとして保持・破棄できるReactiveExtensionとかUniRx使おうね！1　という話でした。おしまい。とはいえRxもまだ人類には早すぎる代物感がある。 ↩


