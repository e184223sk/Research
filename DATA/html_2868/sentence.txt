Microsoft Build(2021年5月26日(水)–28日(金)[日本時間])も近いので、Project Reunion 0.5.7を使ってWinUI3.0を試してみました。WinUIとは
TODO: 力尽きてなかったらふわっと書くProject Reunionとは
TODO: 力尽きてなかったらふわっと書く基本的には、こちらのサイトに書かれている通りです。Project Reunionのインストールについては2021年3月(Project Reunion 0.5.0)時点での説明なのでいろいろ書かれてますが、現時点（Project Reunion 0.5.7）でのインストールは、Visual Studio 2019 で、 [拡張機能] &gt; [拡張機能の管理] をクリックし、 [Project Reunion] を探して、Project Reunion 拡張機能をインストールします。の一択で構わないようです。（最新版を入れればよい）プロジェクトテンプレートからBlank App, Packaged (WinUI 3 in Desktop)を選びます。
プロジェクト名を入力したら、バージョンを選択します。
ビルドすると、WinRTのランタイムバージョンが古いといわれます。（Preview版のVisualStudio2019は大丈夫です。）
制限事項と既知の問題にあるとおり、現時点(.NET5.0.203)ではプロジェクトファイル(.csproj)に以下を追記して.NET SDKのバージョンを明示的に設定する必要があります。ビルドが通ったら無事に実行することができました。開発者モードがオフだとアプリの実行時に設定アプリが開いてオンにするように促されます。
せっかくなので、以下のようにFlutterのサンプルアプリっぽく改造しながらMVVMの実装を確認してみます。
ViewModelベースクラスはSystem.ComponentModel.INotifyPropertyChangedを実装します。ActionCommandクラスはSystem.Windows.Input.ICommandを実装します。一応、カウンタ用のModelクラスも用意しました。（int型プロパティのrefを回避するために、ちょっとヘンテコになってしまいました。）MainWindow用のViewModelクラスを作成し、コードビハインドでプロパティとしてインスタンスを用意しておきます。あとは、XAMLでx:Bindを使ってバインドします。x:BindのBindingModeはデフォルトでOneTimeになっています。過去にちょっとだけWPFをかじった程度ですが、とくに問題なくMVVMで教科書的に実装することができました。ソースをここに置いておきます。
https://github.com/tatsu/WinUISampleApp参照
https://zenn.dev/okazuki/articles/project-reunion-was-released


