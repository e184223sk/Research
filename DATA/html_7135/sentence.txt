More than 1 year has passed since last update.UnityのC#のコード(幾つかの公式Assetとか)読んでたらFindとかいっぱい使ってあって悲しくなったんでLINQのメソッド一覧的なの作ってみました。お願いだからforeach+List.AddじゃなくてSelect使ってとか
お願いだから引数配列じゃなくてIEnumerableにしてとか
なんでforeach回すだけなのにToArrayやってるの？とか明らかに適切な場所じゃないとこで使っていて悲しかったんや・・・
とりあえずこんな事できるよ～的なの作ってみました。
とりあえずC#書く人なら常識的なところ辺りまで※ファイルの頭に当然using System.Linq;入れています
※ソースコード形式です。各メソッド最後の行は出力を示します
※IEnumerableをシーケンス表記で統一しています。（リストと読み替えてもいいと思います）※LINQは基本的に少しだけ低速ですが気にするようなレベルのことってそんなに無いと思います。というかこのレベルで高速化したい場合はその前にILの勉強してどういうふうにコンパイルされるかが予測できるようになってからでいいと思います。このページではこんなメソッドをProgramに作って出力してますほんとうによく使うメソッド
7割くらいはこれで完結しそうなレベルでよく使うのでこれだけは覚えておいて欲しいです。数を数えたりif文と併用することが多いメソッド一応解説しておくとLINQのWhereとかSelectは呼ばれたタイミングでは何もしません。
実際にその処理が走るのは使われる時です。(foreachとかで)
で二回以上同じシーケンスを使いまわしたりすると逆に遅くなってしまうのでインスタンス化したほうが良いです。たとえばこれだけではConsole.WriteLineは呼ばれません。こういうふうにされて初めてConsole.WriteLineが呼ばれますここまで知っていると9割以上はこれで済みますあんま使わないけど簡単だし
あ、Average忘れてるこの辺りから若干複雑＆あんま使わないかも？なメソッドです。Linqにはシーケンスを操作するメソッド以外にもシーケンスを作成するメソッドがあります。
多くは簡易的なものでSelectとかと組み合わせると真価を発揮する？かも？
たまに便利覚えておいて得するのは多分ConcatとZipくらい
ほかは使った記憶がほぼない・・・別分野では使うかもだけど・・・あんまり使わないから完全に忘れていてAdvent Calendar 2016の記事を書いてて思い出したメソッドを簡単に追記しておきます。リストの中身を全部キャストしたいときはOfTypeを使用します。
Castというメソッドもありますが、こちらはキャストに失敗した場合例外を投げます。ちょうどOfTypeがasキャストでCastが(T)って書くタイプのキャストですね。重複の除去にはDistinctを使用します。
コマンドラインでいうuniqとかSQLのDistinctに相当します。参照型の比較はこちらを参照してください。
C# LINQ Distinct を自作クラスのコレクションで使う方法これに限らずC#の比較メソッドは割合未だに規定の等価演算子かIEqualityComparerを使わせることが多くて面倒くさいです。
Funcとかで等価性検証させてくれないかしら？一応何やってるか一見わからないのでおすすめはしたくないけれどGroupByしてからその要素の一個だけ取るとかは可能かな個人的にLINQでおすすめの本はこちらです。
パラパラ眺められるレベルの本ですし対して高くもないので便利です。
あ、アフェリエイトとかじゃないので安心して飛んでください。【省エネ対応】 C#プログラムの効率的な書き方 | 川俣 晶 |本 | 通販 | Amazon便利な拡張としてIxなんてーのもあります
が、そこまでいるかぁ？ということもしばしばついにUnityの内部.Netバージョンが上がったのでZipが使えるようになりました！どこかのUnityPatchでFirstとかがiosでクラッシュする問題は解消しているようです。
一方Zipとか使えなくて悲しいです・・・エイプリールフールネタになる前に早くC#6.0を・・・をー！！


