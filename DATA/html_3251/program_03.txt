
var e = new Vector3(plane0.normal.y * plane1.normal.z - plane0.normal.z * plane1.normal.y,
        plane0.normal.z * plane1.normal.x - plane0.normal.x * plane1.normal.z,
        plane0.normal.x * plane1.normal.y - plane0.normal.y * plane1.normal.x);
var d0 =
    -Mathf.Pow(
        plane0.normal.x * plane0.normal.x + plane0.normal.y * plane0.normal.y +
        plane0.normal.z * plane0.normal.z, 0.5f) * plane0.distance;
var d1 =
    -Mathf.Pow(
        plane1.normal.x * plane1.normal.x + plane1.normal.y * plane1.normal.y +
        plane1.normal.z * plane1.normal.z, 0.5f) * plane1.distance;

Vector3 A;
if (e.z != 0)
{
    A = new Vector3((d0 * plane1.normal.y - d1 * plane0.normal.y) / e.z,
        (d0 * plane1.normal.x - d1 * plane0.normal.x) / (-e.z), 0);
}
else if (e.y != 0)
{
    A = new Vector3((d0 * plane1.normal.z - d1 * plane0.normal.z) / (-e.y), 0,
        (d0 * plane1.normal.x - d1 * plane0.normal.x) / e.y);
}
else if (e.x != 0)
{
    A = new Vector3(0, (d0 * plane1.normal.z - d1 * plane0.normal.z) / e.x,
        (d0 * plane1.normal.y - d1 * plane0.normal.y) / (-e.x));
}
else
{
    A = Vector3.positiveInfinity;
}

