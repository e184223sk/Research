More than 3 years have passed since last update..NET Core で Code Coverage を利用する方法です。テストフレームワークは xUnit.net を使います。検証した環境は以下の通り。（カバレッジは Enterprise じゃないと使えないはず）
Visual Studio Enterprise 2017 (15.4.0)
.NET Core 2.0クラスライブラリを作成します。同じソリューションにテストプロジェクトも作成します。テストプロジェクトにはクラスライブラリへの参照を追加しておきます。パッケージマネージャーコンソールを開いて、以下のコマンドを実行します。テストプロジェクトは以下のようになります。クラスライブラリにテスト対象のメソッドを追加します。テストプロジェクトにテストメソッドを追加します。クラスライブラリの DebugType を Full にします。現時点では Full でないとカバレッジが利用できません。Working with code coverage
temporary workaround と書いてあるので、そのうち不要になるのかも。[テスト] - [コードカバレッジの分析] - [すべてのテスト] を実行します。テストが実行され、コードカバレッジの結果が表示されます。コマンドラインから実行する場合は、テストプロジェクトのアセンブリを指定して実行します。結果はカレントディレクトリの TestResults フォルダ 配下に出力されます。出力された .coverage ファイルは Visual Studio に読み込ませて確認できます。Visual Studio Enterprise は高いんですよねぇ。。。カバレッジぐらいは Professional とか Community でも使えるようにしてほしい。


