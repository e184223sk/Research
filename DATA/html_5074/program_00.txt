
    internal static class ControlExtender {
        /// &lt;summary&gt;
        /// self内のすべてのコントロールを取得する
        /// &lt;/summary&gt;
        /// &lt;param name="self"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static List&lt;Control&gt; GetAllControls(this Control self) {
            List&lt;Control&gt; buf = new List&lt;Control&gt;();
            self.Controls.OfType&lt;Control&gt;().ToList().ForEach(c =&gt; { buf.Add(c); buf.AddRange(c.GetAllControls()); });
            return buf;
        }
        /// &lt;summary&gt;
        /// self内でBindingObject.PropertyNameをバインドしているコントロールを1つ取得する
        /// &lt;/summary&gt;
        /// &lt;param name="self"&gt;&lt;/param&gt;
        /// &lt;param name="BindingObject"&gt;&lt;/param&gt;
        /// &lt;param name="PropertyName"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static Control ControlOf(this Control self, object BindingObject, string PropertyName) {
            return self.GetAllControls().FirstOrDefault(c =&gt; c.DataBindings.OfType&lt;Binding&gt;().Any(b =&gt; b.BindingManagerBase.Current == BindingObject &amp;&amp; b.BindingMemberInfo.BindingField == PropertyName));
        }
        /// &lt;summary&gt;
        /// self内でBindingObject.PropertyNameをバインドしているコントロールをすべて取得する
        /// &lt;/summary&gt;
        /// &lt;param name="self"&gt;&lt;/param&gt;
        /// &lt;param name="BindingObject"&gt;&lt;/param&gt;
        /// &lt;param name="PropertyName"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static IEnumerable&lt;Control&gt; ControlsOf(this Control self, object BindingObject, string PropertyName) {
            return self.GetAllControls().Where(c =&gt; c.DataBindings.OfType&lt;Binding&gt;().Any(b =&gt; b.BindingManagerBase.Current == BindingObject &amp;&amp; b.BindingMemberInfo.BindingField == PropertyName));
        }
    }

