
static bool reject(string Number)
        {
            var list = new List&lt;int&gt;(Eratosthenes(18));
            int Length = Number.Length;
            for (int i = 4; i &lt; 11; i++)
            {
                if (Length == i) { return (int.Parse(Number.Substring(i - 3, 3)) % list[i - 4]) != 0; }
            }
            return false;
        }

private void button43_Click(object sender, EventArgs e)
        {
            var Stack = new Stack&lt;string&gt;();
            for (int i = 1; i &lt;= 9; i++)
            {
                Stack.Push(i.ToString());
            }

            long sum = 0;
            while (Stack.Count &gt; 0)
            {
                string Popped = Stack.Pop();
                if (Popped.Length == 10)
                {
                    sum += Convert.ToInt64(Popped);

                }

                for (int i = 0; i &lt;= 9; i++)
                {
                    if (Popped.Contains(i.ToString()) == false)
                    {
                        string WillPush = Popped + i.ToString();
                        if (reject(WillPush) == false)
                        {
                            Stack.Push(WillPush);
                        }
                    }
                }
            }
            label1.Text = "Answer= " + sum.ToString();
        }

