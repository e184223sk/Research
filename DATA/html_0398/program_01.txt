
// WindowsFormsApp1.Form3.&lt;button1_Click&gt;d__3
using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;

[CompilerGenerated]
private sealed class &lt;button1_Click&gt;d__3 : IAsyncStateMachine
{
    public int &lt;&gt;1__state;

    public AsyncVoidMethodBuilder &lt;&gt;t__builder;

    public object sender;

    public EventArgs e;

    public Form3 &lt;&gt;4__this;

    private int &lt;j&gt;5__1;

    private int &lt;k&gt;5__2;

    private TaskAwaiter &lt;&gt;u__1;

    private void MoveNext()
    {
        int num = &lt;&gt;1__state;
        try
        {
            if (num != 0)
            {
                &lt;j&gt;5__1 = &lt;&gt;4__this.getI();
                &lt;k&gt;5__2 = 10;
                goto IL_0114;
            }
            TaskAwaiter awaiter = &lt;&gt;u__1;
            &lt;&gt;u__1 = default(TaskAwaiter);
            num = (&lt;&gt;1__state = -1);
            goto IL_00fb;
            IL_00fb:
            awaiter.GetResult();
            &lt;k&gt;5__2++;
            goto IL_0114;
            IL_0114:
            if (&lt;k&gt;5__2 &lt; 20)
            {
                &lt;&gt;4__this.textBox1.Text = &lt;j&gt;5__1 + ":" + &lt;k&gt;5__2;
                Console.WriteLine(&lt;j&gt;5__1 + ":" + &lt;k&gt;5__2);
                awaiter = Task.Run(delegate
                {
                    Thread.Sleep(1000);
                }).GetAwaiter();
                if (!awaiter.IsCompleted)
                {
                    num = (&lt;&gt;1__state = 0);
                    &lt;&gt;u__1 = awaiter;
                    &lt;button1_Click&gt;d__3 stateMachine = this;
                    &lt;&gt;t__builder.AwaitUnsafeOnCompleted(ref awaiter, ref stateMachine);
                    return;
                }
                goto IL_00fb;
            }
        }
        catch (Exception exception)
        {
            &lt;&gt;1__state = -2;
            &lt;&gt;t__builder.SetException(exception);
            return;
        }
        &lt;&gt;1__state = -2;
        &lt;&gt;t__builder.SetResult();
    }

    void IAsyncStateMachine.MoveNext()
    {
        //ILSpy generated this explicit interface implementation from .override directive in MoveNext
        this.MoveNext();
    }

    [DebuggerHidden]
    private void SetStateMachine(IAsyncStateMachine stateMachine)
    {
    }

    void IAsyncStateMachine.SetStateMachine(IAsyncStateMachine stateMachine)
    {
        //ILSpy generated this explicit interface implementation from .override directive in SetStateMachine
        this.SetStateMachine(stateMachine);
    }
}


