More than 3 years have passed since last update.とても便利な世の中になりました。MicrosoftからAzureのサービスの１つとしてCognitive Service APIがプレビュー版で公開されています。これらを使って感情などをスカウター（？）風に表示するHoloLensアプリを作ってみました。顔検出している部分の左側に年齢と性別（実は情報とれていない）と右下付近に８つの感情値、左下に画像からのタグ情報が返っています。
タグ情報は「室内」、「コンピュータ」、「ラップトップ」などなどが出てきています。APIは３種類。それぞれ無料で利用できますが単位時間当あたりのトラフィック量が決まっています。それでも十分遊べますよ。顔の輪郭や目の位置など特徴点をデータとして抽出することができるAPI。
無料で利用可能なリソースは以下の通りです。おもにとれる情報。顔の表情から感情値を返すことができるAPI。
無料で利用可能なリソースは以下の通りです。感情は以下の8種類取得可能。数値0.0～1.0です。なおHoloLensハッカソンで稼働させたときはおおむねみんなHappinessでしたが。。。画像からその中に写っている情報に対してタグ付けを行うAPI。例えば、「机」「ラップトップ」「食べ物」等を返してくれます。
無料で利用可能なリソースは以下の通りです。今回使用した環境は以下の通りです。
Windows 10 Pro
Visual Studio 2015 Community Edition update 3
Unity 5.5.0P2 Personal
HoloToolkit 1.5.5.0ソースコードは以前作った「HoloFaceSamples」を拡張して作りました。最終的なソースコードは後日アップロードします。
一番重要になりそうなCognitive Service APIで処理する部分以外は解説を省きます。まずは何よりCognitive Service APIを有効化してください。大まかな手順は以下の通りです。
1. Azureにアカウントを追加
2. メニューより「追加」を選択し「Cognitive Service API」で検索して
3. 「Face API」「Emotion API」「Computer Vision API」のサービスを追加
4. 追加したサービスを選択し「Keys」から２個のうち１個の値を控えておいてください。Unity側の実装は写真のようなデータを出す部分を作成します。出し方はお好みですがアプリではCanvasを使って作っています。各サービスを呼び出す方法は前回の顔検出とほぼ同じです。Unity側からUWPのライブラリを呼ぶ必要があるので、サービスクラスを使った方法で必要なクラスを準備します。UWP側ではCognitve Service APIを呼び出します。と言っても呼び出しは非常に簡単で、それぞれのAPI用のクラスに、Azureの各サービスのキー値をセットして画像データを送るだけです。これだけでサーバにデータを送信し解析した結果を返してくれます。ただし、UnityでUWPのライブラリを使う場合のコツがあるのでいろいろ試行錯誤しています。
簡単にそのあたりを説明したいと思います。UWPでは画像のキャプチャなどにMediaCaptureクラスを用います。このクラスを利用するための準備としてHoloLensのカメラをMediaCaptureクラスで使えるように以下の実装を行います。次にCognitive　Service　APIの準備を行います。ここは先のキー値を引数にインスタンス化するだけです。最も困ったところがここです。UWPでは従来の.NET Frameworkのリソース（Streamクラスなど）とは異なる体系に代わっています。よって画像をキャプチャしてからそれぞれのAPIに渡すまでがなかなか厄介です。
まずキャプチャする画像の情報をプロパティとして設定します。次にカメラでキャプチャして各APIに画像を送ります。それぞれの戻り値の型の中に解析後の情報がいろいろ入っているので好みの情報を取り出してUnity側で表示させます。試していて一番はまったのがcapture.CapturePhotoToStreamAsync(property, stream).GetAwaiter().GetResult();の部分です。最初awaitを使って待たせていたのですが、その場合例外が発生してうまく動かない事態に。どうもスレッド制御の問題なのかと思います。この辺り、整理がまだまだいりそうで次回以降で自分の理解している範囲の整理をしてみようと思います。また、今回UWP側でリソースを扱っているので実行するスレッドについてはUIスレッドで動作させてください。具体的にはAppCallBacks.Instance.InvokeUIThreadメソッドにて呼び出します。実はこれ自体、何もHoloLens用の要素は一切ないです。ですのでちょっと加工すれば素のUWPアプリ、Unityのアプリにも利用できます。いろいろなアプリで活用してみてください。拍子抜けするくらいの簡単さです！


