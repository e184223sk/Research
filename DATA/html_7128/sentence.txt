More than 3 years have passed since last update.Xamarin.Forms では、左からスライドして出てくるメニューを持つ画面を MasterDetailPage で作成します。一方、普通に画面遷移していく場合は ContentPage などを NavigationPage でラップしてあげます。何がしたいかというと、両者を組み合わせたいんです。こういうことってよくありませんかね？起動画面で「新規ユーザー登録」があって、「ユーザー登録画面」を経て、メインの画面に遷移する、メイン画面にはスライドメニューがある、というパターン。これを Xamarin.Forms でやりたいのです。ところが、 NavigationPage で遷移していく画面の中に MasterDetailPage があると、 NavigationPage の方が勝ってしまい、ナビゲーションバーには「BACK」ボタンが表示されてしまいます。これを消そうと、MasterDetailPage のコンストラクタで NavigationPage.SetHasBackButton(this, false) してみます。その結果がこれ。Android の方は望む結果になったけど、iOSの方はうーん…、BACKボタンは消えたけど、メニューを表示させるボタンが出ません。しょうがないので、iOS の場合だけ、ナビゲーションバーの左ボタンをどうにかして追加してみます。Xamarin.Forms のお供、CustomRenderer です。MasterDetailPage の iOS向けCustomRenderer を作って、ネイティブ側でナビゲーションバーをカスタマイズしてみます。「MENU」ってボタンを、ナビゲーションバーの左側に追加しています。
こんな CustomRenderer を iOS 側のプロジェクトに追加して実行してみます。オーケーオーケー、これが私が求めていたソリューションです。が、CustomRenderer にはいくつか考えなければならないことがあります。で、 Xamarin.Forms には、v2.1 から既存機能の拡張に Effects という選択肢が加わりました。では、CustomMasterDetailRenderer.cs を Effects に変えてみましょう。Effect は、 ResolutionGroupName と ExportEffect で定義した名称を使って、PCL側プロジェクトで Page に追加します。こちらも、CustomRenderer と同じことができました。が、ちょっと黒魔術っぽいの使ってます。以上を考えると、となるでしょう。本件のネタは、 Effects ではかなりムリをして実現しているので、CustomRenderer の方が相応しいと思われます。
が、CustomRenderer はここぞという時にとっておきたい気もします。
このさじ加減は、作るアプリの規模・深度、汎用性、再利用性などによって変わってくるでしょう。Effects の方が汎用性・再利用性は高いですが、ネイティブのUIパーツをごっそり入れ替えるような深い事は、CustomRenderer でなければできません。今回のプログラムは Github に上げてあります。（CustomMasterDetailRenderer.cs はコメントアウトしてあって、Effects の方を活かしてます。）私は「Effects で頑張りたい派」かな。


