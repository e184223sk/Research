
using IceMilkTea.Core;
using UnityEngine;

public class Block : MonoBehaviour
{
    // 状態イベントの定義
    private enum StateEventId
    {
        Dead,
        Revive,
    }

    // 現在の状態が生存状態なら生存していることを返すプロパティ
    public bool IsAlive =&gt; stateMachine.IsCurrentState&lt;AliveState&gt;();
    private ImtStateMachine&lt;Block&gt; stateMachine;

    private void Awake()
    {
        stateMachine = new ImtStateMachine&lt;Block&gt;(this);
        stateMachine.AddTransition&lt;AliveState, DeadState&gt;((int)StateEventId.Dead);
        stateMachine.AddTransition&lt;DeadState, AliveState&gt;((int)StateEventId.Revive);

        stateMachine.SetStartState&lt;AliveState&gt;();
    }

    private void Start()
    {
        stateMachine.Update();
    }

    private void Update()
    {
        stateMachine.Update();
    }

    private void OnCollisionEnter(Collision collision)
    {
        // 衝突した相手がボールなら
        if (collision.gameObject.name == "Ball")
        {
            // 死亡イベントを送る
            stateMachine.SendEvent((int)StateEventId.Dead);
        }
    }

    public void Revive()
    {
        // ステートマシンに復活イベントを送る
        stateMachine.SendEvent((int)StateEventId.Revive);
    }

    private class AliveState : ImtStateMachine&lt;Block&gt;.State
    {
// 中略...
    }

    private class DeadState : ImtStateMachine&lt;Block&gt;.State
    {
// 中略...
    }
}

