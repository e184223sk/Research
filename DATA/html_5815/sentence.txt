More than 1 year has passed since last update.1年間で8本のアプリをリリースするときにやったことをまとめました。いずれも全世界公開していて、そのうち4つがApple Storeでフューチャー★されました。中でも「ねずみタイマー」が一番人気です。
Designed by stock-world-on / FreepikLITALICOアプリはお子様がメインターゲットなので、以下のルールを守っています。これらのルールを守るにあたって、設計時には以下を意識しています。テキストに頼らずに自然に使い方がわかるものを目指して設計すると、国籍や年齢を問わず、誰でも使えるものになりますし、テキストが少ないとローカライズコストも抑えられるのでオススメです。
Designed by Freepik著者は前職でソーシャルゲームを企画・開発していましたが、素材制作のディレクションコストには常に悩まされていました。もっとはやく以下のサービスを活用していたらと後悔しています。同レベルとまではいきませんが、小規模のアプリには十分な素材が無料またはおこづかい程度でそろいます。https://www.freepik.com/
ベクター、ラスター、写真など、様々な素材がそろっています。https://www.flaticon.com/
ベクターアイコンの宝庫。テイストも豊富で使いやすいです。https://www.shutterstock.com/
良いのがないときはこちらで購入します。高品質な素材が安く手に入ります。https://soundeffect-lab.info/
クオリティが高いです。声素材や鳴き声などもあります。http://www.kurage-kosho.info/
UI関連や演出用の効果音はこちらが充実しています。http://taira-komori.jpn.org/freesound.html
生活音も含め、いろんなジャンルがそろっています。https://dova-s.jp/
さまざまなジャンルのBGMがあります。いつもお世話になっています。https://audiostock.jp/
良いのがないときはこちらで購入します。ジングル、効果音もあります。サウンド素材はループにしたり、長さを調節したいときがよくあります。そのときは Audacity というフリーソフトで加工しています。
Designed by Jannoon028 / FreepikLITALICOアプリは上記のとおりテキスト量がかなり抑えられていますが、お子様が見ることのない、設定画面やエラーダイアログにはテキストが含まれます。世界配信するときにはそれらをローカライズしています。英語が得意な人が身近にいないときは Google翻訳 を使います。日本語を機械が翻訳しやすい言い回しに調整して入力し、出力された英訳をGoogle翻訳で和訳してみて、正しければOKとしています。クラウドソーシングの翻訳サービスはいくつかありますが、著者は Gengo を使っています。クオリティはまあまあですが、上がってくるのが早いところが気に入っています。手順1で作った英訳リストをファイルにして依頼しましょう。なぜ先に英訳を用意したかというと、日本語から多言語化するより、英語から多言語化したほうが時間と価格を節約できるからです。ただし、分量が多いときは手間をかけたくないので、日本語のまま Gengo に依頼して英訳もおまかせしましょう。翻訳のクオリティはビジネスレベルを選択。過去にリリースしたアプリの利用動向をみて、対象言語は以下の6つにしています。これ以外にも、フランス語、ドイツ語、イタリア語はGoogle翻訳で対応しています。できる限り多くの言語に対応したほうがApple Storeでフューチャーされやすいです。手順3はけっこう手間ですが、一度やってしまえばずっと使いまわせます。手順2の翻訳データを Googleスプレットシート で以下のように管理します。各言語名はUnityの SystemLanguage の名称とあわせています。スプレットシートの「ツール &gt; スクリプトエディタ」で以下のスクリプトをコピペして保存します。上記のスクリプトを対象のシートを開いた状態で実行すると、シート上にダイアログで以下が出力されます。これをテキストファイルにペーストし、Unityプロジェクトの Resources/Texts フォルダにLocalizeData.txt という名前で保存します。（フォルダ構成やファイル名は自由です。） 先ほどのテキストファイルをUnityの JsonUtility で読み込むのですが、その前にJSONの構造にあわせて以下のクラスを作ります。読み込むためのコードは以下です。あわせて以下の関数を用意しておけば、keyを渡すだけでユーザーの言語設定に応じたローカライズテキストが取得できます。非対応の言語が設定されているときは英語を返します。ローカライズの手段はたくさんありますが、この方法はスプレットシート上の翻訳データを即座にアプリに反映できるので気に入っています。
Designed by jcomp / Freepikユーザーにアプリの更新を促すためにFirebaseを使っています。導入は以下を参考にしています。
サーバレスでUnity開発できるFirebaseを導入する - Analytics &amp; 強制アップデート編ストアには動画があるほうがダウンロード数が多く、フューチャーもされやすいそうです。動画はこちらの方法でキャプチャーしたものを、iMovie で編集するだけです。クオリティはいまひとつですが、テキストを含まなければそのまま世界に展開できます。
作った動画はこちら（YouTubeチャンネル）ストアを構築したり、YouTubeに動画を追加するときは、非対応言語の環境で日本語が表示されて敬遠されないように、英語をデフォルトにしましょう。LITALICOアプリは無料で利用できますが、機能を解放したり、効率よく進めるための課金アイテムを用意しています。非消費型アイテムは消費型に比べて復元が容易なため、万が一のメンテナンスコストが抑えられます。少人数でどんどんリリースするために今はこの方針で開発しています。LITALICOアプリの場合は、発語を促したい、時間を学ばせたいといった、解決すべき「課題」があって、その課題をいかに楽しく解決するかを考えて企画しています。課題の解決に既存のゲームやアプリのシステムを参考にすると、ゼロから発想するより考えやすいです。このように、新たにアプリを企画するときは、課題や要件を見つけて、それを楽しくする、便利にする、という考え方は近道かもしれません。そのためのアイデアをひねり出す方法は以下のブログにまとめました。アイデアをひねり出すための10の方法 | higopage最後までお読みいただきありがとうございます！ドキドキの初 Qiita 記事でした。「いいね！」していただけるとすごく励みになります。LITALICO Engineers Advent Calendar 2017 にはLITALICOエンジニアの良質な記事がどんどん公開される予定ですので、よろしければぜひご購読ください。明日は@Takuan_Oishiiさんの「CloudFront → ELB → EC2(Rails App)な構成でTurnoutのallowed_ipsをいい感じに機能させる」です。お楽しみに！


