
class Account
{
    public enum AccountRole { Role1, Role2, Role3 }

    [JsonProperty("user_id")]
    public int ID { get; set; }
    [JsonProperty("name")]
    public string Name { get; set; }
    [JsonProperty("active")]
    public bool IsActive { get; set; }
    [JsonProperty("created_date")]
    public DateTimeOffset CreatedDate { get; set; }
    [JsonProperty("role")]
    [JsonConverter(typeof(StringEnumConverter))]
    public AccountRole Role { get; set; }
    [JsonProperty("telepohones")]
    public IList&lt;string&gt; Telephones { get; set; } = new List&lt;string&gt;();
    [JsonIgnore]
    public string Note { get; set; }
    [JsonExtensionData]
    public IDictionary&lt;string, object&gt; Extra { get; set; } = new Dictionary&lt;string, object&gt;();
}

class Program
{
    static void Main(string[] args)
    {
        // デシリアライズ
        var json = $@"{{
""user_id"": 999, 
""name"": ""foo"", 
""active"": true, 
""created_date"": ""2020/01/02 03:04:05"", 
""role"": ""Role2"", 
""note"": ""メモ"", 
""hoge"": ""fuga""
}}";

        var obj = JsonConvert.DeserializeObject&lt;Account&gt;(json);
        Console.WriteLine($"ID: {obj.ID}");
        Console.WriteLine($"Name: {obj.Name}");
        Console.WriteLine($"IsActive: {obj.IsActive}");
        Console.WriteLine($"CreatedDate: {obj.CreatedDate}");
        Console.WriteLine($"Role: {obj.Role}");
        Console.WriteLine($"Note: {obj.Note}");
        Console.WriteLine($"Extra: {string.Join(", ", obj.Extra.Select(pair =&gt; pair))}");

        Console.ReadLine();
    }
}

