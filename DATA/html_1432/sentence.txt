More than 1 year has passed since last update.この記事は、安全にC#でファイルを検索する(サブディレクトリも)の続編的記事です。.NETは便利なのですが、ディレクトリを深堀りするのに
-Directory.GetDirectories()
-Directory.EnumerateDirectories()
という二種類のメソッドに、SearchOption.AllDirectoriesをつけてやればできるのですが、残念ながら、権限がないと落ちるので、使えない子です。よくある手法に再帰を使うというのがあります。基本といえば基本です。が、再帰でシンプルに書ければ意味はあるのですが、再帰にしなければ複雑になるというのでなければ、再帰は使いたくないわけです。なぜなら、再帰はメモリを消費していくから。というわけで、私の以前の記事に書いた手法ですが、
Processに"cmd /c dir \"{DirectoryName}\" /a:-d /s /b"
を渡してしまうという方法です。ただ、これだとWindows限定になってしまいます。
.NET Frameworkから.NETに移行しようというこの時代にこれではいけません。Queueです。キューと読みますが、要はFIFOバッファです。
Queueにこれから探索対象ディレクトリをぶっこんでやって、Dequeue(取り出し&amp;削除)しながら、下位ディレクトリを返す&amp;探索対象にする。ってのを、キューが空になるまでやるわけです。
本当は、tryを使わずにアクセス権を確認できればいいのですが、ACLを取得してとなるとまた移植性に問題が出てきそうになるので、今回は無視します。後、メソッド名から分かる通り、EnumerateDirectoriesと同じ返し方をしています。
深堀りすると時間がかかるので、メソッドが60秒以上何も返さなくてデバッガに怒られる事があるのでちょっと嫌なんですね。
(いまや、互換性以外でGetDirectoriesを使う理由がほぼないのだけど)
ファイルの探索は、このディレクトリの結果をもとに、EnumerateFilesすれば良いと思います。


