メソッド名は引数が違えば同じ名前でもOKメソッドの省力可能な引数コンストラクターの定義方法引数のあるコンストラクタープロパティに特別な動作を加える構造体の定義方法列挙型の定義方法null
nullはオブジェクトが生成されなかった状態や、指定した条件に合うオブジェクトが見つからなかった状態を表すときによく使われるListの使い方Whereメソッドとラムダ式例１
```C#:ClassSample
using System;
using System.Collections.Generic;
using System.Linq;  // LINQを使うのに必要namespace ClassSample
{
    class Program
    {
        static void Main()
        {
            var nums = new List { 12, 69, 38, 32, 63, 55, 71, 93, 39, 48 };}
```
例２Selectメソッド
Selectメソッドを使えばコレクションの各要素を別の値に変更できる各要素の長さを求める
var query = words.Select(x =&gt; x.Length);１つの要素を全て取り出す( ↓タイトルを取り出す)
var query = words.Select(x =&gt; x.Title);OrderByメソッド / OrderByDescendingメソッドコレクション内のデータを指定した順番で取り出せる大きい順に並べる
var query = nums.OrderByDescending(x =&gt; x);複数のLINQメソッドを連結させることも可能
ドットでつなげる
var query = books.Where(x =&gt; x.Rating == 5).Select(x =&gt; x.Title);Take() で先頭から指定した個数を取り出すDistinctは重複した要素を排除できる
var query = books.Where(x =&gt; x.Rating &gt;= 4).Select(x =&gt; x.Auther).Distinct;Anyは条件を満たす要素が含まれているか判断できる
var any = nums.Any(x =&gt; x &lt; 0); //マイナス値があるか調べるIEnumerableを配列に変換するにはToList / ToArrayメソッドを使用する
ToListToArray()はString[]に変更できる
var array = words.OrderBy(x =&gt; x).Array();


