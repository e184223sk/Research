
   public T[] GetFromStr(string str, string tagName) // tagName : データーとして扱うタグ名 (例:&lt;a&gt;data&lt;/a&gt; -&gt; a)
    {
        Dictionary&lt;string, string&gt; keySet = new Dictionary&lt;string, string&gt;();
        // keySet&lt;string(タグの名前),string(タグで囲まれた文字列)&gt;

        /* ここに文字列から&lt;tagName&gt;&lt;/tagNeme&gt;で囲まれた文字列をDictionaryに入れていく処理を書く */

        T[] Classes = new T[keySet[tagName].Length];
        int index = 0;
        foreach (string s in keySet[tagName])
        {
            string[] sp = s.Trim().Split(',');
            if (sp.Length != info.Length) throw new System.Exception("No Match Index Count. [" + sp.Length + "]!=[" + info.Length + "]");

            T Class = new T();

            for (int i = 0; i &lt; info.Length; i++)
            {
                FieldInfo f = typeof(T).GetField(info[i].Name);
                if (info[i].FieldType == typeof(int)) f.SetValue(Class, int.Parse(sp[i]));
                else if (info[i].FieldType == typeof(float)) f.SetValue(Class, float.Parse(sp[i]));
                else if (info[i].FieldType == typeof(double)) f.SetValue(Class, double.Parse(sp[i]));
                else if (info[i].FieldType == typeof(string)) f.SetValue(Class, sp[i]);
                else
                {
                    var v = Convert.ChangeType(sp[i], info[i].FieldType);
                    f.SetValue(Class, v);
                }
            }
            Classes[index] = Class;
            index++;
        }
        return Classes;
    }

