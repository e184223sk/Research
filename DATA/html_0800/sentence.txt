More than 1 year has passed since last update.自機編(1)はC言語の方で終わらせていて、今回はその続きから始めるので(2)になっています。
自機編(1)までを追いたい方はこちらを確認してください。Part1 : https://qiita.com/Saigyo_HBK/items/18f1d59b1b5acb03373c前回のコードではシステムの初期化やプレイヤーの処理を一つのファイルにまとめていました。この場合だと、C#のオブジェクト指向プログラミングに反しており、とても可読性が低いものになってしまいます。
今回はいくつかのファイルに分けていくのですが、まずは自機クラスを作ってみましょう。現在のソースコード(Program.cs)は、自機の移動と描画機能のみがあります。
移動機能などの変数の更新が入る処理をUpdateメソッド、変数が変化しない描画機能をDrawメソッドとしてクラスにまとめてみました。とりあえずはこのようにクラスにして分割ができたのですが、ここから機能を付け足します。
移動に関する処理は新たにMoveメソッドを作成してさらに処理を小分けにすることを考えます。そうして簡潔になったUpdateメソッドに、自機のカウント変数を用意して毎フレームインクリメントしていきましょう。移動に関する処理には以下の機能を付け足します。
- 斜め移動の時に速度が速くならないようにx,y方向の速度を√2で割る。
- 低速移動以下がソースコードです。連想配列や平方根の計算のために使用する名前空間が増えています。次はウインドウの縦横の大きさを表す定数変数を定数クラスの中で定義しましょう。
元々はconstな変数にする予定だったのですが、こちらの記事のように問題になるような場合があるので、static readonlyに変更しました。
また、classの前にsealedと付けることでこのクラスを継承することを禁止しています。
以下がソースコードです。次にDXライブラリの初期化処理や終了処理などのシステム的な処理を行うクラスを用意しましょう。
Program.csには極力書くことを少なくし、システムの処理はSystem.csに、ゲームのメインループ部分はLooper.csに書いてSystem.csでメソッドをループさせます。プログラムを走らせるときちんと動作すると思います。C#の様々な機能を使っていてC言語しか触れていないような人にはわかりづらい部分があると思います。その場合は質問していただければ可能な範囲でお答えします。次回から敵や弾といったゲームの要素を追加していきたいと思います。


