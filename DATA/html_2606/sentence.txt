More than 1 year has passed since last update.GraphicsPathクラスで文字のパスを追加して、縁取りを追加してから文字を描きたい。注意して欲しいのが、縁取りする場合の文字の座標。文字のパスを追加した座標を基準に、中央から太さが変わっていくので文字の座標をを縁取りのサイズの半分ずらす必要がある。上のサンプルでは、縁取りのサイズが16なので文字自体をnew Point(8, 8)としている。「智に働けば"角が"立つ」、ってね！やかましいわ！　うおー！　なんかおかしい！文字自体のパスは正常に追加されてるが、GraphicsPath.DrawPathによる縁取りの描画が破綻しているっぽい。フォントによって結果が異なりますが(ハミングとかスーラとか、角丸系のフォントは大丈夫)、角張ってるフォントはこうなりやすい……。マイクロソフトのドキュメントの登場だー！　Penクラスのプロパティ弄れば解決できるかな、と思いとりあえずこのページを観てみる。すると「LineJoin - この Pen で描画された連続する 2 本の直線の終点の接合スタイルを取得または設定します。」といういかにもそれっぽいプロパティを見つけたのでこの列挙型を変更してみる。斜めの縁取りが生成される感じ。3DCGのベベルエッジと同じ感じですね。LineJoin.Miter = 0なのでこれがデフォルト。これもLineJoin.Miterとほとんど同じなんだけど、MiterLimitの値を上回ったときの処理方法が違うっぽい。違うはず……なんだけど違いがよく分かんねぇわ。フォトショで減算したらたしかに違うって事はわかるけど。個人的に1番好き。角張っていないので他のと比べて優しい感じ。


