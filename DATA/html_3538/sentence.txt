More than 1 year has passed since last update.配列の話に入る前に次の問題にしたがってコードを書いてみてください．問題上の表は英語のテストを受けた5人の得点だ．この5人全員の合計点数，平均を出力してください．皆さんはこの問題を解くためにどんなコードを書きますか．こんな感じでしょうか．もしくは点数をリテラルで打ち込んでint sum = 83 + 59 + 72 + 96 + 81;のようにしてしまったかもしれませんね．今回は合計と平均を出すだけなのでわざわざ変数を用意してやるほどのことではないのですが，もし変数に入れて取り扱った方が便利な場合でも，このままでは扱いづらいので配列というものを使います．配列は同じ型のデータをまとめて扱うためのデータ構造です．同じ変数名でいくつかのデータを扱い，インデックスによって欲しいデータを呼び出せるので，今回のように同じ型のデータがいくつもある場合は簡単にデータを扱うことができます．余談ですが，文字列を扱うstring型もchar型の配列です．文字が連続したものを，char型の配列としてひとまとめにして扱っています．なんとなく配列のイメージができましたか？
配列のようにいくつもの同じ型のデータをまとめて扱えるようにしたものをコレクションといい，ほかにはListなどがあります．また，コレクションの中のデータの事を要素と呼びます．型に[]を付けると配列になります．例えばint型の配列ならint[]，doubleの配列ならdouble[]といった感じです．これで，arrayという要素数5のint型の配列ができました．各要素にアクセスするためには角括弧とインデックス番号を使います．arrayの1番目，arrayの2番目，...といったようにアクセスできます．あれ？array[5]にアクセスできません．最後の要素にはアクセスできない仕様なのでしょうか？そんなことありません．array[5]なんて元からないんです．インデックス番号は0から4まで，1つ目の要素はarray[0]，2つ目の要素はarray[1]というように1つずれています．ちょっとややこしいので気を付けましょう．ということで，全要素を初期化しなおしてみましょう．これで全要素を初期化できました．ですが，このように一つずつアクセスして初期化していくのは面倒なので，初期化する値が決まっているなら変数の定義と同時に初期化してしまいましょう．このように記述することで，一気に初期化も済ませることができます．さらにもっと手を抜いて書くとこのように書くこともできます．varは型推論という，代入されたものによって型を推測してくれるという便利なものです．int型の配列であるのは=の後ろによってわかるのでvarと書けばarrayをint[]型として扱ってくれます．同様に1，2，4，8，16によってint型の要素が5つであることはわかるので，int[5]まで書かなくても[]だけでも使えます．さて，ここで先ほどの問題を解いてみましょう．上のコードを見てわかると思いますが，配列はループ処理ととても相性が良いです．繰り返し回数を数えるiを配列のインデックスとしても使えるので，かなり簡単に全要素にアクセスすることができます．また，配列.Lengthで配列の長さ(要素数)を取得できます．
そして，foreach文を使うともっとスマートに書くことができます．foreach文はコレクションの長さだけ繰り返し処理を実行します．scoresの中の要素をscoreとしてそれぞれ扱い，scoreをsumに足しています．これでscores内の全要素の合計がsumの中に入っていることになります．foreach文はコレクションを扱うためにあるようなものなので，コレクションを用いるならそこそこお世話になると思うので使い方を押さえておきましょう．それではここで，さらに上を行きたい人向けの話をしましょう．
C#にはLINQという，コレクションを手軽に扱うことができるものがあります．このLINQのためにC#を使っているという人もいるみたいです．LINQを使うときは，using System.Linq;が書かれているか確認しましょう．書かれていなければ追加しましょう．配列.Sum()，配列.Average()で合計，平均を取得することができます．LINQについてはまた取り上げようと思いますが，興味のある人は勉強してみてください．次回は関数について説明しようと思います．1，2，4，8，16，32，64を半径とする円の面積と円周の長さをそれぞれ求めてください．円周率はMath.PIを使ってください．解答例

foreach文使ってますか？


ArraySample.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ArraySample
{
    class Program
    {
        static void Main(string[] args)
        {
            var radii = new[] { 1, 2, 4, 8, 16, 32, 64 };

            foreach (var radius in radii)
            {
                Console.WriteLine("半径 : " + radius);
                Console.WriteLine("面積 : " + Math.PI * radius * radius);
                Console.WriteLine("円周 : " + 2 * Math.PI * radius);
                Console.WriteLine();
            }
        }
    }
}






