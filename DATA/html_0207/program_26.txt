
public class Comparison
{
    public static ComparisonValueDouble operator ==(Comparison left, double right) =&gt; new ComparisonValueDouble(true, right, right);
    public static ComparisonValueDouble operator ==(double left, Comparison right) =&gt; new ComparisonValueDouble(true, left, left);
    public static ComparisonValueDouble operator !=(Comparison left, double right) =&gt; new ComparisonValueDouble(true, right, right);
    public static ComparisonValueDouble operator !=(double left, Comparison right) =&gt; new ComparisonValueDouble(true, left, left);
    public static ComparisonValueDouble operator &lt;(Comparison left, double right) =&gt; new ComparisonValueDouble(true, right, right);
    public static ComparisonValueDouble operator &lt;(double left, Comparison right) =&gt; new ComparisonValueDouble(true, left, left);
    public static ComparisonValueDouble operator &gt;(Comparison left, double right) =&gt; new ComparisonValueDouble(true, right, right);
    public static ComparisonValueDouble operator &gt;(double left, Comparison right) =&gt; new ComparisonValueDouble(true, left, left);
    public static ComparisonValueDouble operator &lt;=(Comparison left, double right) =&gt; new ComparisonValueDouble(true, right, right);
    public static ComparisonValueDouble operator &lt;=(double left, Comparison right) =&gt; new ComparisonValueDouble(true, left, left);
    public static ComparisonValueDouble operator &gt;=(Comparison left, double right) =&gt; new ComparisonValueDouble(true, right, right);
    public static ComparisonValueDouble operator &gt;=(double left, Comparison right) =&gt; new ComparisonValueDouble(true, left, left);

    public override bool Equals(object? obj)
    {
        return Equals(obj as ComparisonValueDouble);
    }

    public bool Equals(ComparisonValueDouble? other)
    {
        return other is not null;
    }

    //new Comparison()よりComparison.NewCompの方が書きやすい場合。
    public static Comparison NewComp =&gt; new Comparison();

    public override int GetHashCode()
    {
        return base.GetHashCode();
    }
}

