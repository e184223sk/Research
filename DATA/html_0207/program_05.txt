
using System;
using System.Text;

#nullable enable
public class TextChain
{
    public TextChain() {}
    public TextChain(TextChain? origin, string appended) { 
        Origin = origin;
        Appended = appended ?? throw new ArgumentNullException(nameof(appended));
    }

    public TextChain? Origin { get; protected set; } = null;
    public string? Appended { get; protected set; } = null;

    public StringBuilder GetStringBuilder()
    {
        var sb = Origin?.GetStringBuilder() ?? new StringBuilder();
        if (!string.IsNullOrEmpty(Appended)) sb.Append(Appended);
        return sb;
    }

    public static TextChain operator +(TextChain origin, string append) =&gt; new TextChain(origin, append);

    public static explicit operator string(TextChain from)=&gt;from.ToString();
    public override string ToString() =&gt; this.GetStringBuilder().ToString();
}

