
using System;
using System.Collections.Generic;
using System.Text;

using System.Numerics;

namespace kurema.Calc.Helper.Values
{
    public interface IValue: IEquatable&lt;IValue&gt;
    {
        IValue Add(IValue value);
        IValue Multiply(IValue value);
        IValue Substract(IValue value);
        IValue Divide(IValue value);
        IValue Power(int y);
        ConversionResult&lt;int&gt; GetInt();
        ConversionResult&lt;BigInteger&gt; GetBigInteger();
        IValue Remainder(IValue value);
    }

    public struct ConversionResult&lt;T&gt;
    {
        public T Value;
        public bool Precise;
        public bool WithinRange;

        public ConversionResult(T value, bool precise, bool withinRange)
        {
            Value = value;
            Precise = precise;
            WithinRange = withinRange;
        }

        public bool Healthy =&gt; Precise &amp;&amp; WithinRange;
        public T HealthyValueOrDefault =&gt; this.Healthy ? Value : default(T);
    }
}

