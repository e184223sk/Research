
#nullable enable
namespace kurema.TernaryComparisonOperator
{
    public partial class ComparisonValueDouble
    {
        public static ComparisonValueDouble operator ==(ComparisonValueDouble left, double right) =&gt; new ComparisonValueDouble(left.Status &amp;&amp; left.ValueRight == right, left.ValueLeft, right);
        public static ComparisonValueDouble operator ==(double left, ComparisonValueDouble right) =&gt; new ComparisonValueDouble(right.Status &amp;&amp; left == right.ValueLeft, left, right.ValueRight);
        public static ComparisonValueDouble operator !=(ComparisonValueDouble left, double right) =&gt; new ComparisonValueDouble(left.Status &amp;&amp; left.ValueRight != right, left.ValueLeft, right);
        public static ComparisonValueDouble operator !=(double left, ComparisonValueDouble right) =&gt; new ComparisonValueDouble(right.Status &amp;&amp; left != right.ValueLeft, left, right.ValueRight);
        public static ComparisonValueDouble operator &lt;(ComparisonValueDouble left, double right) =&gt; new ComparisonValueDouble(left.Status &amp;&amp; left.ValueRight &lt; right, left.ValueLeft, right);
        public static ComparisonValueDouble operator &lt;(double left, ComparisonValueDouble right) =&gt; new ComparisonValueDouble(right.Status &amp;&amp; left &lt; right.ValueLeft, left, right.ValueRight);
        public static ComparisonValueDouble operator &gt;(ComparisonValueDouble left, double right) =&gt; new ComparisonValueDouble(left.Status &amp;&amp; left.ValueRight &gt; right, left.ValueLeft, right);
        public static ComparisonValueDouble operator &gt;(double left, ComparisonValueDouble right) =&gt; new ComparisonValueDouble(right.Status &amp;&amp; left &gt; right.ValueLeft, left, right.ValueRight);
        public static ComparisonValueDouble operator &lt;=(ComparisonValueDouble left, double right) =&gt; new ComparisonValueDouble(left.Status &amp;&amp; left.ValueRight &lt;= right, left.ValueLeft, right);
        public static ComparisonValueDouble operator &lt;=(double left, ComparisonValueDouble right) =&gt; new ComparisonValueDouble(right.Status &amp;&amp; left &lt;= right.ValueLeft, left, right.ValueRight);
        public static ComparisonValueDouble operator &gt;=(ComparisonValueDouble left, double right) =&gt; new ComparisonValueDouble(left.Status &amp;&amp; left.ValueRight &gt;= right, left.ValueLeft, right);
        public static ComparisonValueDouble operator &gt;=(double left, ComparisonValueDouble right) =&gt; new ComparisonValueDouble(right.Status &amp;&amp; left &gt;= right.ValueLeft, left, right.ValueRight);
    }
}

