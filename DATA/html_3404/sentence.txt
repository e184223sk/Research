More than 1 year has passed since last update.今回はオブジェクト指向型プログラミングで重要な継承について説明します．まずは継承を使ったコードを見てみましょう．クラス名の次に:継承したいクラス名を書くことで継承できる．
継承というのは属性(変数)や操作(関数)の受け継ぎができる機能で，上の例ではDerivedクラスでは定義されていないはずのMメソッドを使用することができています．これはDerivedクラスがBaseクラスを継承しているのでBaseクラスのメソッドを使うことができるということです．
ちなみに，継承されるクラス(この例ではBase)のことを，基底クラスや，スーパークラスなどと呼び，継承するクラス(この例ではDerived)のことを，派生クラスや，サブクラスなどと呼びます．抽象クラスは自身のインスタンスを作れず，継承されることを前提とするクラスです．メソッドにabstract修飾子を付けることで，定義だけしてその実装を派生クラスに委譲することができます．インターフェースは，定義したプロパティ(メンバ変数とメソッドが融合したようなもの)やメソッドを，継承したクラスへ強制的に実装させるというものです．インターフェースは上の例の様に多重継承できます．実際に継承を使ってみましょう．Dogクラス，Catクラス，Birdクラスを全てAnimal型として扱っています．AnimalクラスはMakeSoundsメソッドを持っているので，animals内の全ての動物を鳴かせることができています．
派生クラスのコンストラクタが呼び出されると，自動的に基底クラスのコンストラクタも呼び出されますが，:Base()と書くと，基底クラスのコンストラクタを明示的に呼び出すことができます．次回はポリモーフィズムについて説明します．


