この記事でp:PublishSingleFileをtrueで作ったときに気づいたのですが、.NET 5では自己完結型アプリケーションでビルドしたアプリを実行した場合に実行ディレクトリが.NET Core 3.1の時と異なる＆実行ファイルパスがAssembly.GetExecutingAssembly().Locationでは取得できませんでした。この記事では.NET 5でPublishSingleFileを指定してビルドした自己完結型アプリケーションで、実行ディレクトリを取得する方法を確認します。.NET 5および.NET Core 3.1のコンソールアプリケーションを作成し、それぞれメイン関数に下記のコードを記載します。それぞれのプロジェクトを下記のコマンドラインでアプリを自己完結型アプリケーションでビルドします。実行したファイルをc:\tempにおいてからダブルクリックで実行したら下記の結果になりました。
単一ファイルの配置と実行可能ファイルにAPI の非互換性として、.NET 5で自己完結型アプリケーションでビルドした場合にAssembly.Locationでは空を返すとしっかり記載されていますね。また、Assembly.GetFileやAssembly.CodeBaseでは例外を返すとも記載されています。実行ファイルのディレクトリを参照する場合は、AppContext.BaseDirectoryを使うのが正しいようです。.NET 3.1ではZIP形式の自己完結型アプリケーションは、一度%LOCALAPPDATA%に展開された後に展開された場所からプログラムが起動されます。このため実行ディレクトリを参照する場合にはAssembly.GetExecutingAssembly().Locationなどを確認する必要があったし、実行ファイルが存在するディレクトリを確認する場合はAppContext.BaseDirectoryを使うなどの使い分けが必要でした。.NET 5では一時ディレクトリに展開されず、アプリが配置された場所から直に実行されるようになります。.NET 5になって実行パスの取得方法がわかりやすくなりましたね。
実行ファイルのパスの取得方法について、MSのドキュメントで触れられるのは初めてなんじゃないでしょうか


