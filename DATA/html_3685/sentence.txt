More than 1 year has passed since last update.スマートフォンから画像を簡単に(無線で)PCに転送できるようなアプリを開発した時の記録です。元の記事はこちらになります。
受信側はWindowsでの使用になるので.NET Frameworkでの開発。
送信側はAndroidでの使用になるのでXamarin.Formでの開発です。※動作確認はWindows10＋Android(自分のP20Lite等、祖父のらくらくスマートフォン)で行いました👼送受信に使うパケットの構造はこんな感じに今回は考えました

ファイル名はUTF-8でバイト列に変換し、メインのファイルデーターのバイト列を1 Byte(0xFF)で仕切った構造となってます。このパケットを送信すれば受信したバイト配列から元のファイル(画像)の復元ができそうです。1・受信側：ファイルの受信を受け付けるためにポート(TCP:23230)監視を開始する
2・送信側：ファイルをユーザーに選択してもらう
3・送信側：選択したファイルを読み取り、独自パケットに変換する
4・送信側：変換したパケットをTCPで送信
5・受信側：受信した独自フォーマットのパケットを変換・ファイルに書き出しといった流れです。まずは送信側の処理についてです。送信側が主にすることは・ファイルの読み込み
・独自パケットへの変換
・パケットの送信です。では順を追って説明していきます。まずユーザーにスマホで送りたいファイルを選んでもらいます。そのために画像ピッカーを開き、選択されたファイルのURIを取得し、URIを使いStreamを取得します。まずGetStreamByPicker()で画像ピッカーを起動します。起動方法はintentのTypeに”image/*“を指定し、複数選択を許可するためにExtraAllowMultipleをtrueにしました。選択後、ActivityHost.OnResult(uris)が呼び出され、GetStreamByURI()で取得したUriからファイルのStreamに変換しています。先ほどのStreamからデーターのバイト配列を取得し、それを引数(baseByte)にし独自パケットのバイト配列に変換します。ただただTCPでストリームに流して送信するだけです。受信側はそんなに難しくありません。こちらの流れは・TCPポートを監視する。
・パケットを受信する。
・パケットを変換・保存する。といった感じです。await tcpListener.AcceptTcpClientAsync()で接続を待機しています。
接続後NetworkStreamでデーターを受信し、MemoryStreamに一度書き出します。
なお、mStream.GetBuffer()のByte配列のデーターをそのまま使うと最後が0x00の余分なデーターがついてしまうので注意です。こんな感じでパケットを受け取った後はこんな感じでファイル名とデーターに分けます。
そして、データーの部分をFileStreamで保存します。
保存はこんな感じです。
↑ 受信側(Windows10)：Windows.Form

↑ 送信側(Android) : Xamarin.Form
※なお、使用には同じネットワーク上に存在する必要があります。
成功すると選択したファイルがパソコンに転送されます。即席で作ったわりに実用性があるものができた気がしました。※ちなみにユーザー認証などセキュリティー面、エラー処理などは全く配慮されてませんので紹介するソースコードをそのまま使って公開するアプリを作ったら終わります。


