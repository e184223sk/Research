
    class VMMainView : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;
        public ICommand OpenCommand { get; private set; }

        IOpenWindowService _openService;

        public VMMainView(Window subWindow)
        {
            this.OpenCommand = new OpenCommandImpl(new OpenSubWindowService(subWindow));
        }

        private void NotifyPropertyChanged(String info)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(info));
            }
        }


        class OpenCommandImpl : ICommand
        {
            public event EventHandler CanExecuteChanged;
            IOpenWindowService _service;

            public OpenCommandImpl(IOpenWindowService subOpen)
            {
                _service = subOpen;
            }

            public bool CanExecute(object parameter)
            {
                return true;
            }

            public void Execute(object parameter)
            {
                _service.OpenWindow();
            }
        }
    }

