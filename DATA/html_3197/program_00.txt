using System.Windows;
using System.Windows.Threading;

namespace prism_test.Views
{
    /// &lt;summary&gt;
    /// Interaction logic for MainWindow.xaml
    /// &lt;/summary&gt;
    public partial class MainWindow : Window
    {
        /// &lt;summary&gt;
        /// ViewModelへの参照
        /// &lt;/summary&gt;
        ViewModels.MainWindowViewModel vm; 

        /// &lt;summary&gt;
        /// コンストラクタ
        /// &lt;/summary&gt;
        public MainWindow()
        {
            InitializeComponent();

            // ViewModelへの参照記憶
            vm = (ViewModels.MainWindowViewModel)DataContext;

            // View側処理をViewModelに設定
            vm.UpdateView = UpdataView;
        }

        /// &lt;summary&gt;
        /// Viewの更新
        /// &lt;/summary&gt;
        /// &lt;param name="prog"&gt;進捗&lt;/param&gt;
        public void UpdataView()
        {
            DispatcherFrame frame = new DispatcherFrame();
            var callback = new DispatcherOperationCallback(obj =&gt;
            {
                ((DispatcherFrame)obj).Continue = false;
                return null;
            });
            Dispatcher.CurrentDispatcher.BeginInvoke(DispatcherPriority.Background, callback, frame);
            Dispatcher.PushFrame(frame);
        }
    }
}

