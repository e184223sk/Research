WPFで重たい処理をスレッド化せずに、処理の途中でViewを更新しようとしても変わらない。
本来はビジネスロジックはスレッドで動かして、UIスレッドを邪魔しない機構を検討すべきではあるが、下記参考ページの方法が手っ取り早かったので採用。
https://www.ipentec.com/document/csharp-wpf-implement-application-doevents下記、プログレスバーの更新を例に解決方法を説明。プログレスバーと、重たい処理を発火するボタンを配置。
プログレスバーのレンジは0～100で、進捗値はViewModelの"prog.Value"にバインド。肝になるのが"UpdataView"メソッド。これをViewModelからデリゲートを介して呼び出す。ボタン押下時に進捗値を20ms毎にカウントアップしています。


