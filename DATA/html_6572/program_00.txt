        /// &lt;summary&gt;
        /// 文字コード値(10進数)を変換する(1文字)
        /// （例）引数「-32055」を受け取り、変換後文字「に」を返す。
        /// &lt;/summary&gt;
        /// &lt;param name="sJisCharCode"&gt;変換するコード値&lt;/param&gt;
        /// &lt;returns&gt;変換後文字(1文字)&lt;/returns&gt;
        public static string DecodeSJisWord(int sJisCharCode)
        {
            byte[] byteArray = GetSJisBytes(sJisCharCode);

            return Encoding.GetEncoding("shift_jis").GetString(byteArray);
        }

        /// &lt;summary&gt;
        /// ShiftJISの文字コード値を10進数（符号あり）からbyte配列に変換
        /// &lt;/summary&gt;
        /// &lt;param name="sJisCharCode"&gt;文字コード値(10進数)&lt;/param&gt;
        /// &lt;returns&gt;変換後文字コード値(1or2byte 10進数)&lt;/returns&gt;
        private static byte[] GetSJisBytes(int sJisCharCode)
        {
            // コードからbyteを取得(4byte)
            byte[] byteArray = BitConverter.GetBytes(sJisCharCode);

            // ShiftJISは2byteのため、4→2byteに変換する
            byte[] rtn = new byte[2];

            // 環境によってバイトの格納順を変更
            if (BitConverter.IsLittleEndian)
            {
                rtn[0] = byteArray[1];
                rtn[1] = byteArray[0];
            }
            else
            {
                rtn[0] = byteArray[2];
                rtn[1] = byteArray[3];
            }

            // 1バイト文字の場合は2→1バイトに変換する
            rtn = Convert2To1ByteIfNeeded(rtn);

            return rtn;
        }

        /// &lt;summary&gt;
        /// 1バイト文字だったら1バイトにする、2バイト文字の場合はなにもしない
        /// （必要に応じて2バイトを1バイトに変換する）
        /// &lt;/summary&gt;
        /// &lt;param name="checkArray"&gt;変換対象(2byte)&lt;/param&gt;
        /// &lt;returns&gt;変換後byte配列&lt;/returns&gt;
        private static byte[] Convert2To1ByteIfNeeded(byte[] checkArray)
        {
            // 1バイト文字のとき
            if (checkArray[0] == 0)
            {
                return new byte[] { checkArray[1] };
            }
            // 2バイト文字
            else
            {
                return checkArray;
            }
        }


