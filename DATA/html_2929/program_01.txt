
public class ScenarioTest
{
    // テストしたいコルーチンに必ず付ける必要がある
    [UnityTest]
    public IEnumerator Run()
    {
        yield return RunScenario();
    }


    // コルーチンに引数として値を渡すことができる（複数指定可）
    // この例だと、RunWithTestCase("file_0001")、RunWithTestCase("file_0002")として扱われる
    // 【注意】 コルーチンに[TestCase]を使う場合、ExpectedResult = null を記述しないとエラーになる
    [TestCase("file_0001", ExpectedResult = null)]
    [TestCase("file_0002", ExpectedResult = null)]
    [UnityTest]
    public IEnumerator RunWithTestCase(string file)
    {
        yield return RunScenarioWithFile(file);
    }



    // [TestCaseSource]に渡すリスト
    public static IEnumerable FILES
    {
        get
        {
            foreach (var path in Directory.GetFiles("&lt;path&gt;"))
            {
                //  【注意】 [TestCase]同様、Returns(null) を記述しないとエラーになる
                yield return new TestCaseData(path).Returns(null);
            }
        }
    }
    // [TestCase]をリストで管理できるようにしたもの（動的に定義したい場合などで有用）
    // 各要素ごとを渡したテストとして扱われる
    // Directory.GetFilesから取得できる文字列がfile_0001、file_0002とすると、
    // RunWithTestCaseSource("file_0001")、RunWithTestCaseSource("file_0002")となる
    [TestCaseSource("FILES")]
    [UnityTest]
    public IEnumerator RunWithTestCaseSource(string file)
    {
        yield return RunScenarioWithFile(file);
    }



    // テストのタイムアウト時間を指定する
    // デフォルトだと30秒
    // ms単位で指定（この例だと5分になる）
    [Timeout(300000)]
    [UnityTest]
    public IEnumerator RunWithTimeout()
    {
        yield return RunScenario();
    }
}

