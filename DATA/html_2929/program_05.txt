
public class ScenarioTest
{
    private List&lt;string&gt; _errorLogs = new List&lt;string&gt;();

    // クラス内で最初のテストが実行される前に一度だけ呼ばれる
    [OneTimeSetUp]
    public void OneTimeSetUp()
    {
        // ログを残す
        Application.logMessageReceived += Log;
    }

    public void Log(string logString, string stackTrace, LogType type)
    {
        // エラーログを保持しておく
        if (type == LogType.Error || type == LogType.Exception)
        {
            _errorLogs.Add($"{logString}\n{stackTrace}\n");
        }
    }

    [UnityTest]
    public IEnumerator Run()
    {
        // 各テストの頭でクリアする
        _errorLogs.Clear();

        yield return RunScenario();
    }

    // 各テストの最後に呼ばれる（テストが失敗しても呼ばれる）
    [TearDown]
    public void TearDown()
    {
        // エラーログがあるならテスト失敗
        if (_errorLogs.Count &gt; 0)
        {
            Debug.Log("テスト失敗");
            Debug.Log(string.Join("\n", _errorLogs.ToArray()));
        }
    }
}

