Oracleの純正MySQL EntityFramework Coreのライブラリは、いくつか足りないメソッドがあったり、結果が違ったりする。
また、いくつかのメソッドがないので、代用方法で駆使する必要があり、覚えるのが大変なので、ちょっとその当たりを記録しておこうと思う。MySQL.Data.EntityFrameworkCoreを利用すると起こる現象なので、データベースはMySql/MariaDBどちらでも問題ないと思われる。UniqueやIndexのあるテーブルがあり、スキャフォさせるために設定する Index というのが EntityFrameworkにあるということが書かれていたのですが、こちらMySqlEntityFrameworkには見当たらないのです。
正解は、Fluent APIを利用するとのこと。
なお、プライマリキーも1つのときは、[Key]で指定できますが、複数の場合はFluent APIを利用して定義するのが、EntityFrameworkの作法のようですAny() メソッドは、存在する場合 true 存在しない場合 false と、bool型で検証してくれるメソッドです。でも、例外が返ります。どうやら、MySQLのEntityFrameworkCoreにはちゃんと実装されてくれてないみたいです。とはいえ、.Count() メソッドを使うと COUNT(*) で数を数えてくれるのでめちゃくちゃ遅いです。そこで、FirstOrDefault() メソッドを利用することで、データが無ければ null を返してくれるという点を利用して実装しました。この方法だと、以下のSQLが吐き出されるので多分、Count()メソッド使うよりは早いかと。たぶん...まだ、チューニング方法や猫自身がEntityFrameworkを使うのがお初なので、コーディング方法を確立出来てないので、もしかするとまだまだ問題が出るかも。なので、そのために、そのSQL大丈夫？問いのを確認するために、ロギングする方法。追加するライブラリ生成プロジェクトによるけど、これが入ってないと思いますので。
DbContext の継承クラスにて初期化上記、dotnet 2.x までらしいので、 dotnet 3.x からは、以下のように書くといいらしい。あとは、コンソール画面に勝手に出力してくれます。ただ、いまのこのConsoleLoggerProvider() クラスの書き方、古いらしく、新しく書き換えローってIDEに言われます。新しい書き方はまだ調査中。あと、コンソール画面に多数ログが出るので、SQL部分だけファイルで書き込みたいのですが、出来ませんかね...


