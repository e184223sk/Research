C#での複数コンテンツのPost方法を実例付きで解説する。
（複数コンテンツというのは、例えば、画像データとその名前の2つなどの事です。）以下を使うと複数コンテンツのPOSTが行えます。要は、MultipartFromDataContenctにデータを追加していき、HttpClientのPostAsyncメソッドの引数として渡すだけです。（MultipartFormDataContentはHttpContentクラスを継承している）それではやり方の一例を見ていきます。
今回は、以下のコンテンツをPostで送りたいとします。Postで送るものPost結果の確認方法今回の例では、Post結果の確認にhttpbinを使わせてもらいます。
httpbinは、指定のURLにHTTPリクエストを送ると、送信されたパラメータなどの情報をレスポンスとして返してくれるWebサービス&amp;ソフトウェアです。以下のJsonがPostのResponseとして返ってくれば成功  今回の場合は、http://httpbin.org/post にPOSTリクエストを送り、以下のようなJSONがReponseとして返ってくれば成功です。
確認するポイントは2つです。本題のコードが以下です。コードについて解説していきます。ここは特に解説の必要もないと思います。
MultipartFormDataContentの派生大元であるHttpContentクラスはIDisposableを継承しているので、usingをつけて勝手に開放してくれるようにしておきます。
（この記事の趣旨とは関係ないですが、C#8.0から、using変数宣言により、その変数のスコープに基づいて自動開放してくれるようになりました。usingステートメントによる多重{}はコードが見にくくなるので、ここではusing変数宣言を使っています。）MultipartFormDataContentに追加していく（もといHttpClientのコンテントとして扱う）ためには、各種コンテンツを専用の形式にしていく必要あります。
専用の形式とは、System.Net.Http.HttpClientクラスの派生クラスのことです。ここでは、画像データ（それを事前にバイナリ化したもの）と文字列をそれぞれHttpContent化します。画像データはByteArrayContentクラス、文字列はStringContentクラスでHttpContent化します。（ここでは結果が見やすいよう画像データには適当なバイナリをいれてます。）この部分は送りたいデータの形式に合わせて変えます。（他にはStreamContentクラスや、JsonContentクラスがあります。詳細はHttpContentクラスのドキュメントを読んでください。）ちなみに、MultipartFormDataContentクラスももちろんHttpContentクラスの派生クラスです。（正確にはMultipartFormDataContentクラス → MultipartContentクラス → HttpContentクラスという継承関係）上で専用の形式（HttpContentクラスの派生クラス）にしたデータを追加していくだけです。
MultipartFormDataContent.Add(HttpContent, string)メソッドを使って追加していきます。ここで、画像データと文字列データでは、引数の異なるAdd()メソッドを使っています。MultipartFormDataContent.Add()メソッドには、引数のとり方が3種類あります。1, 2番目の方法だとコンテンツがRequestの"form"に含まれ、3番目の方法だとコンテンツがRequestの"files"に含まれます。今回は、画像データは"files"に含まれて欲しいので3番目、文字列データは"forms"に含まれて欲しいので2番目のメソッドを使います。なお、3番目の方法の場合は、引数の3つ目に文字列が必要ですがこれは今回の場合何でもよいです。
(ちなみに1番目の方法を使った場合は、コンテンツはform"に含まれ、そのkeyにあたるものがnullとなります。）通常通りHttpClientのPostAsync()メソッドを使ってPostするだけです。
（上のコードではPostとそのResponseの表示をしています。）結果 
コードを実行すると以下がResponseとして返ってきました。
大丈夫そうですね。この記事では、C#での複数コンテンツのPost方法を実例付きで解説しました。簡単にやり方をまとめると以下です。


