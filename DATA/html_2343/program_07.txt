
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Windows;

namespace WpfApp3
{
    /// &lt;summary&gt;
    /// Interaction logic for MainWindow.xaml
    /// &lt;/summary&gt;
    public partial class MainWindow : Window
    {
        private MainVM MyVM = new MainVM();

        public MainWindow()
        {
            InitializeComponent();
            DataContext = MyVM;
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            var linq = new ObservableCollection&lt;Student&gt;(MyVM.ScoreList).AsEnumerable();

            if(MyVM.ClassId != 0)
            {
                linq = linq.Where(x =&gt; x.ClassId == MyVM.ClassId);
            }

            if(MyVM.Id != 0)
            {
                linq = linq.Where(x =&gt; x.Id == MyVM.Id);
            }

            //三項演算子,x.GenderがtrueであればIsMancheckedをみて、falseであればIsWomanCheckを見る。
            linq = linq.Where(x =&gt; x.Gender?MyVM.IsManChecked:MyVM.IsWomanChecked);

            if(MyVM.Score &gt;= 0)
            {
                linq = linq.Where(x =&gt; x.Score &gt;= MyVM.Score);
            }

            MyVM.ResultList = new ObservableCollection&lt;Student&gt;(linq);
            MyVM.NotifyPropertyChanged(nameof(MyVM.ResultList));
        }
    }

    public class MainVM:INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        public void NotifyPropertyChanged(string PropertyName)
        {
            var e = new PropertyChangedEventArgs(PropertyName);
            PropertyChanged?.Invoke(this, e);
        }

        public ObservableCollection&lt;Student&gt; ScoreList { get; set; } = new ObservableCollection&lt;Student&gt;()
        {
            new Student(){ClassId = 1, Id = 1, Gender = true, Score = 82},
            new Student(){ClassId = 1, Id = 2, Gender = false, Score = 89},
            new Student(){ClassId = 1, Id = 3, Gender = true, Score = 74},
            new Student(){ClassId = 2, Id = 1, Gender = false, Score = 79},
            new Student(){ClassId = 2, Id = 2, Gender = true, Score = 94},
            new Student(){ClassId = 2, Id = 3, Gender = false, Score = 87},
            new Student(){ClassId = 3, Id = 1, Gender = true, Score = 69},
            new Student(){ClassId = 3, Id = 2, Gender = false, Score = 75},
            new Student(){ClassId = 3, Id = 3, Gender = true, Score = 94}
        };

        public ObservableCollection&lt;Student&gt; ResultList { get; set; } = new ObservableCollection&lt;Student&gt;();

        private int _ClassId = 0;
        /// &lt;summary&gt;
        /// クラスの番号(検索用)
        /// &lt;/summary&gt;
        public int ClassId 
        {
            get =&gt; _ClassId;
            set
            {
                _ClassId = value;
                NotifyPropertyChanged(nameof(ClassId));
            } 
        }

        private int _Id = 0;
        /// &lt;summary&gt;
        /// 出席番号(検索用)
        /// &lt;/summary&gt;
        public int Id
        {
            get =&gt; _Id;
            set
            {
                _Id = value;
                NotifyPropertyChanged(nameof(Id));
            } 
        }

        private bool _IsManChecked = true;
        /// &lt;summary&gt;
        /// 男がチェックされているか
        /// &lt;/summary&gt;
        public bool IsManChecked
        {
            get =&gt; _IsManChecked;
            set
            {
                _IsManChecked = value;
                NotifyPropertyChanged(nameof(IsManChecked));
            }
        }

        private bool _IsWomanChecked = true;
        /// &lt;summary&gt;
        /// 女がチェックされているか
        /// &lt;/summary&gt;
        public bool IsWomanChecked
        {
            get =&gt; _IsWomanChecked;
            set
            {
                _IsWomanChecked = value;
                NotifyPropertyChanged(nameof(IsWomanChecked));
            }
        }

        private int _Score = 0;



        /// &lt;summary&gt;
        /// 点数(検索用)
        /// &lt;/summary&gt;
        public int Score 
        {
            get =&gt; _Score;
            set
            {
                _Score = value;
                NotifyPropertyChanged(nameof(Score));
            }
        }
    }

    public class Student
    {
        /// &lt;summary&gt;
        /// クラスの番号
        /// &lt;/summary&gt;
        public int ClassId { get; set; }

        /// &lt;summary&gt;
        /// 出席番号
        /// &lt;/summary&gt;
        public int Id { get; set; }

        /// &lt;summary&gt;
        /// 男か女か
        /// &lt;/summary&gt;
        public bool Gender { get; set; }

        /// &lt;summary&gt;
        /// 点数
        /// &lt;/summary&gt;
        public int Score { get; set; }
    }
}


