class TypeChar{
        /// &lt;summary&gt;
        /// 入力を許可する文字コード
        /// &lt;/summary&gt;
        public List&lt;char&gt; InputChars { get; set; } = new List&lt;char&gt;();

        /// &lt;summary&gt;
        /// 次入力を受け付ける文字コードのインデックス。
        /// &lt;/summary&gt;
        public int NextCharIndex { get; set; } = -1;

        /// &lt;summary&gt;
        /// 次の入力候補
        /// &lt;/summary&gt;
        public char NextWant { get { return this.InputChars[this.NextCharIndex]; } }

        /// &lt;summary&gt;
        /// 残りの文字
        /// &lt;/summary&gt;
        public IEnumerable&lt;char&gt; RemainChars {
            get
            {
                if (this.NextCharIndex == -1)
                {
                    for (int i = 0; i &lt; this.InputChars.Count; i++)
                    {
                        yield return this.InputChars[i];
                    }
                }
                else
                {
                    for (int i = NextCharIndex; i &lt; this.InputChars.Count; i++)
                    {
                        yield return this.InputChars[i];
                    }
                }
            }
        }

        /// &lt;summary&gt;
        /// 次の文字への参照
        /// &lt;/summary&gt;
        public List&lt;TypeChar&gt; Next { get; set; } = new List&lt;TypeChar&gt;();

        ///// &lt;summary&gt;
        ///// 前の文字への参照
        ///// &lt;/summary&gt;
        public List&lt;TypeChar&gt; Prev { get; set; } = new List&lt;TypeChar&gt;();

}


