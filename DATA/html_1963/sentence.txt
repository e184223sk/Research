More than 1 year has passed since last update.C#を勉強して数年になります。
ふとC#でタイピングゲームを作ってみたいなぁと思ったのですが、
そもそもローマ字入力どうするんだ、という壁にすぐにぶち当たり、
便利なクラスがないものかとGitHubの海を潜ること数ヶ月、
結局C#で実装されたよさげなものが無かったので自作することにしました。最初は気楽に考えてました。
「しゃ」って「si」とか「sixya」とか色々あるよね、パターン化してリストアップしとけばいいよね、と。
でも「しゃ」という１フレーズをパターン化するのは簡単ですが、
「しゃしゃ」となると、「shasha」もあれば「sixyasya」もあるし「syasha」だったあるので
１フレーズに対するパターン化以外に、次の入力候補のことも考えたデータ構造にしておかないと、
入力確認するときに大変そうです。
さらには、やはり「しゃしゃ」の場合に「sha」とタイプした人には「sya」より「sha」を
入力候補に表示するようなこともしたいです。
そういった欲望を満たせば、昔ハマったハウス・オブ・ザ・○ッドのタイピングゲームだって
作れますね（え？知らない？知らない人は・・・若いな）。
そのためにも、爆速で入力チェックや候補の選定を行うために
事前の解析、データ構造設計が大事そうです。「しゃしゃ」だけでも、「si→xya→si→xya」でもいいし、「si→xya→sha」でもいい。
１文字目の候補に対し、２文字目の候補が存在する。
つまりはこうだ。→の次が入力候補の文字でカッコの中は何文字目かを示す。
つまり、１文字目が「sha」の次は、３文字目の「si」か「sha」が次の入力候補、となる。
「しゃ」は他に「cixya」などもあるので、実際にはもっと巨大な表となるのだろう。しかしながら、データの持ち方はこれでよさそうだ。さぁ、実装だ。考えたクラスは下記の通り。ゲームを作る側からすれば、タイピングゲームエンジンのインスタンスを作成して、
問題文と共に「後ヨロシク」って言いたいよね。
僕は言いたい。
そのためのTypeGameクラスです。
一番頑張ってるのはTypeWord。
このクラスでひらがなをローマ字に変換させます。ひらがなの１文を１文字ずつローマ字へ変換する必要がある。
ローマ字のパターンは有限なので地道に変換するだけだ。1 「しゃしゃ」を「し」「ゃ」「し」「ゃ」と分割し、ローマ字化。
　まずは一番長いものを作る。
　作ったものはリスト化する。
　リスト化する、というのは、「し」を管理するTypeCharクラス自身が、
　次に来る「ゃ」のインスタンスを保持している、ということ。
　この時点で「しゃしゃ」は以下のようになる。2 「し」「ゃ」のように合体するリンキング文字について新しく文字を作り、
　リストに加える。
　この時点で「しゃしゃ」は以下のようになる。3 「ん」の対処
「ん」は続く文字が「や」「な」「あ」行でなければ「n」一個で「ん」とみなせる可能性がありますので、
その場合に応じたリンクを生成します。4 「っ」の対処
「っ」は続く文字が２つ重なるので、そういうリンクを生成します。完成版はGitHubにあります。
一部だけ紹介。TypeCharクラスはこんな感じになりました。
「し」一文字だとしても、入力は「ｓ」と「ｉ」のように２文字以上あるので
それらをリストで記憶し、
さらには次の入力候補位置もこのクラスで管理。
前後のインスタンスとはNext, Prevプロパティでつながっています。ひらがなをローマ字にする、今回一番頑張ったのが次のTypeWordクラス。Parse()メソッドで平仮名をローマ字に変換しています。
処理の手順は上に記載の通りで、
まず単純に一文字ずつローマ字化。
その後でリンキングワードについて処理し、「ん」と「っ」を処理しています。「しゃ」は「sha」と「sya」とがあるよ、というのはTypeWordクラス内にハードコーディングしてあります。
数が有限なのでそれでいいんじゃないかな。コード上、見かけないメソッドがあれば、それは拡張メソッドです。
すべてをここに乗せるのは冗長すぎるかと思い、やめました。コードの説明はおいといて、動作検証。
1. 「しゃおんかい」
リンキングワードや「ん」の対応もできてそうです。入力候補を赤字にしてみました。
うん。できてそう。「ｓ」を入力してみます。
［ｃｉ」が候補から外れて青くなりましたね。「ｓｈａｏｎ」と入力してみた結果、

「ん」を「ｎｎ」と入力するための２つ目の「ｎ」や、
「ｎ」一回だけで次の「か」入力になるケースが考慮されているのがわかります。真ん中らんの「ローマ字例」には、「hu tu hu tu」と表示されています。ところが、「fu」と入力すると・・・
残りのローマ字例として「tu fu tu」と「ｆｕ」が優先されたことがわかります。
優先順位付けもできてそうです。当然、「fu」に対して「hu」と入力しても受け付けられます。
あくまで有力なローマ字例を表示するときに、
ユーザのクセに応じた表示がしたい、というだけです。この実現は、コード例としては示してませんが、
入力が確定した時点で、「fu」が出てきた回数をインクリメントしているだけです。
使用頻度、使用回数を覚えておき、その頻度で優先順位付けしているだけです。ローマ字って結構大変でしたが、技術的にテクニカルなことは何もしてません。
ただただ最初に想定したデータ構造になるよう処理を組んだだけです。
ソフトウェア設計、やはり大事です。今回のソースコードは下記にあります。
ご自由に改変して使ってください。
https://github.com/kinumellowlife/TypingGame
　

ゲームとしても動作済みです。
タイマーまわしてるだけなので割愛。
スコアは、タイピングゲーム界では標準（？）の
「一定時間あたりの入力数　×　正解率」の３乗となっています。文章だらけの記事にお付き合いくださり、ありがとうございました。
コードは、メモリ効率とかあまり考えてません。
処理速度をあげるためのノウハウもあまりないので
ここ、もっとこうしたら、とかあれば教えてください。とりあえず、作ってて楽しかったです！
普段何気にタイプしているローマ字も、変換する側の立場に立って見ると結構面倒なことしてるんだなぁと
感慨深かったです。


