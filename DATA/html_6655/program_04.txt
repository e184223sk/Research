
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace DynamicObjectSample
{
    class DynamicXml : DynamicObject
    {
        public DynamicXmlElement Root { get; private set; } = null;

        public override bool TryGetMember(GetMemberBinder binder, out object result)
        {
            result = new DynamicXmlElement(binder.Name);
            return true;
        }

        public override bool TryInvoke(InvokeBinder binder, object[] args, out object result)
        {
            if (args.Length == 1 &amp;&amp; args[0] is DynamicXmlElement)
            {
                Root = (DynamicXmlElement)args[0];
                result = this;
                return true;
            }
            else
            {
                return base.TryInvoke(binder, args, out result);
            }
        }

        public XDocument ToXDocument()
        {
            var document = new XDocument(new XDeclaration("1.0", "UTF-8", "yes"));

            if (Root == null)
            {
                return document;
            }

            document.Add(Root.ToXElement());

            return document;
        }
    }
}

