More than 1 year has passed since last update.過去に実務でC++を触っていたときにクラスをnewでインスタンス化→要らなくなったらdeleteで削除というのを徹底していた。
で、最近Unity学習で触っているC#ではそういえばdeleteなんて書いたことねぇ・・・とふと思った。
※調べてみると、C#でのクラスインスタンスはclassの変数にnullをセットすると
C#のガベージコレクションという機能がもう使われてないと判断して削除してくれるらしい。C++、C#のクラスにおけるインスタンス化、利用、削除の流れを書いたコードは以下。
やっぱり色々なんか使い方違う・・・一番の違和感は、C++ではクラスをnewするとそのインスタンスのポインタが返ってきて、それをクラスのポインタ型変数に代入して、アロー演算子とかいうやつでアクセスする、という形なのに、C#ではポインタとか使った記憶がない。ちょっとまって。C#ではnewしたときに何が返ってくるの・・・？そもそもC#ではポインタを使うことが非推奨であるらしい(重大なバグにつながるかららしい。のっぴきならない事情があれば無理やり使うこともできるみたいだが)。・・・ということはそもそもnewしてもポインタなんかかえってきてるわけなさそう。じゃあなにが返ってくるのか。それは・・・newした対象のデータ型によるらしく。C#の世界では、データの型に応じて、値型もしくは参照型に区分され、扱われるらしい。それはそのデータ型の変数を宣言したときも同等。クラスは参照型という扱いになるんですね。


