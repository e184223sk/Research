今回は画面内にヘルプページを表示するサンプルと、画面パーツを別xamlにするやり方を学びます。
これらの実装例として、正規表現の動作確認ツールを作ります。
RegexTesterという名前でプロジェクトを作成します。プロジェクトを右クリック、「プロパティ」で「対象のフレームワーク」を.NET Core 3.1に設定します。
プロジェクトを右クリック、「プロパティ」で「対象のフレームワーク」を.NET 5.0に設定します。
プロジェクトをダブルクリックし、
csprojファイルのSdkがMicrosoft.NET.Sdk.WindowsDesktopになっていたらMicrosoft.NET.Sdkに編集します。
Gridを分割し、上にタブ、下に閉じるボタンを配置します。

プロジェクトを右クリック、「追加」-「新しいフォルダー」でViewsと入力してください。
「Views」フォルダー内にPagesフォルダーを作成してください。
「Pages」フォルダーを右クリック、「追加」-「ユーザーコントロール(WPF)」でMatchingContentと入力してください。
同様に「Pages」フォルダにユーザーコントロールHelpContentを追加してください。
追加したコントロールをメイン画面の各タブで参照します。MainWindow.xamlのWindowに
xmlns:page="clr-namespace:RegexTester.Views.Pages"を追加してください。そして、TabItemの中にpage:の後に先ほど追加したユーザーコントロールの名前を書きます。pageの部分は任意の名前を付けられます。
xmlns:abc="clr-namespace:RegexTester.Views.Pages"としていたら
&lt;abc:MatchingContent /&gt;という書き方でPagesフォルダのコントロールを参照できます。ここまでで一度ビルドしておきましょう。「ヘルプ」タブに表示する内容を作ります。
HTMLのテーブル風のリファレンスとURLリンクを作ります。
Xamlの書き方もHTMLのTableと少し似ています。作り終わったらビルドし、MainWindowで「ヘルプ」タブを選択してみましょう。
ちゃんと「ヘルプ」タブ内に表示されました。
「マッチング」タブに表示する内容を作ります。
作り終わったらビルドし、MainWindowで「マッチング」タブを見てみましょう。「閉じる」ボタンの処理を書きます。「文字列」のテキストボックスに検索対象の文字列を入力し、
「正規表現パターン」のテキストボックスに検索する正規表現を入力し、実行ボタンを押します。



おしまい＜＜ 最初の記事 　 ＜ 前の記事 　 次の記事 ＞


