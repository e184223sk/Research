More than 1 year has passed since last update.Entity Framework のコンテキストにおいて、トランザクションは、既定では SaveChanges() を実行したときに暗黙的に使用されます。
要件によっては、トランザクションのスコープを明示的に制御したいケースも出てくるでしょう。EF6 ではトランザクション操作のために DbContext.Database.BeginTransaction/UseTransaction メソッドが導入され、TransactionScope よりも推奨されるようになりました。（Microsoft Docs 解説）
ここでは、トランザクションの明示的なスコープ制御を EF6 の Model/Database First で行う例を示します。※EF4.1 以降で TransactionScope クラスや DbTransaction.BeginTransaction メソッドを使用する例については、「トランザクションのスコープ制御（EF4.1～：Model/Database First）」をご覧ください。
※Code First での制御については「トランザクションのスコープ制御（EF6：Code First）」をご覧ください。Database.BeginTransaction でトランザクションを開始し、その中で SaveChanges した変更をまとめて Commit します。あらかじめ接続を開いておいて BeginTransaction メソッドでトランザクションを開始し、その中で複数のコンテキストを操作、SaveChanges した後にまとめて Commit します。Database/Model First では、コンテキストのコンストラクタには EntityConnection を渡す必要があります。
コンテキストを Dispose しても接続が破棄されないよう、contextOwnsConnection 引数には false を指定します。トランザクションは Database.UseTransaction メソッドでコンテキストに渡して共用します。それぞれのコンテキストには別々の EntityConnection を渡す必要があります。
2つ目以降の EntityConnection を作成するときに必要となる MetadataWorkspace オブジェクトは、コンテキストが実装する IObjectContextAdapter インターフェイスの  ObjectContext プロパティから取得できます。


