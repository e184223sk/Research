More than 1 year has passed since last update.具体的な事例を元に書くので話が少しややこしくなるかもしれないため，とりあえず結論を書きます．[初コルーチン呼び出し]
1. [StartCoroutineよりも上の部分のUpdate関数内の処理]-&gt; 
2. [Coroutine] -&gt; 
3. [StartCoroutineよりも下の部分のUpdate関数内の処理][２回目以降のコルーチン呼び出し]
1. [Update関数内の処理全て]-&gt; 
2. [Coroutineの続き]Coroutine内でアニメーションの処理を書いて，終わったタイミングだけUpdate内でアクションを起こしたかった．．．
（*イメージは下記のコード）しかし，何も起こらなかった．．．．って感じでした．
しかし，Update内でDebug.Logを使い，bool値を追ってみるとずっとfalseになっている．．．おかしい．．．処理の実行順序を調べるため，こんなコードを書いてみた結果
初めにCoroutineが呼ばれるのは予想してた
1. [StartCoroutineよりも上の部分のUpdate関数内の処理]-&gt; 
2. [Coroutine] -&gt; 
3. [StartCoroutineよりも下の部分のUpdate関数内の処理]であったが，それ以降の処理については
1. [Update関数内の処理]-&gt; 
2. [Coroutineの続き]のようでした自分はキーフレーム系の処理があまり好きではありません．．．めんどくさいので．．ですが映像を作っているとそうも言ってられない時があります．例えばAEとかで作っている回転し終わったタイミングで平行移動とかカクカクした感じのモーションなど．そんな時にCoroutineを使うことでそのキーフレームを使うことの悩みも解消できるのでぜひ試してみてください．
簡易的なものですが参考にしていてください↓


