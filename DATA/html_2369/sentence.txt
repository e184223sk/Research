More than 1 year has passed since last update.今回、暗号化技術「AES」（Advanced Encryption Standard）について、深く知り学びたいとふと思ってしまったので、C#でアルゴリズムを完全再現してみました。
今回は学習目的ですが、本来であれば標準ライブラリに頼るべきです。また、実装にあたって高度な数学は避けられません。
私の範囲を超えたものは、基本的に外部記事に解説を委ねます。今回、以下の記事を参考にさせて頂きました。・@tobira-code 様 「AESを理解する」Wikipedia様:
出典: フリー百科事典『ウィキペディア（Wikipedia）』
・Advanced Encryption Standard
・Rijndael S-box
・Rijndael MixColumns
・AES key scheduleWikiwand様:
・Block cipher mode of operationAppliedGo様:
・(YouTube)AES Rijndael Cipher explained as a Flash animation・The Advanced Encryption Standard (Rijndael)※あくまで主観です
今の時代、Googleで探せばいくらでも情報が手に入りますが、
これに関しては、既知の情報をコピー&amp;ペーストしたような情報記事ばかりで、正確でわかりやすい情報を見つけるのに苦労しました。AESとは、アメリカ国立標準技術研究所で標準暗号とされている共通鍵暗号アルゴリズムです。
Rijndaelが採用されています。（ラインデールと読むそうです。かっこいい。）画像出典: The Advanced Encryption Standard (Rijndael)鍵長128bitの場合、ラウンド数は合計10です。
暗号化プロセスは、以下の通りです。
・Visual Studio 2019 Professional
・Windows 10 1903 Build 18362.476
・C#
・.NET Framework 4.7.2開発期間: 1.5日S-BOXと呼ばれるテーブルを使用して、バイトを変換します。
S-BOXのテーブルは以下の通りです。
なぜこうなっているのかは私の範囲外ですのでwikipedia様にお任せします。
実際にコードでSBOXの値を求めるにあたって、case-switch文で関数定義しました。
完全に脳死してます。
より良い方法はありますが、とりあえず動作していますし速度は求めていないので今回はこれで行きます。コメント欄よりご指摘を頂き、ソースコードを修正しました。4バイト単位の行を一定規則で左シフトします。
例として、以下の画像の通りです。
・2段目を1個左シフト
・3段目を2個左シフト
・4段目を3個左シフト
1行目は操作の必要がありませんが、わかり易さのために残しています。Rijindaelのガロア体という、定数を利用して計算を行います。

具体的には、ガロア体の4つの数字の座標ベクトルにMDS(最大距離分離)行列を乗算します。
これも、高度な数学で私の範囲を超えていますので、外部記事にお任せします。
・巡回行列 - Wikipedia
・MDS Matrix
・MDS行列 の意味・用法を知るガロア体は以下のように定義しました。当ソースコードではわかり易さの為、ガロア体を定数として定義して使用していませんが
どちらにせよコンスタントな値であるため、直接書いても良いです。MDS(最大距離分離)行列を乗算
式が変換先の型の範囲外の値を生成した場合に、オーバーフローを検出させないために、unchecked()が必要です。ラウンド毎に行われる、新しい鍵の生成です。
まずはじめに、鍵の行(縦)4行目をとり、RotWordという入れ替え処理を行います。

次にRijindael S-BOX定数を用いて、該当行を変換します。また、RCON（RoundConstant）と呼ばれる、ラウンドコンスタント定数を使用しています。初期ラウンドのAddRoundKeyでは、暗号化するByteと鍵とのXorをとります。無事、暗号化に成功しました。今回は、AES暗号化アルゴリズムを外部ライブラリに頼らずフル実装してみました。
解説に関しては、私が高校数学を未だ習っていない為外部に頼りきりですが、プロジェクトを通して、本当に沢山のことを学べました。
また、当プロジェクトでは暗号化のみ行っていますが、また機会があれば復号化にもチャレンジしてみたいです。今回のプロジェクトは、Githubリポジトリよりフルソースコードを閲覧できます。
・GitHub当記事に間違いや訂正するべき点がございましたら、お手数ですがコメント欄よりご指摘を頂けますと幸いです。


