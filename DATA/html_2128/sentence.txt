More than 1 year has passed since last update.Freeradicalの中の人、yamarahです。
いつまでもWinFormsではつらいので、WPFを使おうという話しです。
WPF自体については解説しません。Formの代わりにWPFのWindowを表示するには、どうすれば良いのかを説明します。Visual Studio → ソリューション エクスプローラーで右クリック → 追加 → 新しい項目で'WPF'が無い場合があります。

上の画像にはWPFがありますが、もし見当たらない場合は、ProjectでUseWPFをtrueにします。
これで、新しい項目の追加にWPFが表示されるはずです。
また、実際にWPFのWindowを追加した後に、Windows デスクトップ アプリケーションを作成するには、Microsoft.NET.Sdk.WindowsDesktop が必要です。現在の SDK では、'UseWpf' と 'UseWindowsForms' はサポートされていません。と警告が出る場合があります。この場合は、警告に従って、Projectの1行目をに変更しましょう。
これらの変更を施したProjectの冒頭部分は、このようになると思います。以前の記事(C#8.0、そして.NET Core3.0)に従って、nullableも有効にしています。
ちなみに、WindowsFormsも使う場合は、を加えます。表示するだけなら、単純にとすれば、表示されます。しかし、これだけだと、WinFormsについて書いた以前の記事(Modeless FormのZ order)と同じ問題が発生して、WindowがInventorの後ろに隠れうる状態です。
WPFでは、WinFormsの場合と違って、modalでもInventorの後ろに回ります。
解決策は、modelessなWinFormsと同じように親子関係の設定をする必要があり、WPFでは次のようにします。基本的には、WinFormsの場合と同じ手順でWPF Windowを表示できます。
(helperからHandleを取る前に、EnsureHandle()を呼ぶのと、VisibilityをVisbleにするのを忘れないように!!)
しかしながら、残念なことにキー入力ができません。Inventor ForumのDockable Window with WPF controls, don't receive keyboard inputによると、Inventor 2018から発病しているbugっぽいです。現時点(Inventor 2020.2)では、直接WPF Windowを貼っても、WinFormsで包んでも、キー入力ができません。
    ↓
2020.01.09 追記
Messageをhookして、WM_GETDLGCODEに応答することで、キー入力できるようになることが分かりました。
以下は、そのサンプルコードです。Autodesk Inventor API Hacking (概略)


