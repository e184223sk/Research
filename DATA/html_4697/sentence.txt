More than 3 years have passed since last update.『C#』『VB』『C++/CLI』『MFC』を使ったプロジェクトで、共通のLoggerを作成する上でのモジュール間呼び出しに関するtipsをまとめたメモ。
やり取りに関係しないところは適当に簡略化してます。＜必要な要素＞『C++/CLI』で作成。
C#, VBからもC++/CLI、MFCからも呼ぶ必要があるためです。
今回の話に全く関係ありませんが、NLog使いました。＜簡単な説明＞
秘伝のソース過ぎて最初にどこを通るか全くわからないので、全ての外部IFにインスタンス作成等のInitializeがついてます。
WriteLog内でメッセージをフォーマットして、Nlogのインスタンスに対しInfoメソッドを呼んでいます。『C#』で作成。
LogModuleのdllをLib参照しているプロジェクト。＜簡単な説明＞LogModuleのWriteInfoMessage等ログ出力関数を直接を呼び出しています.LogModule, C++/CLIプロジェクト、MFCプロジェクト共用。＜簡単な説明＞WriteInfoMessageをDefineで定義し、ファイル名等を追加で取得してextern"C"の内部関数に渡しています。
また、LogModule内のログ出力クラスにてヘッダInclude時にLOGDLL_EXPORTSを定義することで、呼び出し元/呼び出し先のdllimport/dllexportを分けています。（お決まり）C#VBC++/CLI, MFCLogModuleのあるC++/CLIにもCallerFilePath等は存在しているため、C#, VB用IFを使わずC#側から直接LogModuleを呼び出すことはもちろん可能です。
ただし、VB側から呼び出してもファイル名などが入ってきませんでした。おそらく中間コードからVBに直す際、VBの仕様に合わせるために初期値が設定されていないと強制的に後からNothingを入れてしまうから・・・？CallerMemberPath等は値が設定されている場合無視されてしまうので、結果ファイル名が入って来ないのではないかと。OptionalAttributeやDefaultValue等試してみてもうまく出来ず断念。そのため、C#でIFを作成しています。
対処法がわかればこのIFは不要です。C#側からは初期値問題が発生しないので直接LogModuleを呼び出しても問題ありませんが、どうせC#でIFを作るなら参照しない理由がないので、C#側からもこのIFを参照しています。


