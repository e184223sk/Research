using UniRx.Async;
using UnityEngine;
using UnityEngine.UI;

public class StopperController : MonoBehaviour
{
    [SerializeField] private Canvas _stopperCanvas;

    public static FocusController Instance;

    private Canvas _addedCanvas;
    private GraphicRaycaster _addedRaycaster;

    private void Awake()
    {
        Instance = this;
    }

    public async void Focus(GameObject go)
    {
        _stopperCanvas.gameObject.SetActive(true);
        _addedCanvas = go.AddComponent&lt;Canvas&gt;();
        _addedRaycaster = go.AddComponent&lt;GraphicRaycaster&gt;();
        // たまに動作しない時があるため1F待機する
        await UniTask.DelayFrame(1);
        _addedCanvas.overrideSorting = true;
        _addedCanvas.sortingOrder = _stopperCanvas.sortingOrder + 1;
    }

    public void RemoveFocus()
    {
        // 依存関係のため_addedRaycasterから先に削除する
        Object.Destroy(_addedRaycaster);
        _addedRaycaster = null;
        Object.Destroy(_addedCanvas);
        _addedCanvas = null;

        _stopperCanvas.gameObject.SetActive(false);
    }


#if UNITY_EDITOR
    [SerializeField] private GameObject testGameObject;

    [ContextMenu("TestFocus")]
    void TestFocus()
    {
        Focus(testGameObject);
    }

    [ContextMenu("TestRemoveFocus")]
    void TestRemoveFocus()
    {
        RemoveFocus();
    }
#endif
}

