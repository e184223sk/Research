
var resSize = 0;
var merge = "";
while (ns.CanRead)
{
    var resBytes = new byte[500];
    resSize = ns.Read(resBytes, 0, resBytes.Length);
    if (resSize == 0) break;
    var message = Encoding.UTF8.GetString(resBytes);
    var elements = message.Split(new string[] { "\0" }, StringSplitOptions.RemoveEmptyEntries);
    foreach (var r in elements)
    {
        var receive = r;
        if (!receive.EndsWith("&lt;/chat&gt;"))
        {
            merge += receive;
            continue;
        }
        if (!receive.StartsWith("&lt;chat")) { receive = merge + receive; merge = ""; }
        else if (receive.EndsWith("&lt;/chat&gt;")) { receive = merge + receive; merge = ""; }
        else if (merge != "") { receive = merge + receive; merge = ""; }
        if (receive.StartsWith("&lt;chat") &amp;&amp; receive.EndsWith("&lt;/chat&gt;"))
        {
            var comment = new Regex("&gt;(.*)&lt;", RegexOptions.None).Match(receive).Groups[1].Value.Replace("&amp;lt;", "&lt;").Replace("&amp;gt;", "&gt;");
            if (comment != "")
            {
                if (comment.Contains("/hb ifseetno")) continue;
                var no = double.Parse(new Regex("no=\"(.*?)\"", RegexOptions.None).Match(receive).Groups[1].Value);
                var vpos = DateTimeOffset.FromUnixTimeSeconds((long)(double.Parse(new Regex("date=\"(.*?)\"", RegexOptions.None).Match(receive).Groups[1].Value) - double.Parse(open_time))).ToString("HH:mm:ss");
                var date = DateTimeOffset.FromUnixTimeSeconds(long.Parse(new Regex("date=\"(.*?)\"", RegexOptions.None).Match(receive).Groups[1].Value)).LocalDateTime.ToString("HH:mm:ss");
                var id = new Regex("user_id=\"(.*?)\"", RegexOptions.None).Match(receive).Groups[1].Value;
                Console.WriteLine($"[{no}] ({id}) {comment} 時刻:{date} 経過時刻:{vpos}");
            }
        }
    }
}

