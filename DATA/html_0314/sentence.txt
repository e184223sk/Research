どうも、ろっさむです。今回はC#でenumキーワードを使用する際の使い方をざっくりまとめていこうと思います。基本的には曜日や色、月日などの、特定の値しかとらないデータを表現する際に使用します。
これは列挙型(enumeration type)と呼ばれ、enumキーワードを使用します。列挙型要素のデフォルトはint型であり、0から始まって1ずつ増加していきます。
つまりRedが0で、Yellowが1、Blueが2となります。ただし、この数値はオーバーライドすることも可能です。列挙型はlong,short,byte型とデフォルトのint型のみ宣言することができます。これ以外(例えばchar)の列挙型を作成することは非推奨となっており、リフレクションを使用して無理に作っても例外がスローされる可能性があります。前提コードが以下の状態だとします。任意の整数型の値を列挙型に変換するためにはToObject(Type enumType, int value)メソッドを使用します。このメソッドはobject型を返すので、更にCastを行う必要があります。-1など、実際にはメンバーの値として存在しない値でも、castして割り当てることが可能となってしまいます。これを回避するためには以下のように、IsDefinedメソッドを使用する必要があります。列挙値を文字列変換するためにはToString()メソッドを使用します。System.Enumクラスのstaticメソッドを使用した方法がメインとなります。Enum.GetValuesを用いることで、要素の値を取得できます。Enum.GetValuesを用いることで、要素の値を取得できます。ビットフラグとして列挙型を使用する場合 FlagsAttribute属性を付与する必要があります。詳しい使用方法は以下のブログ記事が参考になります。↓↓↓↓↓↓↓↓↓C#で列挙型(enum)をビットフラグとして判定および演算する列挙型は定数となるため、enumの値はコンパイル時に定数に置き換えられます。const定義したものと同様に、enumに変更を加えた場合、そのenumを参照しているアセンブリなども再コンパイルする必要が生じます。


