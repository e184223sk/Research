
private static void Decomp(int m, int n, double[] a, int[] ipiv) {
  for (var i = 0; i &lt; ipiv.Length; i++) ipiv[i] = i;

  for (var i = 0; i &lt; m; i++) {
    if (!IsZero(a[i * n + i])) continue;
    var t = i;
    for (var j = i + 1; j &lt; m; j++)
      if (a[t * n + i] &lt; a[j * n + i])
        t = j;
    for (var j = 0; j &lt; n; j++) Swap(ref a[i], ref a[t]);
    ipiv[i] = t;
  }

  for (var k = 0; k &lt; m; k++) {
    for (var i = k + 1; i &lt; m; i++) {
      var p = a[i * n + k] / a[k * n + k];
      for (var j = k + 1; j &lt; m; j++)
        a[i * n + j] -= p * a[k * n + j];
      a[i * n + k] = p;
    }
  }

  bool IsZero(double p) =&gt; -double.Epsilon * 1e10 &lt; p &amp;&amp; p &lt; double.Epsilon * 1e10;
}

