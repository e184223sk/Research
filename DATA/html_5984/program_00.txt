private void abc_r_2()
        {
            decimal a;
            decimal b;
            decimal c;
            decimal d;

            byte[] bs = new byte[4];
            RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider();

            int m = 0; //重解 multiple root
            int r = 0;
            int i = 0;

            decimal total = 10000000;
            int n = 1;

            for (int x = 0; x &lt; total; x++)
            {
                do
                {
                    rng.GetBytes(bs);
                    //Int32に変換する
                    a = BitConverter.ToInt32(bs, 0);
                    //a = -1;
                } while (a == 0);

                rng.GetBytes(bs);
                //Int32に変換する
                b = BitConverter.ToInt32(bs, 0);

                rng.GetBytes(bs);
                //Int32に変換する
                c = BitConverter.ToInt32(bs, 0);

                d = b * b - 4 * a * c;

                if (d == 0)
                {
                    m++;
                }
                else if (d &gt; 0)
                {
                    r++;
                }
                else
                {
                    i++;
                }
            }


            decimal m_p = m * 100 / total;
            decimal r_p = r * 100 / total;
            decimal i_p = i * 100 / total;

            Invoke(new dldl(delegate
            {
                textBox1.AppendText("実数解:" + r.ToString() + "(" + r_p.ToString() + "%)" +
                                    "虚数解:" + i.ToString() + "(" + i_p.ToString() + "%)" +
                                    "二重解:" + m.ToString() + "(" + m_p.ToString() + "%)" + Environment.NewLine);
                button1.Enabled = true;
            }));
        }

