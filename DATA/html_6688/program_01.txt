
using System;
using System.Collections.Generic;

namespace XorShifts{
    class XorShift{
        private IEnumerator&lt;uint&gt; r;
        public static readonly Dictionary&lt;string,uint&gt; defaults=new Dictionary&lt;string,uint&gt;(){
            {"x",123456789},
            {"y",362436069},
            {"z",521288629},
            {"w",88675123}
        };
        public readonly Dictionary&lt;string,uint&gt; seeds;
        public uint randCount=0;

        public XorShift(uint? _w=null,uint? _x=null,uint? _y=null,uint? _z=null){
            uint w=_w ?? (uint)Environment.TickCount;
            uint x=_x ?? w&lt;&lt;13;
            uint y=_y ?? (w&gt;&gt;9)^(x&lt;&lt;6);
            uint z=_z ?? y&gt;&gt;7;
            seeds=new Dictionary&lt;string,uint&gt;(){
                {"x",x},{"y",y},{"z",z},{"w",w}
            };
            r=randGen(w,x,y,z);
        }

        public IEnumerator&lt;uint&gt; randGen(uint w,uint x,uint y,uint z){
            uint t;
            for(;;){
                t=x^(x&lt;&lt;11);
                x=y;
                y=z;
                z=w;
                yield return w=(w^(w&gt;&gt;19))^(t^(t&gt;&gt;8));
            }
        }

        public uint rand(){
            randCount++;
            r.MoveNext();
            return r.Current;
        }

        public int randInt(int min=0,int max=0x7FFFFFFF){
            return (int)(rand()%(max-min+1))+min;
        }

        public float randFloat(float min=0,float max=1){
            return (float)(rand()%0xFFFF)/0xFFFF*(max-min)+min;
        }

        public T[] shuffle&lt;T&gt;(T[] _arr){
            var arr=(T[])_arr.Clone();
            for(int i=0;i&lt;=arr.Length-2;i++){
                int r=randInt(i,arr.Length-1);
                T tmp=arr[i];
                arr[i]=arr[r];
                arr[r]=tmp;
            }
            return arr;
        }

        public List&lt;T&gt; shuffle&lt;T&gt;(List&lt;T&gt; _arr){
            var arr=new List&lt;T&gt;(_arr);
            for(int i=0;i&lt;=arr.Count-2;i++){
                int r=randInt(i,arr.Count-1);
                T tmp=arr[i];
                arr[i]=arr[r];
                arr[r]=tmp;
            }
            return arr;
        }

        public class defaultSeed:XorShift{
            public defaultSeed():base(
                defaults["w"],
                defaults["x"],
                defaults["y"],
                defaults["z"]
            ){}
        }
    }
}

