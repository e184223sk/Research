More than 3 years have passed since last update.こんにちは、今回は２Dゲームでのルート探索についてふっと処理が思い浮かんだので書いていきます。少々長いですがお付き合いいただけると幸いです。
※移動処理にDoTweenを使っています。おまけ程度にマップの場外処理＋マップ移動も入っているので大きいマップを扱った時もスクロール処理ができます。
※HEIGHT_MAX とWIDTH_MAX は今回の画像サイズに合わせて設定したサイズなので画像のサイズに合わせて変更の必要があります。まずはMap.csのAwakeで現在位置のセーブがある場合はそこに移動し背景がはみ出している場合に修正する処理が入っています。NextTargetで現在地に接しているポイント（座標）から見てゴールに近いほうを最短として扱います。

ただしその場合下の画像のような事態が起きる可能性があります。
上記のように行き止まりのルートを選んだ場合はBacktrackPoint（バックトラック法）を使い、探索されていないルートまで戻る処理を行います。・バックトラック法
http://www.ss.cs.meiji.ac.jp/CCP030.html
上記で処理での配列内の動きは
現在地→A→B（行き止まりのため戻る）
現在地→A
現在地→A→C（まだ行っていないルート）→ゴール
という形で探索をします。移動後は現在地をPlayerPrefsにセーブを行うので次回再生した際はそこからのスタートとなります。MapPoint.csの中にisPassingというのがあり、これで既にそのルートの探索を行っているかのチェックを行います。
もしもtrueの場合はそのルート選ばれないようにNextTargetのfor文のなかで行っています。今回は２Dということで基本的にCanvas内ですべて完結しています。
※カメラは必要ありませんが画面が見にくくなるので置いているだけです。
背景の黒画像を背景としてその中にルートとキャラクター（赤点）が入った構成になります。
描画範囲は1080×1920です（スマートフォンサイズ）※iPhone10　galaxy s9を想定したつくりではないです。背景サイズは3072×3072となります。ルート一つ一つの設定です。

①マップID（Index)
②隣接するマップ
となります。
※黄色い線はわかりやすいように編集しただけです。となります。
実機での動作確認もすでに済んでおり負荷についても複雑なマップでない限り問題ないと思います。動作テストも行い問題なく動いたのを確認しましたがもしこれを試す場合に不具合があった際には指摘をいただけると幸いです。最後まで見てくださった方ありがとうございました。


