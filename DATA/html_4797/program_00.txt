static void Main(string[] args)
{
  // data
  var data = new DataTable();
  data.Columns.Add("ID");
  for (int i = 0; i &lt; 3; i++)
  {
    data.Rows.Add(i);
  }
  data.AcceptChanges();

  Console.WriteLine("--------------------");
  foreach (DataRow row in data.Rows)
  {
    Console.WriteLine($"ID:{row["ID"]},RowState={row.RowState}");
  }

  // 追加
  var add = data.NewRow();    // add.RowState:DataRowState.Detached
  add["ID"] = 3;
  data.Rows.Add(add);         // add.RowState:DataRowState.Added

  // 修正
  var mod = data.Rows[0];     // mod.RowState:DataRowState.Unchanged
  mod["ID"] = 9;              // mod.RowState:DataRowState.Modified

  // 削除
  // ・削除された行として存在する。
  var del = data.Rows[1];    // del.RowState:DataRowState.Unchanged
  del.Delete();              // del.RowState:DataRowState.Deleted

  // 除外
  // ・DataTableから除外される。
  // ・data.RejectChanges();しても、dataから除外されたままになる。
  var rmv = data.Rows[2];    // rmv.RowState:DataRowState.Unchanged
  data.Rows.Remove(rmv);     // rmv.RowState:DataRowState.Detached

  Console.WriteLine("--------------------");
  foreach (DataRow row in data.Rows)
  {
    if (row.RowState == DataRowState.Deleted)
    {
      // 削除された行の値をアクセスしようとする例外が発生する。
      // →DataRowVersion.Original を付けて、削除前の状態の値を取得する。
      Console.WriteLine($"ID:{row["ID", DataRowVersion.Original]},RowState={row.RowState}");
    }
    else
    {
      Console.WriteLine($"ID:{row["ID"]},RowState={row.RowState}");
    }
  }

  // data.AcceptChanges();
  // data.RejectChanges();
  Console.WriteLine("--------------------");
  foreach (DataRow row in data.Rows)
  {
    Console.WriteLine($"ID:{row["ID"]},RowState={row.RowState}");
  }
}

