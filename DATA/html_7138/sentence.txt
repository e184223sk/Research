More than 3 years have passed since last update.n番目のフィボナッチ数をf(n)とすると、以下のように表せます。フィボナッチ数列の詳しい説明については、Wikipediaのこちらのページをみてください。まずは、フォボナッチ数の定義をそのまま、以下のように書いてみました。なんてシンプルで美しいんでしょう。しかし、このメソッド使って、フィボナッチ数列を列挙しようとすると、とんでもなく遅いです。上のコードを実行すると、どんどん列挙が遅くなり、50番目のフィボナッチ数の計算の時には、無限ループしちゃったのかな？と思うくらい結果が返ってきません。ということで、もっと速く求められるようにしたのが、以下のコードです。
何番目かを表すnを与える方法から、フィボナッチ数をどんどん列挙する方法に変更しました。フィボナッチ数を求めるには、2つ前までの数字を覚えていればよいので、配列の要素数は２つだけ用意しています。
C#のyield return を使っています。yield return本当に便利です。ところで、LINQってインデックス扱おうとおもった瞬間、ダメな子になるのが玉に瑕です。まあ、LINQはそれを補ってあまりある魅力があるから良しとしましょう。GitHubでコードを公開しています。上のコードの実行結果です。いやー、あっと言う間に、Int32の上限を超えちゃうんですね。びっくりです。ということは、すぐにlongの最大値も超えちゃいますね。f(200)とか求めたかったら、BigInteger使わないとだめそうですね。この記事は、Gushwell's C# Programming Pageで公開したものを加筆・修正したものです。


