private async Task StartCommandAsync(string sourceFileName, string destinationFileName) {
    //Processを非同期に実行
    using (Process process = this.CreateFCProcess(sourceFileName, destinationFileName)) {
        await this.StartCommandAsync(process);
    }
}

private Task StartCommandAsync(Process process) {
    var tcs = new TaskCompletionSource&lt;bool&gt;();
    bool started = false;
    process.Exited += (sender, args) =&gt; {
        tcs.SetResult(true);
    };
    process.OutputDataReceived += (sender, args) =&gt; {
        if (!string.IsNullOrEmpty(args.Data)) {
            this.m_FCResult += $"{args.Data}\n";
            }
        };
    process.ErrorDataReceived += (sender, args) =&gt; {
        if (!string.IsNullOrEmpty(args.Data)) {
            this.m_FCResult += $"Error : {args.Data}\n";
        }
    };

    //プロセスからの情報を受け取る変数の初期化
    this.m_FCResult = "";

    //プロセスの開始
    started = process.Start();
    process.BeginOutputReadLine();
    process.BeginErrorReadLine();

    return tcs.Task;
}

private Process CreateFCProcess(string sourceFileName,string destinationFileName) {
    ProcessStartInfo info = new ProcessStartInfo() {
        FileName = "FC",
        Arguments = $"\"{sourceFileName}\" \"{destinationFileName}\"",
        CreateNoWindow = true,
        UseShellExecute = false,
        RedirectStandardOutput = true,
        RedirectStandardError = true
    };

    Process process = new Process() {
        StartInfo = info,
        EnableRaisingEvents = true,
    };
    return process;
}

