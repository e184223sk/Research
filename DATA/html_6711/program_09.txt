
    public static class DependencyObjectExtensions
    {
        /// &lt;summary&gt;
        /// VisualTreeの子要素を取得
        /// &lt;/summary&gt;
        /// &lt;param name="obj"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static IEnumerable&lt;DependencyObject&gt; Children(this DependencyObject obj)
        {
            if (obj == null)
                throw new ArgumentNullException("obj");

            var count = VisualTreeHelper.GetChildrenCount(obj);
            if (count == 0)
                yield break;

            for (int i = 0; i &lt; count; i++)
            {
                var child = VisualTreeHelper.GetChild(obj, i);
                if (child != null)
                    yield return child;
            }
        }

        /// &lt;summary&gt;
        /// VisualTreeの子孫要素を取得
        /// &lt;/summary&gt;
        /// &lt;param name="obj"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static IEnumerable&lt;DependencyObject&gt; Descendants(this DependencyObject obj)
        {
            if (obj == null)
                throw new ArgumentNullException("obj");

            foreach (var child in obj.Children())
            {
                yield return child;
                foreach (var grandChild in child.Descendants())
                    yield return grandChild;
            }
        }

        /// &lt;summary&gt;
        /// 指定した型の子要素を取得
        /// &lt;/summary&gt;
        /// &lt;typeparam name="T"&gt;&lt;/typeparam&gt;
        /// &lt;param name="obj"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static IEnumerable&lt;T&gt; Children&lt;T&gt;(this DependencyObject obj)
            where T : DependencyObject
        {
            return obj.Children().OfType&lt;T&gt;();
        }

        /// &lt;summary&gt;
        /// 指定した型の子孫要素を取得
        /// &lt;/summary&gt;
        /// &lt;typeparam name="T"&gt;&lt;/typeparam&gt;
        /// &lt;param name="obj"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static IEnumerable&lt;T&gt; Descendants&lt;T&gt;(this DependencyObject obj)
            where T : DependencyObject
        {
            return obj.Descendants().OfType&lt;T&gt;();
        }
    }

