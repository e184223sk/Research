
        public IServiceProvider ConfigureServices(IServiceCollection services)
        {
～
～
            var containerBuilder = new ContainerBuilder();
            containerBuilder.Populate(services);

            IContainer container = EventFlowOptions.New
                    .UseAutofacContainerBuilder(containerBuilder) // Must be the first line!
                    .AddAspNetCore((AspNetCoreEventFlowOptions op) =&gt;
                        op.UseLogging()
                        .UseDefaults()
                        //.UseMvcJsonOptions()
                        //.AddDefaultMetadataProviders()
                        //.AddRequestHeadersMetadata()
                        //.AddUriMetadata()
                        //.AddUserHostAddressMetadata()
                        //.RunBootstrapperOnHostStartup()
                    )
                    .AddEvents(new[] {
                        typeof(利用者を登録した),
                        typeof(本を登録した),
                        typeof(本を借りた),
                        typeof(本を返した),
                        typeof(本を破棄した),
                    })
                    .AddCommands(new[] {
                        typeof(利用者を登録するCommand),
                        typeof(本を登録するCommand),
                        typeof(本を借りるCommand),
                        typeof(本を返すCommand),
                        typeof(本を破棄するCommand),
                    })
                    .AddCommandHandlers(new[] {
                        typeof(利用者を登録するCommandHandler),
                        typeof(本を登録するCommandHandler),
                        typeof(本を借りるCommandHandler),
                        typeof(本を返すCommandHandler),
                        typeof(本を破棄するCommandHandler),
                    })
                    .AddQueryHandlers(new[] {
                        typeof(本DTOQueryHandler),
                    })
                    .UseInMemoryReadStoreFor&lt;利用者ReadModel&gt;()
                    .UseInMemoryReadStoreFor&lt;本ReadModel&gt;()
                    .UseFilesEventStore(FilesEventStoreConfiguration.Create(@".\store"))
                    .Configure((EventFlowConfiguration c) =&gt;
                    {
                        c.IsAsynchronousSubscribersEnabled = true;
                    })
                    .ConfigureJson(json =&gt; json
                        .AddSingleValueObjects()
                        //.AddConverter&lt;SingleValueObjectConverter&gt;()
                        //.Configure((JsonSerializerSettings s) =&gt; { })
                    )
                    .CreateContainer();

            return new AutofacServiceProvider(container);
        }

