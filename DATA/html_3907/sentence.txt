More than 1 year has passed since last update.Revitの簡単なカスタマイズ（外部アプリケーションを作成）をしてみようと思います。今回は下記環境にて実施しました。Visual Studio 2015
Revit 2018 無償体験版では、早速はじめます。まずはVisual Studioを起動して、新規プロジェクトを作成します。テンプレートのツリービューからVisual C#を選択し、さらにクラスライブラリを選択します。今回作成するプロジェクトの名前は「HelloWorld」にします。プロジェクトを作成したら次は参照の設定を行います。ビルドするときに参照する先のことですね。まず、RevitAPIとRevitAPIUIを追加します。あとPresentationCoreとWindowsBase、System.Xamlも追加します。参照の設定が終わったら、次はコーディングします。プロジェクト作成時にデフォルトでClass1.csというクラスファイルが出来ていると思います。Class1だと何の処理なのかわかりづらいのでクラス名をCsHelloWorldに変更します。そして、CsHelloWorld.csを開き、下記コードを記述します。コーディングが終わったらビルドします。ちなみにアクティブ　ソリューション　プラットフォームが「Any CPU」のままですと、ビルド時に「warning MSB3270: 構築されているプロジェクトのプロセッサ アーキテクチャ "MSIL" と、参照 "RevitAPI" のプロセッサ アーキテクチャ "AMD64" の間には不一致がありました。この不一致は、ランタイム エラーを発生させる可能性があります。プロジェクトと参照の間でプロセッサ アーキテクチャが一致するように、構成マネージャーを使用してターゲットとするプロジェクトのプロセッサ アーキテクチャを変更するか、ターゲットとするプロジェクトのプロセッサ アーキテクチャに一致するプロジェクト アーキテクチャとの依存関係を参照で設定することを検討してください。」という警告文が出てきます。警告を出ないようにプラットフォームを「x64」に変更してからビルドして下さい。ビルドに成功し、HelloWorld.dllが作成されたら、次はアドインマニフェストを作成します。これがないとRevitから作成したアプリケーションを起動できません。Visual Studioを使って、XMLファイルを追加します。ただし、ファイル名を～.addinにします。作成したaddinファイルを開き、下記コードを記述します。Assemblyにはビルドして作成された.dllのファイルパスを記述します。AddInIdは適宜変更してください。同じIDをもったアプリケーションが複数あると起動しません。Visual Studioのメニュー＞ツール＞GUIDの作成から新規作成ができます。VendorIdに自社の情報を記述してください。エラー発生時のダイアログに表示されます。上記で作成したaddinファイルをRevitのインストールフォルダ配下のAddins\2018フォルダに配置します。C:\ProgramData\Autodesk\Revit\Addins\2018アプリケーションの準備が整ったら、Revitを起動して任意のプロジェクトを開きます。アドインタブを開くと今回追加したHello Woldが表示されます。アドイン＞HelloWorldを選択して実行すると上記アプリが起動します。


