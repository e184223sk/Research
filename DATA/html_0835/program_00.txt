
Shader "Custom/Posterize" {

    Properties
    {
        _MainTex ("Texture", 2D) = "white" {}
        _Posterize("階調",int) = 256
    }

    SubShader
    {
        Cull Off ZWrite Off ZTest Always

        Pass
        {
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag

            #include "UnityCG.cginc"

            struct appdata
            {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD0;
            };

            struct v2f
            {
                float2 uv : TEXCOORD0;
                float4 vertex : SV_POSITION;
            };

            v2f vert (appdata v)
            {
                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);
                o.uv = v.uv;
                return o;
            }

            inline float3 transferColor(in float3 srcCol) {
                // test srcCol if the two of r,g,b are 0.
                float r = (int(srcCol.r*64))/64.0;
                float g = (int(srcCol.g*64))/64.0;
                float b = (int(srcCol.b*64))/64.0;


                fixed3 rgb = fixed3(r,g,b);

                return float3(rgb);
            }

            sampler2D _MainTex;

            float3 frag (v2f i) : SV_Target
            {
                float3 color = tex2D(_MainTex, i.uv).rgb;
                color = transferColor(color);
                return color;
            }
            ENDCG
        }
    }
}

