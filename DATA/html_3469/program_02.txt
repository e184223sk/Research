
public class ColoredDataGrid : DataGrid
{
    protected override void OnItemsSourceChanged(IEnumerable oldValue, IEnumerable newValue)
    {
        base.OnItemsSourceChanged(oldValue, newValue);

        if (!(newValue is IEnumerable&lt;ColoredObjectRow&gt; newItems)) return;

        var col = newItems.First().ItemsSource.Count;
        this.Columns.Clear();
        for (int c = 0; c &lt; col; c++)
        {
            var bindingTarget = $"{nameof(ColoredObjectRow.ItemsSource)}[{c}].";

            var style = new Style(typeof(TextBlock));

            style.Setters.Add(new Setter(TextBlock.BackgroundProperty,
                new Binding($"{bindingTarget}{nameof(ColoredObject.Background)}") { Mode = BindingMode.OneTime }));

            style.Setters.Add(new Setter(TextBlock.ForegroundProperty,
                new Binding($"{bindingTarget}{nameof(ColoredObject.Foreground)}") { Mode = BindingMode.OneTime }));

            this.Columns.Add(new DataGridTextColumn()
            {
                Binding = new Binding($"{bindingTarget}{nameof(ColoredObject.Object)}") { Mode = BindingMode.OneTime },
                ElementStyle = style,
            });
        }
    }
}

