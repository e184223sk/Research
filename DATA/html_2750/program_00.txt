public class Timer : MonoBehaviour
{
    [SerializeField] private int count = 100;
    [SerializeField] private float interval = 1.0f;

    private Subject&lt;int&gt; timer = new Subject&lt;int&gt;();
    public IObservable&lt;int&gt; OnTimeChanged
    {
        get { return timer; }
    }

    void Start()
    {
        StartCoroutine(TimerCoroutine());
    }

    IEnumerator TimerCoroutine()
    {
        var c = count;
        while (c &gt; 0)
        {
            timer.OnNext(c);
            yield return new WaitForSeconds(interval);
            c--;
        }
        timer.OnCompleted();
        Destroy(this);
    }
}

