
        public static Mock&lt;ILogger&lt;T&gt;&gt; VerifyLogging&lt;T&gt;(this Mock&lt;ILogger&lt;T&gt;&gt; logger, string expectedMessage = null, LogLevel expectedLogLevel = LogLevel.Debug, Times? times = null)
        {
            times ??= Times.Once();

            Func&lt;object, Type, bool&gt; state = (v, t) =&gt; v.ToString().CompareTo(expectedMessage) == 0;

            logger.Verify(
                x =&gt; x.Log(
                    It.Is&lt;LogLevel&gt;(l =&gt; l == expectedLogLevel),
                    It.IsAny&lt;EventId&gt;(),
                    It.Is&lt;It.IsAnyType&gt;((v, t) =&gt; expectedMessage == null ? true : state(v, t)),
                    It.IsAny&lt;Exception&gt;(),
                    It.Is&lt;Func&lt;It.IsAnyType, Exception, string&gt;&gt;((v, t) =&gt; true)), (Times)times);

            return logger;
        }

