More than 3 years have passed since last update.「僕Unityできますよ」Tシャツのコードレビューでも触れられていましたが、
「GetComponentは遅いからUpdate内で使うなんてトンデモナイ！」
というのが定説です。いや、定説というか事実なんですが。それでもこうやってネタになるという事は、キャッシュ用のメンバ変数一つ作るのも億劫でいくら言ってもGetComponentをUpdateとか毎フレーム通るような場所に書いちゃうGetComponentおじさんが居るのかもしれない！！！？（幸い僕の観測範囲には居ません）そんなGetComponentおじさんのソースコードに、こんなのをこっそり張り付けるのはどうだろう！？以下「貼るだけで速くなる」コードこれは、親クラスのGetComponentをnew付きでオーバーライドしているので、GetComponentおじさんが意識しなくてもこっちの処理に誘導され、勝手にDictionaryで管理されるって寸法ですよ！ふふふ、GetComponentおじさんは今まで通り書けるし、キャッシュされるから若干速くなると思うし、WinWinだ！（GetComponentおじさんの質は上がりません）そう思っていた時期が僕にもありました。まぁ、ネタで書いたコードだったので特に実測もしてなかったんですが、そんな折テラシュールブログさんで
【Unity】独自に作成したスレッドの処理時間をCPU Profiler(Timeline)で確認する - テラシュールブログ こんな記事が。まぁ、この記事はスレッド処理を自前で書いた場合のProfilerでの計測の話が主ではありますが、程度の低い僕はその前の「Profiler.CustomSampler」なるものの方にひっかかりました。「ほう・・・。　結構簡単にProfilerに表示できるんだな・・・。」というわけで、件（くだん）の「貼るだけで速くなるコード」の効果を計測してみようじゃないか！　そう思ったんです。　・・・思ってしまったんです。以下計測コードよろしくお願いしまーーーす！！！（ポチ）・・・ん？・・・・。　
負けとる。負けとるがな！！！　GetComponentおじさんに負けとるがな！！！！ げぇぇーー。まてまてまて。これはあれだ。　オーバーライドしたGetComponentの中でif文入ってるのがいけない。 if文は遅いってばっちゃも言ってた。～～2018年5月7日追記～～
@neuecc 様からのご指摘通り、ボトルネックはif文ではなく、ContainsKeyによる存在チェックと、indexerによる値取得により2重でDictionaryを走査している事でした。
TryGetValueを使用する事で、ContainsKeyをせずにDictionaryからkeyの存在チェックとvalueの取得が同時にできるので大分高速化出来ました（ただ、それでもGetComponentおじさんには勝てませんでした）
～～追記終了～～よし、仕様を一部変更する！！Dictionaryのキャッシュに登録するためのメソッドを別で用意して、オーバーライドしたGetComponentはDictionaryに登録されている前提でノーチェックで返却だ！！！もちろん、いきなりGetComponentしたらKeyNotFoundException出ちゃうのでAwakeやStartでAddCacheを先に呼んでもらう事にする！！（・・・。もうこの時点で「貼るだけで速くなる」じゃないんだよなぁ。）今度こそ！よろしくお願いします！！(ポチ)だーーめだ。　勝てね。Dictionary遅っせぇ！！！
はい、かいさーーん！！！ほらほら仕事戻るよーーー。「論より証拠なのでちゃんと計測しようね」に尽きる一件でした。しかし・・・。
GetComponentが普通の使い方(tarnsformに直接)やCache(メンバ変数で先に確保)に比べてそんなに遅くないんですが・・・？ここらへん、Unityのバージョンで上下したりするんですかね。僕は精魂尽き果てたのでそこまでは調べておりません。
現場からは以上です。Transformだけじゃなくて、SpriteRendererとかでもやってみようと思って、適当になんてコード書いてProfiler見たら、ガベコレが走りまくってました。Vector3.left は内部的にはしっかり定数化されてるんだけれど、Color.から続く色定数っぽい奴は中身はこんな感じで毎回Color構造体がnewされてるんですよ！　そりゃガベコレも走るわ！！～～2018年5月7日追記～～
こちらも @neuecc 様のご指摘通り、（自分でも書いてますが)Colorは構造体なので、基本的にはGCの対象にならないためProfilerで出ていたGCはColor構造体とは無関係でした。大変申し訳ございません。
（というか、今改めてやってみたらGCなんて走ってないっぽいんですよね・・・。僕は何を見たんでしょうか。きっと頭がおかしかったんだと思います。）
～～追記終了～～では、また。


