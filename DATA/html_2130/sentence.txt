Windowsで他アプリと何かしらやりとりしたいときは、大抵ウィンドウハンドルが必要になる。
いちいち調べなおすのは面倒なので、使ったことのあるAPIとかメソッドをまとめてみた。C# では、ウィンドウハンドルの型はIntPtrとなる。
IntPtrのサイズは32bit/64bit環境に依存する1ので、型をint(32bit)とかと間違えないようにすること。APIについては、とりあえず[DllImport("user32.dll", CharSet = CharSet.Auto)]つけておけば動くはず。（テキトウ・・）★・・・ 子のウィンドウハンドルはWin32APIでは取得できないケースがあるようなので注意。※抜粋しているので、そのままでは動きません。使用例の記事を参照ください。
※この記事でのDllImportの属性指定や、メソッド宣言のパラメータ指定は、あくまで例であり、これを推奨するものではありません。FindWindowExのほうが使いやすいかもFindWindowExのほうが使いやすいかも★子のウィンドウハンドルはWin32APIでは取得できないケースがあるようなので注意。本質と関係ないとこで解放処理が漏れてます。そのうち見直します。（というか例を変えたい・・）メモリの解放は完璧にしようとすると奥が深そう（参考サイト参照）であるが、趣味の範疇ならMarshal.AllocCoTaskMem, Marshal.FreeCoTaskMemと確保;try{処理;}finally{解放;}で十分かと。正確にはコンパイル時のオプション指定による。 ↩


