
public class AD
{
    :
    /// &lt;summary&gt;
    /// 入力変数と対応する偏微分値を追加する
    /// &lt;/summary&gt;
    private void AddInput(int index, AD input, double diff)
    {
        this.Inputs[index] = input;
        this.Differentials[index] = diff;
    }
    /// &lt;summary&gt;
　  /// +演算子のオーバーロード
　  /// &lt;/summary&gt;
    public static AD operator +(AD x, AD y)
    {
        var z = new AD(x.Output + y.Output, 2);
        z.AddInput(0, x, 1);
        z.AddInput(1, y, 1);
        return z;
    }
    /// &lt;summary&gt;
    /// *演算子のオーバーロード
    /// &lt;/summary&gt;
    public static AD operator *(AD x, AD y)
    {
        var z = new AD(x.Output * y.Output, 2);
        z.AddInput(0, x, y.Output);
        z.AddInput(1, y, x.Output);
        return z;
    }

    /// &lt;summary&gt;
    /// Exp関数
    /// &lt;/summary&gt;
    public static AD Exp(AD x)
    {
        var z = new AD(Math.Exp(x.Output), 1);
        z.AddInput(0, x, z.Output);
        return z;
    }

    // 他の関数はいったん略
}

