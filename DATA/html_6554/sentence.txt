More than 3 years have passed since last update.Prismを用いたMVVMの簡単なサンプルページが少なかったので勉強も兼ねて書いてみる。MVVMとは、大規模なプログラムになってくるとコードビハインドにコードを書いてると魑魅魍魎と化してしまい、保守性が損なわれてしまうのでView+Model+ViewModelの三役でプログラムを制御できたらいいなってことで開発された技術である。多分WebフレームワークのMVCみたいなものである。.NET標準機能だけでMVVMを実装すると大変なのでLivetとかPrismみたいなMVVMフレームワークを用いるのが普通らしい。今回は足し算するだけのWPFアプリケーションを作ってみよう。NuGet経由でここにはViewModel,Viewに書かれるべきでない処理を書いてやる。プログラムの大まかなロジックとかはここに書いてやれば良い。特筆することはない。View,ViewModel間の状態変化を通知するのにINotifyPropertyChangedなるものを実装しないといけないのだが、.NET標準機能のみで実装すると面倒なのである。そこでPrismの出番である。BindableBaseというのが標準実装されていてこいつを使えば以下のように実装できる。コード中で実装されているDelegateCommandというやつはViewのボタンとデータバインディングしてやり処理を行う時に用いる。普通のMVVMならICommandとか実装してやらないとダメらしいけどここもPrismが頑張ってくれている。ツールボックスからTextBoxを3つ、ボタンを1つ並べてやり、TextBoxをそれぞれViewModelsのX,Y,Ansとデータバインディング、ButtonをcalcCommandとバインディングしてやる。コードビハインドにはInitializeComponent()の下にthis.DataContext = new ViewModels()とだけ書いてやれば良い。コードビハインドの行数の少なさ、これがMVVMの醍醐味と言えよう。(多分)


