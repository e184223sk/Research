More than 3 years have passed since last update.C# + WPF(Windows Presentation Foundation) の開発に関わる便利ツール、情報のまとめWPFでデスクトップアプリケーションを作成する目的として、関連するC#知識とライブラリの情報をまとめた記事になります。本記事の内容はUWP/Xamarin/Unity環境では異なる点が多いため注意してください。マルチプラットフォーム対応が視野にある場合はWPFではそのままの移植が難しいため、UWP/Xamarin/Unity環境で実現が可能かの検討をすることをおすすめします。(.NET Core環境では現状動作しませんし今後対応される予定もなさそうなため)C# によるプログラミング入門 | ++C++; // 未確認飛行 CC#7も含めて網羅されているため、ネット上の情報なら上のサイトが詳しかったです。LINQの拡張メソッド一覧と、ほぼ全部のサンプルを作ってみました。 - 地平線に行く
Modern C# 入門の備忘録 - Linq入門編 - Qiita
[C#][LINQ] nullを除外する - QiitaException クラス (System)
頻繁に使用する例外の一覧 - プログラマーな日々MVVMフレームワークでViewModelを実装する場合は責務的に微妙ですが、Converterという機能もあります。Google の Material Design を利用するためのツールキットと、同作者のドラッグ可能コントロールライブラリ。マイクロソフトの Modern UI を利用するためのツールキット。
MetroWindowが使いやすいため、部分的に上記のマテリアルデザインと組み合わせて利用されることもあるようです。ディレクトリ選択用ダイアログなどを拡張する。WPFのデータバインディングは便利ですが、速度が要求される部分になるとチューニングが必要になります。
特にItemControlなどで大量にオブジェクトを再描画したりなどで劇的に遅くなったりします。
WPFではUIの仮想化が一部の標準のコントロール(WrapPanel,Canvas等)だとできないので注意が必要です。ViewModelLocaterとMessanger機能が使いたい人向けMVVMフレームワーク。
今だとReactivePropertyと組み合わせて使うのをおすすめします。使用感としては小規模なC#プロダクトでは十分かとは思いますが、ある程度大きくなるとViewModelLocaterが肥大化してきて困るかもしれません。その場合はPrismの方に乗り換えたほうが良いかもです。日本語ドキュメントはあんまり無いですが、機能も最低限なのであまり困らないかとは思います。マイクロソフトの中の人が作ってるMVVMフレームワーク。PrismLibrary/Prism: Prism is a framework for building loosely coupled, maintainable, and testable XAML applications in WPF, Windows 10 UWP, and Xamarin Forms.todo: 調査中
reactiveui/ReactiveUIReactiveX
Reactive-Extensions/Rx.NET: The Reactive Extensions for .NETReactive Extensionsのはじめかた - かずきのBlog@hatena
今更ですがRx再入門の記事をPDF化したやつをSlideShareに入れました - かずきのBlog@hatenaWPFのViewModelを記述する際にReactivePropertyはとても便利なので使える環境ならぜひ使いましょう。C#でテンプレートからテキスト生成が可能な機能。文法としてはJavaのJSPに似ている？
VisualStudioと標準で統合されており、ビルド前に任意のC#のコードを生成したりとメタプログラミング的な利用も可能。コード生成と T4 テキスト テンプレートVisual Studio搭載のT4テンプレートエンジンの3通りの活用方法 - seraphyの日記
Visual Studio × T4 × 属性で Entity コード大量生成 - Qiita
[C#][Visual Studio] T4テキストテンプレート 内でJSON.NET(3rd Party製ライブラリ)を利用する - QiitaNLogneuecc/ChainingAssertion: Method Chaining base UnitTesting Extension Methods and Dynamic Private Accessor for MSTest, NUnit, xUnit.net.テスト時にいろいろと便利な拡張メソッドを定義してくれるパッケージ。neue cc - テストを簡単にするほんの少しの拡張メソッド
neue cc - Chaining Assertion for MSTestParameterized Test, TestCaseSource使用時には public TestContext TestContext { get; set; } の定義が必須になります。
（こちらを定義しないとTextContext.Run()が存在しないというエラーで散々悩む羽目に・・・）
https://github.com/neuecc/ChainingAssertion#parameterized-test-for-mstestJUnit実践入門 MSTest用パッチ #TddAdventJp - 亀岡的プログラマ日記OpenCover/opencover: A code coverage tool for .NET 2 and above (WINDOWS OS only), support for 32 and 64 processes with both branch and sequence points
NuGet Gallery | OpenCover - an open source code coverage tool for .NET 4.6.519
※注意：Nugetでリリースされているものはv4.6.519 時点ではVS2017(C#7.0)に未対応。対応版を現在開発中の様子AppVeyorとCodecovを使ってC#のコードカバレッジを計測する - YoshinoriN's Mementoこちらは有料のプラグインになりますが、EnterpriseのVisual Studioを買うよりは安いので検討してもいいかもしれないです。
dotCover: A Code Coverage Tool for .NET by JetBrainsWindowsの.NET環境のビルドができるCIサービス。VS2017にもすでに対応済みです。
publicなオープンソースプロジェクトなら無料で使用できます。Continuous Integration and Deployment service for Windows developers | AppVeyorTODO: 使用方法をまとめるか、いい記事があればリンクする。こちらは有料のプラグインになりますが、WPF(XAML) の編集も含めてだいぶIDEが賢くなるためおすすめです。
企業向けライセンスと、個人向けライセンスの２つがあります。個人向けライセンスでは US$129/year 程度です。
(その他のIDEも一緒に含んだ All Products Pack で買ったほうがお買い得かもしれないです。)
ReSharper for Visual Studio: JetBrains Toolbox subscription


