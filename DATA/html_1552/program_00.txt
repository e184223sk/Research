public interface IHoge&lt;T&gt;
{
    T Func(T value);
}

public class Hoge&lt;T&gt; : IHoge&lt;T&gt;
{
    public static readonly IHoge&lt;T&gt; P = Hoge.P as IHoge&lt;T&gt; ?? new Hoge&lt;T&gt;();

    public T Func(T value)
    {
        throw new NotSupportedException();
    }
}

public class Hoge : IHoge&lt;int&gt;, IHoge&lt;double&gt;
{
    public static readonly Hoge P = new Hoge();

    public int Func(int value)
    {
        return value;
    }
    public double Func(double value)
    {
        return value;
    }
}

