More than 1 year has passed since last update.Strategyパターンは一連の戦略を定義してそれぞれをカプセル化し、それらを交換可能にします。Strategyパターンによって、戦略を使用するクライアントとは独立して、戦略を変更可能になります。Strategyパターンのアイディアは、Context(文脈)が「委譲」によってアルゴリズム(ConcreateStrategy (具体戦略))を交換できるようにすることです。
委譲とは、ある機能をもつオブジェクトを生成してオブジェクトに処理を依頼することです。(Strategyパターン構成図では、Contextクラスのstrategyメンバ変数が相当します)アヒルの種別ごとに、アヒルの鳴き方(振舞い)を動的に変更します。例えば、無口なアメリカホシハジロがいた場合は、クラス内のコンストラクタで生成するインスタンスのクラスをQuackクラスからMuteQuackクラスに置き換えるだけで可能です。[無口になるアメリカホシハジロ]なお、ポリモーフィズムを利用すべく作った基底クラスのデストラクタはvirtualが必要です。
virtualをつけないと、派生クラスのデストラクタが呼ばれずメモリリークが起きます。[Duck.hpp][Main.cpp]


