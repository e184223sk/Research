
static List&lt;T&gt; GenerateList&lt;T&gt;(int capacity, T @value)
{
    var ary = new T[capacity];

    // ここで各要素を初期化.
    //    ※ C/C++ のネイティブ関数をコールすれば高速化できそう...
    for (int i = 0; i &lt; capacity; i++)
        ary[i] = value;

    var ls = new List&lt;T&gt;();
    var type = ls.GetType();

    // _size フィールドを取得
    var size = type.GetField("_size", BindingFlags.Public | BindingFlags.Instance | BindingFlags.NonPublic);
    // _items フィールドを取得
    var items = type.GetField("_items", BindingFlags.Public | BindingFlags.Instance | BindingFlags.NonPublic);

    // _size フィールドに capacity を書き込む
    size.SetValue(ls, capacity);
    // _items フィールドに ary を書き込む
    items.SetValue(ls, ary);

    return ls;
}

