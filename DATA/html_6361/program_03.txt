
private ReactiveProperty&lt;TProp&gt; CreateReactiveProperty&lt;TObj, TProp&gt;(TObj obj, Expression&lt;Func&lt;TObj, TProp&gt;&gt; exp) 
    where TObj : INotifyPropertyChanged
{
    var latest = default(TProp);
    var rp = obj.ObserveProperty(exp).Do(v =&gt; latest = v).ToReactiveProperty().AddTo(this._disposable);
    rp.Where(v =&gt; !object.Equals(v, latest)).Subscribe(v =&gt;
    {
        UndoStack.Instance.Push(UndoCommand.CreateCommand(obj, exp, v));
        this._subjects.OnNext(true);
    }).AddTo(this._disposable);
    return rp;
}

