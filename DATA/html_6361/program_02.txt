
public class UndoStack
{
    private readonly Stack&lt;UndoCommand&gt; _undoStack = new Stack&lt;UndoCommand&gt;();
    private readonly Stack&lt;UndoCommand&gt; _redoStack = new Stack&lt;UndoCommand&gt;();

    public static UndoStack Instance { get; } = new UndoStack();

    public void Push(UndoCommand command)
    {
        this._redoStack.Clear();
        this._undoStack.Push(command);
        command.RedoAction();
    }

    public bool CanUndo() =&gt; this._undoStack.Any();
    public bool CanRedo() =&gt; this._redoStack.Any();

    public void Undo()
    {
        if (!this.CanUndo()) return;
        var command = this._undoStack.Pop();
        command.UndoAction();
        this._redoStack.Push(command);
    }

    public void Redo()
    {
        if (!this.CanRedo()) return;
        var command = this._redoStack.Pop();
        command.RedoAction();
        this._undoStack.Push(command);
    }
}

