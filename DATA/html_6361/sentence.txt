More than 3 years have passed since last update.ReactiveProperty（とRx）を利用して、Undo可能なアプリケーションを作成してみました。ソースコードは↓こちら
https://github.com/dyoneda/UndoProjectRedo/Undoを実現するために、Redo処理/Undo処理を保持するActionをPropertyとするクラスを用意します。使い方はこんな感じでも、これだけは処理が煩雑になるため、UndoCommandクラスを管理するためのクラスも用意します。Redo/UndoはFILOであるためStackクラスを利用するといい感じです。VM/M間の同期の間に先ほどのRedo/Undoの仕組みを組み込んでしまえばほぼほぼできたようなものです。
ReactivePropertyでVM/Mの同期といえば、ToReactivePropertyAsSynchronizedメソッドなのですが、ここでは挙動を柔軟にカスタマイズするためにToReactiveProperty/Subscribeの組み合わせで対応したいと思います。
（参考）https://code.msdn.microsoft.com/windowsdesktop/ReactiveProperty-085c3090上記のような便利メソッドをひとつ定義しておけば、下記のように使いまわせます。あとは、別件ですがToReactivePropertyやSubscribeは、神経質にDisposeするぐらいでちょうどいいと思います。
Rxが提供するCompositeDisposableが便利なのでぜひ利用しましょう。今回はReactiveProeprtyのみNuGetから取得した形＆Qiita用やっつけサンプルなのでべた書きな部分が多いですが、その他MVVM系ライブラリを利用するとスマートに書ける部分が多いので、検討してみてくだい。
例えば、
・INotifyPropertyChanged
・Propertyの動的取得
・WindowClose時にVMをDispose
・Undo/RedoボタンのEnableのIObservable化
あたりですね。


