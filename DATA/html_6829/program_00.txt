public class GenericEqualityComparer&lt;T&gt; : IEqualityComparer&lt;T&gt;
{
    private Func&lt;T, T, bool&gt; _predicate;
    private Func&lt;T, int&gt; _gethash;

    public GenericEqualityComparer(Func&lt;T, T, bool&gt; predicate)
        : this(predicate, obj =&gt; obj.GetHashCode())
    {
    }
    public GenericEqualityComparer(Func&lt;T, T, bool&gt; predicate, Func&lt;T, int&gt; gethash)
    {
        _predicate = predicate;
        _gethash = gethash;
    }

    public bool Equals(T x, T y)
    {
        return _predicate(x, y);
    }
    public int GetHashCode(T obj)
    {
        return _gethash(obj);
    }
}

