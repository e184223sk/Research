
// ベースクラスのdispose簡易実装2.
// Dispose() を virtual 宣言する
public class MyBaseClass : IDisposable
{
    // managed resource this class uses.
    private Stream _stream;
    // Track whether Dispose has been called.
    private bool _disposed = false;

    virtual public void Dispose()
    {
        Console.WriteLine("Base.Dispose");
        if (!_disposed)
        {
            // TODO: Dispose managed resources here.
            _stream?.Dispose();
            // Note disposing has been done.
            _disposed = true;
        }
    }
}

// サブクラスのdispose簡易実装２.
// Dispose() を override 宣言する
public class MySubClass : MyBaseClass
{
    // managed resource this class uses.
    private Stream _stream2;
    // Track whether Dispose has been called.
    private bool _disposed = false;

    override public void Dispose()
    {
        Console.WriteLine("Sub.Dispose");
        if (!_disposed)
        {
            // TODO: Dispose managed resources here.
            _stream2?.Dispose();
            _disposed = true;

            // Call the base class implementation.
            base.Dispose();
        }
    }
}

