
class MyReader : IDisposable
{
    public Stream BaseStream { get; private set; } = Stream.Null;
    public bool IsDisposed { get; private set; } = false;
    public bool IsLeaveOpen { get; private set; } = false;

    public MyReader(Stream stream, bool leaveOpen = false)
    {
       BaseStream = stream ?? throw new ArgumentNullException(nameof(stream));
       IsLeaveOpen = leaveOpen;
    }

    protected virtual void Dispose(bool disposing)
    {
        if (IsDisposed) return;
        if (disposing)
        {
            if (!IsLeaveOpen)
            {
                BaseStream.Dispose();
            }
        }
        IsDisposed = true;
    }

    public void Dispose()
    {
        Dispose(true);
    }  
}

