
//  IDisposableを実装するベースクラスのdisposeパターン
public class MyBaseClass : IDisposable
{
    // Pointer to an external unmanaged resource.
    private IntPtr _handle;
    // Other managed resource this class uses.
    private Stream _stream;
    // Track whether Dispose has been called.
    private bool _disposed = false;

    public void Dispose()
    {
        Dispose(true);
        GC.SuppressFinalize(this);
    }

    protected virtual void Dispose(bool disposing)
    {
        if (!_disposed)
        {
            if (disposing)
            {
                // TODO: Dispose managed resources here.
                _stream.Dispose();
            }

            // TODO: Free unmanaged resources here.
            MyCloseHandle(_handle);
            _handle = IntPtr.Zero;

            // Note disposing has been done.
            _disposed = true;
        }
    }

    ~MyBaseClass()
    {
        Dispose(false);
    }

    protected static void MyCloseHandle(IntPtr handle)
    {
        // dummy
    }
}

// 上記クラスを先祖に持つサブクラスのdisposeパターン.
// public void Dispose() を上書きせず、void Dispose(bool disposing) を上書きする.
public class MySubClass : MyBaseClass
{
    // Pointer to an external unmanaged resource.
    private IntPtr _handle2;
    // Other managed resource this class uses.
    private Stream _stream2;
    // Track whether Dispose has been called.
    private bool _disposed = false;

    protected override void Dispose(bool disposing)
    {
        if (!_disposed)
        {
            if (disposing)
            {
                // TODO: Dispose managed resources here.
                _stream2.Dispose();
            }

            // TODO: Free unmanaged resources here.
            MyCloseHandle(_handle2);
            _handle2 = IntPtr.Zero;

            // Note disposing has been done.
            _disposed = true;

            // Call the base class implementation.
            base.Dispose(disposing);
        }
    }

    // ファイナライザでやるべきことは ~MyBaseClass() で済んでいるので、ファイナライザ ~MySubClass() は不要である.
    //~MySubClass()
    //{
    //    Dispose(false);
    //}
}

