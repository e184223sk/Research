
struct StructAB
{
    public int a, b;
    public StructAB(int a, int b)
    {
        this.a = a;
        this.b = b;
    }
    public override string ToString()
    {
        return string.Format("{0},{1}", a, b);
    }
}
    private enum EnumAlpha
    {
        A,
        B,
    }

    void Start()
    {
        ENumDictionary&lt;EnumAlpha, string&gt; dic0 = new ENumDictionary&lt;EnumAlpha, string&gt;()
        {
            {EnumAlpha.A, "A"},
            {EnumAlpha.B, "B"}
        };

        foreach (var it in dic0)
        {
            Debug.Log(" " + it);
        }

        ENumDictionary&lt;EnumAlpha, StructAB&gt; dic1 = new ENumDictionary&lt;EnumAlpha, StructAB&gt;()
        {
            {EnumAlpha.A, new StructAB(12, 13)},
            {EnumAlpha.B, new StructAB(14, 15)}
        };

        foreach (var it in dic1)
        {
            Debug.Log(" " + it.Value);
        }

        Debug.Log("A : " + dic1[EnumAlpha.A]);
        Debug.Log("B : " + dic1[EnumAlpha.B]);

        dic1[EnumAlpha.A] = new StructAB(21, 22);
        Debug.Log("B : " + dic1[EnumAlpha.A]);
    }


