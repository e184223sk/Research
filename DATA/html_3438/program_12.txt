
// コンパイルエラー。whereなしではジェネリック型に演算子を適用できない。
//static void f&lt;T&gt;(T x, T y) {
//  Console.WriteLine(x == y ? "OK" : "NG");
//}

// where で参照型だけに制限すれば演算子が使えるが、object.== が呼ばれる
static void f&lt;T&gt;(T x, T y) where T: class {
  Console.WriteLine(x == y ? "OK" : "NG");
}

// 明示的に ClassA に制約すれば、そのクラスの == が呼ばれる
static void g&lt;T&gt;(T x, T y) where T: ClassA {
  Console.WriteLine(x == y ? "OK" : "NG");
}

var x = new ClassA(1);
var y = new ClassA(1);

f(x, y);  // NG  &lt;= objectクラスの == を呼ぶようコンパイルされるため

g(x, y);  // OK

