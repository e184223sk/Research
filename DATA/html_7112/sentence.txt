More than 3 years have passed since last update.Unityは通常のスクリプト以外にも、インスペクタを拡張する便利な機能がたくさんあります。
そのうちのひとつに「カスタムエディタ」があります。エディタスクリプト全体についてはこちらにとても貴重な資料があるのでぜひ見てみてください。カスタムエディタの基本的はこんな感じになります。
（ちなみに余談ですが、エディタスクリプトは Editor というディレクトリに保存します（ディレクトリの位置は任意））上記のように CustomEditor Attributeを利用し、 Editor クラスを継承したクラスを作成します。
こうすることによって、 typeof で渡されたクラスがインスペクタに表示される際に、このカスタムエディタクラスが適用され、自由にカスタマイズすることが可能になります。インスペクタのGUIは OnInspectorGUI をオーバーライドすることでカスタマイズできます。
ごく簡単なサンプルは以下のようになります。target プロパティが定義されており、そのプロパティに、 typeof で指定したクラスの参照が渡されます。
これを適切にキャストした上で、該当クラスのインスタンス変数から適宜、GUIに反映させていく、というのがおおまかな流れになります。主に、インスペクタにGUIを表示するために利用するクラスです。
インスペクタを拡張する場合は必ず学習する必要があるクラスです。UnityのUIを作るときに使用する GUI クラスのエディタ版、と考えると分かりやすいと思います。ドキュメントによるとEditorGUIの自動レイアウトバージョンとのこと。インスペクタのGUIを作る上で、よく使いそう or あとで思い出したくなりそうなものをざっくりメモ。
↑こんな感じの。上のと組み合わせるとこんな感じ。
以上のような感じにすると using を利用した範囲において列挙したGUI要素が横方向にレイアウトされるようになります。上のサンプルに適用するとこんな感じ。
ありそうなケースとして、選択された enum の値に応じて、設定可能なプロパティを変更したい、ということがあると思います。
そんなときに使える設定方法（のメモ）。EditorGUIUtility
1行の高さ、とか現在のビューのサイズ、とかの「それ知りたい」っていうのを提供してくれるクラス。EditorGUI.indentLevel
EditorGUIのインデントのレベル。
整数なので EditorGUI.indentLevel++; とかすると、その次のレイアウトからインデントがひとつ増え、逆に -- するとインデントレベルがひとつ下がる、という感じで手軽に使える。


