
using NUnit.Framework;
using Example;
using System;
using System.Collections.Generic;

public class DataFileTest {

    [Serializable]
    public class TestObject
    {
        public int Id;
        public string Name;
        public float Rate;

        public List&lt;TestChild&gt; ChildList;
    }

    [Serializable]
    public class TestChild
    {
        public int ChildId;
    }


    [Test]
    public void EditorTest() {

        var child1 = new TestChild();
        child1.ChildId = 10;
        var child2 = new TestChild();
        child2.ChildId = 101;


        var instance = new TestObject();
        instance.Id = 1;
        instance.Name = "テスト";
        instance.Rate = 10.5f;
        instance.ChildList = new List&lt;TestChild&gt;() { child1, child2 };


        var file = new DataFilePlain();
        file.Save(instance, "test");

        TestObject testObject;
        testObject = file.Load&lt;TestObject&gt;("test");

        Assert.AreEqual(testObject.Id, instance.Id);
        Assert.AreEqual(testObject.Name, instance.Name);
        Assert.AreEqual(testObject.Rate, instance.Rate);
        Assert.AreEqual(testObject.ChildList[0].ChildId, instance.ChildList[0].ChildId);
        Assert.AreEqual(testObject.ChildList[1].ChildId, instance.ChildList[1].ChildId);


        var fileEncrypting = new DataFileEncrypting();
        fileEncrypting.Save(instance, "test");

        testObject = fileEncrypting.Load&lt;TestObject&gt;("test");

        Assert.AreEqual(testObject.Id, instance.Id);
        Assert.AreEqual(testObject.Name, instance.Name);
        Assert.AreEqual(testObject.Rate, instance.Rate);
        Assert.AreEqual(testObject.ChildList[0].ChildId, instance.ChildList[0].ChildId);
        Assert.AreEqual(testObject.ChildList[1].ChildId, instance.ChildList[1].ChildId);
    }
}


