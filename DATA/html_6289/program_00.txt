// まずコンテナインスタンスの作成
var container = new Container();

// シングルトンインスタンスの登録
// インターフェイス - 実体の型を登録
container.For&lt;IService1&gt;().As&lt;Service1&gt;(Lifecycle.Singleton);
// インスタンスを登録
container.For&lt;IService2&gt;().As(service2);
// ラムダ式で登録
container.For&lt;IService3&gt;().As(() =&gt; new Service3(), Lifecycle.Singleton);
container.For&lt;IService4&gt;().As((IService3 service3) =&gt; new Service4(service5), Lifecycle.Singleton);

// 都度生成の場合
// インターフェイス - 実体の型を登録
container.For&lt;IService6&gt;().As&lt;Service6&gt;(Lifecycle.Transient);
// ラムダ式で登録
container.For&lt;IService7&gt;().As(() =&gt; new Service7(), Lifecycle.Transient);
container.For&lt;IService8&gt;().As((IService7 service7) =&gt; new Service8(service7), Lifecycle.Transient);

// スレッド単位生成の場合
// インターフェイス - 実体の型を登録
container.For&lt;IService9&gt;().As&lt;Service6&gt;(Lifecycle.ThreadLocal);
// ラムダ式で登録
container.For&lt;IService10&gt;().As(() =&gt; new Service10(), Lifecycle.ThreadLocal);
container.For&lt;IService11&gt;().As((IService10 service10) =&gt; new Service11(service10), Lifecycle.ThreadLocal);

