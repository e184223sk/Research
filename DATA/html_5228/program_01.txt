
    public fugaClass findByKeys(string[] keys) 
    {               
        StringBuilder query = new StringBuilder("SELECT * FROM hogeTable");

        // WHERE句生成
        StringBuilder conditions = new StringBuilder("WHERE key IN (");
        for(int i=0; i &lt; keys.length; i++) 
        {
            conditions.Add(" @Val" + generateAlphabet(i));
            if (i != keys.Length - 1) conditions.Add(",");
        }
        IDbParameters params = CreateDbParameters();
        // 降順でパラメータを追加
        for(int i=keys.length; i &gt;= 0; i--) 
        {
            params.Add("Val" + generateAlphabet(i), DbType.String).Value = key
        }

        HogeCallback callback = new HogeCallBack
        AdoTemplate.QueryWithRowCallback(CommandType.Text, query.ToString(), callback, params);

        return callback.result;
    }

    private string generateAlphabet(int index) {
        string str = "";
        do {
            str = Convert.ToChar(index % 26 + 0x41) + str;
        } while ((index = index / 26 - 1) != -1);

        return str;
    }

