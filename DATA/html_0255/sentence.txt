C# Advent Calendar 2020の17日目の記事です。今年は業務でwindowsアプリを開発したので、今回は備忘録的に今年使ったスキルを書きます。
多分基礎的なことばっかりです。インストーラーを使って開発したwindowsアプリをインストールしてもらう想定だったため、インストール時にインストーラーがレジストリ登録したバージョン情報などをアプリで表示する必要などがありました。インストーラーとは？windowsでレジストリを開く場合は win + R キーを押してregeditと入力する方法が一般的だと思います。次はc#でHKEY_USERSのサブキーの一覧(.DEFAULT, S-1-5-XX)を取得します。
using Microsoft.Win32を追加することに注意です。Registry.Users でHKEY_USERSを読み込んで、GetSubKeyNames()でサブキーの一覧(string型の配列)を取得しています。次はキーに書かれている値を取得してみましょう。
HKEY_CURRENT_USER のサブキー Software\Microsoft\Edge\BLBeacon の version の値をc#で読み込みます。
先ほどと違うのはRegistry.CurrentUserでHKEY_CURRENT_USERを指定して、OpenSubKey()でSoftware\Microsoft\Edge\BLBeacon のサブキーを開きます。GetValue()の引数に取得したい名前を渡します。今回はREG_SZの値が欲しいので、stringでcastします。最後にサブキーを作る例です。
32bit/64bitアプリでサブキーを作成する場所が変わったりするので注意が必要です。レジストリへのサブキー・値の作成(Create)には管理者権限が必要なので、上記のコードを管理者権限以外で実行するとCreateSubKeyで例外が発生することになります。管理者権限で実行した場合 HKEY_LOCAL_MACHINE\SOFTWARE\testが作成されます。
レジストリへの書き込みを行うアプリを作る場合は、管理者権限が必要になることを注意しましょう。レジストリへの読み込み、書き込み設定画面でパラメータを反映できるアプリでは、起動するたびに初期値を表示するのではなく、前回アプリ終了時の設定をそのまま表示させたいと思います。
そのような場合に、どのように設定値を保存するかでJSON（JavaScript Object Notation）形式でデータを保持しておいて、アプリ終了時にファイルへ書き込みし、アプリ起動時にファイルを読み込むという手法がよくとられます。(少なくとも私の会社のアプリはjsonにデータもたせてます。)jsonのライブラリはいくつかありますが、Nugetから簡単に使用できるNewtonsoft.Jsonで例を出します。TargetJsonクラスはbool、string、double、List&lt;int&gt;、stringとdoubleのプロパティをもつObSampleクラスの プロパティをもつクラスになります。このようなオブジェクトをjsonに書き込むようにする処理をシリアライズとよぶそうです。変数tにTargetJsonクラスのインスタンスを代入し、Newtonsoft.Json.JsonConvert.SerializeObject()で変数tのオブジェクトをjsonに書き込める形式に変換(string型へ)してあげています。
最後に、File.WriteAllText() でwrite.json という名前のファイルに書き込んでいます。上の画像がwrite.jsonに書き込まれている内容です。
JSONは key : value の組み合わせになり、 valueは各プロパティにセットした値ですが、keyの名前(例えばbool型のhappy)はどこで設定しているのでしょうか。Booleanプロパティに JsonPropertyという属性がついていますね。ここで設定した値がjsonのkeyになります。ファイルなどに書かれたjsonオブジェクトを読み込んで活用したい場合はデシリアライズとよばれる動作が必要になります。個人でつくるHelloWorldやサンプルアプリならバージョンについて深く考えることはないかと思いますが、お客様提供するアプリの場合は障害発生したときの解析や問い合わせ対応のためにバージョンを付与するのは必須かと思います。VisualsStudio2019(devenv.exe)のファイルバージョンバージョニングのルールやどのタイミングでどの番号をいくつ上げるかなどは所属する組織で違うはずですが、
windowsアプリの場合はMicrosoftのドキュメントに倣っているところが多いのではないでしょうか。バージョン情報の更新は、Properties\AssemblyInfo.csの"1.0.0.0"の内容を直接書き換えても反映されます。が、プロジェクト-右クリック、プロパティ-アプリケーション-アセンブリ情報で表示されるGUI上で変更するほうが楽かと思います。ちなみにこのGUIで変更した内容はAssemblyInfo.csに反映されます。visualstudioで作成したアプリはデフォルトのアイコンになります。
アイコンを変更する場合は
プロジェクト-右クリック、プロパティ-アプリケーション-リソース-アイコンとマニフェストで icoファイルを指定します。icoファイルはjpgやpngをコンバートして作成しましょう。
アイコンファイル（*.ico）作成icoファイルを設定後は、プロジェクトにicoファイルが追加されます。
ビルドしてexeを生成・実行すると指定したicoがアイコンとして表示されているはずです。コーディング的なスキルというより、リリースまでの設定に近い部分が多くなりました。
windowsアプリだとUWPによるアプリ開発が主流と思いますが、今回はいわゆるレガシーアプリ開発で、開発のルールなどもUWP開発とは少し違うことになりました。(UWPだとマニフェストの設定やstoreへの登録などが必要ですね。)正直、ドキュメントがチームに充実しているかで変わってきますね。
以上になります。インストールシールド12
業務ではIS12を使ってインストーラーを開発してます。きまま研究所(WOW64で起動した際に64bitレジストリへアクセスする) 


