
using System;
using System.Linq;

namespace LinqTest
{
    class MainClass
    {
        public static void Main(string[] args)
        {
            // Fruit クラスは定義せず、匿名クラスを使用する
            var fruitList1 = new[] {
                new  {Name = "りんご", Price = 300},
                new  {Name = "バナナ", Price = 300},
                new  {Name = "パイナップル", Price = 1000},
                new  {Name = "いちご", Price = 500},
            };

            var fruitList2 = new[] {
                new  {Name = "りんご", Stock = 100},
                new  {Name = "バナナ", Stock = 50},
                new  {Name = "パイナップル", Stock = 40},
            };

            var fruitList3 = new[] {
                new  {Name = "ぶどう", Price = 700},
                new  {Name = "もも", Price = 600},
            };

            // 内部結合
            var joinList = fruitList1.Join(
                fruitList2,
                outer =&gt; outer.Name,
                inner =&gt; inner.Name,
                (outer, inner) =&gt; new {
                    outer.Name,
                    outer.Price,
                    inner.Stock
                });
            Console.WriteLine("=== joinList ===");
            foreach (var x in joinList)
            {
                Console.WriteLine(x);
            }

            // 外部結合
            var groupJoinList = fruitList1.GroupJoin(
                fruitList2,
                outer =&gt; outer.Name,
                inner =&gt; inner.Name,
                (outer, inner) =&gt; new {
                    outer.Name,
                    outer.Price,
                    Stock = inner.Select(x =&gt; x.Stock).Sum()
                });
            Console.WriteLine("=== groupJoinList ===");
            foreach (var x in groupJoinList)
            {
                Console.WriteLine(x);
            }

            // 連結
            var concatList = fruitList1.Concat(fruitList3);
            Console.WriteLine("=== concatList ===");
            foreach (var x in concatList)
            {
                Console.WriteLine(x);
            }
        }
    }
}

