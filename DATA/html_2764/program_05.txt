
public static class Extension
{
    public static PriorityQueue&lt;T&gt; AsPriorityQueue&lt;T&gt;(this IEnumerable&lt;T&gt; source, bool isDescending = true)
    {
        var queue = new PriorityQueue&lt;T&gt;(isDescending);
        foreach (var item in source)
        {
            queue.Enqueue(item);
        }

        return queue;
    }

    public static PriorityQueue&lt;TKey, TSource&gt; AsPriorityQueue&lt;TSource, TKey&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, TKey&gt; keySelector, bool isDescending = true)
    {
        var queue = new PriorityQueue&lt;TKey, TSource&gt;(keySelector, isDescending);
        foreach (var item in source)
        {
            queue.Enqueue(item);
        }

        return queue;
    }
}

