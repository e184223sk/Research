using System.Collections;
using System.Collections.Generic;
using UnityEngine;
// IntPtr型を使用するのに必要
using System;
// Dllの読み込みに必要
using System.Runtime.InteropServices;
public class RunDLL : MonoBehaviour
{
    // Dll内の関数を宣言
    [DllImport("DllForDebug")]
    private extern static IntPtr ReturnIntArray();
    [DllImport("DllForDebug")]
    private extern static IntPtr ReturnFloatArray();
    [DllImport("DllForDebug")]
    private extern static IntPtr ReturnCharArray();

    // Use this for initialization
    void Start()
    {
        int i = 0;
        // 格納したい配列先
        int[] arrInt = new int[5];
        float[] arrFloat = new float[5];
        char[] arrChar = new char[5];
        // 配列の先頭ポインタをIntPtr型の変数にそれぞれ格納する
        IntPtr ptrInt = ReturnIntArray();
        IntPtr ptrFloat = ReturnFloatArray();
        IntPtr ptrChar = ReturnCharArray();
        // コピー
        Marshal.Copy(ptrInt, arrInt, 0, 5);
        Marshal.Copy(ptrFloat, arrFloat, 0, 5);
        Marshal.Copy(ptrChar, arrChar, 0, 5);
        // Log
        for (i = 0;i &lt;=4; i++)
        {
            Debug.Log(arrInt[i]);
            Debug.Log(arrFloat[i]);
            Debug.Log(arrChar[i]);
        }
    }
    // Update is called once per frame
    void Update()
    {
    }
}

