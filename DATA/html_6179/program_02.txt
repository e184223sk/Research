

    class Program
    {
        /// &lt;summary&gt;
        /// &lt;seealso cref="Console.ReadLine"/&gt; の替わりに、固定のテストデータを返す &lt;seealso cref="PaizaUtility.ITestIO"/&gt; 実装
        /// &lt;/summary&gt;
        private class TestData : PaizaUtility.ITestIO
        {
            /// &lt;summary&gt;
            /// テストデータ
            /// &lt;/summary&gt;
            private readonly string[] lines = @"
// ▼▼ここにテストデータをコピペするのじゃ▼▼

// ▲▲ '//' 開始と空行は無視するから気にするな▲▲
"
                // ↓不要な LINQメソッド式 があれば適当にコメントアウトしてね↓
                .Split(new [] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries )
                .AsEnumerable()
                .Select( s =&gt; s.Trim() )
                .Where( s =&gt; !string.IsNullOrEmpty(s) )
                .Where( s =&gt; !s.StartsWith("//") )
                .ToArray()
            ;

            private int index = 0;

            string PaizaUtility.ITestIO.ReadLine()
            {
                return index &lt; lines.Length ? lines[index++] : null;
            }

            void PaizaUtility.ITestIO.WriteLine( string line )
            {
                Console.WriteLine( line );
            }
        }

        /// &lt;summary&gt;
        /// デフォルトでConsoleに向いているIOを↑のデバッグ用プロキシ実装に差し替える。
        /// &lt;/summary&gt;
        static Program()
        {
            // もうちょっとカッコイイ実装（JavaのCDIみたいな）にしたかったけど、paiza用なんでこれで良いよね。
            PaizaUtility.IO = new TestData();
        }

        /* Mainは省略 */
    }

