

    public static class Do
    {
        /// &lt;summary&gt;
        /// paiza の出題に回答するロジックを実装する
        /// &lt;/summary&gt;
        public static void Answer()
        {
            // 【サンプル実装】ヘッダパーサを独自に指定するパターン。
            // ヘッダで２種類のデータ数が指定され、
            // それらが連続したデータ行として与えられる、みたいなケースを想定。
            // （実際にそんな問題があるのかどうかは知らん）
            int a = 0;
            int b = 0;
            Func&lt;string, int&gt; parser = ( header ) =&gt;
            {
                int[] token = header
                        .Split( new []{ " " }, StringSplitOptions.RemoveEmptyEntries )
                        .AsEnumerable()
                        .Select( x =&gt; int.Parse(x) )
                        .ToArray();

                // 二種類のデータ数をそれぞれ控える。
                a = token[0];
                b = token[1];

                // 二種類のデータの合計数を返す（読み込み行数）
                return a + b;
            };
            // ヘッダのパーサを指定して ReadArgs を呼び出す。
            var args = PaizaUtility.ReadArgs( parser ).ToList();

            List&lt;string&gt; argsA = args
                    .Take( a )
                    .ToList();
            List&lt;string&gt; argsB = args
                    .Skip( a )
                    .Take( b )
                    .ToList();

            foreach ( var arg in argsA )
            {
                PaizaUtility.IO.WriteLine( "arg-a: " + arg );
            }
            foreach ( var arg in argsB )
            {
                PaizaUtility.IO.WriteLine( "arg-b: " + arg );
            }
        }
    }

