
public class DelegateCommand : ICommand
{
    Action&lt;object&gt; _execute;
    Predicate&lt;object&gt; _canExecute;

    public DelegateCommand(INotifyPropertyChanged viewModel, Action&lt;object&gt; execute, Predicate&lt;object&gt; canExecute = null)
    {
        viewModel.PropertyChanged += viewModel_PropertyChanged;
        _execute = execute;
        _canExecute = canExecute;
    }

    void viewModel_PropertyChanged(object sender, PropertyChangedEventArgs e)
    {
        //手抜き 本来はCanExecuteの値が変わる時だけ呼び出すべき
        CanExecuteChanged?.Invoke(this, EventArgs.Empty);
    }

    public event EventHandler CanExecuteChanged;

    public bool CanExecute(object parameter)
    {
        if(_canExecute == null) { return true; }
        else { return _canExecute(parameter); }
    }

    public void Execute(object Parameter)
    {
        _execute(arameter);
    }
}

