
    public class SasSampleWorker
    {
        static async Task Main(string[] args)
        {
            string outputStr = "";
            var setting = new
            {
                ReadContainerSas = args[0],
                ReadBlobName = args[1],
                WriteContainerSas = args[2],
                WriteBlobName = args[3],
            } as dynamic;

            using (MemoryStream outputStream = new MemoryStream())
            {
                // 読取SasUriを使用してアクセス
                await new CloudBlobContainer(new Uri(setting.ReadContainerSas))
                    .GetBlockBlobReference(setting.ReadBlobName)
                    .DownloadToStreamAsync(outputStream);

                outputStr = Encoding.UTF8.GetString(outputStream.ToArray());

                Console.WriteLine(outputStr); // StorageのShaaredAccessSignatureのテスト
            }

            byte[] data = Encoding.UTF8.GetBytes(outputStr + "_Sasで取得したデータ");


            using (var inputStream = new MemoryStream(data))
            {
                // 書込SasUriを利用してアクセス
                await new CloudBlobContainer(new Uri(setting.WriteContainerSas))
                    .GetBlockBlobReference(setting.WriteBlobName)
                    .UploadFromStreamAsync(inputStream);

                Console.WriteLine(Encoding.UTF8.GetString(inputStream.ToArray()));
            }
        }
    }

