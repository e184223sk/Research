
    public class HogeActorService : ActorService
    {
        public HogeActorService (StatefulServiceContext context, 
                                                         ActorTypeInformation actorTypeInfo, 
                                                         Func&lt;ActorService, ActorId, ActorBase&gt; actorFactory = null,
                                                         Func&lt;ActorBase, IActorStateProvider, IActorStateManager&gt; stateManagerFactory = null,
                                                         IActorStateProvider stateProvider = null, 
                                                         ActorServiceSettings settings = null) 
            : base(context, actorTypeInfo, actorFactory, stateManagerFactory, stateProvider, settings)
        { }


            protected async override Task RunAsync(CancellationToken cancellationToken)
            {
                await base.RunAsync(cancellationToken);
                var proxy = ActorProxy.Create&lt;IHogeActor&gt;(new ActorId(0));
                    // 起動時にに呼び出すActorのメソッドをコール
                await proxy.HogeHoge();
            }
    }

