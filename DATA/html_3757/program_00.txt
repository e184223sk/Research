using System;
using System.Collections.Generic;
using Unity;

public interface IAkashicFileFactory
{
    IAkashicFileWrapper OpenFile(string path);
}

public interface IAkashicFileWrapper : IDisposable
{
    IAkashicRecord GetRecord(string address);
    void SetRecord(string address, IAkashicRecord record);
}

public interface IAkashicRecord
{
    IEnumerable&lt;string&gt; Contents { get; }
}

public interface IAkashicProcessor
{
    IAkashicRecord ProcessRecord(IAkashicRecord record);
}

public class MainFlow
{
    [Dependency]
    public IAkashicFileFactory FileFactory { get; set; }

    [Dependency]
    public IAkashicProcessor Processor { get; set; }

    public void Run(string path, string address)
    {
        using (var file = FileFactory.OpenFile(path))
        {
            var oldRecord = file.GetRecord(address);
            var newRecord = Processor.ProcessRecord(oldRecord);
            file.SetRecord(address, newRecord);
        }
    }
}

