
using System;
using System.Collections.Generic;
using System.IO.MemoryMappedFiles;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ShareMemoryTest
{
    class Program
    {
        private static readonly string smName = "MyShareMemory1";

        static void Main(string[] args)
        {
            Console.Title = "C#で共有メモリを読み取るアプリケーション";

            int value = RSM(smName);
            if(value != -1)
            {
                Console.WriteLine("共有メモリの値は " + value + " でした。");
            }
            else
            {
                Console.WriteLine("共有メモリが存在しませんでした。");
            }
            Console.ReadKey();
        }

        /// &lt;summary&gt;
        /// 共有メモリに書き込みます。
        /// 存在しなかった場合新しく作成します。
        /// &lt;/summary&gt;
        private static void WSM(string smName, int value)
        {
            MemoryMappedFile share_mem = null;
            MemoryMappedViewAccessor accessor = null;

            try
            {
                share_mem = MemoryMappedFile.CreateOrOpen(smName, 1024);
                accessor = share_mem.CreateViewAccessor();
                accessor.Write(0, value);

            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            finally
            {
                if (accessor != null) accessor.Dispose();
                if (share_mem != null) share_mem.Dispose();
            }
        }

        /// &lt;summary&gt;
        /// 共有メモリから値を読み取ります。
        /// 存在しなかった場合-1を返します。
        /// &lt;/summary&gt;
        private static int RSM(string smName)
        {
            MemoryMappedFile share_mem = null;
            MemoryMappedViewAccessor accessor = null;
            try
            {
                share_mem = MemoryMappedFile.OpenExisting(smName);
                accessor = share_mem.CreateViewAccessor();
                int data = accessor.ReadInt32(0);
                return data;
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                return -1;
            }
            finally
            {
                if (accessor != null) accessor.Dispose();
                if (share_mem != null) share_mem.Dispose();
            }
        }
    }
}

