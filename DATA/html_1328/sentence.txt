More than 1 year has passed since last update.Windows10組み込みの文章読み上げエンジンをCOM経由で操作してみます。私自身、まだCOMへの理解が甘いのですが、何となくこんな感じ…というのをメモします。.NETにおけるCOMの静的リンク（VSでいう参照の追加&gt;COM）というのは、実際にはCOMをリンクしているわけではなく、COMIntropのDLLをリンクすることを指しています。そもそも、COMというのは原則GUIDをKeyとしてOS登録して、使うときにCoInitializeでOSにCOMオブジェクトをCOMサーバーにリクエストするインターフェイスです。（Registration-Free COMというのもあるらしい）COMIntropはCOMをラッピングした.NETのDLLでありCOMではありません。実際にDirectX12のようなIntropが存在しないCOMは、VSの参照の追加ダイアログの中にもありません。まとめると、以下のようになります。一度、SpVoiceインターフェイスを経由するのは、SpVoiceClassの実装を隠蔽するためです。SpVoiceClassはCOMと直接つながっているダーティな存在のため、COMの仕様が変わった場合、ユーザーCOMIntropライブラリの利用側に変更が必要にならないようにインターフェイスをかませています。まぁ、アクセス修飾子と名前衝突をかわしてexternメソッドを外から呼べないようにすれば隠蔽できますが…なんだかそういうルールらしいです。COM 呼び出し可能ラッパー クラス インターフェイスの概要 (MSDN)COMを静的にリンクしたとしても、.NETCoreをターゲットにコンパイルすることはできます。そのため、CsProjには.NETCore3.1を指定しています。
しかし、COMReferenceは通常のMSBuildのみの機能のため、.NET Coreのdotnet msbuildでは利用できません。ちなみに、dotnet msbuildはmsbuild.exeと同じ機能を提供するものではなく、msbuild.exeと同じオプションで.NETCoreのコンパイラを使うものらしいです。以下の一文を読むと、互換なコンパイラに切り替える（内蔵のmsbuild.exe相当のコンパイラに切り替えると思っていた）ように聞こえますが…The command has the exact same capabilities as the existing MSBuild command-line client for SDK-style projects only.
https://docs.microsoft.com/ja-jp/dotnet/core/tools/dotnet-msbuild#descriptionそこで、VisualStudioのコンパイラであるところのmsbuild.exeを利用します。
（VisualStudioでコンパイルすればいいのですが…VSCodeとCLIでやりたい）「COMはWindowsの機能である」旨の誤りと記述ミスをご指摘いただきました、@Midoliy さん、編集リクエストありがとうございました。COMはWindows固有の機能と位置付けられたものではありません。プロトコルであり、それを実装して利用できる状態で提供されているのが主にWindwosとなります。


