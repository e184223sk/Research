(1)Swaggerから画像データをmultipart/form-dataで送信する。
(2)サーバサイドでmultipart/form-dataを解析し、画像情報をローカルに格納する。Visual Studio 2019
ASP.NET Webアプリケーション(.NET Framework4.6.2)
Nugetパッケージ
・Swashbuckle V5.6.0(swagger)
Internet Explore ver21H1ファイルアップロードのWeb Apiを実装する
* 1.ソリューションを作成する
* 2.Swaggerを設定する 
* 3.WebApiを実装する
* 4.Swaggerで動作確認する。 (1)ASP.NET Webアプリケーションを選択する。
  ここでは[MultiPartServer]って名称で作っています。名前は任意です。
(2).NET Frameworkのバージョンを選択する。
　 今回は.NET Framework4.6.2を選択した。
(3)Web APIを選ぶ。
(1)Nugetパッケージをインストールする。
(2)プロジェクトのビルド設定を変更して、XMLファイルを出力するように変更する。
[ビルド]→[XMLドキュメントファイル]にチェックを入れる。
(3)「ソリューションエクスプローラ」で「App_Start直下」の[SwaggerConfig.cs]を開く。(3)自動生成コードを下記のように修正する。(4)Swagger UI画面用にフィルタ設定を適用する。
下記ソースを追加する。(1)「ソリューションエクスプローラ」で「Controllers」を選択する。
(2)「追加」→「Web API　コントローラクラス」を選択してファイルを追加する。(3)追加したファイルを下記のように修正する。ポイントはMultipartFormDataStreamProviderクラス。
アップロードされたmultipart/form-dataをファイルストリームとして読み込むことができる。(1)デバック実行する。
(2)URL欄に[/swagger]を追記して、Enterを押す。
※por番号はご自身の環境のものが表示されます。(3)下記のようなSwagger UI画面が表示されることを確認する。(4)UploadのPostメソッドのタブを開く。
(5)送信したいファイルを選択し、データを送信する。

　(5-a)送信したいファイルを[Value]の項目で選択する。
　今回は下記のような単純なテキストデータを送った。　(5-b)[Try it out]を押下する。(6)Http応答を確認する。
ステータコードが200なら、問題なし。(7)送信した画像情報が指定したフォルダに格納されていることを確認する。
 (7-a)Visual Studioの「ソリューションエクスプローラ」で「App_Data」を選択する。
右クリックして、[エクスプローラでファルダを開く]を選択する。
　(7-b)開かれたエクスプローラにファイルが格納されていること。
　下記のように送信情報が変な名前のファイルが作成されている。
　
 (7-c)テキストエディタで格納されたファイルを開く。
送信内容と一致してれば、問題なし。Gitに実装をアップしています。
リンク


