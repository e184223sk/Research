internal static class WebRequestQueue
{
    private static int s_MaxRequest = 500;
    internal static Queue&lt;WebRequestQueueOperation&gt; s_QueuedOperations = new Queue&lt;WebRequestQueueOperation&gt;();

    // TODO: ここからUnityWebRequestを取得する
    internal static List&lt;UnityWebRequestAsyncOperation&gt; s_ActiveRequests = new List&lt;UnityWebRequestAsyncOperation&gt;();

    public static WebRequestQueueOperation QueueRequest(UnityWebRequest request)
    {
        WebRequestQueueOperation queueOperation = new WebRequestQueueOperation(request);
        if (s_ActiveRequests.Count &lt; s_MaxRequest)
        {
            var webRequestAsyncOp = request.SendWebRequest();
            webRequestAsyncOp.completed += OnWebAsyncOpComplete;
            s_ActiveRequests.Add(webRequestAsyncOp);
            queueOperation.Complete(webRequestAsyncOp);
        }
        else
            s_QueuedOperations.Enqueue(queueOperation);
        return queueOperation;
    }
    ...
}

