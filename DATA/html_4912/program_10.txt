
        private void DrawSelection()
        {
            int idraw = 1;
            GL.PushName(idraw);
            int partId = 2;

            GL.PointSize(5);
            for (int iver = 0; iver &lt; Vertexs.Count; iver++)
            {
                GL.PushName(partId);
                GL.Begin(BeginMode.Points);
                double height = 0.1;
                GL.Vertex3(
                    VertexCoordArray[iver * NDim + 0],
                    VertexCoordArray[iver * NDim + 1],
                    height);
                GL.End();
                GL.PopName();
                partId++;
            }

            GL.EnableClientState(ArrayCap.VertexArray);
            GL.VertexPointer((int)NDim, VertexPointerType.Double, 0, VertexCoordArray);
            GL.LineWidth(3);
            for (int i = 0; i &lt; EdgeIndexs.Count; i++)
            {
                GL.PushName(partId);
                double height = 0.0;
                GL.Translate(0.0, 0.0, height);
                var index = EdgeIndexs[i];
                GL.DrawElements(BeginMode.Lines, index.Length, DrawElementsType.UnsignedInt, index);
                GL.Translate(0.0, 0.0, -height);
                GL.PopName();
                partId++;
            }

            GL.PushName(partId);
            for (int i = 0; i &lt; TriIndexs.Count; i++)
            {
                double height = 0.0;
                double dispX = 0.0;
                double dispY = 0.0;
                var index = TriIndexs[i];
                GL.Translate(+dispX, +dispY, +height);
                GL.DrawElements(BeginMode.Triangles, index.Length, DrawElementsType.UnsignedInt, index);
                GL.Translate(-dispX, -dispY, -height);
            }
            GL.PopName();
            partId++;

            GL.PopName();
        }

