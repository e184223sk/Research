    public partial class MainWindow : Window
    {
        private int NDim = 2;
        private double WindowAspect = 1.0;
        private IList&lt;OpenTK.Vector2&gt; Vertexs = new List&lt;OpenTK.Vector2&gt;();
        private double[] VertexCoordArray = null;
        private IList&lt;uint[]&gt; EdgeIndexs = new List&lt;uint[]&gt;();
        private IList&lt;uint[]&gt; TriIndexs = new List&lt;uint[]&gt;();
        private int SelectedPartId = 0;

        public MainWindow()
        {
            InitializeComponent();

            Vertexs.Add(new OpenTK.Vector2(0.0f, 1.0f));
            Vertexs.Add(new OpenTK.Vector2(0.0f, 0.0f));
            Vertexs.Add(new OpenTK.Vector2(1.0f, 0.0f));
            Vertexs.Add(new OpenTK.Vector2(1.0f, -1.0f));
            Vertexs.Add(new OpenTK.Vector2(2.0f, -1.0f));
            Vertexs.Add(new OpenTK.Vector2(2.0f, 1.0f));

            VertexCoordArray = new double[Vertexs.Count * NDim];
            for (int i = 0; i &lt; Vertexs.Count; i++)
            {
                var vec = Vertexs[i];
                VertexCoordArray[i * 2 + 0] = vec.X;
                VertexCoordArray[i * 2 + 1] = vec.Y;
            }

            EdgeIndexs.Add(new uint[2] { 0, 1 });
            EdgeIndexs.Add(new uint[2] { 1, 2 });
            EdgeIndexs.Add(new uint[2] { 2, 3 });
            EdgeIndexs.Add(new uint[2] { 3, 4 });
            EdgeIndexs.Add(new uint[2] { 4, 5 });
            EdgeIndexs.Add(new uint[2] { 5, 0 });

            TriIndexs.Add(new uint[3] { 2, 4, 5 });
            TriIndexs.Add(new uint[3] { 0, 2, 5 });
            TriIndexs.Add(new uint[3] { 2, 3, 4 });
            TriIndexs.Add(new uint[3] { 0, 1, 2});
        }
    }

