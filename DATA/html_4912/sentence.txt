More than 3 years have passed since last update.WPFアプリケーションでOpenTKを使ったときのオブジェクト選択を実装しています。
Tao Frameworkのときとほぼ同じ要領で実現できますが、一部対応する関数がなかったりするのでそのあたりの実装が必要になります。OpenTK.GLControlを貼り付けています。
画像のようなポリゴンを描画するためのデータを作成します。
頂点データ、エッジデータ、三角形データを作成しています。
頂点データは座標データですが、エッジデータ、三角形データは頂点のインデックスの配列から構成します。点、エッジ、ループを描画します。
ループは領域を三角形をあわせたものです。
partsIdを割り振ってマウスで選択されたオブジェクトの色を変える処理を実装しています。まずマウスピッキングの開始、終了処理を実装します。
開始時にGL.RenderMode(RenderingMode.Select)セレクションモードにしています。
終了時にGL.RenderMode(RenderingMode.Render)でレンダリングモードを元に戻しています。このとき、GL.RenderMode(RenderingMode.Render)の戻り値にはヒットしたオブジェクトの数が帰ってきます。ここでPickedObject、SelectedObjectは次のようなものです。OpenTKにはgluPickMatrix()、gluUnProject()に相当するものがないようです。
Tao Frameworkを使うのも手だと思いますがOpenTKだけですませたいので次のように実装しました。1) PickPre()でセレクトバッファを用意
2) DrawSelection()でセレクション用にオブジェクトの名前を付けて描画
3) PickPost()でクリックされたオブジェクトを特定し、SelectedPartIdにセットする
という流れになります。DrawSelection()は次のようになります。Draw()の処理と同じ順番に描画します。各オブジェクトには名前（ここでは番号）を付けています（GL.PushName(), GL.PopName()の対）。これによりオブジェクトがクリックされたこと認識できるようになります。点を選択したとき
エッジを選択したとき
ループを選択したとき
WPFアプリケーションでOpenTKを使って点、エッジ、ループの3種類のオブジェクトを選択できるようにしました。
なお、ループではなくて三角形メッシュを選択させたいときは、Draw()およびDrawSelection()で各三角形に名前を付けるように変更すればできます。


