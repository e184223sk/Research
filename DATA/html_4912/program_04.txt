
        /// &lt;summary&gt;
        /// glControlの描画時に実行される。
        /// &lt;/summary&gt;
        /// &lt;param name="sender"&gt;&lt;/param&gt;
        /// &lt;param name="e"&gt;&lt;/param&gt;
        private void glControl_Paint(object sender, System.Windows.Forms.PaintEventArgs e)
        {
            GL.ClearColor(Color4.White);
            GL.Clear(ClearBufferMask.ColorBufferBit | ClearBufferMask.DepthBufferBit);
            GL.Enable(EnableCap.PolygonOffsetFill);
            GL.PolygonOffset(1.1f, 4.0f);
            GL.MatrixMode(MatrixMode.Modelview);
            GL.LoadIdentity();

            SetModelViewTransform();

            // Draw
            Draw();

            glControl.SwapBuffers();
        }

        private void Draw()
        {
            float[] selectedColor = { 1.0f, 1.0f, 0.0f };
            int partId = 2;
            GL.Enable(EnableCap.DepthTest);
            GL.PointSize(5);
            GL.Begin(BeginMode.Points);
            for (int iver = 0; iver &lt; Vertexs.Count; iver++)
            {
                double height = 0.1;
                if (partId == SelectedPartId)
                {
                    GL.Color3(selectedColor);
                }
                else
                {
                    GL.Color3(0.0, 0.0, 0.0);
                }
                GL.Vertex3(
                    VertexCoordArray[iver * NDim + 0],
                    VertexCoordArray[iver * NDim + 1],
                    height);
                partId++;
            }
            GL.End();

            GL.EnableClientState(ArrayCap.VertexArray);
            GL.VertexPointer((int)NDim, VertexPointerType.Double, 0, VertexCoordArray);
            GL.LineWidth(3);
            for (int i = 0; i &lt; EdgeIndexs.Count; i++)
            {
                double height = 0.0;
                if (partId == SelectedPartId)
                {
                    GL.Color3(selectedColor);
                }
                else
                {
                    GL.Color3(0.0f, 0.0f, 0.0f);
                }
                GL.Translate(0.0, 0.0, height);
                var index = EdgeIndexs[i];
                GL.DrawElements(BeginMode.Lines, index.Length, DrawElementsType.UnsignedInt, index);
                GL.Translate(0.0, 0.0, -height);
                partId++;
            }

            for (int i = 0; i &lt; TriIndexs.Count; i++)
            {
                double height = 0.0;
                double dispX = 0.0;
                double dispY = 0.0;
                float[] color = { 0.2f, 0.2f, 0.2f };
                var index = TriIndexs[i];
                GL.Material(MaterialFace.FrontAndBack, MaterialParameter.Diffuse, color);
                if (partId == SelectedPartId)
                {
                    GL.Color3(selectedColor);
                }
                else
                {
                    GL.Color3(color);
                }
                GL.Translate(+dispX, +dispY, +height);
                GL.DrawElements(BeginMode.Triangles, index.Length, DrawElementsType.UnsignedInt, index);
                GL.Translate(-dispX, -dispY, -height);
            }
            partId++;

        }

