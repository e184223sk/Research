
using System.IO;
using System.Collections.Generic;
using UnityEngine;

/// &lt;summary&gt;
/// ProfileTest
/// &lt;/summary&gt;
public class ProfileTest : MonoBehaviour
{
    #region define

    /// &lt;summary&gt;
    /// ProfileData
    /// &lt;/summary&gt;
    public class ProfileData
    {
        [SimpleCsv(1)]
        public string Name { get; set; }
        [SimpleCsv(2, Name = "処理時間")]
        public int Time { get; set; }
    }

    #endregion

    #region method

    /// &lt;summary&gt;
    /// データを書き込む
    /// &lt;/summary&gt;
    public void Write() {
        // 適当なテスト用のデータ作成
        var list = new List&lt;ProfileData&gt;(10);
        for (int i = 0; i &lt; 10; i++) {
            list.Add(new ProfileData() {
                Name = i.ToString(),
                Time = (i * i)
            });
        }

        // 書き込み部分
        var directory = Application.persistentDataPath + Path.DirectorySeparatorChar + "Exports";
        using (var writer = new SimpleCsvWriter&lt;ProfileData&gt;(directory, "test", list.ToArray())) {
            writer.Write();
        }
    }

    /// &lt;summary&gt;
    /// データを読み込む
    /// &lt;/summary&gt;
    public ProfileData[] Read() {
        ProfileData[] profiles = null;
        var directory = Application.persistentDataPath + Path.DirectorySeparatorChar + "Exports";
        using (var reader = new SimpleCsvReader&lt;ProfileData&gt;(directory, "test")) {
            profiles = reader.Read();
        }

        return profiles;
    }

    #region unity_script

    /// &lt;summary&gt;
    /// 開始処理
    /// &lt;/summary&gt;
    private void Start() {
        // データ書き込み
        Write();

        // データ読み込み
        var profiles = Read();
        foreach (var profile in profiles) {
            Debug.Log(profile.Name + " = " + profile.Time);
        }
    }

    #endregion

    #endregion
}


