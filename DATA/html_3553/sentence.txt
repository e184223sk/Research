More than 1 year has passed since last update.厳密にはUnityのエディタからのみというより[assembly: AssemblyIsEditorAssembly]が指定されているアセンブリからのアクセスのみに限定するってやり方になる何かしらのパラメータ定義のScriptableObjectなりJsonデータ用クラスなりを作って設定用エディタプログラムからは通常のpublicなプロパティのように振る舞い、それ以外の通常のゲームロジックからはgetのみにアクセスする...みたいなやり方をとりたい時に役に立ちそう参考ページ
Unityで「エディタからのみ外部アクセス可能なメンバ変数」を実現する方法の考察
C# メソッドの呼び出し元メソッド名を取得するおまじないといっても参考ページのコピペみたいなものだが...
コードがかさばらないようにUtilityクラスみたいな形にしてチェック用メソッドを用意するのがいいかもチェック用ユーティリティクラス何かしらのパラメータファイル何かしらのエディタスクリプトでのアクセス
こちらからは通常のプロパティの用にアクセスしたい何かしらのゲームロジック側のスクリプト 
こちらからのアクセスはしたくない実際にエディタ側から呼び出しているかのチェックは CallMethodCheckerクラスのCheckCalledFromEditor()メソッド内
呼び出し元のメソッドがAssemblyIsEditorAssembly属性が付与されたアセンブリからの呼び出しかを判定している
コールスタックに積まれているメソッドはこのチェックメソッドから見て二つ前なのでStackFrame()の引数は2を指定、1の場合はこのメソッドを読んでいるメソッド( 今回の場合だとNameプロパティのset内 )これをアクセスしたくない側のスクリプト( 今回の場合Sampleコンポーネント )から呼び出すと以下のようにエラーログを出す
このチェックメソッドはUnityのエディタ側で呼び出すことを前提としているので実機の場合は #if 部分では弾いている、ゲームロジック部分からの呼び出しはエラーログが出るので善良なエンジニアはセッターは呼び出さないだろう...
肝心なところを人の裁量に任せちゃってる感がある
どのみち呼び出してもアプリが落ちるわけでもないし値を入れるわけではないので大丈夫そうではある追記
今はやっぱReflection使えばいいんじゃね?ってなってます


