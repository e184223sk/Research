    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public struct RECT
    {
        public int Left;
        public int Top;
        public int Right;
        public int Bottom;

        public int Area() =&gt; (Right - Left) * (Top - Bottom);

        public RECT(int left, int top, int right, int bottom)
        {
            Left = left;
            Top = top;
            Right = right;
            Bottom = bottom;
        }
        public override String ToString() =&gt; $"[({Left}, {Top}), ({Right}, {Bottom})]";
    }
    [Serializable]
    public struct RECTSIZE
    {
        public int Width;
        public int Height;
        public int Area() =&gt; Width * Height;

        public RECTSIZE(int w, int h)
        {
            Width = w;
            Height = h;
        }

        public static explicit operator RECTSIZE(RECT rect) =&gt; new RECTSIZE(rect.Right - rect.Left, rect.Bottom - rect.Top);
        public override String ToString() =&gt; $"w={Width}, h={Height}";
    }
    [Serializable]
    public enum SW
    {
        HIDE = 0,
        SHOWNORMAL = 1,
        SHOWMINIMIZED = 2,
        SHOWMAXIMIZED = 3,
        SHOWNOACTIVATE = 4,
        SHOW = 5,
        MINIMIZE = 6,
        SHOWMINNOACTIVE = 7,
        SHOWNA = 8,
        RESTORE = 9,
        SHOWDEFAULT = 10,
    }
    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public struct WINDOWPLACEMENT
    {
        public int length;
        public int flags;
        public SW showCmd;
        public POINT minPosition;
        public POINT maxPosition;
        public RECT normalPosition;
        public override String ToString() =&gt;
            $"SW{showCmd}Min{minPosition}Max{maxPosition}N{normalPosition}";
    }

