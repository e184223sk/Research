    public struct Point
    {
        private double x;
        public double X
        {
            get =&gt; x;
            private set =&gt; x = value;
        }
        private double y;
        public double Y
        {
            get =&gt; y;
            private set =&gt; y = value;
        }
        private double? distance;
        public double Distance
        {
            get
            {
                if(!distance.HasValue)
                    distance = Math.Sqrt(x * x + y * y);
                return distance.Value;
            }
        }
        public Point( double x, double y )
        {
            this.x = x;
            this.y = y;
            distance = default;
        }
        public static bool operator ==( Point left, Point right ) =&gt;
            left.X == right.X &amp;&amp; left.Y == right.Y;
        public static bool operator !=( Point left, Point right ) =&gt;
            left.X != right.X || left.Y != right.Y;

        public override bool Equals( object? obj )
        {
            if(obj is Point)
            {
                var otherPT = (Point)obj;
                return this == otherPT;
            }
            else
            {
                return true;
            }
        }
        public override int GetHashCode() =&gt; X.GetHashCode() ^ Y.GetHashCode();
        public void SwapCoords()
        {
            var tmp = X;
            X = Y;
            Y = tmp;
        }
    }

