
// ファインダパタンの中央点から端までの差
public const int IMAGE_MERGIN_SIZE = 22;

/// &lt;summary&gt;
/// ポイント情報からQRコード部分のサイズを取得する
/// &lt;/summary&gt;
/// &lt;param name="result"&gt;ポイント情報&lt;/param&gt;
/// &lt;param name="width"&gt;最大幅&lt;/param&gt;
/// &lt;param name="height"&gt;最大高さ&lt;/param&gt;
/// &lt;returns&gt;QRコード部分のサイズ&lt;/returns&gt;
public Rect GetPoints(Result result, int width, int height)
{
    // ポイント情報からQRコード部分を切り取る
    int stX = 0;
    int stY = 0;
    int w = 0;
    int h = 0;
    if (result.ResultPoints[0].X &lt; result.ResultPoints[2].X)
    {
        // 左下→左上→右上
        stX = (int)GetMinValue(result.ResultPoints[0].X, result.ResultPoints[1].X) - IMAGE_MERGIN_SIZE;
        stY = (int)GetMinValue(result.ResultPoints[1].Y, result.ResultPoints[2].Y) - IMAGE_MERGIN_SIZE;
        w = (int)result.ResultPoints[2].X + IMAGE_MERGIN_SIZE - stX;
        h = (int)result.ResultPoints[0].Y + IMAGE_MERGIN_SIZE - stY;
    }
    else
    {
        // 右下→左下→右上
        stX = (int)GetMinValue(result.ResultPoints[1].X, result.ResultPoints[2].X) - IMAGE_MERGIN_SIZE;
        stY = (int)(result.ResultPoints[2].Y - IMAGE_MERGIN_SIZE);
        w = (int)result.ResultPoints[0].X + IMAGE_MERGIN_SIZE - stX;
        h = (int)result.ResultPoints[1].Y + IMAGE_MERGIN_SIZE - stY;
    }

    stX = (int)GetMaxValue(stX, 0);
    stY = (int)GetMaxValue(stY, 0);
    w = (int)GetMinValue(w, width);
    h = (int)GetMinValue(h, height);

    return new Rect(stX, stY, w, h);
}

// 引数の小さい値を取得する
private float GetMinValue(float min1, float min2)
{
    return (min1 &lt;= min2 ? min1 : min2);
}

// 引数の大きい値を取得する
private float GetMaxValue(float max1, float max2)
{
    return (min1 &gt;= min2 ? max1 : max2);
}

