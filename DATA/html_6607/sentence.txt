More than 3 years have passed since last update.行列で言うところの転置をやります。
@IganinTea さんのエントリー
LINQで入れ子になっているListの並びの縦横を入れ替える
中の@yuba さんのコメントを参考に書けたので投稿します。これを↓みたいにするまずは結果、後で過程を示す。
こんな感じでAggregateなしでもいけました。@IganinTea さんのエントリー
LINQで入れ子になっているListの並びの縦横を入れ替える
中の@yuba さんのコメント欄のやつとりあえず真似る.
見通しが良くなるように3項演算子を外して、中身を改行する。columnを事前に求めてみるAggregateの中身がColumnのListを作っていることと理解foreachをselect文で書き換え中のreturnを消す。
大体完成。さっきまでのはジャグ配列だと死ぬから修正。
3項演算子復活columnの計算を戻して1つの式内で完結させる
以上の手順で書換。
Aggregateは決まるとすごいけど解読が難しい。配列とリスト版を書いた。
理由はなんとなくElementAtがないやつを見たかったから。よくよく定義を見てみたらArrayもListもIListを継承しているからまとめられた参照型を渡すと毎回参照がコピーされて1つ変更されると全部変わるからそれはできないようにする。
1つが値型に制限する。
もう1つはデリゲートで毎回作るようにして参照のコピーを作らないようにできるようにする。
var tValues = Do(values,()=&gt;new Class());↓みたいに参照の値を渡したら意味はないけど。
var c = new Class();
var tValues = Do(values,()=&gt;c);まずはIEnumerableを受けるやつ。同じ感じでIListで受けるやつ速度的なあれは調べていません。
気が向いたら考えます。


