
//参照型だと後で変更したときにほかの部分も変わるから値型のみ受け付ける。
public IEnumerable&lt;IEnumerable&lt;T&gt;&gt; Do&lt;T&gt;(IEnumerable&lt;IEnumerable&lt;T&gt;&gt; values, T blankValue)
    where T : struct
{
    return Enumerable.Range(0, values.Max(c =&gt; c.Count()))
    .Select(i =&gt; values.Select(c =&gt; i &lt; c.Count() ? c.ElementAt(i) : blankValue));
}

//毎回newとかさせれば上記の問題が解消できるからFuncデリゲート入れてラムダ式とかでいけるようにする。
public IEnumerable&lt;IEnumerable&lt;T&gt;&gt; Do&lt;T&gt;(IEnumerable&lt;IEnumerable&lt;T&gt;&gt; values, Func&lt;T&gt; blankValue)
{
    return Enumerable.Range(0, values.Max(c =&gt; c.Count()))
    .Select(i =&gt; values.Select(c =&gt; i &lt; c.Count() ? c.ElementAt(i) : blankValue()));
}
//使い方例
var tValues = Do(values, () =&gt; new T());

