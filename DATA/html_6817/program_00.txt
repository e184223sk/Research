
    public class TabControlViewModel : DockWindowViewModel
    {

        private TabItemViewModel _activeItem;
        public TabItemViewModel ActiveItem
        {
            get
            {
                return _activeItem;
            }
            set
            {
                SetValue(ref _activeItem, value);
            }
        }
        private ObservableCollection&lt;TabItemViewModel&gt; _ItemsSource = new ObservableCollection&lt;TabItemViewModel&gt;();
        public ObservableCollection&lt;TabItemViewModel&gt; ItemsSource
        {
            get
            {
                return _ItemsSource;
            }
            set
            {
                SetValue(ref _ItemsSource, value);
            }
        }

        public TabControlViewModel()
        {

        }
   }

class DockPaneTemplateSelector: DataTemplateSelector
    {
        public DataTemplate ShaderProgramTemplate { get; set; }
        public DataTemplate VoxelTemplate { get; set; }
        public override DataTemplate SelectTemplate(object item, DependencyObject container)
        {
            if (item is ShaderProgramViewModel)
            {
                return ShaderProgramTemplate;
            }
            if(item is VoxelViewModel)
            {
                return VoxelTemplate;
            }
            return base.SelectTemplate(item, container);
        }
　　}

