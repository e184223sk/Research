
struct VertexData {
    public Vector3 Position;
    public Vector2 Uv;
}

private void InitializeVertexBuffer() {
    using(var vertexStream = new DataStream(
        pmdLoader.Vertex.Select(x =&gt; new VertexData() {
            Position = x.Position, Uv = x.Uv
        }).ToArray(), true, true)) {
        vertexBuffer = new Dx11.Buffer(device, vertexStream,
            new Dx11.BufferDescription() {
                SizeInBytes = (int)vertexStream.Length,
                BindFlags = Dx11.BindFlags.VertexBuffer,
                StructureByteStride = sizeof(float),
            }
        );
    }
}

Dx11.Buffer indexBuffer;
private void InitializeIndexBuffer() {
    using(var indexStream = new DataStream(pmdLoader.Index.SelectMany(x =&gt; x.Indicies).ToArray(), true, true)) {
        indexBuffer = new Dx11.Buffer(device, indexStream, new Dx11.BufferDescription() {
            SizeInBytes = (int)indexStream.Length,
            BindFlags = Dx11.BindFlags.IndexBuffer,
            StructureByteStride = sizeof(short)
        });
    }
}

