More than 1 year has passed since last update.※ビルトイン値型の話です。is asでの安全なキャストとは別です。C#で文字列を数値や日付にキャストする際、確実に変換できる値かわからないことがあります。
かといってint.ParseやDateTime.Parseをtry {...} catch {...}すると重いです。その場合、TryParseメソッドが便利です。ユーザーの入力を2倍にし表示するコンソールアプリのコードです。TryParseメソッドの直前で変数の宣言を行っています。（int num;）
この変数の宣言は以下のようにインライン化することができます。out var numとインラインで宣言できたので直前の変数宣言が消すことができました。decimalやfloat、doubleといった数値型はTryParseメソッドを持っているので同様にキャストできます。DateTimeも同様にTryParseメソッドを持っています。ただ、DateTimeのTryParseでは書式設定がありません。
"2018/06/10"といった文字列は変更できますが、"2017年06月10日"といった文字列はキャストできません。その場合、TryParseExactを使います。


