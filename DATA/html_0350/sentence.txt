この記事はLife is Tech！アドベントカレンダーの5日目の記事です！今回の記事で紹介するのは、Unityの2Dゲームを作る時に、ここをタップ/クリックしたらこういう動作がしたい！っていうのを叶えてくれるやつです。主にUnity初心者の方向けです！
私が2Dゲームを初めて作った時に、今回の実装をググっても出てこなかったので、誰でも簡単にできる過程を書こうと思いました。こんな感じです。
今回はわかりやすく、バネをタップしてPlayerを跳ねさせるということをしてみます。画像がバネではなく、トランポリンなのは気にしないでください笑
の流れで説明します。適当に画像を引っ張ってきて画像を突っ込んでおくとわかりやすいです。(今回はアセットストアで探してきたものと、画像検索で引っかかったフリー画像を使いました。)バネにアタッチするSpringScript.csをつくってバネのゲームオブジェクトにアタッチしておきましょう。最初、高いところからPlayerを落としたいのでPlayerにRigidbody 2Dコンポーネントを追加します。
また当たり判定も取りたいので、すべてのゲームオブジェクトにそれぞれの形にあったCollider2Dをつけます。
この時に2DとついていないRigidbodyやColliderをつけないように気をつけてください！

プレビューしてPlayerがバネに当たる様子ができていれば準備完了です！
今回の実装では以下の二つを組み合わせます。Unityでは、ray（レイ）という光線のようなものを飛ばしてオブジェクトの情報を取得する機能があります。また2DにはRididbody2DやCollider2Dなどと同じようにRaycasthit2Dというものが用意されているので、コード時は間違えないように注意しましょう。
※オブジェクトにコライダーがないと取得できないので注意してください。
Rayについてわかりやすい記事は以下を参考にしてください。
【Unity】RayCastを使いこなせ!判定や表示に使ってみようUnityにはLayer（レイヤー）というグループ分けができる機能があります。もう少し細かくいうと、特定のオブジェクトを無視できます。例えば、PlayerとEnemyがそれぞれ複数いた場合、Playerグループ(主人公とその仲間)とEnemyグループ(スライム・ドラキーetc.)のオブジェクトをlayerを指定することで分けてあげることができます。似たようなものにtag（タグ）がありますが、tagはオブジェクトをまとめて処理したい時に向いています。layerは個数制限があるのに対してtagはいくつでも作れるので、実装方法によってはtagを使ってみてもいいと思います。Rigidbodyコンポーネントを持っているオブジェクトに対して力を加えることができるメソッドです。AddForceについて詳しく知りたい方はこちらの記事がとても参考になるので見てみてください！これら二つを、layerで分けたそれぞれのオブジェクト情報をrayを飛ばすことで取得することで利用します。
layerを分けずに指定すると、rayは表面のlayer情報（初期状態はDefault）しか取得してくれません。

layerを分けることでそれぞれのオブジェクト情報をrayが取得してくれるようになります。
layerとrayの衝突は複数あるのですが、今回は任意のlayerと衝突させたいのでLayermaskを使用します。
layerとrayの衝突するオブジェクトの制限について
・ビット演算のシフト演算を使用して作成
・レイヤー名の配列からマスクを取得する
・Insoectorから作成して任意のオブジェクトで選択する
・定数クラスでレイヤーマスクを指定
　RayCastその2、衝突するオブジェクトの制限【Unity】
まずUnity上で右上のlayerを開き、springというlayerを用意し、バネのゲームオブジェクトにそのレイヤーを指定してください。
 
マウスを左クリックしたらrayを飛ばします。スクリプトが書けたら、Unity上で、バネについているSpringScript.csのコンポーネントを参照します。
PlayerのRigidbodyをアタッチし、layerMaskからspringを選びます。
Playerと接触しているかどうかを調べたいので、PlayerにPlayerタグをつけます。
何回も跳ねてしまっては困るのでboolで接触可能かどうかを判定します。こちらがすべてのコードになります！Unityを初めたてでまだ右も左も分からなくても、なんとか手を動かして少しずつ実装できることを増やせるといいなと思います！この記事が何かのお役に立てるとそれより嬉しいことはないです！
私もまだまだ勉強中ですので、ぜひUnityのいろんな機能を触ってみてくれると嬉しいです！✨
今後のLife is Tech！のアドベントカレンダーもお楽しみに！今回の記事を書くにあたって、参考にさせていただいた記事を添付しておくのでぜひ一緒に見てみてください！RaycastとLayerについてビット演算について
(コンピューターの処理の話になってきます。)2020/12/08


