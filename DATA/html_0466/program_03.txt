
using System;
using System.Security.Cryptography;

string name = "千尋";
//前回決めたソルト
string salt = "AF-70-37-73-C6-E3-22-A9";
//前回求めたハッシュ値
string prevhash = "19-A3-4B-9E-D8-25-4E-A7-12-02-86-D7-AB-6D-D7-7B-8D-C6-CB-B9-0C-C8-70-18-44-64-6F-DF-2D-63-AF-C6";

//ソルトをbyte配列に変換
string[] saltstrings = salt.Split("-");
byte[] saltbytes = new byte[saltstrings.Length];
for (int i=0; i &lt; saltstrings.Length; i++)
{
    saltbytes[i] = Convert.ToByte(saltstrings[i], 16);
}

//ハッシュ値を算出
string hashstring = string.Empty;
using (Rfc2898DeriveBytes pbkdf2 = new Rfc2898DeriveBytes(name, saltbytes, 1000, HashAlgorithmName.SHA256))
{
    byte[] hashbyte = pbkdf2.GetBytes(32);
    hashstring = BitConverter.ToString(hashbyte);
}

//結果判定を出力
if (prevhash.Equals(hashstring))
{
    Console.WriteLine("OK");
} else
{
    Console.WriteLine("NG");
}

