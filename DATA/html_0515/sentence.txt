初書：2020/11/4
php：7.4.10オブジェクトを使う際にほぼ間違いなく使うprivate。
今回は（個人的に）意外な性質を見つけたのでメモ。先にコードを提示数字・関数名変数名は適当。
いや今気がついたけどこのコードだとfcの定義している意味が完全に無いじゃん。
まぁ支障はないので一旦放置。簡単にコードの説明をしておくと、private変数$aを用意しておき、fc関数で取得可能。
またfunc関数では、tesクラスのインスタンスを引数とし、fc関数と158を足した値を戻す。
そして2つのインスタンスを生成し、片方のインスタンスを引数にもう片方のfuncを呼ぶというもの。さて、上記コードを実行してみるとどうなるか。普通に実行できる。つまり、privateな関数や変数1であっても、同じクラス内から呼び出す分には別のインスタンスであっても呼び出すことが可能である。（初知り）（ちなみに#から始まるのをフラグメント演算子というらしいのだが、いつから実装されてるのか不明。2）さて、結果はどうなったのか。ちなみにページを用意するのが面倒だったので、コンソールに投げて実行した。ver 14.0そもそもフラグメント演算子に対応していないver 86.0phpと同様の結果に。ver 82.0認識はするものの対応自体はしていない模様phpと同じと認識してもいいと思われるC#というよりunity。普通に1390と出た。もしかして単純に無知を晒した投稿なのでは？（今更。でも書いてしまった）
「privateは１カプセル毎に個別で持つもの、外部からは一切アクセスできない」という認識があったので少し意外な処理だった。上記コードでは出てこないが、$val-&gt;fc()を$val-&gt;aに変えても実行できる ↩ここのサイトにて、node.jsのv12からという記述は確認。 ↩


