
using Moq;
using Xunit;

// モックにしたいインターフェイス
public interface IHoge
{
    int  Fuga(int x);
    void Piyo(int x);
}

public class HogeTest
{
    [Fact]
    public void TestFuga()
    {
        var mock = new Mock&lt;IHoge&gt;();

        // Fugaメソッドの呼び出しをセットアップする
        // 常に「引数 + 1」を返すように設定
        mock.Setup(hoge =&gt; hoge.Fuga(It.IsAny&lt;int&gt;()))
            .Returns&lt;int&gt;(x =&gt; x + 1);

        var hogeObj = mock.Object;

        Assert.Equal(  2, hogeObj.Fuga(1));
        Assert.Equal(  3, hogeObj.Fuga(2));
        Assert.Equal(101, hogeObj.Fuga(100));
    }

    [Fact]
    public void TestPiyo()
    {
        var mock = new Mock&lt;IHoge&gt;();

        var hogeObj = mock.Object;

        hogeObj.Piyo(1);

        hogeObj.Piyo(2);
        hogeObj.Piyo(2);

        hogeObj.Piyo(100);
        hogeObj.Piyo(100);
        hogeObj.Piyo(100);

        // Piyoメソッドの呼び出しを検証する
        mock.Verify(hoge =&gt; hoge.Piyo(  1), Times.Once);
        mock.Verify(hoge =&gt; hoge.Piyo(  2), Times.AtLeastOnce);
        mock.Verify(hoge =&gt; hoge.Piyo(100), Times.Exactly(3));
        mock.Verify(hoge =&gt; hoge.Piyo(  0), Times.Never);
        mock.Verify(hoge =&gt; hoge.Piyo(It.IsAny&lt;int&gt;()), Times.Exactly(6));
    }
}

