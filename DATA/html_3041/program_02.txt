

/// &lt;summary&gt;
/// Base32からbyte[]に変換する
/// &lt;/summary&gt;
/// &lt;param name="base32"&gt;&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
public static byte[] FromBase32String(string base32)
{
    if ( 0 != (base32.Length &amp; 3 )){
        // Base32じゃないよ！
        Debug.LogError( "not base32" );
        return null;
    }

    InitilizeDecodeTable();

    List&lt;byte&gt; decode = new List&lt;byte&gt;( base32.Length);
    // 8文字( 8 x 5bit =40bit) ずつ取り出して5byteごとに変換をかけていく
    for ( int i = 0, count = base32.Length; i &lt; count; i += BYTE_LENGTH )
    {
        ulong merge = 0;
        for (int j = 0; j &lt; BYTE_LENGTH; j++)
        {
            if( i + j &gt;= count )
            {
                break;
            }
            char c = base32[i+j];
            if( c == PADDING )
            {
                break;
            }
            long index = (long)decode_table[c];
            // 改行などの対象外の場合はもう一文字
            if( index &lt; 0 )
            {
                Debug.LogError($"Cant Found:{c}");
                continue;
            }
            // 1文字5bit なので5n bit シフトを行う
            merge |= (ulong)( index &lt;&lt; ( (BYTE_LENGTH-j-1) * DIGIT) );

        }
        // 40bit を8bitずつに分割
        for (int j = 0; j &lt; DIGIT; j++)
        {
            decode.Add( (byte)( (merge &gt;&gt; ( (DIGIT-j-1) * BYTE ) ) &amp; 0xFF) );
        }
    }
    return decode.ToArray();
}

