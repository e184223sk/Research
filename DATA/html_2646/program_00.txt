using System.Text.Json;
using System.Text.Unicode;
using System.Text.Encodings.Web;

//
// 天気概況（明後日まで）https://www.jma.go.jp/bosai/forecast/data/overview_forecast/130000.json
//
private void button1_Click(object sender, EventArgs e)
{
    WebClient wc = new WebClient();

    string JsonStr = wc.DownloadString(@"https://www.jma.go.jp/bosai/forecast/data/overview_forecast/130000.json");

    jsonweather jsontex = JsonSerializer.Deserialize&lt;jsonweather&gt;(JsonStr);

    //Debug.WriteLine(JsonStr); // 取込データ全てを表示
    Debug.WriteLine("発表者");
    Debug.WriteLine("　" + jsontex.publishingOffice);
    Debug.WriteLine("報告日時");
    Debug.WriteLine("　" + jsontex.reportDatetime);
    Debug.WriteLine("対象地域");
    Debug.WriteLine("　" + jsontex.targetArea);
    Debug.WriteLine("ヘッドライン");
    Debug.WriteLine("　" + jsontex.headlineText);

    string delimiter = "\n\n";

    string[] arry = jsontex.text.Split(delimiter);

    Debug.WriteLine("概況");
    Debug.WriteLine(arry[0]);
    Debug.WriteLine("今日の天気");
    Debug.WriteLine(arry[1]);
    Debug.WriteLine("明日の天気");
    Debug.WriteLine(arry[2]);
    Debug.WriteLine("明後日の天気");
    Debug.WriteLine(arry[3]);

    // Serializeをやってみる
    var encoderSettings = new TextEncoderSettings();
    //
    // TODO
    // All 指定なのに '\u002B', '\u3000' 
    // +と全角空白がUTF8のコードで出力されてしまう
    //
    encoderSettings.AllowRange(UnicodeRanges.All);

    var options = new JsonSerializerOptions
    {
        Encoder = JavaScriptEncoder.Create(encoderSettings),
        WriteIndented = true
    };
    string SerializeStr = JsonSerializer.Serialize(jsontex, options);
    Debug.WriteLine(SerializeStr);
}

//
// 天気概況（週間）https://www.jma.go.jp/bosai/forecast/data/overview_week/130000.json
//
private void button3_Click(object sender, EventArgs e)
{

    WebClient wc = new WebClient();
    string JsonStr = wc.DownloadString(@"https://www.jma.go.jp/bosai/forecast/data/overview_week/130000.json");

    jsonweek jsonweek = JsonSerializer.Deserialize&lt;jsonweek&gt;(JsonStr);

    //Debug.WriteLine(JsonStr);
    Debug.WriteLine("発表者");
    Debug.WriteLine("　" + jsonweek.publishingOffice);
    Debug.WriteLine("報告日時");
    Debug.WriteLine("　" + jsonweek.reportDatetime);
    Debug.WriteLine("対象地域");
    Debug.WriteLine("　" + jsonweek.headTitle);
    Debug.WriteLine("天気概況（週間）");
    Debug.WriteLine("　" + jsonweek.text);
}

// 天気概況（明後日まで）用のクラス
class jsonweather
{
    public string publishingOffice { get; set; }
    public string reportDatetime { get; set; }
    public string targetArea { get; set; }
    public string headlineText { get; set; }
    public string text { get; set; }
}

// 天気概況（週間）用のクラス
class jsonweek
{
    public string publishingOffice { get; set; }
    public string reportDatetime { get; set; }
    public string headTitle { get; set; }
    public string text { get; set; }
}

