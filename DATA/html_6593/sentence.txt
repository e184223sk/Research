仕事でC++の資産を使うためにP/InvokeでC#からC++のdllにある関数を呼ぶことがあるが、その際、元々あるC#のP/Invokeのコードを参考にほかの関数を呼ぶためのC#コードを書いてるが、0から書きなさいと言われると正直書き方がわからない。あと、WindowsのWin32APIを呼ぼうと思うと、pinvoke.netとかにC#側コードのひな型やサンプルを置いてくれているが、なんでそういうC#コードになるのかわからない、またpinvoke.netであるWin32APIのC#側コードをみると、なんか複数の書き方が書かれていて(戻り値とか引数の型が違う等)、どれが正しいのかよくわからない。どう書けばよいか、この際調べたい。いろいろ試す中で(今もまだ試行錯誤中)、現状下記の流れで、C++の関数をC#側で呼ぶように調査を進めるのがよい気がする。21/02/27追記
何となく動いているが、確保したメモリの解放ができてないせいでメモリリークしているっぽい。
調べます...
(CoTaskMemAllocでやってるからまずい？Marshallの中のメモリを確保するやつでやればいい？)今回は、上の手順をぐるぐる回しつつ自分でC+＋側の関数も作って、C#側から呼ぶ練習をした。
(今思うと、数値の型で試せばもう少し簡単だったと思うのだが、文字列を扱う関数を作ってしまった。とりあえず、それをサンプルとして挙げる。)サンプル１ではメモリリークが発生してうまくいかなかったので改良を加えた。サンプル１では、バッファをC++側で確保していたが、そうではなく
C#側でもって、それをC++側に渡せばよいっぽい。
(そうすれば、C#側でちゃんと解放できる)その場合、今のところ、下記の3種類のやり方があった。(ほかにもあるかも)①は、stringにあらかじめセットした文字列の長さが、C++にわたるバッファのwchar_tの配列の要素数になるっぽい。で、そんな動きはよくわからない(必要な文字数をあらかじめセットするってなんだ？？)ので、②か③がよいなと思った。文字列の扱い、なにかややこしい。下記サイトをもとに、ちょっと勉強したい。++C++ 小ネタ string型のマーシャリング
https://ufcpp.net/blog/2016/12/tipsstringmarshal/今回のサンプルのように、単純に文字列をメモリにコピーするだけの処理でも、C++で書くとなるとどうやったらよいのか迷いに迷った。C++をまずは勉強しなおさないといけないっぽい。


