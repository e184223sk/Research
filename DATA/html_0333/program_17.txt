
using System;

namespace CSharp80
{
    public record ImmutableValueClass(
        int Id,
        string Name,
        string? Remarks = null,
        int? ParentId = default) : IComparable, IComparable&lt;ImmutableValueClass&gt;
    {
        public int CompareTo(object? obj)
            =&gt; obj is null ? 1
            : obj is ImmutableValueClass other ? CompareTo(other)
            : throw new ArgumentException(nameof(obj) + " is not a " + nameof(ImmutableValueClass), nameof(obj));

        public int CompareTo(ImmutableValueClass? other)
            =&gt; other is null ? 1 : Id - other.Id;

        public static bool operator &gt; (ImmutableValueClass? left, ImmutableValueClass? right)
            =&gt; (left, right) switch
            {
                (ImmutableValueClass l, ImmutableValueClass r) =&gt; l.Id &gt; r.Id,
                ({}, null) =&gt; true,
                (null, {}) =&gt; false,
                (null, null) =&gt; false
            };

        public static bool operator &lt; (ImmutableValueClass? left, ImmutableValueClass? right)
            =&gt; (left, right) switch
            {
                (ImmutableValueClass l, ImmutableValueClass r) =&gt; l.Id &lt; r.Id,
                ({}, null) =&gt; false,
                (null, {}) =&gt; true,
                (null, null) =&gt; false
            };

        public static bool operator &gt;= (ImmutableValueClass? left, ImmutableValueClass? right)
            =&gt; (left, right) switch
            {
                (ImmutableValueClass l, ImmutableValueClass r) =&gt; l.Id &gt;= r.Id,
                ({}, null) =&gt; true,
                (null, {}) =&gt; false,
                (null, null) =&gt; true
            };

        public static bool operator &lt;= (ImmutableValueClass? left, ImmutableValueClass? right)
            =&gt; (left, right) switch
            {
                (ImmutableValueClass l, ImmutableValueClass r) =&gt; l.Id &lt;= r.Id,
                ({}, null) =&gt; false,
                (null, {}) =&gt; true,
                (null, null) =&gt; true
            };
    }
}

