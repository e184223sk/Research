
// C# 7.0
public ImmutableValueClass(int id, string name, string remarks = null, int? parentId = default(int?))
    =&gt; (Id, Name, Remarks, ParentId) = (id, name ?? throw new ArgumentNullException(nameof(name)), remarks, parentId);

// C# 6
public ImmutableValueClass(int id, string name, string remarks = null, int? parentId = default(int?))
{
    Id = id;
    if (ReferenceEquals(name, null))
        throw new ArgumentNullException(nameof(name));
    Name = name;
    Remarks = remarks;
    ParentId = parentId;
}

