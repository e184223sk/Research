
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System.Threading.Tasks;
using UnityEngine.UI;

public class sample : MonoBehaviour
{
    private List&lt;Direction&gt; Dirlist = new List&lt;Direction&gt;();     //Listの宣言

    int posx = 0, posy = 0;       //初期座標
    int dir = 0;        //初期方向
    string D = "↑";     //初期方向表示
    public Text position;       //座標表示
    public Text direction;      //MIRSの方向

    void Start()
    {
        position.text = "座標は（ 0 , 0 ）";
        direction.text = "方向は　↑";
    }

    void Update()
    {
        position.text = "座標は（ " + posx.ToString() + " , " + posy.ToString() + " ）";
        switch (dir%4)
        {
            case 0:
                D = "↑";
                break;

            case 1:
                D = "→";
                break;

            case 2:
                D = "↓";
                break;

            case 3:
                D = "←";
                break;
        }
        direction.text = "方向は　" + D;
    }

    void Dir(int i)
    {
        switch (i%4)
        {
            case 0:     //上を向いている状態
                posy += 1;
                break;

            case 1:     //右を向いている状態
                posx += 1;
                break;

            case 2:     //下を向いている状態
                posy -= 1;
                break;

            case 3:     //左を向いている状態
                posx -= 1;
                break;
        }
    }

    public enum Direction
    {      //enumの定義
        Straight,
        Back,
        Left,
        Right
    }

    public void StraightButton()
    {
        if ((posy &lt; 6 &amp;&amp; dir%4 == 0) || (posx &lt; 6 &amp;&amp; dir%4 == 1) 
            || (posy &gt; 0 &amp;&amp; dir%4 == 2) || (posx &gt; 0 &amp;&amp; dir%4 == 3))
        {
            Dirlist.Add(Direction.Straight);
            Dir(dir);
        }
        else 
        {
            Debug.Log("Error");
        }
    }

    public void BackButton()
    {
        if ((posy &gt; 0 &amp;&amp; dir % 4 == 0) || (posx &gt; 0 &amp;&amp; dir % 4 == 1) 
            || (posy &lt; 6 &amp;&amp; dir % 4 == 2) || (posx &lt; 6 &amp;&amp; dir % 4 == 3))
        {
            Dirlist.Add(Direction.Back);
            Dir(dir + 2);
            dir += 2;
        }
        else
        {
            Debug.Log("Error");
        }
    }

    public void RightButton()
    {
        if ((posx &lt; 6 &amp;&amp; dir % 4 == 0) || (posy &gt; 0 &amp;&amp; dir % 4 == 1) 
            || (posx &gt; 0 &amp;&amp; dir % 4 == 2) || (posy &lt; 6 &amp;&amp; dir % 4 == 3))
        {
            Dirlist.Add(Direction.Right);
            Dir(dir + 1);
            dir += 1;
        }
        else
        {
            Debug.Log("Error");
        }
    }

    public void LeftButton()
    {
        if ((posx &gt; 0 &amp;&amp; dir % 4 == 0) || (posy &lt; 6 &amp;&amp; dir % 4 == 1) 
            || (posx &lt; 6 &amp;&amp; dir % 4 == 2) || (posy &gt; 0 &amp;&amp; dir % 4 == 3))
        {
            Dirlist.Add(Direction.Left);
            Dir(dir - 1);
            dir += 3;
        }
        else
        {
            Debug.Log("Error");
        }
    }

    public void SearchButton()
    {
        Search();
    }

    async void Search()
    {
        foreach (Direction dir in Dirlist)
        {
            Debug.Log(dir.ToString());
            await Task.Delay(1000);
        }
    }

    public void clear()
    {
        Dirlist.Clear();
        posx = 0;
        posy = 0;
        dir = 0;
    }
}


