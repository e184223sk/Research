More than 1 year has passed since last update.前回はUnityでListの中身を表示する方法について解説しました。
UnityでListの中身を表示する
今回はその続き(?)です。　前回は矢印を押したら表示されるだけでしたが、今回は矢印を押したらその方向を向き、その方向に進む機能を実装します。
　ここでポイントなのが、常に上を基準として左右を決めるのではなく、向いた方向を基準としてどう動くのかということです。例えば　→　→　と入力したのならば右に2進むのではなく、右を向いて1進み、さらにそこから右を向き1進みます。（つまり　→　↓　と動く）＊ここで注意なのが特に　↓　をはさんだ時です。下を向いた状態のとき、左右は反転します。つまり　←　なら右、　→　なら左のほうへ向きます。
＊向きは相対的ですが、座標は絶対的です。　すごくややこしいですが、今回はこれを実装していこうと思います。なお、初期座標は　( 0 , 0 )　、初期の向きは　↑　とし　6　×　6 のフィールド上のみ移動できるものとします。（一回の動作で1動く）Unity2019.2.0f1
Windows10 64bit全体の流れは前回とあまり変わっていません。ポイントだけ押さえて説明していきます。基本的にはその時の向きに応じて実行する処理を変更しています。現在の向きを取得し、その方向を基準とした前後左右に動く。そして、向きを更新するといっった流れになています。向きを決める関数は以下のようになっています。まず、変数iについて、上を0、右を1、下を2、左を3　と定めます。そのi(向き)の値によって前に進むという処理を場合分けしています。条件が　i%4　となっているのは処理が終わり、現在向いている方向を更新する際にiの値がどんどん加算されていくためです。座標を決める関数は以下のようになっています(↑ボタン)まっすぐ前に進むときの条件としては次の4つです。
1.　上を向いているときy座標は5以下
2.　右を向いているときx座標は5以下
3.　下を向いているときy座標は1以上
4.　左を向いているときx座標は1以上↑ボタンでは現在の向きで向きの関数を実行していますが、→ボタンでは+1、下ボタンでは+2、←ボタンでは+3した値で実行されます。↑ボタンを基準として同じ関数を向きを変えることでどの方向でも使用可能にしているためです。また、この関数が実行された後、現在の向きを→ボタンでは+1、下ボタンでは+2、←ボタンでは+3して更新します。↑ボタンではこの処理はありません。以下が全体のソースコードです。それぞれのボタンの関数を当てはめることで実際に動かすことができます。いかがでしたでしょうか。説明が難しく、わかりづらくなってしまった部分もあったかもしれません。相対的な処理は使うユーザーにとってもややこしく使う場面は少ないかもしれません。ですが、使うような場面があればぜひ参考にしてもらえると幸いです。


