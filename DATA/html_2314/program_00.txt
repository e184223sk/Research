        // 暗号化
        public static byte[] Encrypt(byte[]) bytes, string publickey)
        {
            // PEMフォーマットの公開鍵を読み込んで KeyParam を生成
            var publicKeyReader = new PemReader(new StringReader(publickey));
            var publicKeyParam = (AsymmetricKeyParameter)publicKeyReader.ReadObject();

            var RSA = new Pkcs1Encoding(new RsaEngine());
            // RSA暗号オブジェクトを初期化（第1引数trueは暗号化、falseは復号）
            RSA.Init(true, publicKeyParam);

            // 暗号化対象のバイト列・長さを渡し、暗号化した結果のバイト列を受け取る
            byte[] encrypted = RSA.ProcessBlock(bytes, 0, bytes.Length);

            return encrypted;
        }

        // 復号
        public byte[] Decrypto(byte[] cipher, string privateKey)
        {
            // PEMフォーマットの秘密鍵を読み込んで KeyParam を生成
            var privateKeyReader = new PemReader(new StringReader(privateKey));
            var privateKeyParam = (AsymmetricCipherKeyPair)privateKeyReader.ReadObject();

            var RSA = new Pkcs1Encoding(new RsaEngine());
            // RSA暗号オブジェクトを初期化（第1引数trueは暗号化、falseは復号）
            RSA.Init(false, privateKeyParam.Private);

            // 復号対象のバイト列・長さを渡し、復号した結果のバイト列を受け取る
            var decrypto = RSA.ProcessBlock(cipher, 0, cipher.Length);
            return decrypto;
        }

