前回はChrome拡張機能からファイルのダウンロードまでを投稿しました。
今回はその続きです。Chrome拡張機能とローカルプログラムとの連携について
今回はローカルプログラムをvisual studioで作ったC#のプログラムとします。まずは連携するための下準備をします。最初に連携するプログラムの配置場所を決めます。
今回は
c:\extensionSample\program
の配下に置くことにします。連携用JSONファイルを準備
場所に決まりはないですが連携用のjsonファイルをprogramフォルダの配下に配置するnameは連携に必要です。今回は「put.message」としています。pathにはプログラムのパスを指定します。allowed_originsは拡張機能のIDを指定します。
chromeのアドレスバーに「chrome://extensions」と入力して
前回追加した拡張機能のIDを記載します。レジストリに登録
次に、レジストリにjsonファイルを登録します。
コンピューター\HKEY_LOCAL_MACHINE\SOFTWARE\Google\Chrome\NativeMessagingHosts
にjsonファイルのnameに指定した「put.message」キーを作成する。
既定のデータにjsonファイルパスを指定する。
今回は「c:\extensionSample\program\program.josn」とします。
では実際にC＃のプログラムです。
（結構適当に書いています。ご容赦を。。。）特にこれと言って注意点はないと思います。System.Diagnostics.Debugger.Launch();
の箇所はデバックするときに便利なので付けています。ビルドしたらprogram.exeファイルを
C:\extensionSample\program\に配置します。次に「background.js」を修正します。chrome.runtime.sendNativeMessage([program.josnで指定したname],渡す値)
がローカルプログラム呼び出しの部分です。
データのやり取りはjson形式で行います。Chromeブラウザのアドレスバーに「chrome://extensions」と入力し
拡張機能を更新する。バックグランドページを開いて、ApplicationのLocal Storageから対象の拡張機能IDを選択する。
urllistにsample.txtの内容が入っていれば成功です。今回はここまで
次回はURL監視について書いていきます。（urlエンコードはいらなかったかな）


