

        // 次のFixedUpdateで砲台に適用するRotation値
        private Vector3 mTurretRotation = Vector3.zero;

        // GetMousePosition3d()から名称を変更
        public void CalRotation()
        {
            // カメラからマウスポインタの方向へRayを飛ばす
            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);
            if (mTempPlane.Raycast(ray, out mDistance))
            {
                // RayとmTempPlaneとの接点を取得
                Vector3 mousePosition3d = ray.GetPoint(mDistance);

                // 対象座標 - 観測座標 = 観測座標から対象座標へ向かうベクトル
                Vector3 direction = mousePosition3d - mTurretTrans.position;

                // 砲台の正面が対象を向いたときの角度を計算
                Quaternion quaternion = Quaternion.FromToRotation(transform.forward, direction);

                // 砲台の回転軸をYのみに制限する
                mTurretRotation = quaternion.eulerAngles;
                mTurretRotation.x = 0.0f;
                mTurretRotation.z = 0.0f;

/*
                // Y軸の値について、インスペクタ上のRotationでは-180~180の表記だが、コード上では0~360で計算されている
                if (mTurretRotation.y &lt; 30.0f)
                {
                    mTurretRotation.y = 30.0f;
                }
                else if (mTurretRotation.y &gt; 270.0f)
                {
                    mTurretRotation.y = 30.0f;
                }
                else if (mTurretRotation.y &gt; 150.0f)
                {
                    mTurretRotation.y = 150.0f;
                }
*/
            }
        }


