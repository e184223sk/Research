More than 3 years have passed since last update.WPF標準の DataGrid は、マウスで列幅や順番の変更ができます。
この変更値を、保存したりリセットする、ユーザ コントロールを作成しました。※デザインテーマは、Material Design In XAML Toolkitを使っています。
（導入例）今回はテストなので、設定の保存には簡便な Visual Studio の ユーザ設定を使います。
プロジェクトの「設定」に、保存するキー名をstringで登録しておきます。"dataGrid1Columns"という名前を使います。実際の現場では、このVSのユーザ設定を使ったことは無いです。
設定ファイルの保存先が、C:\Users\(UserName)\AppData\Local\(CompanyName)\(appdomainname)_(eid)_(hash)\(version)\user.config などと凶悪なうえ、任意の場所にするには難しいので。Material Design Toolkit の PopupBox を作り、子要素にというメニューを作ります。
それぞれのClickイベントと、コントロールのLoadedイベントを定義します。partial コードに、依存プロパティとイベントの内容を記述します。操作対象となる DataGrid と、設定保存のキー名を受け取るためのプロパティ（DependencyProperty）を定義しています。XAMLに定義されている列順と列幅を取得し、メンバ変数に確保します。
この値が、デフォルトに戻すときの値になります。ユーザ設定から、保存されている設定値を読み取ります。
設定値は、DataGridColumnInfoクラスのコレクション（List&lt;DataGridColumnInfo&gt;）をXMLシリアライズした文字列になっています。
こいつをオブジェクトに戻した後、DataGrid の列プロパティを変更していきます。表示中の DataGrid の列情報を List&lt;DataGridColumnInfo&gt; に格納し、XMLシリアライズした値を、ユーザ設定に保存します。Loadedイベントで確保したデフォルト値で DataGrid の列を更新します。
ユーザ設定には、nullを保存します。作成したコントロール「GridColumnSetting」には、TargetGrid（対象DataGrid）と、SettingsKey（設定キー名）のプロパティを指定します。これだけで、DataGrid の列設定の保存・リセットが動くようになります。この例では、列幅と順序だけの操作に留まっていますが、列の非表示や、固定列の設定なども、簡単に行えると思います。
（そのような設定の場合、コントロールのUIを作るのが大変だけど）


