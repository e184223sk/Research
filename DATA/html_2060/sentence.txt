More than 1 year has passed since last update.私は入社2年目の駆け出し技術者です。
ある日上司がSQL初心者の私に頼み事をしてきました。
上司「ちょっと相談があるんやけど、、、」上司「今、DBにこんなテーブルがあるんだけど、」TABLE1上司「本来このテーブルのサービスIDカラムに対応するサービス名称があるんだけど、
使わんから、このCSVの対応表だけ作って終わりにしたんや」上司「でもやっぱりサービス名称これから使いそうやから、JOINで取れるようにCSVから対応表通りのテーブルを作ってくれない？」
上司「クライアント側にはCSVは定期的に変更してもいいって言っているから、テーブル作成するスクリプトやらなんやらをタスクスケジューラで定期実行してな」私「よくある話ですね。多分SQLのBulkInsert使えば一発なんでちょろいっすよｗｗｗ」私「よーし、ちゃっちゃとSQL書いちゃおー」
私「まずはテーブル作成して、」私「あとはBulkInsertして終いや！」
私「定期実行するから頭でTRUNCATEしとこ。」私「あとは"C:\hoge"にService.csvを置いて、、、実行！」
私「、、、え！？」ファイル"C:\hoge\Service.csv"を開けなかったので、一括読み込みできません。私「なんでや、、、」この後、ググりながらhogeフォルダのセキュリティ設定やDB側の設定をいじってみたのですが、1時間かけても結局できませんでした。
SQLサーバ認証を用いているとファイルのアクセス権がーとかBulkInsertで指定するパスはDBサーバ上のパスでーとかいろいろ書いてあり、もう何が本当かもわからなくなりました。
ちなみにこの作業は別のサーバ上で行いたかったのでDBサーバ上にcsvファイル置いてーはできません。もしかしたら、わかる人がやれば一瞬なのかもしれません。
設定でなんとかなるよっていう方はコメントでご教授お願いします。私「めんどくさいなー。帰ってゲームしたいなー」
私「もうC#でBulkInsertと同じことするコンソールアプリ作ったほうが早くね？（やけくそ）」
私「そのアプリのexeをタスクスケジューラで定期実行したら同じじゃん！（天才）」私「まずはデータクラスを作って」私「SQLServer操作クラスを作るか。今回の機能的にこれくらいあればいいかな」私「あとはCSV読み込み→テーブルTruncate→CSVデータInsertすれば終いや！」私「あとはこいつをメインから呼び出せばええんや」私「よっしゃできたやで」
私「ビルドして実行や！よしテーブル見てみよう！」SERVICE_TABLE私「よっしゃOKや！」
私「できましたよー。これを実行してくださいー！」
上司「ありがとうやで。（なんでこいつexe渡してきたんや？まぁできてるならいいか）」最後まで読んでいただきありがとうございます。
業務内容に関わる箇所や処理等、都合により一部割愛しております。
まだまだ経験が浅いのでクソみたいなコードです。（StringBuilder使え）
コメントでコードレビューお願い致します


