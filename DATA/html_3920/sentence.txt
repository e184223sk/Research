More than 1 year has passed since last update.C#でSeleniumおよびAppiumクライアントを開発したときの覚書です。クライアント開発・動作環境
OS : Windows10 Pro
IDE : Visual Studio 2017使ったバージョン
Selenium : 3.14
Appium : 4.0.0.4-betaSelenium API Reference
チートシート
逆引きクイックリファレンス（※C#はないが何となく雰囲気参考になる）
appium dot-net-driver wikiWebDriver 
各種ブラウザを外部からAPIで制御するためのドライバ。ブラウザごと（エンジンごと）に異なるWebDriverが存在する。SeleniumはWebDriverに対する入力を仲介してくれる。SeleniumからWebDriverへのアクセス方法 
アクセス方法は2種類あり、一つはクライアントからWebDriverに直接アクセスする方法。もう一つはSelenium Serverを介してWebDriverにアクセスする方法。
前者の場合、ブラウザに対応するWebDriverのインスタンスを使う。後者の場合、RemoteWebDriverインスタンスを使う。
RemoteWebDriverの場合、インスタンス作成時に引き渡すオプションでブラウザの種類を指定する。DesiredCapabilities 
Selenium3ではDriverOptions(を継承した)インスタンスに変更されている。昔のバージョンの記事を見るとDesiredCapabilitiesの指定がいっぱいあってちょっと混乱する。
インスタンス作成時のオプション指定みたいなもの。DriverOptionのプロパティに含まれていないCapability指定も存在する。
しかしどのブラウザでどういったCapability指定が使用できるかの調べ方がいまだによくわからない。どこかに一覧ないかなぁ。。WindowsのC#でクライアントを開発したときにMacのSafariやiPhoneのテストができるのか
実機があればできる。Mac上にSelenium Standalone Server、Appium Serverを立てて、それを仲介してRemoteWebDriverで操作する。スクリーンショットもWindows側にリモートで取得できる。便利！nugetパッケージnugetパッケージAppiumはSeleniumのラッパーであり、Selenium3.13以降にはAppium3.xでは対応しておらずAppium4.x以上が必要。現時点ではbeta版しかない。(2019/2/3時点)IEはハードコピーがうまく取得できない。（変に切れたり偏ったりする。謎。）
　→Windowsのディスプレイ表示比率を100%にするとうまく取れるようになります。（2019/2/17追記）IEはWindowsのディスプレイ表示比率が100%でないとクリックが効かない。(2019/2/17追記）IEは拡大率100%にしておかないと起動時エラーになる。（オプションで無視して起動もできるが、ただでさえうまく取得できないハードコピーがさらにいまいちになる。）IEはセキュリティ設定の保護モードのON/OFFがすべての設定（イントラ、インターネット、信頼済みサイト等）でどちらかに統一されている必要がある。
混在していると何故かウインドウやエレメントが取得できない。Javascriptで新規タブを作成する場合、ポップアップブロックがOFFになっている必要がある。Firefoxはインストール後に一度起動してある程度いじってからでないとエラーになる。
（具体的にどこをどうしたら大丈夫なのかは不明）メンバ定義や自分で作ったメソッドの定義を載せていないものもあるので考え方の参考程度に。参考にさせて頂いた記事 : C#でSelenium2を使用して主要ブラウザを動かしてみた要素が見つからなかったときに例外で返すのが個人的には好きじゃないです。
じゃあどう返せばいいのかと言われると難しいですが。nullよりは例外のほうがいいんですかね～。うーん。※waitはWebDriverWaitインスタンス。（以降全部同じ）正しく動いているのかちょっと疑問ですが一応。
StackOverFlowから拾ってきたモバイルのときにうまくいかない…。スクロールで動的にメニューが変化する場合や上部に固定のメニューフレームがあるパターンには対応していません。参考にさせて頂いた記事：
Chromeでも画面全体のキャプチャ―を取得する
【C#】画像の結合 (Util.ImageCombineVはこの記事をそのままコピペ)


