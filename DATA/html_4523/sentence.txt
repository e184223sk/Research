More than 1 year has passed since last update.ViewModelにある変更通知プロパティをReactivePropertyに書き変える時はどうすればいいのか。
タイプ別にまとめてみました。ViewModelの変更通知プロパティをアクセサごとに分類して比較します。
どの場合でも公開するReactivePropertyのアクセサは{ get; }で用が足ります。
またReactivePropertySlimの場合でも同様に動きます。最も一般的なクラス外からでも書込み可能なプロパティは通常のReactivePropertyに変えられます。👇クラス内外を問わず、直接書き込めずに、別のプロパティなどに依存して内容が変わるプロパティの場合です。
今回は上の読み書き可能プロパティに依存していますが、Model層のプロパティなどに依存する形が多いです。
変更通知プロパティの場合は依存先のプロパティに、このプロパティの変更通知イベント呼び出しも書く必要があります。
ReactivePropertyの場合はコンストラクタ内に依存先との関係を書く必要があります。👇クラス外からは書き込み不可、クラス内からは直接書き込み可能なプロパティの場合です。ReactivePropertyですと、書き込みだけ制限することはできませんし、ReadOnlyReactivePropertyにするとクラス内からも直接書き込めません。
そこでクラス内から書き込む時はprivateなReactivePropertyを使用した上で、クラス外には書き込め不可な形で公開します。
ここで上記と同じようにReactivePropertyからReadOnlyReactivePropertyを生成しても良いですが、より簡単な方法があります。
それはIReadOnlyReactivePropertyとしてReactivePropertyを公開することです。👇ただしクラス外からもキャストすれば変更出来てしまいます。
自作のプロジェクト内のViewに公開するだけなら問題ありませんが、ライブラリとして外部に出す場合などは注意が必要です。View側は常に.Valueを付け足すだけです。
書き込み不可の場合はTwoWayでバインディングすると例外が発生します。以下がViewとViewModelの全体コードです。
上記内容以外にViewModelないでプロパティを書き込むコマンドが含まれています。VisualStudio2017
.NET Framework 4.7.1
C#7.1
ReactiveProperty 5.2.0


