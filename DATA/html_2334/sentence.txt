More than 1 year has passed since last update.こんにちは、アドベントカレンダー2日目担当の避雷です。お仕事でエディタ拡張する必要があり、たまたまバージョン的にもUIElementsが使える感じだったので試しに使ってみたところ結構便利だったので紹介しますUnityが公式でサポートしている新しいUIデザインの手法です。xamlやCSSと同様の記法によってUIのデザインができます。Unity的にはuGUIからこちらへの移行を試みているようで、uGUIの方はスタメンから外されてpackageManagerへの流刑を食らっています。主観としてはUnityはゲームエンジンからソフトウェア開発プラットフォームになろうとしていて、ゲーム以外のUI設計を可能にしたい、みたいなモチベなのかなと思いました。
https://blogs.unity3d.com/jp/2019/04/23/whats-new-with-uielements-in-2019-1/右クリックから「UIElements Editor Window」を選択して元となるスクリプトを生成しましょう。Editorフォルダ無いじゃないと生成出来ないよって怒られるので注意。
デフォルトだとWindow/UIElementから先ほど作成したwindowを呼び出すことができます。

HelloWorldって生成されていますね。先ほど生成したC#を覗いてみましょう。なるほど、C#でもrootを根とした樹状構造を構築してUIを表現することが出来るみたいです。早速色々作ってみることにしましょう。これに関してはそのままLabelというクラスがあるのでこれをインスタンスしてAppendして行きます。コレでラベルを付けることが出来ます。label.text を用いれば後からテキストの変更もできます。ButtonというクラスがあるのでこれもインスタンスしてAppendします。Buttonコンストラクタの第一引数はイベントです。button.textでボタンのテキストを変更することが出来ます。TextFieldコンポネントを利用します。コンストラクタの引数はラベルの名前です。
入力された値を取るにはtextField.valueを用います。
textField.RegisterValueChangedCallbackを用いて変更時のコールバックを設定することもできます。textField.multilineから入力形式を変更することが出来ます。ついでに style.heightから入力欄の高さを調整しておくとそれっぽいでしょう。PopUpListというクラスがあるのでそれを使いましょう。コンストラクタの引数は第一が選択肢、第二が初期値です。
選択中のIdを取るには popupField.index、選択中の値を取るにはpopupField.valueを用います。
また、TextField同様コールバックを登録することもできます。VisualElementはVisualElementを親として持つことが出来ます。Unityのオブジェクト群やCSS同様にヒエラルキー構造を持たせることが出来るということですね。試しにmarginを設定してみます。ついでにborderLineも付けてみましょう先ほどまで作っていたUIの親をrootではなくこのelementにしてみます。描画結果はこんな感じです。
親要素であるelementの中に子要素のUIが入っていることがわかると思います。コレでC#オンリーでも雑にUIを組めるようになったのではないでしょうか？明日はUIをもうちょっとマシなレイアウトで表示するための「style」について考えてみましょう。


