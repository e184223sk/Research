
class Source {
  public int Id {get;set;}
  public int UseThisInt {get;set;}
  public InnerType Inner {get;set;}
  // other properties that the Destination class is not interested in
}
class InnerType {
  public int Id {get;set;}
  public int Height {get;set;}
  // more inner properties
}
class Destination {
  public int Id {get;set;}
  public int UseThisInt {get;set;}
  public int Height {get;set;}
  // more inner properties that should map to InnerType
}

//So many configuration and complicated....
Mapper.Initialize(cfg =&gt; {
    cfg.CreateMap&lt;source, destination=""&gt;();
    cfg.CreateMap&lt;innertype, destination=""&gt;();
});
var dest = Mapper.Map&lt;destination&gt;(src);
Mapper.Map(src.Inner, dest);
Mapper.Initialize(cfg =&gt; {
        cfg.CreateMap&lt;source, destination=""&gt;()AfterMap
                     ((src, dest) =&gt; Mapper.Map(src.Inner, dest));
        cfg.CreateMap&lt;innertype, destination=""&gt;();
    });
var dest = Mapper.Map&lt;destination&gt;(src);

