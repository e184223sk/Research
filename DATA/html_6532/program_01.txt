

        void ModifiedMain()
        {
            // 改良後
            var progressCounter = new Modify.ProgressCounter();
            var something = new Qiita.CounterOK.Something(progressCounter);
            something.Do();
        }

    public class Something
    {
        private readonly IProgressCounter _progressCounter = null;

        public Something(IProgressCounter progressCounter)
        {
            _progressCounter = progressCounter;
        }

        public void Do()
        {
            int maxCount = 10;
            // nullの代わりにNullObjectを渡してくる前提のため、nullチェックはしない。
            _progressCounter.MaxCount = maxCount;
            _progressCounter.Start();

            for (int i = 0; i &lt; maxCount; i++) 
            {
                // なんらかの処理

                // 進捗表示
                _progressCounter.Update(i + 1);
            }

            _progressCounter.End();
        }
    }

    public interface IProgressCounter
    {
        int MaxCount { get; set; }
        void Start();
        void Update(int count);
        void End();
    }

    public class ProgressCounter : IProgressCounter
    {
        public int MaxCount { get; set; }
        public void Start()
        {
            System.Console.WriteLine("処理開始");
        }

        public void Update(int count)
        {
            Console.WriteLine(count + "/" + MaxCount);
        }

        public void End()
        {
            System.Console.WriteLine("処理完了");
        }
    }

