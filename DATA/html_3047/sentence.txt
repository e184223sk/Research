More than 1 year has passed since last update.C#で作成したDLLをC++で呼び出そうとした場合、引数の受け渡しの部分で少しはまったので、まとめておきます。引数の型によって呼び出す構成が変わります。上述した通り、可変の文字列などは、普通の関数のように引数を受け渡す事ができない（もしかしたらできるかも･･･）ため、一旦ポインタで渡し、受け取り側で変換することが必要です。ポインタ型の引数を受け取り、Marshal.PtrToStringAutoでstring型に変換します。今回は以下のようにヘッダーを作成しました。
クラス内に関数ポインタ型の変数を宣言し、コンストラクタで変数に関数のポインタを格納します。hogeの引数の型がintなので、プリミティブ型であり、直接受け渡すことが可能です。C#とC++の型の違いに注意してください。
今回、自分がはまったのが、long型※の受け渡しでした。
型名は同じなのに、C#とC++でバイト数が異なるため、意図していない値になっていました。
（整数型・文字型のサイズは自身の処理系に依存します。）C++にlong型は存在しません。整数型はintであり、short/long/long longは整数型のサイズを指定する修飾子です（unsigned/signedは符号の有無を指定する修飾子）。修飾子が使用されている場合にのみintを省略することができます。ポインタ型の引数を受け取り、Marshal.PtrToStringAutoでstring型に変換します。今回は以下のようにヘッダーを作成しました。
クラス内に関数ポインタ型の変数を宣言し、コンストラクタで変数に関数のポインタを格納します。hogeの引数の型がconst wchar_t*なので、CString型をCStringWに変換し、GetString()を行うことでポインタを渡しています。参考にさせていただいたサイトです。C#とC++の型について
プリミティブ型とオブジェクト型


