
    public class TesRecord : TesBase
    {
        public TesHeader Header { get; }
        public Dictionary&lt;string, TesList&lt;TesField&gt;&gt; Fields { get; } = new Dictionary&lt;string, TesList&lt;TesField&gt;&gt;();

        public TesRecord(TesFileReader fr)
        {
            Header = new TesHeader(fr);
            OutputItems.Add(Header);
            while (!fr.EOF)
            {
                TesField field = ReadField(fr) ?? new TesField(fr.GetField());
                AddField(field);
            }
       }
        public void AddField(TesField field)
        {
            OutputItems.Add(field);
            if (!Fields.ContainsKey(field.Signature))
                Fields.Add(field.Signature, new TesList&lt;TesField&gt;());

            Fields[field.Signature].Add(field);
        }
        public virtual TesField ReadField(TesFileReader fr)
        {
            TesField result = null;

            string id = fr.GetTypeID();
            switch (id)
            {
            }
            return result;
        }
    }

