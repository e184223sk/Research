More than 3 years have passed since last update.前回の記事 : http://qiita.com/muzudho1/items/6fbe1681a7e14dcac3f2コンシューマの受信ループを　別スレッドにしてから　おかしくなった気がする。じゃあ、コンシューマの受信ループは　別スレッドにせず、
プロデューサーの送信を　別スレッドにしたらいいのか？試すだけ試そう。まず、ev_loop がエラーを出すソースコード。これを改造することにする。現状にしているが、次のように変える。何が違うのか、という気はする。ちょっと待て。無限ループの外で接続して、無限ループの中で切断してないか？
これでは　接続と切断の１対１対応が　崩れている。いったん、tamesi33a2_cpp.cpp のこの部分を直そう。tamesi35a2_cpp.cppうーむ。なんか　いっぱい動いてるな。止めるか。起動するプログラム番号も間違えてるし。うーむ。ためしに値を出力したら　うまくいったぞ？このエラーも分からずじまい。接続部分を直そう。あれっ、直してこれか。じゃあ、C++ と C# で送受信テストしてみよう。なんで　こんなにプロセス立ってるんだろな。tamesi33a2_cs.csキュー名も選べるように改造しよう。 tamesi34_cs.cs ではそういう機能を入れていた。tamesi34_cs.csQueryDeclare の引数は false の方が良かったんだろうか？こんなコードでいいんだろうか？改造し終わってから気づいたんだが、バックグラウンドで動かすプログラムでは　標準入出力で設定なんかできない。こんなんでいいんだろうか？そういえば今まで標準入力を捨ててなかった気がするな。チャンネル宣言の引数が４つfalse なのもおかしい。もっと情報を出そう。おかしいじゃないか。false が４つ入っている。あっ！ durable、0スタートじゃなくて 1スタートに変えたんだった！ここまでは　おっけー。1 にしたら、動いてるじゃないか。動いてないぜ。こういうエラーなんだろうけど。じゃあ false にしたらいいのか？tamesi34_cs.exetamesi35a2_cs.exeWindows10 なら動いてるのにな。これを Ubuntu16.04 で実行するとプログラム以外の理由で落ちてるのか？うーむ、この引数の順序はあってるんだろうか？順序はあってるし、どうも UBUNTU だと false と言ってくる。 UBUNTU のときだけ全部 false にしてみるか？落ちているようだ。というのは、どういうエラーなのか？（public class OperationInterruptedException）「www.rabbitmq.com」
https://www.rabbitmq.com/releases/rabbitmq-dotnet-client/v2.8.6/rabbitmq-dotnet-client-2.8.6-client-htmldoc/html/type-RabbitMQ.Client.Exceptions.OperationInterruptedException.htmlUbuntu16.04 だと、TCP接続がなぜ切れるのか？こういうテスト用の標準出力を全部　コメントアウトしてみよう。それでもダメ。うーむ。「PRECONDITION_FAILED - inequivalent arg 'durable' for queue #370」（MassTransit/MassTransit）
https://github.com/MassTransit/MassTransit/issues/370「Issue in establishing connection with Rabbit MQ」（stack overflow）
http://stackoverflow.com/questions/31762563/issue-in-establishing-connection-with-rabbit-mq「Correct config using rabbitmq as celery backend」（stack overflow）
http://stackoverflow.com/questions/27623940/correct-config-using-rabbitmq-as-celery-backendこれを、みたいに、複数指定できるようにしたい。こんな感じだろうか。うーむ。これでもダメか。なんかキューは durable だけ指定すれば全部消せた。usidaze が返ってきている。Ｃ＃では成功か？じゃあ-Windows10 ではデフォルトで durable
-Ubuntu ではデフォルトで durable+autodeleteか。そんなん分からんなあ。ジョブを止めておく。tamesi35a2.cpp をバックグラウンドで動かそう。標準入出力は捨てることが重要。あれっ？ これ、_cs だぜ。そして　カレント・ディレクトリが違う。プロンプトが返ってきてしまった。困るぜ。[Entery]キーを押してみる。動いているようだ。


