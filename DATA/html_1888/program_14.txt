
// 親1
public ICollection&lt;TChild&gt; GetEagerWithParent&lt;TChild, TParent&gt;(TChild child, TParent parent, string parentPropName)
{
    PropertyInfo parentPropInfo = child.GetType().GetProperty(parentPropName);
    Func&lt;TChild, TParent, TChild&gt; mappingFunc = (_child, _parent) =&gt;
    {
        parentPropInfo.SetValue(_child, _parent);
        return _child;
    };
    var query = ToQuery();
    return DatabaseManager.ExcecuteQueryAndFetchResults(query, mappingFunc, parameters);
}
// 親2
public ICollection&lt;TChild&gt; GetEagerWithParent&lt;TChild, TParent1, TParent2&gt;(TChild child, TParent1 parent1, string parentPropName1, TParent2 parent2, string parentPropName2)
{
    PropertyInfo parentPropInfo1 = child.GetType().GetProperty(parentPropName1);
    PropertyInfo parentPropInfo2 = child.GetType().GetProperty(parentPropName2);

    Func&lt;TChild, TParent1, TParent2, TChild&gt; mappingFunc = (_child, _parent1, _parent2) =&gt;
    {
        parentPropInfo1.SetValue(_child, _parent1);
        parentPropInfo2.SetValue(_child, _parent2);
        return _child;
    };
    var query = ToQuery();
    return DatabaseManager.ExcecuteQueryAndFetchResults(query, mappingFunc, parameters);
}

