
// 子1
public ICollection&lt;TParent&gt; GetEagerWithChildren&lt;TParent, TChild&gt;(TParent parent, TChild child, string childrenPropName)
{
    var result = new Dictionary&lt;long, TParent&gt;();
    PropertyInfo parentIdPropInfo = parent.GetType().GetProperty("Id");
    PropertyInfo childrenPropInfo = parent.GetType().GetProperty(childrenPropName);
    Func&lt;TParent, TChild, TParent&gt; mappingFunc = (_parent, _child) =&gt; {
        long parentId = (long)parentIdPropInfo.GetValue(_parent);
        if (!result.ContainsKey(parentId))
        {
            result.Add(parentId, _parent);
        }
        TParent parentInDict = result[parentId];
        ICollection&lt;TChild&gt; children = (ICollection&lt;TChild&gt;)childrenPropInfo.GetValue(parentInDict);
        if (children == null) childrenPropInfo.SetValue(parentInDict, new List&lt;TChild&gt;());
        if (_child != null) ((ICollection&lt;TChild&gt;)childrenPropInfo.GetValue(parentInDict)).Add(_child);
        return default;
    };
    var query = ToQuery();
    DatabaseManager.ExcecuteQueryAndFetchResults(query, mappingFunc, parameters);
    return result.Values;
}
// 子2
public ICollection&lt;TParent&gt; GetEagerWithChildren&lt;TParent, TChild1, TChild2&gt;(TParent parent, TChild1 child1, string childrenPropName1, TChild2 child2, string childrenPropName2)
{
    var result = new Dictionary&lt;long, TParent&gt;();
    PropertyInfo parentIdPropInfo = parent.GetType().GetProperty("Id");
    PropertyInfo childrenPropInfo1 = parent.GetType().GetProperty(childrenPropName1);
    PropertyInfo childrenPropInfo2 = parent.GetType().GetProperty(childrenPropName2);

    Func&lt;TParent, TChild1, TChild2, TParent&gt; mappingFunc = (_parent, _child1, _child2) =&gt; {
        long parentId = (long)parentIdPropInfo.GetValue(_parent);
        if (!result.ContainsKey(parentId))
        {
            result.Add(parentId, _parent);
        }
        TParent parentInDict = result[parentId];

        ICollection&lt;TChild1&gt; children1 = (ICollection&lt;TChild1&gt;)childrenPropInfo1.GetValue(parentInDict);
        if (children1 == null) childrenPropInfo1.SetValue(parentInDict, new List&lt;TChild1&gt;());
        if (_child1 != null) ((ICollection&lt;TChild1&gt;)childrenPropInfo1.GetValue(parentInDict)).Add(_child1);

        ICollection&lt;TChild1&gt; children2 = (ICollection&lt;TChild1&gt;)childrenPropInfo2.GetValue(parentInDict);
        if (children2 == null) childrenPropInfo2.SetValue(parentInDict, new List&lt;TChild2&gt;());
        if (_child2 != null) ((ICollection&lt;TChild2&gt;)childrenPropInfo2.GetValue(parentInDict)).Add(_child2);

        return default;
    };
    var query = ToQuery();
    DatabaseManager.ExcecuteQueryAndFetchResults(query, mappingFunc, parameters);
    return result.Values;
}

