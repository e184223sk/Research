public  class XorShift {
    private uint t = 0u;
    private uint x = 123456789u;
    private uint y = 362436069u;
    private uint z = 521288629u;
    private uint w = 88675123u;

    public XorShift() { }

    public XorShift(int seed) {
        w = (uint)seed;
    }

    public uint Next() {
        t = x ^ (x &lt;&lt; 11);
        x = y;
        y = z;
        z = w;

        w = (w ^ (w &gt;&gt; 19)) ^ (t ^ (t &gt;&gt; 8));
        return w - 1;
    }

    public uint Next(uint maxValue) {
        return Next() % maxValue;
    }

    public uint Next(uint minValue, uint maxValue) {
        return minValue + (Next() % (maxValue - minValue));
    }

    public void NextBytes(byte[] buffer) {
        for(int i = 0; i &lt; buffer.Length; i++)
            buffer[i] = (byte)Next(256);
    }

    public double NextDouble() {
        return (double)Next() / uint.MaxValue;
    }
}

