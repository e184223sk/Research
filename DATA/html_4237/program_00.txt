static class TaskExtention {
  //返り値なし
  public static void NoWait(this Task task, Action&lt;Task&gt; action = null, CancellationToken? ct = null)
  {
    if (action != null) {
      if (ct != null) {
        task.ContinueWith(action, (CancellationToken)ct).ConfigureAwait(false);
      } else {
        task.ContinueWith(action).ConfigureAwait(false);
      }
    } else {
      if (ct != null) {
        task.ContinueWith(_ =&gt; {}, (CancellationToken)ct).ConfigureAwait(false);
      } else {
        task.ContinueWith(_ =&gt; {}).ConfigureAwait(false);
      }
    }
  }

  //返り値あり
  public static void NoWait&lt;TResult&gt;(this Task&lt;TResult&gt; task, Action&lt;Task&lt;TResult&gt;&gt; action = null, CancellationToken? ct = null)
  {
    if (action != null) {
      if (ct != null) {
        task.ContinueWith(action, (CancellationToken)ct).ConfigureAwait(false);
      } else {
        task.ContinueWith(action).ConfigureAwait(false);
      }
    } else {
      if (ct != null) {
        task.ContinueWith(_ =&gt; {}, (CancellationToken)ct).ConfigureAwait(false);
      } else {
        task.ContinueWith(_ =&gt; {}).ConfigureAwait(false);
      }
    }
  }
}

