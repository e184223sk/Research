
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System.IO;    // File読み込み用

/// &lt;summary&gt;
/// CSVを読み込むためのクラス
/// &lt;/summary&gt;
public class CSVReader : MonoBehaviour
{
    private TextAsset csvFile;
    private List&lt;string[]&gt; csvDatas = new List&lt;string[]&gt;(); // CSVの中身を格納するリスト
    [Tooltip("ファイルパスを格納する変数"),FileDesignation,SerializeField] private string filePath;

    void Start()
    {
        LoadCSV();
    }

    /// &lt;summary&gt;
    /// CSVファイルの読み込みを行う関数
    /// &lt;/summary&gt;
    private void LoadCSV()
    {
        filePath = Path.GetFileNameWithoutExtension(filePath);
        csvFile = Resources.Load(filePath)as TextAsset;
        StringReader csvReader = new StringReader(csvFile.text);

        while(csvReader.Peek() &gt; -1)
        {
            string cell = csvReader.ReadLine();
            csvDatas.Add(cell.Split(','));  // ','を目安にリストに格納していく   
        }
        csvReader.Close();
    }

    /// &lt;summary&gt;
    /// 読み込んだCSVのデータをすべて受け渡す関数
    /// &lt;/summary&gt;
    /// &lt;returns&gt;CSVデータの中身全ての文字列&lt;/returns&gt;
    public List&lt;string[]&gt; GetCsvDatas()
    {
        return csvDatas;
    }

    /// &lt;summary&gt;
    /// 読み込んだCSVデータの指定列を受け渡す関数
    /// &lt;/summary&gt;
    /// &lt;param name="lineNum"&gt;行番号&lt;/param&gt;
    /// &lt;returns&gt;CSVデータの指定列の文字列&lt;/returns&gt;
    public string[] GetCsvLine(int lineNum)
    {
        return csvDatas[lineNum];
    }

    /// &lt;summary&gt;
    /// 読み込んだCSVの指定されたセルの文字列を受け渡す関数
    /// &lt;/summary&gt;
    /// &lt;param name="lineNum"&gt;行番号&lt;/param&gt;
    /// &lt;param name="columnNum"&gt;列番号&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public string GetCsvCell(int lineNum, int columnNum)
    {
        return csvDatas[lineNum][columnNum];
    }
}

