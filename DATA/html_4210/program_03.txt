
using System;
using System.Collections.Generic; // List
using Microsoft.Quantum.Simulation.Core;
using Microsoft.Quantum.Simulation.Simulators;

namespace Quantum.Jones_figEight_5th
{
    class Driver
    {
        static void Main(string[] args)
        {
            using (var qsim = new QuantumSimulator())
            {
                var listVals = new List&lt;double&gt;();

                for (int i = 0; i &lt; 4; i++)
                {
                    int sum0s = 0;

                    for (int j = 0; j &lt; 1000; j++)
                    {
                        var num0s = HadamardTest_figEight_5th.Run(qsim, 1000, Result.Zero, i).Result;
                        sum0s += (int)num0s;
                    }

                    double avgNum0s = sum0s / 1000.0;
                    Console.WriteLine($"{i}: avgNum0s={avgNum0s,-4}");

                    double p0 = avgNum0s / 1000.0;
                    listVals.Add(2 * p0 - 1);
                }

                double eta = 2.0 * Math.Cos(0.20 * Math.PI);
                double  s2 = Math.Sin(0.40 * Math.PI);
                double  s4 = Math.Sin(0.80 * Math.PI);

                Console.WriteLine($"Re:{eta * eta / (s2 + s2 + s4) * (s2 * listVals[0] + s2 * listVals[2] + s4 * 1.0),-4}");
                Console.WriteLine($"Im:{eta * eta / (s2 + s2 + s4) * (s2 * listVals[1] + s2 * listVals[3]),-4}");
            }

            Console.ReadKey();
        }
    }
}

