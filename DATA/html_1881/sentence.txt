More than 1 year has passed since last update.どうしてこんなにわかりにくいのだろうか。。
ここを見たけどうまくいかず
https://docs.microsoft.com/ja-jp/azure/key-vault/tutorial-net-create-vault-azure-web-appこれに挑戦してようやく
https://news.mynavi.jp/article/zeroazure-23/KeyVaultにServiceBusの接続情報をシークレットという形式で格納することで、Functionsにハードコーディングせずに済むという話。KeyVaultにFunctionsがシークレット情報ください、と問い合わせるわけだが、当然誰彼構わずわたすわけではなく。特定の認証された人にだけ渡すようになっている。これがマネージドID。１．KeyVault（キーコンテナ）を作成
２．作成したキーコンテナにシークレット情報を格納
⇒この時シークレット識別子というのがアサインされるので、これをメモしておく。

３．VisualStadioでキーコンテナからシークレット情報を参照するコーディングを行う
（VSの新規プロジェクト＞ASP.Core Web アプリケーションのテンプレートを指定）４．デプロイして、テスト！してもつながりません。（500系エラー）５．デプロイしたWebAppsのIDを選択し、こんな感じでオンに切り替えて保存
６．キーコンテナ＞アクセスポリシーから「+アクセスポリシーの追加」を選択７．さっきWebAppsでオンに切り替えたときに作成されたIDが選択可能になっているはずなので、選択してシークレットの一覧、参照を有効にして保存。
８．もう一回VSからデプロイして、打鍵テスト。正常に表示！
Azure Key Vault を使用してサーバー アプリのシークレットを管理する.NET Core の公式の Key Vault クライアントは、Microsoft.Azure.KeyVault NuGet パッケージの KeyVaultClient クラスです。 これを直接使用する必要はありませんが、— と ASP.NET Core の AddAzureKeyVault メソッドを使用すると、起動時にコンテナーのすべてのシークレットを Configuration API に読み込むことができます。 この手法では、残りの構成で使用するものと同じ IConfiguration インターフェイスを使用して、すべてのシークレットに名前を指定してアクセスできます。 AddAzureKeyVault を使用するアプリには、コンテナーに対する Get と List の両方のアクセス許可が必要です。マイナビのサイトもMSのLearningでも実装方法はほぼ同じなことに気づきました。
MSのLearningだとProgram.cs内でわずかにこれだけ。キーコンテナを丸ごと読み込んで、必要なものだけアプリ内で抽出して(SeacretNameとの一致するものだけ)利用してるんですね。


