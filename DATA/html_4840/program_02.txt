
public static class MyLinq
{
    /// &lt;summary&gt;
    /// シーケンスの現在値と合計値のペアを返します。
    /// &lt;/summary&gt;
    public static IEnumerable&lt;(int i, int sum)&gt; MyAggregate(this IEnumerable&lt;int&gt; source)
    {
        if (source == null)
        {
            throw new ArgumentNullException(nameof(source));
        }

        IEnumerable&lt;(int i, int sum)&gt; _MyAggregate()
        {
            foreach (var i in source)
            {
                yield return (i, source.Sum());
            }
        }

        return _MyAggregate();
    }
}

class Program
{
    static void Main(string[] args)
    {
        int counts = 0;

        Enumerable
            .Range(5, 100)
            .Do(x =&gt; counts++)
            .MyAggregate()
            .ToArray();

        Console.WriteLine($"列挙回数は {counts} 回です。");
        // 列挙回数は 10100 回です。
    }
}

