            int limit = 1000000;

            // 使用する値をランダムに並び替える
            var rnd = new Random();
            var vals = new List&lt;int&gt;();
            for (int i = 0; i &lt; limit; ++i) {
                vals.Add(i);
            }
            for (int i = 0; i &lt; vals.Count - 1; ++i) {
                var idx = rnd.Next(vals.Count - 1 - i);
                var tmp = vals[vals.Count - 1];
                vals[vals.Count - 1] = vals[idx];
                vals[idx] = tmp;
            }

            // SortedSet
            var sw = new Stopwatch();
            Console.WriteLine("〇 SortedSet");
            Console.WriteLine("・ 追加");
            sw.Start();
            var sorted = new SortedSet&lt;int&gt;();
            foreach (var v in vals) {
                sorted.Add(v);
            }
            sw.Stop();
            Console.WriteLine($"{sw.Elapsed.TotalSeconds}sec");

            Console.WriteLine("・ 削除");
            sw.Restart();
            foreach (var v in vals) {
                sorted.Remove(v);
            }
            sw.Stop();
            Console.WriteLine($"{sw.Elapsed.TotalSeconds}sec");

            // BPlusTree
            Console.WriteLine("〇 BPlusTree");
            Console.WriteLine("・ 追加");
            sw.Restart();
            var tree = new BPlusTree&lt;int&gt;();
            foreach (var v in vals) {
                tree.Add(v);
            }
            sw.Stop();
            Console.WriteLine($"{sw.Elapsed.TotalSeconds}sec");

            Console.WriteLine("・ 削除");
            sw.Restart();
            foreach (var v in vals) {
                tree.Remove(v);
            }
            sw.Stop();
            Console.WriteLine($"{sw.Elapsed.TotalSeconds}sec");

