More than 1 year has passed since last update.C# の色関連で便利な拡張メソッド＋αの一覧です。
なおこの記事では単にColorといった場合、System.Windows.Media.Color(WPF)を表しているとします。
一部の使用方法例にある色つきの四角形は後述するInline Color Picker拡張機能で表示しています。中身がほとんど同じなのに、名前空間の違う2つのColorの相互変換です。文字列からColorへ変換するメソッドです。
"#ADFF2F"や"Cyan"といった文字列からColorに変換します。
標準ライブラリの変換メソッドColorConverter.ConvertFromStringは返り値がobjectで使いづらいため、それをColorに変換します。
また変換失敗時に、例外ではなくnullかColorの初期値(透明色"#00000000")を返す2つのメソッドです。Colorsの定義済み色一覧を取得します。
なぜか標準ライブラリには無いのでリフレクションを使用します。Colorが定義済みかどうか判定するメソッドと、定義済みならその名称を取得するメソッドです。
実は定義済み色には同色で別名の色が含まれています。そのため、名前順で後にくる方の色名はこのメソッドでは無視されます。使用方法例です。（C# Interactive）
Colorだけに限定されるわけではないですが、Freezableオブジェクトを Freeze()して返すだけのメソッドです。
パフォーマンス上Freezeできるオブジェクトは基本的にFreezeして返したほうがよいです。XAML上ではBackground="Red"と書けるので意識しませんが、本来WPFではコントロールの色指定はColor直接ではなく、Brushを使用します。単色の場合はSolidColorBrushを使用するので、それへの変換メソッドです。ColorのR, G, Bプロパティはbyte型(0~255)ですが、それをdouble型(0~1)に変換します。
また、正規化したRGB値からColorを作成します。Hue(色相)・Saturation(彩度)・Brightness(明度)で色を表現するHSB色空間との変換メソッドです。
Brightnessの代わりにValueを使ってHSV色空間とも言われますが、中身は同じです。使用方法例です。（C# Interactive）
なぜかSystem.Drawing.Colorにはあった、RGB ColorからのHSBの各パラメータの個別取得メソッドです。
上記のHSB色構造体への変換を経由して取得します。色相・彩度・明度を変更した色を計算して返すメソッドです。
ある色をベースに明度・彩度を維持して、120°ずつ色相を変更した3色が欲しい、といった時に便利です。使用方法例です。（C# Interactive）Inline Color Picker -marketplace.visualstudio.comこんな感じで色コードまたは色名を書くとその横に小さく色を表示してくれる拡張機能です。C#でもXAMLでも、C# Interactiveウインドウでも表示されます。
コード上で色指定する時に便利。VisualStudio2019
.NET Framework 4.8
C#8


