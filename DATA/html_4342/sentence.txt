More than 1 year has passed since last update.Windowsフォームはきれいにコードを書くのが難しい？らしいので、
Model-View-Presenterというパターンで構成要素を分割してみました。画面はこんな感じでラベル２つとボタンを１つ配置。
これがViewになります。
先ほどのフォーム(View)に情報を流し込むためのインターフェースを定義。
ボタンを押したときにメッセージボックスを出したいので、デリゲートも入れます。
こいつがフォーム(View)に実装されることになります。次はPresenter。こいつがViewで表示される情報を準備します。
コンストラクタでViewを受け取り、さっきのインターフェース経由で情報を渡します。Viewのコードビハインド。
IMainFormを実装することで、Presenterからの情報の受取口を付けてやります。フォームを表示する時に、フォームに紐づいたPresenterも作ってやります。ボタンも含めうまく動いているようです。
MVPらしき方法で動かすことができました。
雰囲気としては、MVVMのデータバインドがやっていることを自分で組んでいるような感じがしました。
今回以下のような疑問が残りました。色々サンプルを探してみたのですが、ゴチャゴチャした画面は見当たらなかったです。
WinForms対応のMVP用の部品も色々あったのですが、ディスコンのものばかりで試していません。
もうちょっと凝った画面も作ってみようかなと思います。mrts/winforms-mvp: Windows Forms example of the Passive View variant of the Model-View-Presenter pattern
https://github.com/mrts/winforms-mvp


