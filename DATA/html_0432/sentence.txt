GitHubに上げています。ただ、勉強用に作成したものなので、実務などでは使用しないで下さい。
暗号化処理の実装とか、バイナリファイルの読込・書込、タプルやディクショナリを勉強したり、GitHubへの反映の仕方を知りたかったのも動機です。開発環境は以下の通りです。・更新履歴
11/23 新規公開
11/25 リファクタリングの結果などを追記こんな風に書く。.NETのドキュメントに書いてある通り、それぞれ基底クラスがTextReaderとTextWriterという名前の通り、テキストを扱う。バイナリファイルは、BinaryReader、BinaryWriterを使う。この辺りで結構はまった。BinaryWriterだと以下のように書く。CryptoStreamを使用している場合、BinaryReaderのLengthが取れなかった。seekができないようで、要するに今どの場所を読み取っているかという情報が取れないらしい。なので、復号化処理で入力データのseekが終了しているかどうかは、EndOfStreamExceptionの発生を例外処理で補足する方法しかできなかった。
→ CopyToを使うことで一応回避（但し、メモリを使うので注意）。
あと、usingをすっきりさせた。(2020/11/25追記)Rijndael = AESという認識だったので、Rijndaelクラスを使用したが、Aesクラスもあるようで、Microsoftのドキュメント(英語）では後者を使用すべきと書かれている…。You should use the Aes algorithm instead of Rijndael.Rijndael Class実際、MSのドキュメントでは、Aes aes = Aes.Create()のように、Aes.CreateのFactoryが使用されている。ちなみに、日本語サイトは機械翻訳のようで、意味が全然理解できないくらい文章が変でした。まぁ今回はC#の自習でしたが、実務で暗号化が必要な時は、基本的には自作しない方が無難だと思います。以上です。


