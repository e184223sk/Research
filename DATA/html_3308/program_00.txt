using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using MySql.Data.MySqlClient;
using NLog;
using NLog.Config;
using NLog.Targets;

namespace ＜名前空間＞
{
    static class Program
    {
        /// &lt;summary&gt;
        /// アプリケーションのメイン エントリ ポイントです。
        /// &lt;/summary&gt;
        [STAThread]
        static void Main()
        {
            // １．configuration を生成 
            var config = new LoggingConfiguration();

            // ２．targetを生成し configurationに設定 
            var consoleTarget = new ColoredConsoleTarget();
            config.AddTarget("console", consoleTarget);

            var fileTarget = new FileTarget();
            config.AddTarget("file", fileTarget);

            // ３．targetのプロパティを設定
            consoleTarget.Layout = @"${date:format=HH\\:MM\\:ss} ${logger} ${message}";
            fileTarget.FileName = "${basedir}/file.txt";
            fileTarget.Layout = "${message}";

            // ４．規則を定義
            var rule1 = new LoggingRule("*", LogLevel.Trace, consoleTarget);
            config.LoggingRules.Add(rule1);

            var rule2 = new LoggingRule("*", LogLevel.Debug, fileTarget);
            config.LoggingRules.Add(rule2);

            // ５．構成を有効化
            LogManager.Configuration = config;

            // ６．_log.*でログ生成し放題にする
            Logger _log = LogManager.GetCurrentClassLogger();

            // ログのサンプル
            _log.Trace("Sample trace message");
            _log.Debug("Sample debug message");
            _log.Info("Sample informational message");
            _log.Warn("Sample warning message");
            _log.Error("Sample error message");
            _log.Fatal("Sample fatal error message");

            // これを入れると、コンソールでキーを押すまでプログラム一時停止
            Console.ReadKey();

            // ミューテックス生成
            _log.Info("mutex生成");
            using (System.Threading.Mutex mutex = new System.Threading.Mutex(false, Application.ProductName))
            {

                // 二重起動を禁止する
                if (mutex.WaitOne(0, false))
                {
                    Application.EnableVisualStyles();
                    Application.SetCompatibleTextRenderingDefault(false);

                    //ログインウィンドウ表示
                    _log.Trace("FormLogin.ShowDialog");
                    FormLogin frm = new FormLogin();
                    if (System.Windows.Forms.DialogResult.OK == frm.ShowDialog())
                    {
                        //メインウィンドウを表示
                        Application.Run(new FormMain());
                    }
                }
                else
                {
                    _log.Trace("多重起動エラー");
                    MessageBox.Show("多重起動できません。");
                }

            }            



        }
    }
}




