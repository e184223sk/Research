
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Dog : Enemy {

    Rigidbody2D R2D;

    protected override void Init(){
        base.Init ();
        R2D = gameObject.GetComponent&lt;Rigidbody2D&gt; ();
        R2D.velocity = transform.rotation * Vector2.up * speed;
    }



    /// &lt;summary&gt;
    /// Sets the stats.
    /// &lt;/summary&gt;
    /// &lt;param name="stats"&gt;[0] 向き&lt;/param&gt;
    public override void SetStats (int[] stats)
    {
        base.SetStats (stats);
        if (stats.Length == 0) {
            transform.rotation = Quaternion.AngleAxis (90, Vector3.forward);
        } else {
            transform.rotation = Quaternion.AngleAxis (stats [0] * 45, Vector3.forward);
        }


        if (stats.Length == 0) {
            GetComponent&lt;Rigidbody2D&gt; ().constraints = RigidbodyConstraints2D.FreezePositionY;
        }else{
            if (stats [0] == 0 || stats [0] == 4) {
                GetComponent&lt;Rigidbody2D&gt; ().constraints = RigidbodyConstraints2D.FreezePositionX;
            } else if (stats [0] == 2 || stats [0] == 6) {
                GetComponent&lt;Rigidbody2D&gt; ().constraints = RigidbodyConstraints2D.FreezePositionY;
            } else {
                Debug.Log ("Invalid Rotation");
            }
        }
    }

    protected virtual void Update(){
        //速度が0だったら強制的に動かします
        if (GetComponent&lt;Rigidbody2D&gt; ().velocity == Vector2.zero) {
            if (R2D != null)
            {
                R2D.velocity = transform.rotation * Vector2.up * speed;
            }
        }

        //斜め移動の場合、xとyの値を揃えます
        if (R2D.velocity.x != 0 &amp;&amp; R2D.velocity.y != 0) {
            R2D.velocity = new Vector2 (R2D.velocity.x / Mathf.Abs (R2D.velocity.x), R2D.velocity.y / Mathf.Abs (R2D.velocity.y));
        }

        //速度を正規化します
        if (GetComponent&lt;Rigidbody2D&gt;().velocity.magnitude != 1)
        {
            if (R2D != null)
            {
                R2D.velocity = R2D.velocity.normalized * speed;
            }
        }
    }

    void OnCollisionEnter2D(Collision2D coll){
        R2D.velocity = R2D.velocity.normalized * speed;
        //プレイヤーとぶつかったら何かします
        if (coll.gameObject.tag == "Player") {
            cmpPlayer.TakeDamage (10000);
        }
    }
}

