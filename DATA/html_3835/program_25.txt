
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class BGMPlayer{
    static AudioSource audioSource;
    static BGMData BGM_Data;
    static bool Fadeoutflag = false;
    static bool Fadeinflag = false;
    static float maxVolume;
    static float fadeouttime;
    static float fadeintime;

    public static void SetAudioSource(AudioSource source)
    {
        audioSource = source;
    }

    public static void SetBGM(BGMData data)
    {
        BGM_Data = data;
    }

    //BGM再生(音量設定なし)
    public static void PlayBGM(string keyname)
    {
        if (IsPlaying() == false)//シーン再読み込みのために消さない
        {
            audioSource.clip = BGM_Data.BGMList[keyname];
            audioSource.Play();
            audioSource.volume = BGM_Data.BGMVolumeList[keyname] * PlayerPrefs.GetFloat("BGMVolume", 1);
            maxVolume = audioSource.volume;
        }
    }

    // volumeの変更
    public static void ChangeVolume(float volume){
        if (volume &lt; 0) volume = 0;
        else if (volume &gt; 1) volume = 1;

        audioSource.volume = BGM_Data.BGMVolumeList[audioSource.clip.name] * PlayerPrefs.GetFloat("BGMVolume", 1);
    }

    public static float GetMaxVolume()
    {
        return maxVolume;
    }

    //BGM停止
    public static void StopBGM()
    {
        audioSource.Stop();
    }

    //フェードアウト
    public static void FadeoutBGM(float pertime=0.009f)
    {
        Fadeinflag = false;
        Fadeoutflag = true;
        fadeouttime = pertime;
    }

    public static float GetFadeoutBGMtime()
    {
        return fadeouttime;
    }

    //フェードイン
    public static void FadeinBGM(string keyname,float pertime=0.008f)
    {
        if (IsPlaying() == false &amp;&amp; audioSource.clip != BGM_Data.BGMList[keyname])//シーン再読み込みのために消さない
        {
            StopBGM();
        }
        if (audioSource.clip != BGM_Data.BGMList[keyname])
        {
            audioSource.clip = BGM_Data.BGMList[keyname];
            audioSource.Play();
        }
        maxVolume = BGM_Data.BGMVolumeList[keyname] * PlayerPrefs.GetFloat("BGMVolume", 1);
        Fadeoutflag = false;
        audioSource.volume = 0;
        Fadeinflag = true;
        fadeintime = pertime;
    }

    public static float GetFadeinBGMtime()
    {
        return fadeintime;
    }

    public static void ResetBGM()
    {
        audioSource.clip = null;
    }

    public static bool IsFadeinBGM()
    {
        return Fadeinflag;
    }

    public static void SetFadeinBGM(bool flag)
    {
        Fadeinflag = flag;
    }

    public static bool IsFadeoutBGM()
    {
        return Fadeoutflag;
    }

    public static void SetFadeoutBGM(bool flag)
    {
        Fadeoutflag = flag;
    }

    public static void SetBGMVolume(float volume)
    {
        audioSource.volume = volume;
    }

    public static float GetBGMVolume()
    {
        return audioSource.volume;
    }

    public static bool IsPlaying()
    {
        return audioSource.isPlaying;
    }
}

