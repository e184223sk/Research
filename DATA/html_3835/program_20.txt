

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class Main : MonoBehaviour {

    public GameObject[] Objects;
    public GameObject EnemiesParent;

    public GameObject ScreenPanel;

    public GameObject preLoadMenuHole;

    private GameObject objPlayer;
    private Player cmpPlayer;


    void Start(){
        Init ();
    }

    void Init(){
        objPlayer = GameObject.FindGameObjectWithTag ("Player");
        cmpPlayer = objPlayer.GetComponent&lt;Player&gt; ();
    }

    /// &lt;summary&gt;
    /// Reset the specified WaitTime.
    /// &lt;/summary&gt;
    /// &lt;param name="WaitTime"&gt;Wait time.&lt;/param&gt;
    public void Reset(float WaitTime = 1){
        //ShiftBulletを消す
        GameObject[] objs = GameObject.FindGameObjectsWithTag ("UnshiftableItem");
        foreach (GameObject obj in objs) {
            if (obj.GetComponent&lt;StageObject&gt; ().sotype == SOType.ShiftBullet) {
                obj.GetComponent&lt;StageObject&gt; ().Die ();
            }
        }
        StartCoroutine (ResetCoroutine (WaitTime));
        FadeIn ();
    }

    public void LoadMenu(){
        //ShiftBulletを消す
        GameObject[] objs = GameObject.FindGameObjectsWithTag ("UnshiftableItem");
        foreach (GameObject obj in objs) {
            if (obj.GetComponent&lt;StageObject&gt; ().sotype == SOType.ShiftBullet) {
                obj.GetComponent&lt;StageObject&gt; ().Die ();
            }
        }
        Instantiate (preLoadMenuHole, objPlayer.transform.position, Quaternion.identity);
        StartCoroutine (LoadMenuCoroutine ());
    }

    IEnumerator ResetCoroutine(float WaitTime){
        Time.timeScale = 0.35f;
        BGMPlayer.FadeoutBGM ();
        yield return new WaitForSeconds (WaitTime);
        Time.timeScale = 1f;
        SceneManager.LoadScene (SceneManager.GetActiveScene().name);
    }

    float LoadMenuDelay = 2;
    string LoadSceneName = "Title";
    IEnumerator LoadMenuCoroutine(){
        yield return new WaitForSeconds (LoadMenuDelay);

        SceneManager.LoadScene (LoadSceneName);
    }

    void Update () {
        Vector3 MousePos = Input.mousePosition;
        if(Input.GetKeyDown(KeyCode.Alpha0))
            SpawnObject(Objects[0], EnemiesParent, MousePos);

        if(Input.GetKeyDown(KeyCode.Alpha1))
            SpawnObject(Objects[1], EnemiesParent, MousePos);

        if(Input.GetKeyDown(KeyCode.Alpha2))
            SpawnObject(Objects[2], EnemiesParent, MousePos);

        if(Input.GetKeyDown(KeyCode.Alpha3))
            SpawnObject(Objects[3], EnemiesParent, MousePos);

        if(Input.GetKeyDown(KeyCode.Alpha4))
            SpawnObject(Objects[4], EnemiesParent, MousePos);

        if(Input.GetKeyDown(KeyCode.Alpha5))
            SpawnObject(Objects[4], EnemiesParent, MousePos);
    }

    //オブジェクトをステージに生成します。
    //ひとまずposはscreenpoint
    void SpawnObject(GameObject obj, GameObject parent, Vector3 pos){
        pos.z = 10;
        Vector3 wpos = Camera.main.ScreenToWorldPoint (pos);
        Instantiate (obj, wpos, Quaternion.identity, EnemiesParent.transform);
    }

    //フェードイン
    public void FadeIn(){
        ScreenPanel.GetComponent&lt;Animator&gt; ().SetBool ("FadeIn", true);
    }
}

