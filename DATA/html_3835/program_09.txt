
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Pig : Dog{
    public GameObject prePigLazer;
    public bool host;

    LineRenderer[] LRs;
    EdgeCollider2D[] EC2Ds;
    GameObject[] PigLazers;

    List&lt;GameObject&gt; Pigs;

    protected override void Init ()
    {
        base.Init ();
        Pigs = SOManager.FindStageObjects (transform.parent.gameObject, SOType.Pig);
        host = true;
        foreach (GameObject Pig in Pigs) {
            if (Pig.GetComponent&lt;Pig&gt; ().host &amp;&amp; Pig != gameObject) {
                host = false;
            }
        }
        LRs = new LineRenderer[Pigs.Count];
        EC2Ds = new EdgeCollider2D[Pigs.Count];
        PigLazers = new GameObject[Pigs.Count];
        if (host) {
            for (int i = 0; i &lt; Pigs.Count; i++) {
                PigLazers[i] = Instantiate (prePigLazer, transform.parent);
                LRs[i] = PigLazers[i].GetComponentInChildren&lt;LineRenderer&gt; ();
                EC2Ds[i] = PigLazers[i].GetComponentInChildren&lt;EdgeCollider2D&gt; ();
            }
            SetLinePosition ();
        }
    }

    protected override void Update(){
        base.Update ();
        if (host) {
            SetLinePosition ();
        }
    }

    void SetLinePosition(){
        Vector3[] poses3 = new Vector3[Pigs.Count + 1];
        Vector2[] poses2 = new Vector2[Pigs.Count + 1];
        for(int i=0; i &lt; Pigs.Count; i++){
            poses3 [i] = Pigs [i].transform.position;
            poses2 [i] = Pigs [i].transform.position;
        }
        poses3 [poses3.Length - 1] = poses3 [0];
        poses2 [poses2.Length - 1] = poses2 [0];
        for (int i = 0; i &lt; Pigs.Count; i++) {
            LRs [i].SetPosition (0, poses3 [i]);
            LRs [i].SetPosition (1, poses3 [i + 1]);
            Vector2[] ecpos = { poses2 [i], poses2 [i + 1] };
            EC2Ds[i].points = ecpos;
        }
    }
}

