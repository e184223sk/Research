
private void Submit_Click(object sender, RoutedEventArgs e)
{
    try
    {
        MessageBinding messageAPI = new MessageBinding();
        ActionElement actionElement = new ActionElement();
        SecurityElement securityElement = new SecurityElement();
        UsernameTokenElement userNameTokenElement = new UsernameTokenElement();
        TimestampElement timeStampElement = new TimestampElement();

        var threadType = new ThreadType();
        var threadTypeAddressee = new ThreadTypeAddressee();
        var content1 = new content();
        var threadTypeFolder = new ThreadTypeFolder();
        var threadTypeFollow = new ThreadTypeFollow();
        var messageThreadType = new MessageCreateThreadType();
        var messageThreadsRequestType = new MessageCreateThreadsRequestType();

        actionElement.actionValue = "MessageCreateThreads";
        timeStampElement.Created = DateTime.UtcNow;
        timeStampElement.Expires = timeStampElement.Created.AddDays(8);

        // 送信者
        userNameTokenElement.Username = this.Account.Text.ToString(); //送信者のﾕｰｻﾞｰｱｶｳﾝﾄ;
        userNameTokenElement.Password = this.Password.Text.ToString(); //送信者のﾕｰｻﾞｰﾊﾟｽﾜｰﾄ;
        securityElement.usernameToken = userNameTokenElement;

        // Soapヘッダー
        messageAPI.action = actionElement;
        messageAPI.security = securityElement;
        messageAPI.timeStamp = timeStampElement;

        // ダミー情報
        threadType.id = "dummy";
        threadType.version = "dummy";

        // フォルダー
        threadTypeFolder.id = "dummy";
        threadType.folder = new ThreadTypeFolder[1];
        threadType.folder[0] = threadTypeFolder;

        // コメント
        threadTypeFollow.id = "dummy";
        threadType.follow = new ThreadTypeFollow[1];
        threadType.follow[0] = threadTypeFollow;

        // 標題
        threadType.subject = this.Subject.Text.ToString();//標題

        // 本文
        content1.body = this.Content.Text.ToString();//本文
        threadType.content = content1;

        // 確認フラグ
        threadType.confirm = false;

        // 宛先
        int i = 0;
        var ids = this.UserId.Text.Split(',');
        threadType.addressee = new ThreadTypeAddressee[ids.Length];
        foreach (var id in ids)
        {
            threadTypeAddressee = new ThreadTypeAddressee();
            threadTypeAddressee.user_id = id;
            threadTypeAddressee.name = "dummy";
            threadType.addressee[i] = threadTypeAddressee;
            i += 1;
        }

        // メッセージの送信
        messageThreadType.thread = threadType;
        messageThreadsRequestType.create_thread = new MessageCreateThreadType[1];
        messageThreadsRequestType.create_thread[0] = messageThreadType;

        ThreadType[] res = messageAPI.MessageCreateThreads(messageThreadsRequestType);

        if (res.Any())
        {
            MessageBox.Show(res[0].id.ToString() + "のメッセージIDが作成されました。");
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine(ex.Message);

    }
}

