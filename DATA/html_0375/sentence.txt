本記事は「令和時代の基礎文法最速マスター Advent Calendar 2020」にてC#での基礎文法をまとめて記載した記事となります。
初心者の方の役に立てれば幸いです。まずは基本的なコードを確認してみましょう。プログラムの処理に関係しない、プログラムに関する説明などを記載する場合には以下のように//もしくは/**/を使用してソースコード内にコメントを埋め込みます。プログラムはclass内のMainメソッドという特別なメソッドから始まります。このメソッドは、アプリケーション起動時に必ず最初に呼び出されます。Mainメソッド内のWriteLine()もメソッドであり、引数として渡した文字列を表示します。ユーザー側で定義する場合は基本的に以下のように書きます。プログラムの設計図の役割を持ちます。
publicやprotectedを用いて「継承」や「多態性」という機能を使用することができます。classはcsファイル内に記述しますが、C#ではファイル名とクラス名は同一である必要性はありません。また、１つのcsファイル内に複数のclassを記述することも可能です。予めプログラミング言語側で用意されている「組み込み型」には以下のような種類があります。また、先ほどのような自分で作成したclassを基にした変数も使用可能です。
これを「ユーザー定義型」と呼びます。++という、変数に対して1を足す専用の演算子がインクリメント演算子というものです。主にループ処理などで使用されます。インクリメント演算子には前置インクリメントと後置インクリメントがあります。違いは処理にする変数にて、1を足した後の結果を使用するか、足す前の値を使用するかで違いがあります。また、変数に対して1を足す`インクリメント演算子に対して、変数に対して1を引くデクリメント演算子というのも存在しています。使い方はインクリメント演算子と変わりません。アクセス修飾子は外部からそのclassやメソッド、変数を見たときに、使用できるか否かを決めます。他にもprotectedがありますが、こちらは継承の機能を使用する際に使います。名前空間（namespace）とは、同じ名前が存在する（名前衝突）現象を防ぐ役割を持ちます。例えば以下のように書くと名前の重複でエラーが起きます。しかしnamespaceを使うことによって名前衝突を防ぐことができます。呼び出す時は名前空間付きで呼び出しましょう。これを「完全修飾名」と言います。usingというキーワードを使用することで、修飾名を省略して書くことができます。この機能をusingディレクティブと呼びます。配列の初期化には様々な方法があります。条件分岐の処理を行う際に使用する構文です。こちらも条件分岐などを行う際に使用すると便利な構文です。enumとは列挙型と呼ばれる機能で、特定の値のみを取るようなものに対して使用します。switch文は指定した変数の値によって処理を切り替えます。C#7.0からは以下のように型による分岐もできます。これはどちらもループ処理を行う際に使用する構文です。まずはwhileから見てみましょう。例えば条件式の部分にtrueと書くとどこかでbreakを書かなくては無限ループとなります。次にfor文です。こちらは、ループ処理に使用する変数の宣言・初期化と条件式、変数の値の更新をセットにして書くことができます。例えば、以下のように配列の要素を参照するときなどに使用できます。foreachを使うと、配列の各要素にアクセスして処理を行うのが楽になります。例外を投げる場合にはthrowを使用します。また、その例外を処理するにはtry ~ catchを使用します。更に詳しくC#について知りたい方は以下のスライドを見てみてください～また、私の心の中で密かに師匠と崇めている岩永さんの技術ブログも非常におすすめです。それでは良きC#ライフを！


