using AngleSharp;
...
namespace SeiyuSale
{
    public class WebScraper
    {
        public async Task&lt;IEnumerable&lt;SaleDay&gt;&gt; GetSaleDaysAsync()
        {
            // 対象ページを読み込み
            const string _targetUrl = "https://www.seiyu.co.jp/service/5off/";
            var config = Configuration.Default.WithDefaultLoader();
            var context = BrowsingContext.New(config);
            var doc = await context.OpenAsync(_targetUrl);

            // セールの月日を取得
            var saleDays = doc.QuerySelectorAll("li.off_calendar_item").Select(_ =&gt;
            {
                return new SaleDay
                {
                    Month = int.TryParse(_.QuerySelector("span.off_calendar_month").InnerHtml.Replace("/", ""), out var month) ? month : 0,
                    Day = int.TryParse(_.QuerySelector("span.off_calendar_day").InnerHtml, out var day) ? day : 0,
                };
            });

            // 年をまたぐかどうか
            var isExtendingYears = saleDays.Select(_ =&gt; _.Month).Distinct().All(_ =&gt; _ == 1 || _ == 12);

            // セールの年を設定して返す
            // （対象ページには年は表示されていないのでこちらで設定する）
            var currentYear = DateTime.Now.Year;
            return saleDays.Select(_ =&gt;
            {
                _.Year = isExtendingYears &amp;&amp; _.Month == 1 ? currentYear + 1 : currentYear;

                return _;
            }).ToList();
        }
    }

    public class SaleDay
    {
        public int Year { get; internal set; }
        public int Month { get; internal set; }
        public int Day { get; internal set; }

        public DateTime StartDateTime
        {
            get
            {
                if (System.DateTime.TryParse($"{Year}/{Month}/{Day}", out var result))
                {
                    return result;
                }
                else
                {
                    throw new Exception($"Unknown Date [{Year}/{Month}/{Day}].");
                }
            }
        }

        public DateTime EndDateTime { get { return StartDateTime.AddDays(1); } }

        // 以下iCalendar用の項目
        public string UniqueId { get { return StartDateTime.ToString("yyyyMMdd"); } }

        public string Summary { get; } = "西友5%OFF";

        public string Description { get; } = "セゾンカードご利用で5%OFF。毎月5,20日は5%OFF開催日。";
    }
}

