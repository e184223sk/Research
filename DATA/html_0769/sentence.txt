デスクトップにテキストでおいてあったけどなくしそうだったのでメモ。
※参考にしないでください初回
Enable-Migrationsアップデート用ファイル作成
Add-Migration 投稿名実行
Update-Database -Verbose　単体の場合：[Key]
　　　modelBuilder.Entity&lt;モデル名&gt;().HasKey(c =&gt; c.キー名);
　複合キー　：
　　　modelBuilder.Entity&lt;モデル名&gt;().HasKey(c =&gt; new { c.キー名１, c.キー名２ );
　　　[DatabaseGenerated(DatabaseGeneratedOption.None)]　
　自動生成しない（主キーなどを自分の思い通り設定したい場合便利？）
[DatabaseGenerated(DatabaseGeneratedOption.Identity)]　
　レコード追加時自動で割り振り
[DatabaseGenerated(DatabaseGeneratedOption.Computed)]　
　追加更新時に自動で割り振り　[Required]　[MaxLength(500)]　[ConcurrencyCheck]：指定したフィールドが楽観的排他チェックの対処対象となる　　　　　　
　　　　　　　　　　　DbUpdateConcurrencyExceptionが発生
[Timestamp]：行が更新追加された際にタイムスタンプが保存される行
　　　　　　　排他チェックの対象となる→DbUpdateConcurrencyExceptionが発生　モデルでは定義されてないけど、モデルのプロパティとして利用出来るよ！ってやつ？
 　　modelBuilder.Entity&lt;クラス名&gt;().Property("シャドウプロパティ名");利用方法
 　context.Entry(モデルが入った変数).Property("シャドウプロパティ名").CurrentValue = DateTime.Now;
 　var XXXX = context.XXXX.OrderBy(b =&gt; EF.Property(b, "シャドウプロパティ名"));
 　
 使い道が今一わからん・・・？　https://docs.microsoft.com/ja-jp/ef/core/modeling/relationships
　
　ア．完全に定義されたリレーションシップ　イ．外部キー プロパティ　ウ．単一のナビゲーション プロパティ　エ.データ注釈
　　①外部キーの名前が完全に定義されたリレーションシップのような命名に寄らない場合
　　[ForeignKey("外部キーの名前")]　オ．複合外部キー（Fluentを使うしかない？）
modelBuilder.Entity&lt;多の方のモデル名&gt;()
.HasOne(s =&gt; s.１の方のモデル名)
.WithMany(c =&gt; c.１の方のプロパティ名)
.HasForeignKey(s =&gt; new { s.多の方のプロパティ名, s.多の方のプロパティ名 });　カ．多対多　ＤＢから展開する場合は、アクセサを使わず直接バッキングフィールドに書き込まれる（ようだ）　作例のEnumの名前の方で保存されるよってこった　使い道は・・・？？　入れ子のように使える。実テーブルは一個OnModelCreatingに　 [Column(TypeName = "varchar(200)")]　decimal(5, 2)　nvarchar(max)　DateTime
　 使える種類はＤＢによって異なる　　　　[Key]
　　　　命名したい場合　ＤＢに計算列は作られないが使い道が・・・？　※特定のテーブルに関連付けはされない※SQL フラグメントを利用することも出来る。


