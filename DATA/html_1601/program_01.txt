
using Reactive.Bindings;
using Reactive.Bindings.Extensions;
using System;
using System.ComponentModel;
using System.Reactive.Disposables;

namespace RXTest
{
    class MainWindowViewModel : INotifyPropertyChanged, IDisposable
    {
        // メモリリーク対策。使用不可。
        public event PropertyChangedEventHandler PropertyChanged;

        private CompositeDisposable Disposable { get; } = new CompositeDisposable();

        public ReactiveProperty&lt;int&gt; Number { get; set; }
        public ReactiveCommand VMPlus1 { get; set; } = new ReactiveCommand();
        public ReactiveCommand MPlus10 { get; set; } = new ReactiveCommand();
        public ReactiveCommand SetNumber { get; set; } = new ReactiveCommand();

        RXTestModel model = new RXTestModel();

        public MainWindowViewModel()
        {
            Number = model.ToReactivePropertyAsSynchronized(m =&gt; m.Number).AddTo(Disposable);
            VMPlus1.Subscribe(_ =&gt; Number.Value += 1).AddTo(Disposable);
            MPlus10.Subscribe(_ =&gt; model.Number += 10).AddTo(Disposable);
            SetNumber.Subscribe(x =&gt; Number.Value = (int)x).AddTo(Disposable);
        }

        public void Dispose()
        {
            Disposable.Dispose();
        }
    }
}

