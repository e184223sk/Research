More than 1 year has passed since last update.WPFを手書きでバインドして実行すると上手くバインドされてなくて誤字がないか1文字ずつ見つめるのに疲れた人向けWPFアプリを作ろう！
→データ用意してコントロールを配置してプロパティを設定して値をバインドして・・・よしできた実行だ！
→コントロールの見た目が想定と違う、バインドしたはずなのに値が表示されない、Xaml内の不具合はエラーも出ない・・・
→／(^o^)＼Xamlを手で書くのは大変なうえにデバッグも辛い
なのでBlend for VisualStudioのGUIでレイアウトもバインドも両方やろう
（ViewとViewModelのバインドが今回のメイン）・「VisualStudio2019」インストール
・Nugetで「ReactiveProperty」をプロジェクトに追加
・「WPFアプリ」プロジェクトを新規作成まずはViewModelとModelを用意Modelは変更通知付きの(int)Numberプロパティのみ
ViewModelは(int)NumberプロパティをModelと双方向バインドして、バインドが正常か確認用のコマンドを3つ用意
あとはXaml側でViewModelのNumberと双方向バインドを実装すれば、画面の変更がModelに反映されるし、Modelの変更が画面に反映されるはず編集するXamlを右クリックしてBlendでデザイン開始
まずは必要なコントロールを配置
アセットウィンドウのコントロール一覧の中に標準コントロールがある
ドラッグアンドドロップで画面の大体の位置に配置
コントロールを4つ配置
以下の目的で使用する予定（まだ未実装）
ラベル：ViewModelのNumberとバインドして、値を表示
ボタン１：コマンドとバインドして、ViewModelのNumberの値を1増やす
ボタン２：コマンドとバインドして、ModelのNumberの値を10増やす
テキストボックス：コマンドとバインドして、MouseEnterイベント時にViewModelのNumberの値を入力された値に更新するテキストボックスの仕様が意味不明なのは以下の練習のため
・クリック以外のイベントにコマンドをバインド
・コマンドパラメーターの値をユーザ入力で変更今回の主目的の1つ目
Xamlファイルのテキストを直接変更すると、慣れないうちは思わぬエラーで喘ぎ苦しむことになるので、プロパティウィンドウから変更する
大体のサイズはマウスで調整して・・・
各コントロールを選んでプロパティウィンドウからコントロールサイズを細かく調節して・・・
同じくプロパティウィンドウから文字サイズや色を変更見た目は完成！あとは各項目をバインドするだけまずはコードビハインドでWindowのDataContextを設定ここまではいつも上手くいくんだよ！まずは一番簡単そうなところから
ラベルのContextをViewModelのNumberにバインドします

ラベルのプロパティウィンドウからContextの右にある四角をクリックして、「データバインディングの作成」を選択
バインディング作成画面が出るので、バインドの種類を「データコンテキスト」にすると、ViewModelのNumber変数が・・・

ありませんコンストラクタでDataContextを設定しているので、プログラムを「実行」したときはちゃんとDataContextが設定されて動作しますが、「編集画面」でどのViewModelをDataContextを使うのかを別に設定しないとだめですなので一度バインディング画面は閉じ、先に表示された通りの手順でDataContext設定を行いましょう
まずは「オブジェクト」メニューを開きます

そんなメニューないんだが？過去何度も同じ挑戦をしてはここでつまずいて諦めていましたが、ついに設定の仕方がわかりました
メニューを開こうとする前に、まずDataContextを追加するコントロールを選択します
今回はWindowコントロールを選択

するとヘッダーメニューの項目が変わります！
Label選択時

Window選択時
Window選択時に追加で表示される「形式」を開くと、目的の「デザイン時のDataContextを設定」が選択できます
デザイン時のDataContextを設定ウィンドウを開き、DataContextの種類を「DesignInstance」にします
すると、一覧に標準パッケージやNugetで追加したパッケージ等が表示され、その中に自分で作成したViewModel.csファイルがありません！コードを書いて保存しただけでは、ファイルや変数にBlendからアクセスできません
一度ビルドを完了させる必要があります！エラーがある場合はすべて解消し、ビルドを正常に完了させてから改めてDataContextの設定画面を開くと、

やっと念願のMainWindowViewModelが見つかりました山場は越えたのであとはバインドするだけです
少し前にやりかけた手順でラベルのContextのバインディングウィンドウを開きます
するとちゃんとプロパティが表示されているので、NumberのValueを選んでOK
※Number自身じゃなくNumber.Valueをバインドしているのは、ReactivePropertyだからです
ラベルのContextに{Binding Number.Value}と入力されました！こんなに手間かけてこれだけ？下準備はすでにできているので、ラベルの時と同様の手順でバインドできます

対象のボタンを選択→プロパティウィンドウのCommandのバインドメニューを開く→バインドの種類をデータコンテキストに→目的のコマンドプロパティを選択→OKボタン押下
2度目は楽
Modelで10増えるボタンも同様ボタンだけじゃなくテキストボックスにもコマンドをバインドしたい
マウスクリックだけじゃなく好きなイベント時の処理を書きたい
コマンドパラメータも渡したい
でもそもそもテキストボックスにはコマンドプロパティがない
どうすれば？全体の流れとしては、
１．テキストボックスにEventTrigerを追加して、好きなイベント（今回はマウスエンター）をフック
２．イベントフック時にコマンドを呼び出し
３．コマンドパラメーターを渡す
テキストボックスを選択し、画面左上のアセットウィンドウでビヘイビア一覧を表示
「EventToReactiveCommand」を選択して追加

追加したEventToReactiveCommandを選択し、プロパティウィンドウのEventNameを「MouseOver」に変更
※ここは直接プロパティウィンドウに文字を入力するしかなさそうなので、公式リファレンスからイベント名をコピペ推奨同プロパティウィンドウのCommandの右の四角からバインドウィンドウを開き、コマンドをバインド調べた限り、EventToReactiveCommandのCommandのパラメーターは対応するEventArgsクラスで固定の模様
なのでXamlはこれで完成で、ViewModel側をEventArgsパラメーターを受け取って処理できるように修正しますSetNumberプロパティ宣言時にMouseEventArgsを引数として設定
MouseEventArgsを数値に加工してくれる「なんでも屋」さんを作成
Subscribeで登録する処理を変更実行した結果がこちら
https://youtu.be/VT7C4x9zbp0
ボタンを押したら値が変わるし、テキストボックスに重ねたタイミングで値が変わります
NumberおよびCommandのバインドは正常にできましたちょっとしたバインド程度なら直接文字を入力したほうが早いですが、誤字等を気にしなくていいのは楽だな～と思いました　まる


