
/// &lt;summary&gt;
/// 円弧の計算結果保持クラス
/// OpenCvSharp.CircleSegmentでは核パラメータがfloatであった。
/// doubleで持ちたかったので自作
/// &lt;/summary&gt;
public class Arc
{
    /// &lt;summary&gt;
    /// 中心点
    /// &lt;/summary&gt;
    public Point2d Center { get; protected set; }
    /// &lt;summary&gt;
    /// 円弧の中心位置 X
    /// 返した先でOpenCvを参照しなくてもいいように残します
    /// &lt;/summary&gt;
    public double X { get { return Center == null ? double.NaN : Center.X; } }

    // &lt;summary&gt;
    /// 円弧の中心位置 Y
    /// 返した先でOpenCvを参照しなくてもいいように残します
    /// &lt;/summary&gt;
    public double Y { get { return Center == null ? double.NaN : Center.Y; } }
    /// &lt;summary&gt;
    /// 円弧の半径
    /// &lt;/summary&gt;
    public double Radius { get; set; }

    /// &lt;summary&gt;
    /// 検出した輪郭の座標リスト
    /// デバッグ用の意味合いが強い
    /// &lt;/summary&gt;
    public List&lt;Point2d&gt; Contour { get; protected set; }

    /// &lt;summary&gt;
    /// コンストラクタ
    /// &lt;/summary&gt;
    /// &lt;param name="center"&gt;&lt;/param&gt;
    /// &lt;param name="radius"&gt;&lt;/param&gt;
    /// &lt;param name="contour"&gt;&lt;/param&gt;
    public Arc(Point2d center, double radius, IEnumerable&lt;Point2d&gt; contour)
    {
        Center = center;
        Radius = radius;
        Contour = contour.ToList();
    }

    public Arc(ValueType x, ValueType y, double radius, IEnumerable&lt;Point2d&gt; contour) : this(new Point2d((double)x, (double)y), radius, contour) { }
}



