

List&lt;IWebElement&gt; elements = driver.FindElements(By.CssSelector("#list01 h3")).ToList();


//URLリストを定義する
List&lt;string&gt; url_list = new List&lt;string&gt;();

// 記事のタイトルをコンソールに表示
foreach (IWebElement ele in elements)
    {
        //url
        lsc_yoku_listdata_rec.Yoku_itemurl = ele.FindElements(By.TagName("a"))[0].GetAttribute("href");

        //Console.WriteLine(lsc_yoku_listdata_rec.Yoku_itemurl);         // アドレス

        //urlを配列に代入する
        url_list.Add(lsc_yoku_listdata_rec.Yoku_itemurl);

    }

//リストを配列に載せ替える
url_arr = url_list.ToArray();

//配列のカウント
url_count = url_arr.Count();

//カウント
int i = 0;

//URLを取出して個別ページの処理を行う
foreach (string url in url_arr)
{
// ループ処理の途中にキャンセルされたかを確認する
if (MainBackgroundWorker.CancellationPending)
{
//キャンセルされてた場合の処理
e.Cancel = true;
return;
}

lsc_yoku_listdata_rec.Yoku_itemurl = url;

driver.Navigate().GoToUrl(url);

driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(3);


// htmlファイルを読み込む
//var html = File.ReadAllText(driver.PageSource, System.Text.Encoding.UTF8);

// HTMLParserのインスタンス生成
var parser = new HtmlParser();

// htmlをパースする
var doc = parser.ParseDocument(driver.PageSource);

// idを指定してElement取得
var detail_element = doc.GetElementById("pageTop");

item_detail(detail_element);

i++;

// マルチスレット対応してテキストボックスを操作
Invoke(new Action&lt;string&gt;(status_mess), i +" / "+ url_count+ "件取得済み");

}


