using System;

namespace leibniz
{
    class func
    {
        static int MAX = 101; //小数点以下 100まで
        int[] pi = new int[MAX];
        int[] val = new int[MAX];
        public void val_def(int q)
        {
            int start = 4;
            for (int i = 0; i &lt; MAX; i++)
            {
                val[i] = start / q;
                start = (start % q) * 10;
            }
        }
        public void cal()
        {
            int p = -1, q = 1, num = 1;
            while (num &lt;= 1e8) //pi = 4 * (1/1 - 1/3 + 1/5 -  ~ 1/(1e8*2-1))
            {
                val_def(q);
                p *= -1;
                for (int i = MAX - 1; i &gt;= 0; i--)
                {
                    if (p == -1 &amp;&amp; pi[i] &lt; val[i])
                    {
                        pi[i - 1]--;
                        pi[i] += 10;
                        pi[i] += p * val[i];
                    }
                    else
                        pi[i] += p * val[i];

                    if (pi[i] &gt;= 10)
                    {
                        pi[i - 1] += pi[i] / 10;
                        pi[i] %= 10;
                    }
                }
                q += 2;
                num++;
                Array.Clear(val, 0, MAX);
            }
        }

        public void print()
        {
            Console.Write(pi[0] + ".");
            for (int i = 1; i &lt; MAX; i++)
            {
                Console.Write(pi[i]);
                if (i % 10 == 0)
                    Console.Write("  ");
                if (i % 50 == 0)
                    Console.Write("\n  ");
            }
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            double result = 0;
            DateTime begin, end;

            begin = DateTime.Now;
            func _func = new func();
            _func.cal();
            end = DateTime.Now;
            result += end.Subtract(begin).TotalSeconds;
            _func.print(); //use if you want to see 0 ~ MAX PI value
            Console.WriteLine("\n " + end.Subtract(begin).TotalSeconds + " sec");
        }
    }
}

