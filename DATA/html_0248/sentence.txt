C#のアプリで、シリアル通信テストを行うための方法を書き残すPC単体でCOMポートの接続テストをするために、com0comをインストールする「com0com」でGoogle検索(.jp)すると、この記事が1番目にヒットする
記事の説明通りに進めれば、問題なくインストールできるWindows10 21H1 にインストールしたツールの場所: "C:\Program Files (x86)\com0com\setupg.exe"今回は{COM20, COM21} と {COM22, COM23} の2セットペアを生成したドライバの更新が正常ではない場合、黄色三角のエラーマークが表示される解消するためには、Windows Update -&gt; "オプション更新プログラム" から所定のプログラムを更新する
（ドライバを更新する方法について、先述の記事に記載あり）COM21とCOM23をコンソールで監視するシリアルポートの設定はデフォルトのままとしたコードの詳細は記事の最下部の付録に掲載するウィンドウにはSendボタンのみが配置される
ボタンを押すと、COM20-&gt;COM21へ数字18桁、COM22-&gt;COM23へ英字18桁がそれぞれ送信されるTeraTermをCOM21, COM23に接続する
アプリのSendボタンを押すたびに、受け取ったコマンドがそれぞれのコンソールに表示される送信につかったMySerialPortクラス同様に
受信側もMySerialPortを使うTeraTermのときと違い、受け取ったByte配列は16進数で表示される例）　"1"は16進数31、 "A"は16進数41参考にさせていただいた記事にもある通り「com0com」はとても便利ですが、所詮は仮想ですので最終的な確認は本物のシリアルポートがあるPCでやりましょう。検証に使ったコードを掲載するコマンドを送信するSendメソッドだけを公開しているデータを受け取った際にイベントが発火し、Receiveメソッドにより受け取ったデータをbyte[]に格納するMySerialPortクラスのインスタンスを4つ生成する
com0comで設定した4つのポート名をコンストラクタの引数に与えているボタンにはイベントハンドラSend(object sender, RoutedEventArgs e)が紐づいており
COM20からは数字18桁、COM22からは英字18桁が送信されるcom0comで20と21はペアになっているので、20から送信した内容は21のポートで受信される
（COM22-&gt;COM23も同様）


