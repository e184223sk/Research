internal class DateCommand : CommandBase
{
    // 全体に返すか、聞いてきた人だけに返すかの設定
    public override bool IsBroadcast =&gt; false;

    // HelpCommandで使用される、このコマンドの説明
    public override (string, string) DefaultCommandAndHelpMessage =&gt; ("date", "日にちと曜日を表示");

    public DateCommand()
    {
        // どういう日本語に、どれぐらいの優先度で引っ掛けたいか。
        // ほかのコマンドで同じ単語で引っかかった場合、優先度順に選ばれる。
        RegisterKeyword(CommandPriority.Low, "何日");
        RegisterKeyword(CommandPriority.Low, "日付");
        RegisterKeyword(CommandPriority.Low, "曜日");
    }

    // 実際に頑張って結果を返す部分。
    // DefaultCommandまたはRegisterKeywordで選ばれたときしか呼ばれない。
    public override ValueTask&lt;string&gt; CreateOutputAsync(string user, string channel, string filteredKeyword, string rawWords)
    {
        if (rawWords.Contains("一昨日") || rawWords.Contains("おととい") || rawWords.Contains("おとつい"))
        {
            return new ValueTask&lt;string&gt;($"明日は{(DateTime.Now - TimeSpan.FromDays(1)).ToString("gyyyy年MM月dd日(dddd)")}。");
        }
        else if (rawWords.Contains("昨日") || rawWords.Contains("前日") || rawWords.Contains("きのう"))
        {
            return new ValueTask&lt;string&gt;($"明日は{(DateTime.Now - TimeSpan.FromDays(1)).ToString("gyyyy年MM月dd日(dddd)")}。");
        }
        else if (rawWords.Contains("明日") || rawWords.Contains("翌日") || rawWords.Contains("あした") || rawWords.Contains("あす"))
        {
            return new ValueTask&lt;string&gt;($"明日は{(DateTime.Now + TimeSpan.FromDays(1)).ToString("gyyyy年MM月dd日(dddd)")}。");
        }
        else if (rawWords.Contains("明後日") || rawWords.Contains("あさって"))
        {
            return new ValueTask&lt;string&gt;($"明後日は{(DateTime.Now + TimeSpan.FromDays(2)).ToString("gyyyy年MM月dd日(dddd)")}。");
        }
        else if (rawWords.Contains("明々後日") || rawWords.Contains("明々後日") || rawWords.Contains("しあさって"))
        {
            return new ValueTask&lt;string&gt;($"明々後日は{(DateTime.Now + TimeSpan.FromDays(3)).ToString("gyyyy年MM月dd日(dddd)")}。");
        }
        else
        {
            return new ValueTask&lt;string&gt;($"今日は{DateTime.Now.ToString("gyyyy年MM月dd日(dddd)")}。");
        }
    }
}

