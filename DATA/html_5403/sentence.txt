More than 3 years have passed since last update.ミニゲームを作ってUnityを学ぶ！[タンクウォーズ編]これまではプレイヤーの操作する戦車についてのみ機能を実装してきましたが、ここからようやく対戦相手となる戦車オブジェクトを追加していきます。以上で敵キャラクターが完成しました。
こちらの戦車についてはプレイヤーが操作できないように、mIsPlayerのチェックを外しておきます。続いて、今はまだ地面だけの戦場をゲームシステムに合わせて作りこみます。
最終的には以下のようにプレイヤーと相手が左右に分かれて弾を撃ちあう形になります。PlayerTankとEnemyTankのPositionを下記のように設定これで先ほどの画像と同じような見た目になりました。このままだと戦車が上下移動をした際に画面外へ出ていくことが可能で、最終的にはGroundを超えて奈落に落ちていってしまいます。
これを防止するため、先に進んでほしくない位置にコライダーの壁を作ることで戦車の移動を制限します。これで上下とも、透明な壁に当たった時点で戦車の移動が制限されます。
（厳密には制限しきれずに抜けてしまったりするのですが、今後の作り込みによって改善されますので今は気にせずに進めてください）ここでHierarchyウインドウを一度整理します。戦場と対戦相手が用意できましたので、ここからはスクリプトでHPの概念を実装していきます。最大時のHPと受けたダメージという2つのフィールドを持ったシンプルなクラスです。
AddDamage()は弾が当たったときに呼び出されるメソッドで、ダメージを受けた後HPが残っているかどうかの結果を返します。CalHealthBarRate()については後述しますので今は気にしないでください。これで戦車にHPが設定できましたので、次は当たり判定と弾が当たったときの処理を作っていきます。今回は当たり判定をよりシンプルにするため、戦車オブジェクトに最初からアタッチされている2つのMesh Colliderを外して代わりにBox Colliderをアタッチします。1: プレハブExplosionSを設定
2: プレハブExplosionLを設定弾オブジェクトがTankタグの付いたコライダーに接触した場合に、そのコライダーからTankHealthを取得してAddDamage()を実行します。その結果、戦車のHPが残っている場合は小爆発のエフェクトが発生。
残っていない場合は大きな爆発エフェクトを発生させ、同時にTankModelの死亡フラグを立てています。そして対象の生死に関わらず、最後に自身（弾）を休眠状態にするという流れです。戦車にHPの概念を実装し、そのHPが被弾で減るという処理が完成しました。
最後にこのHPを格闘ゲームのHPバーのような形で画面内に表示します。この際に理屈はわからないのですがSpriteのFilter Modeを「Point(no filter)」に設定しておかないとシーンに配置されたときに画像の一部分が欠けてしまうようです。画像が準備できたらシーンにCanvasを作成し、HPバーをちょうど良さそうな位置に配置していきます。1. ルートパネル
2. 左側のHPバーHPバーは2つのSpriteを重ねあわせて表現していますが、もしこのときに青色のゲージが手前に表示されていない場合はインスペクタからImageの並び順を変更して青色のゲージが手前に表示されるように修正してください。
3. 右側のHPバー
左側のHPバーと同様に右側にもHPバーを表示させます。右側のHPバーについては、Rotationの値によって画像を反転させている点に注意してください。
4. HPバーを割合表示に対応させる
最後に、両方に配置したHPバーの青いゲージ部分「HealthBarFront~」のImage Typeを変更します。参考サイト:ひよこのたまご（uGUIのImageの使い方）
5. HPバー上部のテキスト
HPバーの上部に「Player」と「Enemy」のテキストを追加します。出来上がったHPバーが実際の戦車のHPと連動するように、TankHealthクラスとTankModelクラスにコードを追加していきます。1: PlayerTankの場合はHealthBarFrontLeftを設定し、EnemyTankの場合はHealthBarFrontRightを設定。CalHealthBarRate()は戦車が被弾した際に実行されるAddDamage()から呼び出され、残りHPの割合から青いHPゲージをどのくらい描画すれば良いかを計算しています。
また同時に、この戦車の状態mStateを「通常・被弾・回復」のいずれかに更新しています。RenewHealthBar()では状態mStateが被弾（DAMAGE）の場合のみ、青いHPゲージの表示割合を徐々に減らす処理を行っています。いつもと同じようにTankModelクラスのUpdate()でHPバーの更新が行えるようコードを追加しますが、今回はプレイヤーでなくてもHPが減ること、被弾して死亡フラグが立った段階ではまだ青いHPゲージが残っている状態であることを加味して、条件式の外から呼び出します。プロジェクトを実行して、HPバーが戦車の被弾によって減っていくことを確認します。次のページに進む
イントロダクションに戻る



