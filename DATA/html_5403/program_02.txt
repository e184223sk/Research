

        private enum STATE
        {
            DEFAULT = 0,
            DAMAGE,
            HEAL
        }
        private STATE mState = STATE.DEFAULT;

        private readonly float UNIT_FILL_AMOUNT = 1.0f;

        [SerializeField]
1:      private Image mHealthBar; // 描画を制御したい画像（HPバーの青い部分）
        private float mCurrentFillAmount = 1.0f; // 現在描画されているHPバーのfillAmount
        private float mPreFillAmount; // 増減アクションの終了条件となるHPバーのfillAmount

        /// &lt;summary&gt;
        /// 残りHPに合わせてHPバーの描画割合を決定し、適切なmStateを設定する
        /// &lt;/summary&gt;
        private void CalHealthBarRate()
        {
            float currentHp = (float)(mHp - mDamage);
            mPreFillAmount = Mathf.Clamp(currentHp / mHp, 0.0f, 1.0f);
            if (mPreFillAmount &lt; mCurrentFillAmount)
            {
                mState = STATE.DAMAGE;
            }else if(mPreFillAmount &gt; mCurrentFillAmount)
            {
                mState = STATE.HEAL;
            }else
            {
                mState = STATE.DEFAULT;
            }
        }

        public void RenewHealthBar()
        {
            switch (mState)
            {
                case STATE.DAMAGE:
                    mCurrentFillAmount -= UNIT_FILL_AMOUNT * Time.deltaTime;
                    if (mCurrentFillAmount &lt; mPreFillAmount)
                    {
                        mCurrentFillAmount = mPreFillAmount;
                        mHealthBar.fillAmount = mCurrentFillAmount;
                        mState = STATE.DEFAULT;
                        return;
                    }
                    mHealthBar.fillAmount = mCurrentFillAmount;
                    break;
            }
        }


