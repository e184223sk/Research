More than 1 year has passed since last update.こんにちは、のんびりエンジニアのたっつーです。
今回の記事を紹介しているのでよろしければ見てください。最近は、音声ファイルから文字起こし（Speech to Text）をする機会が多かったので、Azureを使ったサンプルソースコードをご紹介させていただきます。まずは、Azure クラウドを使用するので、
Azure Portal で Speech Services を作成して、Key / Region を取得します。
Region はこちらから正確な値を取得してください。
例）
const string KEY = “32文字の英数字”;
const string REGION = “japaneast”;Visual Studio 2019 で、新規で「コンソールアプリ（.NET Framework）」を選択して、「SpeechToTextSample」でプロジェクトを作成します。
※プロジェクト名は任意です。
今回は、「Microsoft.CognitiveServices.Speech」のライブラリを使うのですが、このライブラリを使う時には、デバッグ構成「Any CPU」だとうまく動かないので、x64/x84 にする。CPUアーキテクチャを変更しておきましょう。64bit環境→x64
32bit環境→x84 Azure Speechサービスを、C#で使えるようにライブラリを追加します。
メニューから、「ツール &gt; NuGet パッケージマネージャー &gt; ソリューションのNuGetパッケージ管理」でNuGet管理マネージャーを起動してください。次に、「Microsoft Speech」で検索を行い、「Micorosoft.Cognitive.Services.Speech」ライブラリをインストールしてください。次に、Azure にアクセスして、SpeechToTextを実行してくれるクラス、「AzureSpeechToText.cs」でソースコードを追加してください。該当ソースコードの、以下パラメータをご自分の環境に従って変更してください。次に、Programクラスの Main関数を以下のように変更します。
※ Main関数を「async Task」に変更するのを忘れないように！プログラムの概要としては、「C:\temp」にある 「～.wav」を取得して、「～.wav.txt」を出力するようなプログラムになります。今回は、このサイトから音声サンプルをお借りしてみましたので、気になる方は試してみてください。実際に実行してみると、正常に変換がされている事が確認できました。
一部変換ミスが見られますが、クラウドサービスの品質が改善するのを期待したいところです。
ファイルの中身は、こんな感じになります。
当該.wavファイルの、時刻（時分秒） と変換されたテキストが対になって出力されます。よければ ブログ「Unity+AssetStoreおすすめ情報」の方にも色々記載しているのでぜひご参照いただければと思います。


