More than 3 years have passed since last update.初qiitaです。
Unityで作成するARKitアプリに「カメラで撮影する」機能を入れようと思ったら、思いの外情報が少なかったので、いろいろ調べて実装しました。
iOSネイティブを書くことはほとんど無かったのでミス等あったらすいません。
今回Androidは省いています。ARCore触り出したらまた作るかもしれません...ぜひARKitやVuforia等を用いたアプリと組み合わせてみてください。UnityProject(ソースコード)はこちら
https://github.com/Ryopon/iOSScreenCapture追記(18/02/01)
手動で設定していた部分の自動化等を行いました。
それに伴い記事を少し修正しています。Unity2017.1.f1
iOS11ネイティブ側のコードはこちらを見てください。
Unity側(C#)では下の様なコードで呼び出しを行います。RequestPermissions関数を呼び出すことでネイティブコードが実行され、カメラと写真へのアクセス許可を求めるポップアップが表示されます。
また、AuthorizationがNotDeterminedの場合にリクエストを求める事で初回起動時のみリクエストが表示されます。ユーザーによってアクセスを拒否された場合はこんな感じの画面を出したいですよね。
アクセス許可を持っているかどうかはHasCamera(Roll)Permissionで調べる事が出来ますのでこんな感じで調べて画面の表示を行ってください。ついでに「はい」押したら設定画面に飛んで欲しいですよね！こんな関数を用意していますので
uGUIボタンのOnClickに入れておくと、ボタン押下時にアプリの設定が開くようになります。
ボタンから静的関数を呼び出すことは出来ない(GoToSettings関数等)ので注意してください(missingが表示されます)。撮影を実行するにはUnityiOSScreenCapture.Executeを実行します。こちらもGoToSettings_forUGUIと同様にuGUIボタンのOnClickに入れておくと、撮影ボタンを作れます。撮影成功時にOnCompleteCapture、写真へのアクセスが非許可設定になってる場合にOnFailCaptureが実行されるようになっていますので、こちらもインスペクタ上で設定してあげてください。また、ネイティブからのコールバックを受ける関係でヒエラルキーに指定した名前のゲームオブジェクトを作成する必要があります。（この辺りもっと上手く作れるはずなのでプルリクお待ちしてます！！）
今回は"UnityiOSScreenCapture"というゲームオブジェクトにコールバックを返すので、このオブジェクトにUnityiOSScreenCaptureをAddComponentして使います。
コールバックを返す対象はCaptureCallback.mmに記述していますので、変更したい場合はこれをイジって下さい。XCodeで追加していた設定をビルド時に自動で追加してくれるエディタ拡張を追加しました。
→IOSSCBuildPostProcessor.cs
カメラロールへのアクセスを求める際に表示する説明文はOnPostProcessBuildIOS関数内のdescriptionの中身を書き換えて下さい。Unityだけでは行えない設定があるので、XCode側で少し設定を加える必要があります。
まずはGeneral &gt; Linked Frameworks And LibrariesでPhotos.frameworkを追加します。
次にInfo &gt; Custom iOS Target Propertiesで以下の２つを追加します。カメラについてはUnityでも指定出来ますが、写真についてはXCode側で設定する必要があるので今回はまとめてこちらで設定しています。
以上でカメラロールにスクショを保存するまでのアレコレは終了です。


