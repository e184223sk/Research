
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Logging.Console;

class BlogContext : DbContext {
  public DbSet&lt;Post&gt; Posts { get; set; }

  static readonly ILoggerFactory loggerFactory = new LoggerFactory(new[] {
        new ConsoleLoggerProvider((category, level) =&gt;
          category == DbLoggerCategory.Database.Command.Name
              &amp;&amp; level == LogLevel.Information, includeScopes: true) });

  protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) =&gt;
    optionsBuilder
      .EnableSensitiveDataLogging()
      .UseLoggerFactory(loggerFactory)
      .UseSqlServer(@"Server=(localdb)\mssqllocaldb;Database=MyDB;Trusted_Connection=True;");

  protected override void OnModelCreating(ModelBuilder modelBuilder) =&gt;
      modelBuilder.Entity&lt;Post&gt;().HasData(
        new Post {
          ID = 1,
          Title = "C# 8 ロードマップ",
          Category = "C#",
          IsPrivate = false
        },
        new Post {
          ID = 2,
          Title = "Array.some と Array.includes の使い分け",
          Category = "JavaScript",
          IsPrivate = false
        },
        new Post {
          ID = 3,
          Title = "秘密のポートフォリオ",
          Category = "C#",
          IsPrivate = true
        });

}

