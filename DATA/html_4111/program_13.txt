
    [DllImport("setupapi.dll", SetLastError = true, CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    internal static extern bool SetupDiGetDeviceInterfaceDetail(
        SafeDevInfoHandle DeviceInfoSet,
        [MarshalAs(UnmanagedType.LPStruct), In]SP_DEVICE_INTERFACE_DATA DeviceInterfaceData,
        IntPtr DeviceInterfaceDetailData, int DeviceInterfaceDetailDataSize, out int RequiredSize,
        [MarshalAs(UnmanagedType.LPStruct), Out]SP_DEVINFO_DATA DeviceInfoData);

    public void Test()
    {
        // デバイスパスを取得するために必要なバッファ数を取得
        NativeMethods.SetupDiGetDeviceInterfaceDetail(
            hDevInfo, ifData, IntPtr.Zero, 0, out int reqSize, null);
        // バッファ確保
        IntPtr pDetailData = Marshal.AllocCoTaskMem(reqSize);
        // pDetail-&gt;cbSize = sizeof(SP_DEVICE_INTERFACE_DETAIL_DATA);
        Marshal.WriteInt32(pDetail, IntPtr.Size == 8 ? 8 : 6);
        // データを取得
        NativeMethods.SetupDiGetDeviceInterfaceDetail(
            hDevInfo, ifData, pDetail, reqSize, out _, null);
        // pDetail-&gt;DevicePathを取り出し
        string devicePath = Marshal.PtrToStringUni(pDetail + sizeof(int));
        // 解放
        Marshal.FreeCoTaskMem(pDetailData);
    }

