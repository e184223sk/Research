DI によって注入されるオブジェクトの動作に「横断的関心」を組み込む。
主要なものにログ取得、トランザクション処理がある。Aspect使わない場合となって、特にLog出力は処理の本質には関係ない(=Log出力を削除しても処理結果は同じ)のに処理の可読性を下げてしまう。Aspect使うとで済み、デバッグ用出力以外の「本質に関係ない」コードを除去できる。他にも、メソッドの前後に必ず実行する処理を挟み込んだり継承によらず処理を書き換えたりできるようになったりする。Castle.DynamicProxy.IInterceptor の実装を作る。Interceptor を適用できるようにするDIコンテナを構成する使うAutofacにもUnity Container にもInterceptor注入の仕組みがあるのだけど DryIoc はいろいろと自前でやる必要があったりする。ここのサンプルでは1サービスに複数のInterceptor を登録できるようにしている。
オリジナルは https://github.com/dadhi/DryIoc/blob/master/test/DryIoc.IssuesTests/Interception/DryIocInterception.cs追加したのはParameters.Of.Type が注入する Interceptor を取り出せればよい。


