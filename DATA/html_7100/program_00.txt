
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Android.App;
using Android.Content;
using Android.OS;
using Android.Runtime;
using Android.Views;
using Android.Widget;
using Android.Hardware;

namespace AndroidTest
{
    [Activity(Label = "MenuActivity")]
    public class MenuActivity : Activity, ISensorEventListener
    {
        TextView accelTextX;
        TextView accelTextY;
        TextView accelTextZ;
        TextView gyroTextX;
        TextView gyroTextY;
        TextView gyroTextZ;
        SensorManager sensorManager;
        Sensor accel;
        Sensor gyro;
        protected override void OnCreate(Bundle savedInstanceState)
        {
            base.OnCreate(savedInstanceState);
            SetContentView(Resource.Layout.Menu);

            accelTextX = FindViewById&lt;TextView&gt;(Resource.Id.accelX);
            accelTextY = FindViewById&lt;TextView&gt;(Resource.Id.accelY);
            accelTextZ = FindViewById&lt;TextView&gt;(Resource.Id.accelZ);
            gyroTextX = FindViewById&lt;TextView&gt;(Resource.Id.gyroX);
            gyroTextY = FindViewById&lt;TextView&gt;(Resource.Id.gyroY);
            gyroTextZ = FindViewById&lt;TextView&gt;(Resource.Id.gyroZ);
        }

        protected override void OnResume()
        {
            base.OnResume();
            sensorManager = (SensorManager)GetSystemService(Context.SensorService);
            accel = sensorManager.GetDefaultSensor(SensorType.Accelerometer);
            gyro = sensorManager.GetDefaultSensor(SensorType.Gyroscope);
            sensorManager.RegisterListener(this, accel, SensorDelay.Normal);
            sensorManager.RegisterListener(this, gyro, SensorDelay.Normal);
        }

        protected override void OnPause()
        {
            base.OnPause();
            sensorManager.UnregisterListener(this);
        }

        public void OnAccuracyChanged(Sensor sensor, [GeneratedEnum] SensorStatus accuracy)
        {

        }

        public void OnSensorChanged(SensorEvent e)
        {
            switch (e.Sensor.Type)
            {
                case SensorType.Accelerometer:
                    accelTextX.Text = e.Values[0].ToString();
                    accelTextY.Text = e.Values[1].ToString();
                    accelTextZ.Text = e.Values[2].ToString();
                    break;
                case SensorType.Gyroscope:
                    gyroTextX.Text = e.Values[0].ToString();
                    gyroTextY.Text = e.Values[1].ToString();
                    gyroTextZ.Text = e.Values[2].ToString();
                    break;
                default:
                    break;
            }
        }
    }
}

