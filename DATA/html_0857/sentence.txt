More than 1 year has passed since last update.Infragistics のコンポーネント作ってる中の人かつ WPF/Xamarin.Forms でアプリ開発している人なら名前を聞いたことがない人はいないくらい有名な Prism のコミッターで筋肉が凄い Brian Lagunas さんの YouTube チャンネルで先日こんなネタが取り上げられていました。How to Bind an Enum to a ComboBox in WPFこの動画で Enum の要素を簡単に ComboBox の選択肢として出す方法が紹介されていたのですが、ローカライズは考慮していなかったので、いいブログネタだなと思ってました。
そう思ってたら、今日こんな動画があがってました。How to Localize Enums in C#ネタかぶったぁぁぁぁぁぁぁぁぁ！！マークアップ拡張で Enum 型の値の配列を返すものを作ることで以下のように簡単に書ける。Enum を任意の文字列に変換するには、TypeConverter を使って Enum が WPF のコントロールに表示される処理をカスタマイズして  DescriptionAttribute があったら、そこに指定されている値を使うという感じでした。ローカライズは LocalizedDescriptionAttirubute を使ってリソースの定義されている型とキーを指定できる独自の属性を定義する感じにしてました。なるほど、TypeConverter の存在を忘れかけてましたが、こういう風にも使えるんですね。動画内では DescriptionAttribute を使って Enum に表示用文字列を指定していて、ローカライズ可能にする場合は自前のローカライズした文字列を指定可能な属性を自作していましたが、一応標準の中にもローカライズ機能つきの属性として DisplayAttribute があるので、そっちを使えば独自属性が無くてもよさそうかなって思いました。ただ、純粋にローカライズ可能な表示名だけを提供したい場合にはオーバースペックなのでカスタム属性のほうがいいかもしれません。でもとりあえずやってみましょう。TypeConverter を以下のようにして DisplayAttribute を使うようにして…そして、Enum に以下のように Display 属性つきで定義します。リソースは間に合わせで適当に用意しておきました。実行すると、こんな感じになります。いいね。ということで自分でリソースから文字列取ってくる処理をしなくても、標準である属性の中だと DisplayAttribute あたりを使うと自前で属性作らなくてもいけるけど、若干 DisplayAttribute はオーバースペック感があるのは否めない…。ソースコードは以下のリポジトリにアップしておきました。あと Brian Lagunas さんの YouTube チャンネルは XAML 系のことをやってる人にとっては身近な話題で英語が聞けるし、自動生成字幕でもかなりイケてるので個人的におすすめです。Brian Lagunas さんの YouTube チャンネルは以下のリンクからいけます。Brian Lagunas - YouTube


