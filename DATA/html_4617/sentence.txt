こんにちは。
4月に新卒でイーリバースドットコムに入社した高倉です。
この記事は、私が３ヶ月の研修期間を経て感じたことをアウトプットする目的で書いております。私の大学での専攻は機械工学で、授業では軽くプログラミングに触れる程度。
授業以外で個人的に興味をもってプログラミングを勉強し始めたのは大学3年生の秋くらいでした。
YouTubeのチュートリアル動画やUdemyの講座を観ながら、実際にコードを書いて学習をしていました。入社前に触ったことがあった技術は、以下の通りです。
言語：JavaScript, Ruby, Python, Go, C#, HTML, CSS
ライブラリ・フレームワーク：React, Ruby on Rails
その他：SQL, git, Docker, AWS新規の業務系バッチ処理機能開発における、以下の工程を行いました。Linqでクエリを投げる箇所の実装で、クエリ発行回数を減らすように以下のようにレビューを受けました。
修正前修正後それほど多くないデータ量であれば修正前でも問題ないのですが、今回扱うのはかなりの量のデータだったので修正が必要でした。
個人で勉強用に開発をしていたときは動かすことしか考えておらず、このような細かいパフォーマンスの面まで考えることはありませんでした。
しかしこれからは扱うデータ量が膨大なため、余計な負荷をかけない実装を心がけたいと思いました。DBのカラムに日付を挿入する処理で、SystemのDateTimeを使用していたところ、外部クラスにDateTimeを返すメソッドとして定義し、それを使うようにレビューを受けました。
修正前修正後「正しい日時がDBにインサートされること」のテストを書く際に、修正前だとテスト実行の度にDateTime.Now()は異なる日時を返すのでテストが書けません。
修正後のコードであれば、GetSystemDate()をモック化して指定した日付を返す仕様にできるので、テストが書けるようになります。恥ずかしながら、テストコードは就職して初めて書きました。
実装時からテストのことも考えていないと後で困るということを学んだので、次に活かしたいと思います。修正前修正後修正前だとエラーは発見できてもどのデータで発生したのかわかりません。
ログの出し方に正解はありませんが、理想はそのメッセージを読んだ人が誰であっても、適切な対処を取れることだと思いました。新卒一期生かつエンジニアの新卒は私だけだったこともあり、研修や業務についていけるか不安でした。
そのため、入社前に会社で使っている技術を中心にぼちぼち勉強をしていました。
（コロナで卒業旅行などに行けなかったので、時間だけはありました（笑））しかし、そこまで心配する必要はなかったなと思います。
どれだけ勉強していっても、結局先輩に聞きまくってググり倒していくことになるので安心してください（笑）。
むしろそれが当たり前で、入社してから質問する力を鍛えていく方が重要だと学びました。とはいえ、会社で使っている技術の基礎だけでも抑えておくと、入社後に圧倒的に楽なのは間違いありません。
もし時間があれば、基礎だけでもやっておくことをオススメします。私が行ったような実務的な研修は、体系立った学習をするだけの研修よりも実践的なスキルが身に付くというメリットがあると感じました。
対してデメリットは、先輩社員のサポートがあるとはいえ難易度の高いタスクが渡される時があることです。初めのうちは「それが自分にできることなのか」という判断は難しいため「良く分からない所」や「製品の質に直結する」という実装などは、迷わず先輩に聞くことが大事だと思いました。
私の場合は、周囲の先輩のフォロー＆レビューなどもあり、大きなミスは起こりませんでした。研修といえど、自分が書くコードはお客様が将来実際に使う製品です。
それがなによりのモチベーションになりましたし、エンジニアとして働けているんだという充実感に大きく繋がりました。
学生のときのように自分で勉強するだけの日々では、絶対に味わえなかった感覚です。この記事が、新卒もしくは転職でエンジニアを目指している方の参考に少しでもなりましたら幸いです。


