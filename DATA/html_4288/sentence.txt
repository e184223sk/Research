ツリー構造や集約ルートモデルのデバッグプリントするとき、階層ごとにインデントを入れたいですが、コード上もわかりやすく、簡単にかけるようにならないかと考えて、ユーティリティクラスを作ってみました。IDisposableにして、 usingブロックを使って書けたらブロックのインデントが出力のインデントに一致してわかりやすい（当社比） かなという思い付きです。コメント欄に改良版がありますので、そちらをご覧ください。取り込もうと思ったけど単なるコピペになりそうなので、自分の元ソースはそのままにしておきます。こんな風にusingブロックで囲んで使います。ネストして多段インデントもできます。
インデントの前後で必要に応じて改行を追加する機能もありますので、下記の例の場合 AppendLine から Append に変えても同じ出力結果になります。
（当然ですが、同じインデント階層に連続で書き出す場合は Append で改行はしません。）サンプルコード出力IDisposableをusingブロックで使うと、ブロックを抜けるときにdisposeされるという仕様を使って、dispose呼ばれたときにインデント付与処理をしています。IndentedStringBuilder 自体が StringBuilder を継承できればよかったんですが、sealed クラスなのでできません。なのでやむなく Builder プロパティー経由で StringBuilder にアクセスするようにしました。
お好みで IndentedStringBuilder に Append() など StringBuilder と同じメソッド生やしてもいいかもしれません。言うほど使いやすくも見やすくもねーよ、と言われたらごめんなさいと言うしかありません。そこは主観の問題なのでご容赦ください。usingブロックの中で普通に元のStringBuilderを編集できてしまうけれど、(おそらく)書いた人の期待とは違う結果になります。出力まあ、XXXをBBBとDDDの間に挿入したいなら、普通にusingブロックを分割してください。


