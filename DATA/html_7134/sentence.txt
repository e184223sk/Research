More than 5 years have passed since last update.サーバー上のファイルをブラウザ上にツリー表示してくれる「jQueryFileTree」を試してみました。jQuery File Tree
http://jqueryfiletree.github.io/表示先のルートフォルダを指定すれば、その配下のフォルダやファイルを簡単にツリー表示してくれます。フォルダ・ファイル情報の取得は、１階層ごとに非同期通信で取得します。つまり、Web画面表示時には、最上位のフォルダ情報のみ取得し、その配下の情報は取得しません。あるフォルダをクリックしたら、そのフォルダの配下の情報のみ取得しますので、画面表示時に無駄な情報を取得する時間はかかりません。ソースはこちらから取得できます。
https://github.com/jqueryfiletree/jqueryfiletreejQuery File Treeの概要を簡単に図示します。サーバー側のファイル・フォルダ情報を表示するものなので、サーバー側にその情報を取得するプログラムが必要です。このサーバー側のプログラムが、ブラウザ側のフォルダクリック時に発行される非同期通信を受け、その1階層下の情報を取得し、ブラウザ側に返すようになっています。このサーバー側のプログラムには、PHP用、Java用など、多数用意されています。今回はASP.NET MVC用のプログラムを利用してみます。Visual StudioでASP.NET MVCのソリューションを作成します。ここに、ダウンロードしてきたjQueryFileTreeのプログラムを配置していきます。この記事を投稿した段階では、NuGetでのインストールができないようなので、手動でやっていきます。まず、jQueryFileTree.jsの配置です。今回は下図のようにScriptフォルダ直下に配置しました。実際の運用には、jQueryFileTree.min.jsを使うほうが良いと思いますが、今回は使いません（というのも、後でソースの修正を行うからです）。次にjQueryFileTree.cssとアイコンイメージのファイルです。それぞれ、Contentフォルダ配下に配置します。CSSファイルも、jQueryFileTree.min.cssがあるので、実際の運用にはこちらを使った方が良いと思います。これらのファイルの参照設定を、_Layout.cshtmlファイルにします。ダウンロードしてきたファイル中の "jqueryfiletree-master\dist\connectors\Asp.Net-MVC" フォルダに、ASP.NET MVC用のファイル・フォルダ取得プログラム、およびそのモデルのプログラムが入っています。これをVisual Studioに配置していきます。まずはモデルです。下図のように、FileTreeViewMode.csをVisual Studioに追加します。このFileTreeViewMode.csですが、namespaceの定義が入っていないので、以下のようにnamespaceを追加しておきます。次にコントローラです。jQueryFileTreeで提供されている FileTreeController.cs のプログラムを、今回はお試しということで、 HomeController.cs にコピーします（実際には各システム応じて適した箇所に配置してください）。このプログラムを見てもらうと分かる通り、基底フォルダ "baseDir" 配下のファイル・フォルダしか見せないようになっています。本来のシステムではこうあるべきなのですが、今回はjQueryFileTreeの動きを分かりやすく示したいので、セキュリティ上あまり良くないのですが、以下のように修正しました。jQueryFileTreeでは、サーバーから受け取ったファイル・フォルダ情報を、一度&lt;UL&gt;&amp;&lt;LI&gt;タグでツリー情報を展開します。そのためのプログラムとして GetFiles.cshtml が用意されています。このファイルを、Views/Homeフォルダに追加します。追加した後に、以下に示したように using を忘れずに追加してください。今回のお試しでは、Home/Index.cshtmlにファイルツリーを表示させようとおもいますので、Index.cshtmlを修正します。ちょっと長いですが、以下が修正したソースコードです。修正箇所をコメントで書いておきました。以上で準備完了です。これでVisual Studioからデバッグ実行すると、以下のような画面が表示されます。フォルダをクリックすれば、その配下の情報が取得されます。上記のプログラムを見ると、jQueryFileTreeのコンストラクタ "fileTree()" 中に、onlyFoldersというパラメータがあることが分かります。これをtrueにすればフォルダのみを表示することができるはずです。ですが、実際にここをtrueにして実行しても、ファイルは表示されてしまいます。この原因を調査するために、jQueryFileTreeのソースコードを見てみましょう。下図に示す部分が、フォルダクリック時に非同期通信を実行する部分です。
$.ajax()の実行により非同期通信の処理が走るのが分かります。そして、この data に、サーバー側に渡すパラメータが入っています。この data は、以下の部分に記述されています。
見てわかる通り、onlyFoldersパラメータをサーバー側に渡していることが分かります。ところが、この非同期通信の送信先となる、先ほどHomeController.csに追加したGetFiles()メソッドには、引数dirしかありません。つまりdir以外のパラメータを受け取っていなかったのです。これが原因でonlyFoldersパラメータがうまく動かなかったのです（つまり、GitHub上で提供されているASP.NET MVCプログラムの不備です）。そこで、以下のようにonlyFoldersを追加します。ついでにonlyFilesも追加しましょう。以下のようにソースを修正します。ASP.NET MVCのルールで、非同期通信で渡すパラメータ名と引数の変数名が一致していないと正しく受け取れませんので、変数名は、jQueryFileTree.csからコピー＆ペーストした方が良いと思います。以上の修正をした後で再び実行すると、フォルダのみがツリーに表示されるようになります。上記の手順で一応サーバー上のファイル・フォルダは表示できますが、見てわかる通り、ルートフォルダが表示されていません。fileTree()内のパラメータ "root" で指定したフォルダ配下の情報がツリーのトップノードに表示されています。ルートフォルダを表示させるには、一工夫必要です。非同期通信でサーバー側に渡すパラメータを1つ増やします。何を増やすかというと、rootフォルダのパスです。先ほど説明した data 変数に、以下の項目を追加します。これで、サーバー側のGetFiles()メソッドに、rootフォルダのパスが送られます。後はGetFiles()メソッドを以下のように修正します。以上の修正を加えて実行してみると、下図のようにルートフォルダが表示されるようになります。jQueryFileTreeのパラメータ設定部分を以下のようにすることで、複数のルートフォルダが表示されるようにできるとより便利です。これも若干ソースを修正すれば実現できます。まずはjQueryFileTree.js側の修正です。以下に示すように、$.ajax()メソッドに引数 traditional を追加しています。このパラメータをtrueに設定します。このパラメータをtrueにする理由は、以下のページを参照してください。
　$.ajax で ASP.NET MVC のアクションメソッドに配列を渡せない!?
　続・$.ajax で ASP.NET MVC のアクションメソッドに配列を渡す
このページで紹介されているように、traditionalをtrueにしないと、配列のデータをGetFiles()メソッドに渡せないようです。私も最初、この設定をしないで試してみましたが、GetFiles()メソッド側の引数はnullになってしまいました。上記のjQueryFileTree.js側の修正が終わったら、HomeController.cs側の修正です。GetFiles()メソッドを以下のように修正します。先ほどの GetFiles() から色々変わっていますので見比べてみてください。ソースを見てもらえれば分かると思いますが、複数のルートフォルダ、複数の選択ノードに対応したループ処理が入ったことが大きな違いです。ソースのコメント中にも書きましたが、複数の選択ノードがカンマ区切りで渡されるのは、Web画面の初回表示時のみです。一度表示されたツリーのノードクリック時には、今までと同様に、そのクリックされたノードのパスのみが渡されます。以上の修正を施せば、複数のルートノードの表示ができるようになります。jQueryFileTreeでは、ファイルのクリック時には、そのファイルのパスを取得することができます。index.cshtml中の以下で指定したメソッドがファイルクリック時に実行され、その引数にファイルパスが渡されるからです。フォルダクリック時にも同様にフォルダパスを取得したいときがあります。これについても、若干のソース修正で実現できます。フォルダクリック時に実行されるプログラム、ファイルクリック時に実行されるプログラムを以下に図示します。先ほど紹介したファイルノードクリック時に実行されるメソッドの呼び元も示しておきました。
上図に示したメソッドの呼び元となる行を、フォルダクリック時の処理に入れてやれば、フォルダクリック時にもフォルダパスが取得できるようになります。ただし、フォルダがクリックされたのかファイルがクリックされたのかの判別がつくように、"isFolder" という引数を追加するようにしましょう。フォルダがクリックされたら true、ファイルがクリックされたら false が渡される引数です。以下が修正したコードです。そしてindex.cshtmlのコールバック側を以下のように変えます。この修正により、フォルダをクリックしたときにもコールバックメソッドが実行され、フォルダパスを引数で受け取ることができるようになります。以上が、今回のjQueryFileTreeの動作確認で調査した内容です。ソースを修正しないでそのまま使った場合、若干かゆいところに手が届かないような感じの動きでしたが、少しのソース修正で大分良くなるプログラムだと思いました。


