More than 1 year has passed since last update.前回に引き続きASP.NET Coreを学習メモです。今回はASP.NET Core MVC の実質的な中心の部分であるコントローラーについて学んでいきます。MVC Webにおいて、コントローラーはリクエスト処理を全体を制御する役割を担っています。
コントローラーは入力データを捕捉し、ビジネス層とデータ層と取りまとめ、リクエストに基づいたレスポンスを返します。入力データのフォーマットにはQueryString、FormData、HTTP Header、HTTP Bodyなどがあり、
レスポンスにはHTML、 JSON、XML、プレーンテキストなどがあります。すべてのコントローラーは基底クラスはMicrosoft.AspNetCore.Mvc.ControllerBase を継承しており、ビューエンジンを使うためにはMicrosoft.AspNetCore.Mvc.Controlle を継承しています。なので、上記のどちらかクラスを継承すれば、クラスがコントローラーとして扱えます。コントローラーはクラス名の後ろにControllerをつけることがMSが推奨するやり方です。Controllerを除いた部分がルーティングに対応し、検出されます。以下がコントローラーの実装例です。コントローラーのアクションメソッドは、コントローラーがリクエストを受信した後に、処理を行うメソッドです。リクエストURLのActionに対応したアクションメソッド呼び出し、処理結果を返します。アクションメソッドの定義例です。必ずパブリックメソッドでなければいけません。もし、パブリックメソッドを定義したけどリクエストを受け付けさせたくない場合、以下のアノテーションを追加すれば良いです。アクションメソッドが生成する結果はさまざまです。
戻り値はIActionResultインターフェイスを実装する具体的な型がいろいろ定義されており、異なるコンテンツ形式を返せます。ここでMVCで良く扱うアクション結果の型をピックアップしてみました。まずはControllersフォルダ配下にActionResultTestController.csを作成します。内容は以下です。Controllerを継承することをお忘れなく…そして、テストしやすいためにStartup.csにルーティング設定をします。ActionResultTestControllerに以下のアクションメソッドを追加します。アプリを起動し、URL{host:port}/art/contenttestをたたくと、Content Resutl Testが表示されるはずです。同じくアクションメソッドを追加します。URL{host:port}/art/jsontestへアクセス結果。実装URL{host:port}/art/filetestへアクセスするとファイルがダウンロードされ、中身はFileResult Testになります。結果は以下です。ルートがリクエスト処理を対応するコントローラーに渡した際に、コントローラーはそれに対応するアクションメソッドを見つけ出すと同時に、HTTPリクエストデータ(QueryString、FormData、HTTP Header、HTTP Bodyなど)に対応するアクションメソッドの引数をマッチングさせます。対応するリクエストデータと引数がマッチングしない場合、nullがパラメーター値として渡されます。Controllersフォルダ内でParamsMappingTestcontrollerクラスを作成します。Startup.csにルーティング設定を追加します。下記のアクションメソッドを追加します。アプリを起動し、URL{host:port}/pmt/getid/100へアクセスすると以下の結果になります。実装URL{host:port}/pmt/getarray/1,2,3,4,5へアクセスすると以下の結果になります。Modelsフォルダを作成し、その中にPersonクラスを実装します。Controllerにアクションメソッドを追加します。URL{host:port}/pmt/getperson?name=dongsu&amp;age=18へのアクセス結果。Controllerにアクションメソッドを追加します。URL{host:port}/pmt/getpersonlist?persons[0].name=dongsu&amp;persons[0].age=18&amp;persons[1].name=mihara&amp;persons[1].age=20へのアクセス結果。Controllerにアクションメソッドを追加します。FormBobyなので、ここではHTTPリクエストを送信するツール(Postman, Advenced Rest Clientなど)を用いる必要があります。今回作成したソースコードです。GitHubリポジトリでは！！( ｀ー´)ノ


