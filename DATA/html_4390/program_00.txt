public class Bootstrap : MonoBehaviour
{
    public static Bootstrap Instance { get; private set; }
    public static Param Param {  get { return Instance.param; } }

    // Inspector で Prefab を設定しておく
    [SerializeField] GameObject prefab_obj;

    // Prefab Entity 保持用の変数
    private Entity prefab_entity;

    // Boid の全体数の管理用
    private int n_boid;

    void Awake()
    {
        Instance = this;
    }

    public void Start()
    {
        var world = World.DefaultGameObjectInjectionWorld;
        var manager = world.EntityManager;

        // convert prefab_obj -&gt; prefab_entity
        prefab_entity = GameObjectConversionUtility.ConvertGameObjectHierarchy(
            prefab_obj,
            GameObjectConversionSettings.FromWorld(world, null)
        );

        // add user defined component
        manager.AddComponent&lt;BoidPrefabType&gt;(prefab_entity);  // Prefabであることを示す空のComponent
        manager.AddComponent&lt;Scale&gt;(prefab_entity);
        manager.AddComponent&lt;Velocity&gt;(prefab_entity);
        manager.AddComponent&lt;Acceleration&gt;(prefab_entity);
        manager.AddComponent&lt;NeighborsEntityBuffer&gt;(prefab_entity);

        n_boid = 0;
    }
}

