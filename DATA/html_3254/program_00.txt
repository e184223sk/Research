
using System;
using System.Reflection;
using System.Runtime.InteropServices;

namespace ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            object app = null;
            object books = null;
            object book = null;
            try
            {
                app = Activator.CreateInstance(Type.GetTypeFromProgID("Excel.Application"));
                app.GetType().InvokeMember("DisplayAlerts", BindingFlags.SetProperty, null, app, new object[] { false });
                books = app.GetType().InvokeMember("Workbooks", BindingFlags.GetProperty, null, books, null);
                book = books.GetType().InvokeMember("Open", BindingFlags.InvokeMethod, null, book, new object[] { @"c:\hoge.xlsx" });
                book.GetType().InvokeMember("SaveAs", BindingFlags.InvokeMethod, null, book, new object[] { @"c:\poge.xlsx" });
                book.GetType().InvokeMember("Close", BindingFlags.InvokeMethod, null, book, null);
                app.GetType().InvokeMember("Quit", BindingFlags.InvokeMethod, null, app, null);
            }
            finally
            {
                if (book != null &amp;&amp; Marshal.IsComObject(book))
                {
                    Marshal.FinalReleaseComObject(book);
                    book = null;
                }
                if (books != null &amp;&amp; Marshal.IsComObject(books))
                {
                    Marshal.FinalReleaseComObject(books);
                    books = null;
                }
                if (app != null &amp;&amp; Marshal.IsComObject(app))
                {
                    Marshal.FinalReleaseComObject(app);
                    app = null;
                }
            }
        }
    }
}

