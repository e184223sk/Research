More than 1 year has passed since last update.フラクタル図形の一種であるヘイウェイ・ドラゴン曲線と言われる図を描くプログラムをC#で書いてみました。ヘイウェイ・ドラゴン曲線とは、例えば以下のような図です。Wikipediaのドラゴン曲線を参考にしました。コンソールアプリケーションとして作成し、作成した図形は、pngファイルとして出力しています。以下、ソースコードの簡単な説明です。プログラムをつかさどるクラス。DragonCurveとDrawerを使って、図形を描画しています。
ここで、曲線の次数を与えています。ドラゴン曲線を描くクラスです。実際の線は引いていません。DragonCurveクラスは、IObservable&lt;T&gt;を実装していて、線を引く代わりに、購読者クラス(Drawer)にその状態の変化を伝えています。
そのため実際の描画という行為からは完全に独立しています。Drawメソッドは、再帰メソッドになっていて、 引数 generationは、再帰メソッドを呼び出す深さを表しています。 Drawメソッドは、２つの点 p1,p2から次の一点 c を求め線を引き、 (p1,c) (p2,c) それぞれについて、Drawメソッドを再帰的に呼び出すことで、図形を描いてい行きます。NextPointが、次の点 c を求めるメソッドですが、思いのほか複雑になってしまいました。 もっと簡潔に書けるようなきもするのですが...。描画を受け持つDrawerクラスは、IObserver&lt;T&gt;を実装している購読者クラスです。
DragonCurve からの通知を受け取り、線を描いて行きます。線を描くのに、以下のEasyCanvasクラスを利用しています。NGraphicパッケージを利用して、線を描いています。結果はpngファイルにしています。※ ソースコードは、GitHubで公開しています。generationが、5, 10, 15の時の結果を示します。この記事は、Gushwell's C# Programming Pageで公開したものを大幅に変更・加筆したものです。


