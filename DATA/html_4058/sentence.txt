More than 1 year has passed since last update.「Rx.NETやUniRxにあるXXXっていうメソッド（オペレーター）、なんでLINQにはないの？」って思った時におすすめなのがIx.NET。以下、READMEよりThe Interactive Extensions (Ix) is a .NET library which extends LINQ to Objects to provide many of the operators available in Rx but targeted for IEnumerable.RxにあるオペレータをLINQ to Objectsに拡張した、つまりIEnumerable&lt;T&gt;で使えるようにしたのが、このライブラリです。Ix.NETは、Rx.NETと同じリポジトリ(dotnet/reactive)に存在し、同じメンバーがメンテナンスしています。Rx知らない人・使ったことがない人は、「Ix.NETはとっても便利なLINQのメソッドが、さらに増えた」と思ってください。わかりやすいおすすめIxのオペレーターを紹介します。個人的に標準メソッド（LINQ）に入って欲しいメソッドナンバー1。こんなMonsterクラスがあって、List&lt;Monster&gt;なmonstersから、一番大きいLevelを持つMonsterのオブジェクトを探したいです。こういう時、実はLINQのMaxメソッドは使えません。LINQのMaxメソッドでできるのは、「monstersの要素の中の、一番大きいLevelの値を求める」こと。ここでやりたいのは「monstersの要素の中の、一番大きいLevelの値をもつ要素を探すこと」こと。（それからもし最大値を複数の要素が持つなら、その全てを探したい。）それができるのが、MaxBy。「要素の中で一番大きい評価値をもつ要素を探すこと」ことができるのがMaxBy。逆に、「要素の中で一番小さい評価値をもつ要素を探すこと」ことができるのがMinBy。どちらも最大評価値・最小評価値が複数あった場合、その全てを返してくれます。これ、本当に標準で使いたい・・・。地味だけど、便利でわかりやすいメソッド。そしてなんでLINQに標準にないんだ系のメソッド。要素が空かどうか判別するメソッド、IsEmpty。実装はこんな感じ。Anyを否定しているだけ。あ、それからIEnumerable&lt;T&gt;を空か判定するときは、間違ってもCount() == 0はやっちゃいけいないよ。数を指定して要素をまとめるメソッド、Bufferです。余った要素は、余った分だけでまとめられます。ずらす数、スキップ数を指定して、こんな感じにまとめることも。
まとめる数よりスキップ数大きくすることもできます。使いどころは多くはないけど、覚えておくと便利。あと名前付き引数呼び出しで呼び出したいメソッド。これも地味に使いどころが多いメソッドです。他の言語だとflattenって呼ばれることもあります。LINQにもともとあるConcatメソッドは、一つのIEnumerable&lt;T&gt;に他のIEnumerable&lt;T&gt;を連結するメソッド。Ix.NETのConcatメソッドは、IEnumerable&lt;IEnumerable&lt;T&gt;&gt;が引数なしで呼び出すメソッド。List&lt;List&lt;T&gt;&gt;とかArray&lt;Array&lt;T&gt;&gt;とか、IEnumerable&lt;IList&lt;T&gt;&gt;とかが呼び出せます。地味に便利！LINQ標準のRepeat。「staticメソッドで、引数に渡した要素を引数の指定回数繰り返すIEnumerable&lt;T&gt;をつくる」ってメソッドです。実はプロダクトコードで使ったことは自分はまだありません。一方で、Ix.NETのRepeatの各種オーバーロードは、「あー、これ使いたかったやつだ！」って自分はなりました。IEnumerable&lt;T&gt;の拡張関数。可変長引数として渡した要素を、先頭につけてIEnumerable&lt;T&gt;を新たに生成。 TakeとSkipのLast版。ちなみに.NET Coreでは2.0からもう標準で使えます。.NET Standard 2.1で標準にはいったので、そのうち.NET Frameworkでも使えると思います。


