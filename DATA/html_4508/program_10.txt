

// 購読の状態を管理するオブジェクト
private StreamSubscriptionState m_SubcribeAllCommandState;

/// &lt;summary&gt;
/// 全てのコマンドの購読を開始します。
/// &lt;/summary&gt;
/// &lt;returns&gt;&lt;/returns&gt;
private async Task StartSubcribeAllCommandAsync()
{
    // コマンドを受け取ったときの処理
    Task onReceiveAllCommandAsync(IEventCommand command)
    {
        System.Diagnostics.Debug.WriteLine($"onReceiveAllCommandAsync: {command}");
        return Task.CompletedTask;
    }

    m_SubcribeAllCommandState = await SubcribeAllCommandAsync(onReceiveAllCommandAsync).ConfigureAwait(false);
}

/// &lt;summary&gt;
/// 全てのコマンドの購読を停止します。
/// &lt;/summary&gt;
private void StopSubcribeAllCommand()
{
    m_SubcribeAllCommandState?.Dispose();
}

