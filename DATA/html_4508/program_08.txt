
// 購読の状態を管理するオブジェクト
private StreamSubscriptionState m_SubcribeSampleCommandState;

/// &lt;summary&gt;
/// コマンドの購読を開始します。
/// &lt;/summary&gt;
/// &lt;returns&gt;&lt;/returns&gt;
private async Task StartSubcribeSampleCommandAsync()
{
    // コマンドを受け取ったときの処理
    Task onReceiveCommandAsync(SampleEventCommand command)
    {
        System.Diagnostics.Debug.WriteLine($"onReceiveCommandAsync: {command}");
        return Task.CompletedTask;
    }

    m_SubcribeSampleCommandState = await SubcribeCommandAsync&lt;SampleEventCommand&gt;("sampleStream", onReceiveCommandAsync).ConfigureAwait(false);
}

/// &lt;summary&gt;
/// コマンドの購読を停止します。
/// &lt;/summary&gt;
private void StopSubcribeSampleCommand()
{
    m_SubcribeSampleCommandState?.Dispose();
}

