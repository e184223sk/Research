EventStoreDB で簡単なイベントデータの読み書きを実装してみます。EventStoreDB は EventStore Ltd. がリリースしているオープンソースのイベントソーシングデータベースです。公式のダウンロードページでは次のバイナリが提供されています。今回は Windows のバージョン 20.10 を使用します。公式のダウンロードページでは次のクライアントが提供されています。バージョン 20.10 で gRPC を用いたクライアント API が追加されたようです。今回は .NET クライアントの gRPC API を使用します。公式のダウンロードページからバイナリをダウンロードします。Windows の場合は ZIP 圧縮ファイルです。
https://www.eventstore.com/downloads実行ディレクトリを作ります。おそらくディレクトリ構成に決まりはありません。SSL を有効にする場合、サーバー証明書（とルート証明書）を準備します。gRPC で SSL を有効にするときと同じです。cert ディレクトリにサーバー証明書を配置します。cert\ca ディレクトリにルート証明書を配置します。ZIP ファイルを解凍し、実行ファイルを bin ディレクトリに配置します。構成ファイルを作成します。公式サイトにウィザードがあります。ウィザードに沿って値を設定していくと、構成ファイルの中身を作成してくれます。作成された内容をコピーしたファイルをルートディレクトリに配置します。
https://developers.eventstore.com/server/v20.10/docs/installation/コマンドプロンプトで次のコマンドを実行すると、サーバーが起動します。["127.0.0.1:2113"] Sub System '"Projections"' initialized. のようなメッセージが表示されれば起動完了です。終了させる場合は CTRL+C キーを押します。NuGet で次のパッケージをインストールします。必要に応じて JSON シリアライザをインストールします。今回は Utf8Json を使用することにしました。特定のイベントデータを読み込むときに使用します。読み込み開始位置を指定する場合、シーケンシャルに付番されるイベント番号を指定します。今回は読み込んだ際に取得された読み込み位置をアプリケーション内のフィールドに保存しています。プロダクトではデータベースなどに永続化することになります。全てのイベントデータを読み込むときに使用します。読み込まれたイベントタイプからイベントを特定してハンドリングすることになります。読み込み開始位置を指定する場合、トランザクションログ上のバイト位置を指定します。次のバイト位置を取得する方法はわかりませんでした。最後に読み込んだ位置を開始位置に指定し、取得された位置が最後に読み込んだ位置と一致する場合はスキップしています。イベントデータの削除や再配置を行ったときにバイト位置が変わる可能性があり、この方法が正しいかどうかは検証が必要です。今回は読み込んだ際に取得された読み込み位置をアプリケーション内のフィールドに保存しています。プロダクトではデータベースなどに永続化することになります。読み込まれるイベントデータには管理イベントも含まれるため、管理者権限が要求されます。Pub/Sub メッセージングモデルの購読側です。Reactive に処理を行う必要がある場合は、読み込みよりも購読が適しています。イベントデータに対する処理自体は読み込みとほぼ同じです。前述の読み込みと同様、gRPC クライアントではイベントデータを購読する二つのメソッドが提供されています。購読の状態を管理するオブジェクトを用いて、購読の終了処理をカプセル化しました。クライアントとキャンセルトークンは購読開始メソッド内のローカル変数としています。


