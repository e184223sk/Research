More than 1 year has passed since last update.こんにちは、のんびりエンジニアのたっつーです。
ブログを運営しているのでよろしければ見てください。今回は「いくつかサンプル書いたよ」の記事の１つの共通コントロールの作成方法と使い方を解説したいと思います。
ぜひ、お付き合いいただければと思います(#^^#)こちらの記事をご参照いただければと思います。さっそくですが、共通コントロールの実装をしてみたいと思います。Editor フォルダを作成し、右クリックのメニューから「UIElements Editor Window」を選択してください。
「RedButton」を入力してください。
　※つけたいコントロールの名前に変更してしまって、OKです。
以下の３ファイルが生成されました、次にこの３ファイルを編集したいとおもいます。
まずは、RedButton.uxml は使わないので削除してください！
※使っても実装できますが今回はスクリプトですべて生成していきます。次に、RedButton.uss を以下のように変更してください。次に、RedButton.cs を以下のように変更してください。また、独自イベントとして clicked を定義しており、ボタンを押下イベントに合わせて clicked が呼ばれるようにしております。
また、MyControls のネームスペースに変更するのをお忘れずに！ 次に呼び出し側の実装になります。
先ほどと同じよう入力ですが今回は「Sample1」で追加してください。同じように３ファイルとも以下のように編集してください。共通コントロールとして、以下の赤い文字のボタン（RedButton）を用意しました、これを使いまわせるパーツとして、ボタン１～３の計３つを作成しています。ポイントとしては、「xmlns:my=”MyControls”」 で my:RedButton が使えるようになります。ポイントとしては、各ボタンイベント（Clicked）にイベントを紐づけるために「root.Q(“btn1”).clicked += ButtonClicked;」で実行しています。どうでしたか簡単に実装が行えたと思います。
今回は、RedButton.uxml は使わない実装でしたが使って実装する場合もそんなに難しくないと思いますのでぜひチャレンジしてみてください！よければ ブログ「Unity+AssetStoreおすすめ情報」の方にも色々記載しているのでぜひご参照いただければと思います。


