More than 1 year has passed since last update.まず、用語編と説明編にわけて解説していくので目次のページから用語がわからなくなったら、用語編に戻ってみてくださいませ。また、筆者がむむと思った用語はすべて用語編に書かれていますので、ご安心をクラスとは一般的にものを作る設計図となっています。クラス(設計図)で作られた成果物のことクラスの中で宣言される変数のこと。クラスの中でxとかnumとか変数が定義されたら、それはメンバ変数です。メンバ関数とは、クラス内で定義される関数(メソッド)のことです。一連の処理をまとめて繰り返し使えるようにした塊のこと。関数化したものをメソッドという。関数　＝　メソッド名前空間とも呼ばれます。さっきからusing System;という文言が出てきているのにも関わらず、あれなんであるのか？となっていませんでしたか？ごめんなさい。説明が遅れました。using System;とはフォルダを参照しているのです。例えば、これでhello world!と出力されます。もしusing System;がなかったら、といちいちSystemと書かなければいけないのです。この面倒を省くために、using System;と先頭に書き、これからSystemフォルダの中を参照して、様々なメソッドを使いますよということを書いているのです。コンストラクタとはクラスを生成したとき、自動的に実行される初期化用のメソッドです。あるクラスの機能を受け継いで新しいクラスを作ること外部からアクセス（読み書き）できないように制限する外部からアクセス（読み書き）が自由static とつけると静的メンバーになるクラスのメンバー（フィールドやメソッド）を定義する際に、staticキーワードを付けることで、 その変数は静的メンバー変数・静的メソッドになります。 例えば、静的フィールドであれば以下のように書きます。静的メンバーはクラスごとに唯一つの実体を持ち、すべてのインスタンスの間で共有されます。例として、人間について考えてみましょう。 この場合、特定のインスタンスとは個人個人のこと、 クラスとは人間という種別そのもののことになるわけですが、 名前や年齢などは各個人ごとに異なります。 一方で、人という種の学名「Homo sapiens」などのように個体によらない共通のものもあります。 したがって、人間をあらわすPersonというクラスを作成した場合、 name(名前)やage(年齢)といったメンバー変数を作りたい場合はインスタンス フィールドに、 scientificName(学名)などのクラス全体で共有すべき変数を作りたい場合は静的フィールドにすべきです。 (実際には学名などの普遍な値は定数(const)として定義すべきですが、 ここでは説明のためということでご容赦を。 定数の定義については後ほど説明します。)集団で分けるなら、static を使い、個々で分けるならstaticはつけないvoidとは戻り値を返さないこと値を返したくなかったら、voidをつけることクラスの基本的な書き方は以下の通りとなります。このようなSampleクラスがあるとaやintがメンバ変数となります。このようにしてtest1()というメソッドを呼び出すことができます。ここのpublic static void は少し待ってください。インスタンスとは、クラスを元にした実体のことです。大体、インスタンス　＝　オブジェクトという認識でOKです。サンプルコードを見てみましょう実行結果つまり、インスタンスとは、クラス(設計図)からより簡単に実態を作るために書くものである。書き方としては、または、というようにインスタンス名を生成できるまた、インスタンスからメンバ変数、メンバ関数を利用するためにはと書いて利用できるのように直接、値を代入しました。しかし、実際に値をセットするのはメソッドを使うことが望ましいとされています。その際に使われるメソッドとして、コンストラクタというメソッドがありますこの際のポイントは、2つあります。上記のコードでは、基本となったものをPersonクラスを基底クラス、継承したものを派生クラスと呼んでいる以上
参考にさせてもらったサイト
(https://www.sejuku.net/blog/102559)
もう参考にさせてもらったというよりは、このサイトを見て自分なりにわからないところを付け加えた感じです。
自分なりにまとめてみると結構理解できるので、プログラミングノートを書くのは、おすすめです。間違っている個所などございまいたら、お気軽にコメントしていただけたらありがたいです。


