
internal class Program
{
    static void Main(string[] args)
    {
        var students = new List&lt;Student&gt;();
        var teachers = new List&lt;Teacher&gt;();
        var users = new List&lt;User&gt;();

        students.Add(new Student { Name = "田中", SchoolYear = "大2" });
        teachers.Add(new Teacher { Name = "鈴木", Salary = 10000000 });
        users.AddRange(students);
        users.AddRange(teachers);

        //Write
        using (var fs1 = new FileStream("Students.json", FileMode.Create, FileAccess.Write))
        using (var fs2 = new FileStream("Teachers.json", FileMode.Create, FileAccess.Write))
        using (var fs3 = new FileStream("Users.json", FileMode.Create, FileAccess.Write))
        {
            JsonSerializer.SerializerList&lt;Student&gt;().WriteObject(fs1, students);
            JsonSerializer.SerializerList&lt;Teacher&gt;().WriteObject(fs2, teachers);
            JsonSerializer.SerializerList&lt;User&gt;().WriteObject(fs3, users);　// ここで例外
        }

        //Read
        using (var fs1 = new FileStream("Students.json", FileMode.Open, FileAccess.Read))
        using (var fs2 = new FileStream("Teachers.json", FileMode.Open, FileAccess.Read))
        using (var fs3 = new FileStream("Users.json", FileMode.Open, FileAccess.Read))
        {
            students = (List&lt;Student&gt;)JsonSerializer.SerializerList&lt;Student&gt;().ReadObject(fs1);
            teachers = (List&lt;Teacher&gt;)JsonSerializer.SerializerList&lt;Teacher&gt;().ReadObject(fs2);
            users = (List&lt;User&gt;)JsonSerializer.SerializerList&lt;User&gt;().ReadObject(fs3);  // ここで例外
        }
    }
}

