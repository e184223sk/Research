More than 1 year has passed since last update.JSONシリアライズを行っていて、いくつかつまずいた点があったので忘備録として書いています。継承がある場合について追記する予定です。(2018.1.4)
追記しました。(2018.1.9)Vistual Studio 2017
.NET Framework 4.5.2Jsonのシリアライズを行いクラスに以下の下準備を行う。Classには[DataContract]属性を与える。
保存したいメンバー変数には[DataMember]属性を与える。
保存したくないメンバー変数には[IgnoreDataMember]`属性を与える。注意しなければならないのは以下の通りである。
- デフォルト・コンストラクタは明示しないとシリアライズ時にエラーとなる。
- 保存したいメンバー変数のアクセサーは{ get; set; }にしなければならない。(public string Name;でもよい)※もし保存したいがsetはしてほしくない場合はprivate変数にして、アクセス制御を行えばよい次にシリアライズ用の関数を提供するclassを作成する。
私の場合は次のようにファイルにまとめておいて、いろいろなプロジェクトで使えるようにしている。さてこれらを用意したところでJsonのRead及びWriteを行う。これで
- 普通の型(自作クラスも含む)
- List型
- Dictionary型
の時のRead/Writeの方法の説明は以上である。Userという抽象化されたクラスを定義するUserを継承したStudentクラスとTeacherクラスを作成するこの状態で以下のコードを実行した場合例外が発生する。コメントが書いてる箇所で例外が発生する。
ここでが発生する例外はである。そこでコメントに書いてあるKnownTypeAttributeを利用する。
そしてUserクラスを次のように編集する。UserクラスがTeacherクラスとStudentクラスを派生クラスであることを示すことができます。
ここで今一度Sample1を実行しても例外は発生しない。


