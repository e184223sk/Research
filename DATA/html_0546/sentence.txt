本記事は、インフラジスティックスが2020年10月に新たにリリースした Blazor アプリケーション対応のコンポーネントライブラリーである Ignite UI for Blazor の各種コンポーネントの実装を通してモダンWEBアプリケーションの開発に触れてみようという趣旨で作成しております。Blazor 及び Ignite UI for Blazor については、以下のブログ記事も有用ですので是非ご参照ください。https://blogs.jp.infragistics.com/entry/2020/10/12/133447
https://blogs.jp.infragistics.com/entry/igniteui-blazor-release本連載の過去記事は以下となります。
https://qiita.com/MNakae_IG/items/5d89b404257d93742e45第2回目の本記事では、前回作成したアプリケーションに新規ページを追加し、そのページ上に Ignite UI for Blazor の高機能なグリッドを配置していきます。データソースはオンラインで公開されているJSONデータを利用します。まずはグリッドを表示するためのページを新規追加します。
ソリューションエクスプローラーは現在以下のようになっています。
「Pages」フォルダ上で右クリックをして「追加」、「Razor コンポーネント」を選択します。
以下の画面が表示されますので、名前を設定して「追加」ボタンを押します。今回は Grid.razor とします。
作成したページを表示するためにルーティング設定を行います。方法はとてもシンプルで、コンポーネントの先頭に @page ディレクティブを追加するだけです。先ほど作成した Grid.razor に以下のように追記します。メニューに作成したグリッドページへのリンクを追加します。ナビメニューは Shared/NavMenu.razor にてコンポーネント化されていますのでこちらに以下のように追記します。ナビゲーションリンクを作成するときは、HTML ハイパーリンク要素 (&lt;a&gt;) の代わりに NavLink コンポーネントを使用している点に注意してください。▽参考
https://docs.microsoft.com/ja-jp/aspnet/core/blazor/fundamentals/routing?view=aspnetcore-3.1#navlink-component一度デバッグをして確認してみましょう。初期画面にメニューが追加されていることが分かります。
メニューの Grid をクリックするとアドレスバーの URL が切り替わり、新規作成したページが表示されることが確認できます。このページに Ignite UI for Blazor のグリッドを設置していきます。
それではグリッドを設置していきます。Grid.razor を以下のように変更します。&lt;DataGrid Height="100%" Width="100%" DataSource="@GridData" /&gt; がグリッドを配置するためのテンプレートタグとなります。データソースとして空のデータを渡しているので現状ではグリッドには何も表示されません。データバインディングしてグリッドにデータを表示していきます。今回はオンライン上で公開されているJSONデータを取得してグリッドに表示していきます。
データソースは厚生労働省がコロナウイルス対策関連で公開している「各都道府県の検査陽性者の状況」データを使用します。本データの詳細は以下よりご確認ください。
https://www.stopcovid19.jp/今回扱うデータのモデルを定義していきます。ソリューションエクスプローラー上でプロジェクトを右クリックし、コンテキストメニューを表示したら「追加」、「新しいフォルダー」と選択し、「Models」というフォルダを新規追加します。
次に作成した Models フォルダ上で右クリックをし、コンテキストメニューから「追加」、「クラス」と選択し、Covid19Japan.cs というクラスを新規追加します。
Covid19Japan.cs にはデータソースのモデルを以下のように定義しました。以下のパッケージを使用して、HttpClient でJSONデータを取得していきます。
https://www.nuget.org/packages/Microsoft.AspNetCore.Blazor.HttpClient/3.2.0-preview3.20168.3
（2020年10月29日現在、こちらのパッケージはプレビュー版となっています。）以下のように Grid.razor を変更し、実行してみます。グリッドページを表示すると、JSONデータがキチンと取得できていることが確認出来ましたので、このデータの Area 部分をグリッドにバインドしていきます。 Grid.razor を以下のように変更します。実行してグリッドページを確認します。以下のように都道府県別のデータを表示することが出来ました。
グリッドが表示出来たら、グリッドの動作を確認してみましょう。
グリッドのヘッダー行にマウスオーバーするとドットが縦に3つ並んだアイコンが表示されます。そのアイコンをクリックするとこのようなドロップダウンメニューが表示されます。このメニューでは列の非表示やピン固定、フィルタリングなど様々な操作をすることが出来ます。次回はこのグリッドをカスタマイズしながら豊富な機能を確認していきたいと思います。Ignite UI for Blazor はトライアル板での試用が可能です。
トライアル版を利用するためには以下のページよりアカウントの作成を行ってください。登録より30日間、弊社のテクニカルサポートをご利用いただくことが出来ますのでお気軽にお問い合わせください。
https://iam.infragistics.com/Account/Registerまた、製品をご購入をご検討のお客様は以下のページよりお気軽にお問い合わせください。
https://jp.infragistics.com/about-us/contact-us


