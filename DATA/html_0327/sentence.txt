PONOS Advent Calendar 2020の7日目の記事です。昨日は@nissy_gpさんのNode.js+Sequelize+MySQLでプライマリーキーをUUIDにするでした。前回の記事で複数のInspectorウインドウを一度に開く機能を実装しました。
今回は開かれているすべてのInspectorウインドウに対して一括で処理を実行する方法を紹介します。現在Unityエディタ上で開かれているすべてのInspectorウインドウを取得するためにはInspectorWindow.GetAllInspectorWindows()メソッドを利用します。UnityCsReference/InspectorWindow.cs at master · Unity-Technologies/UnityCsReference · GitHubUnityEditorにinternalとして定義されている InspectorWindowクラスの機能を直接呼び出すことはできないため、前回の記事と同様にリフレクション機能を使ってメソッド実行します。これで、開いているInspectorウインドウの配列を取得することができました。
なお、その後のウインドウ操作を行いやすいように、EditorWindowの配列として取得しています。あとはこの配列内の要素を操作をしていけばOKです。サンプルとして「開いているすべてのInspectorウインドウを閉じる機能」のコードを掲載します。今回紹介したInspectorWindow.GetAllInspectorWindows()メソッドを利用することで、開いているInspectorウインドウを一括で操作する機能を容易に作成することができます。
開発中、オブジェクトの比較用に頻繁に追加 / 削除されるウインドウなので、こういった機能を利用して効率的に操作していきたいですね。明日は@nissy_gpさんです！


