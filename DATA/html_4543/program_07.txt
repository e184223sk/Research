
        public void AutoToot(int interval, Program p, int boot_time)
        {
            TaskFactory taskFactory = new TaskFactory();
            CancellationTokenSource cancellationToken = new CancellationTokenSource();
            Task task =  taskFactory.StartNew(() =&gt; {
                while (true)
                {
                    cancellationToken.Token.ThrowIfCancellationRequested();

                    DateTime t = DateTime.Now;
                    int now_m = t.Minute;
                    now_m = t.Minute;
                    if (now_m == boot_time + interval)
                    {
                        var token = OAuth(p);
                        Toot("qiitadon.com", token, p);
                        interval *= 2;
                        if(interval &gt; 60){
                            interval %= 60;
                        }
                        AutoToot(interval, p, boot_time);

                    }
                    Thread.Sleep(500);
                }

            }, cancellationToken.Token);

            Console.ReadLine();
            try
            {
                // キャンセル要求出す
                cancellationToken.Cancel();

                // タスクがキャンセルされるまで待機
                task.Wait();
            }


            catch (AggregateException)
            {
                // タスクがキャンセルされるとここが実行される
                Console.WriteLine("Task is cancelled.");

            }
  }

