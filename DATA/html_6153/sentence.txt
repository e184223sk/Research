More than 3 years have passed since last update.これ（sparkle-project/Sparkle）です。アプリをApp Store外で配布するにあたっては効率的にアップデートを確認し、アップデートがあればインストール！みたいな仕組みが欲しいですよね？それで調べてみると大体これが出てきます。ざっくりとした仕組みは、というものです。Sparkleが出してくるUIはこんな感じで、準備するxmlはこんな感じです。のような感じで、セキュリティ面の配慮もありいい感じですね。基本こんな手順です。MacApp用アップデート管理システムSparkleの使い方（Xamarin.Mac編）Objective Sharpieを使ってバインディング情報を生成し、使用したいXamarin.Macに突っ込んで参照するみたいな感じです。記事に書いてある通り、 めげない気持ち が必要です。ただ、探してみるとおそらくこの手順を踏んで公開してくれてるであろう SparkleSharpというのがあったので今回はそれで実装してみます。対象プロジェクトで下記実行します。Sparkle.csproj をプロジェクトに追加します。参照を追加します。
この状態でビルドしたらSparkleがメインのプロジェクトから使用できます。インストールするアプリの妥当性をチェックするための秘密鍵・公開鍵を準備します。Sparkle（本家）には秘密鍵・公開鍵を生成するやつが入ってるのでクリックして生成します。SparkleSharpSample/SparkleSharp/Sparkle/3rdparty/Sparkle/bin/generate_keys↓更新情報を確認するためのファイルです。とりあえずgithubに置いたものを参照するようにしてます。info.plistのソーなんとか（いじっても切れててわからない…）に SUFeedURL と SUPublicDSAKeyFile を追加します。
おもむろに Main.Storyboard をダブルクリックして Storyboard を立ち上げて先ほど生成した dsa_pub.pem を D&amp;D します。本家は Xcode に D&amp;D してねって書いてあったのですが、VS for Mac だとできないので…VS for Macから見ると追加されていて、ビルド時にBundleに含むことになってるのでこれでよさそうです。何でもいいのですが、とりあえずアプリを立ち上げたときにアップデートチェックするボタンを追加します。Storyboard からボタンを追加し、C#コードにボタンをクリックしたときに呼ぶメソッド（ Action ）を公開するために ViewController.h にリンクします。これで Storyboard を閉じると VS for Mac 上の ViewController.designer.cs にActionが同期され、 ViewController.cs でC#でメソッドが書けます。とても手前味噌なのですが、この辺は僕が土曜日に翻訳した記事で丁寧に説明されてますwXamarin.Macを初めて触る人に贈る、Xamarin公式 Hello, Mac の日本語訳記事
Sparkle　を using して、ボタンをクリックしたときに呼び出すメソッドを追加します。ビルドのオプション（インストーラーパッケージを作成する）にチェックを入れれば.pkgを作ってくれます。プロジェクトを右クリック、オプションをクリックして「インストーラーパッケージを署名する」にチェックを入れます。これについてはXmairn.Macの公式ページでも詳細に説明されています。Developer IDの登録、Developer ID証明書（インストーラ）の発行が必要です。.pkg名は 必ず最終的にできるアプリと同じに してください。デフォルトではSparkleSharpSample-1.2.pkg のような形で生成されますが、最終的にアプリ名は SparkleSharpSample.app となるのでバージョンのサフィックスは削除します。を使用します。※パス通しましょうappcast.xmlに使用する length もここでようやくわかります。アプリを起動して、「CheckUpdates」をクリックするとアップデートが確認できます。
そして「Install Update」をクリックすると、5.1Mのファイルをダウンロードできました。引き続きpkgでのアップデートを走らせることができます。


