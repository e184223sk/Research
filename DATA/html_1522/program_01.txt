
using System;
using System.Windows.Forms;
using System.Drawing;

//Formクラスを継承し、フォーム画面使えるように
class WinMain : Form
{
  public static void Main(string[] args)
  {
    WinMain win = new WinMain();
    win.Text = "IPアドレスを2進数に変換";

    //アプリケーション実行。これでフォームが立ち上がる。
    Application.Run(win);
  }//Main()


  //各部品のインスタンスを作る
  //最初コンストラクタ内で宣言しちゃったから?値の引き渡し失敗した。
  TextBox inputTxt = new TextBox();
  TextBox binTxt = new TextBox();
  TextBox hostCountTxt = new TextBox();
  Button btn1 = new Button();
  Label inputLbl = new Label();  //説明用
  Label binLbl = new Label();
  Label hostCountLbl = new Label();

  //コンストラクタ。フォームの部品などを定義
  //初期値を設定したり
  public WinMain()
  {
    //変数に入れるとき、this を付けた方が明示的か

    //各部品の情報を整える
    inputLbl.Text = "IPアドレスをCIDR表記で入力(例：192.168.1.0/24)";
    inputLbl.Bounds = new Rectangle(10, 10, 250, 20);

    inputTxt.Text = "IPアドレスを入力してください。";
    inputTxt.Bounds = new Rectangle(10, 30, 250, 20);

    btn1.Text = "実行";
    btn1.Bounds = new Rectangle(10, 60, 80, 25);

    binLbl.Text = "2進数に変換すると";
    binLbl.Bounds = new Rectangle(10, 110, 250, 20);

    binTxt.Bounds = new Rectangle(10, 130, 250, 20);

    hostCountLbl.Text = "割り当て可能なホスト数は";
    hostCountLbl.Bounds = new Rectangle(10, 160, 250, 20);

    hostCountTxt.Bounds = new Rectangle(10, 180, 250, 20);

    //ボタンを押して離したときに発動するメソッドを追加
    btn1.MouseUp += new MouseEventHandler(btn1_onclick);

    //部品をフォームに表示
    Controls.Add(inputLbl);
    Controls.Add(inputTxt);
    Controls.Add(btn1);
    Controls.Add(binLbl);
    Controls.Add(binTxt);
    Controls.Add(hostCountLbl);
    Controls.Add(hostCountTxt);    
  }//WinMain() コンストラクタ

  //btn1を押したときのメソッドを定義、名前に決まりはないみたいだけど
  //合わせておいた方がわかり易い。
  public void btn1_onclick(object sender, MouseEventArgs e)
  {
    //入力テキストを受け取り、アドレス計算
    IPaddrConverter(inputTxt.Text);
  }

  void IPaddrConverter(string IPaddress)
  {   
    //変数名、雑すぎてやばい
    string IPaddr = IPaddress;
    string[] ip = IPaddr.Split('/');
    string prefix = ip[1];  //別に代入せんでよかったのでは。

    string[] oxet = ip[0].Split('.');
    for(int i = 0; i &lt; oxet.Length; i++)
      Console.WriteLine(oxet[i]);// 192  168  1  0

    string[] convertOxet = new string[4];

    //2進数に変換した後、
    //00000000.00000000.00000000.00000000の表記にするため、頭に0付けていく
    for(int i = 0; i &lt; oxet.Length; i++)
    {
      convertOxet[i] = Convert.ToString(Convert.ToInt32(oxet[i]), 2);
      if(convertOxet[i].Length &lt; 8)
      {
        //loopCounter にループ回数を代入。
        //最初これをそのままfor文に入れて、値が変わってうまくいかんかった。
        int loopCounter = 8 - convertOxet[i].Length;
        for(int j = 0; j &lt; loopCounter; j++)
        {
          //Console.WriteLine(8 - convertOxet[i].Length);
          convertOxet[i] = "0" + convertOxet[i];
        }
      }           
      Console.WriteLine(convertOxet[i]);
    }

    //192.168.1.0 を 2進数表記 00000000.00000000.00000000.00000000で表示
    //192.168.1.0 -&gt; 11000000.10101000.00000001.00000000
    //Console.WriteLine("{0}", string.Join(".", convertOxet));
    binTxt.Text = string.Join(".", convertOxet);

    //プレフィックス prefix を使って、割り当て可能ホスト数を割り出す。
    //ビットを2進数に直して、それをまた10進に直して、2引くでいこう
    //32 - 24 = 8 -&gt; 8bit = 256 -2 =&gt; 割り当て可能ホスト数 254 個 になるはず
    //うまくいかず。。32 - prefix はビットの数なので2進数に変換しても変になる
    //32 - prefix の数ぶん、１　を立てる
    int bitCounter = 32 - int.Parse(prefix);// 32 - 24 = 8
    string hostBit = "";
    for(int i = 0; i &lt; bitCounter; i++)
    {
      hostBit = "1" + hostBit;
    }

    long hostCounter = Convert.ToInt64(hostBit, 2) - 1;
    hostCountTxt.Text = Convert.ToString(hostCounter);
  }
}//class WinMain : Form

