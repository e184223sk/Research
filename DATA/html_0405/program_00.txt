
string jsonString = (↑に示したJsonが代入されているとする)

// 1. 全体をJObject型で受け取る。
// jsonStringはResponseなどで受け取った、json構造のstring型変数とする。
// string --&gt; JObjectの変換はJObject.Parse()で行う。
JObject jsonObject = JObject.Parse(jsonString);

// 2. 1の中から"emoji"のValueをJObject型で受け取る。
// ["(KeyName)"]で特定のKeyのValueを、JObjectから取り出せる。
// ここでは取り出すValueもJObject型のため、JObject型の変数に代入してやる。明示的なCastが必要。
JObject emojis = (JObject)jsonObject["emoji"];

// 3. 2の中から各項目をKeyValuePairとして取り出す
// JObject型はIEnumerableを継承しており、
// GetEnumerator()でKeyValuePair&lt;string, JToken?&gt;を返す。
// 上の例では、KeyValuePairのKeyが絵文字の名前、Valueが絵文字のURIとなる。
foreach (var emoji in emojis)
{
    var name = emoji.Key;
        // KeyValuePairのValueはJToken?型のため、stringに変換する。
    var uri = new Uri(emoji.Value.ToString());      
    Console.WriteLine($"EmojiName : {name}, EmojiUri : {uri}");
}

// ============================
// Output : 
// EmojiName : bowtie, EmojiUri : https://my.slack.com/emoji/bowtie/46ec6f2bb0.png
// EmojiName : squirrel, EmojiUri : https://my.slack.com/emoji/squirrel/f35f40c0e0.png
// ...

