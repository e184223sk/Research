C#10にて、プロジェクト全体に対してusing機能が有効になるglobal usingというものが追加されたというお話を見たので実際に体験してみました。環境は以下です。
（今回の環境構築ではDockerを用いています）imageは以下の.NET 6.0 Preview Tagsを利用しています。コンテナを立ち上げます。
（ローカルにc:\Work\Docker_.Net6Previewフォルダを作成しています。こちらはDockerコンテナのフォルダをマウントするためなので名前は任意のもので大丈夫かと思います）上記のようにコンテナを立ち上げてコンテナのsrcフォルダで以下のコマンドを打ち、コンソールアプリを立ち上げます。マウントしたローカルのc:\Work\Docker_.Net6Previewフォルダを開くとコンソールアプリのテンプレートが出来ていると思うのでそちらでサンプルコードを書いていきましょう。まずは普通にusingを利用します。Test1クラスのGetStringメソッドは引数をそのまま返却し、Test2クラスのGetString2メソッドはTest1クラスのGetStringメソッドを用いて"GetString2"という文字列を返却します。今回はこちらのサンプルコードにglobal using機能を使っていきます。Program.csの「using Tests;」部分を「global using Tests;」へ変更し、Tests2.csのusingはコメントアウトします。
Tests.csについては特に変更していません。こちらでビルド / 実行して問題なく"GetString"と"GetString2"が出力されます。C#10で搭載される予定のglobal usingを実際に体験してみました。
C#10ではまだまだたくさんの機能が搭載される予定なのでどんどん触っていこうと思います(^^♪


