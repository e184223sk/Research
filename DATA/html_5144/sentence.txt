More than 1 year has passed since last update.お久しぶりです．N.Mです．最近は趣味でTwitter APIを使ったGUIアプリケーションをC#で作ってます（C#だとGUIアプリケーションが作りやすいと思ったので）．今後不定期で，その制作過程で大変だったことを発信していければと思います．今回はその第1弾．
（次回はウィンドウサイズの調整について）今はこんな感じの，直近のツイートから誰がTL上にいるのかをリストアップするアプリを作っています．
（アプリケーション自体は，ここで配布しております．今後も更新予定です！）
↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
Twitter APIについてはC#のライブラリ"CoreTweet"を利用していまして，ここにも認証の仕方が書いてあるのですが，そのアカウントでアプリを使うことを認証した後に，7桁のPINコードが表示されます．APIをつかうために，そのPINコードを手動で入力するか，HTML解析するかしてOAuth.GetTokensに渡す必要があります．手動で入力する方法はたくさん情報が出てきたので，最初はそれを採用してましたが，使ってるうちに手入力が面倒になったので，今回 HTML解析による取得 に挑戦しました．認証ページは最初のURLはhttps://api.twitter.com/oauth/authorizeの後にいろいろ文字列がついた状態になっています．そして，認証してもしなくても，最終的にURLがhttps://api.twitter.com/oauth/authorizeになります．認証した場合はHTML内にが埋め込まれています（そして&lt;code&gt;タグはページのこの部分にしか出てきません）．なので，やるべきこととしてはとなります．CoreTweetの日本語WikiだとSystem.Diagnostics.Process.Startで認証ページを表示していますが，HTMLソースを抜き取るのが難しそうだったので，認証ページの表示はWPFアプリケーションにWebBrowserのコンポーネントを埋め込むことにしました（'twitterWeb'と命名しました）．で，WebBrowserのNavigateメソッドで認証ページのURLに飛べば表示できます．
こんな感じ．ここから，ユーザが認証したら，すぐにAPIが使える状態にしていきます．ここでいろいろつまづきました．つまづいたポイントとしてはの3点ですね．まず，1点目の参照の問題は，Navigateメソッドを呼び出したあとに，WebBrowserのURLを確認しようとしたんですけど，そのタイミングだと，まだ処理が完了してないのでnullが返ってきてしまうそうです．なので，WebBrowserの処理が完了した際に呼ばれるイベントハンドラLoadCompletedで，もろもろの処理を行います．finishedURLに認証後に行くはずのページのURLを，URLにtwitterWebの現在のページのURLを格納しておき，この2つが一致したら認証後のページに行ったと判断します．WebBrowserからのHTMLの取得ですが，Visual StudioのプロジェクトでCOMのmshtmlを参照するようにして，mshtml.IHTMLDocument2を介して，取得するようです（参考）．HTML抽出部分を加えるとこんな感じここまでできれば，あとはhtmlから&lt;code&gt;の文字列をIndexOfメソッドで検索して，
パパパっとSubstringメソッドでPINコードの7桁の数字を抽出して終わり！これでTokens変数 tを介して，Twitter APIをいじることができます．


