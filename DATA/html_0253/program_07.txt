
using System;
using Xunit;
using QiitaAdventCalendar2020;

namespace QiitaAdventCalendar2020.Tests
{
    public class PrintServiceTest
    {
        [Fact]
        public void Test_正常に印刷できた場合はエラーメッセージが空文字になること()
        {
            var printer = new FakeLabelPrinter()
            {
                IsRunningResult = true,
                PrintResult = true,
            };
            var svc = new PrintService(printer);
            var result = svc.Print("テスト", out string errMsg);
            Assert.True(result);
            Assert.Equal("", errMsg);
        }

        [Fact]
        public void Test_電源が入っていない場合はエラーメッセージが設定されること()
        {
            var printer = new FakeLabelPrinter()
            {
                IsRunningResult = false,
                PrintResult = false,
            };
            var svc = new PrintService(printer);
            var result = svc.Print("テスト", out string errMsg);
            Assert.False(result);
            Assert.Equal("プリンタの電源が入っていません。", errMsg);
        }

        [Fact]
        public void Test_印刷に失敗した場合はエラーメッセージが設定されること()
        {
            var printer = new FakeLabelPrinter()
            {
                IsRunningResult = true,
                PrintResult = false,
            };
            var svc = new PrintService(printer);
            var result = svc.Print("テスト", out string errMsg);
            Assert.False(result);
            Assert.Equal("印刷に失敗しました。", errMsg);
        }

        /// &lt;summary&gt;
        /// テスト用にLabelPrinterを偽装したクラス
        /// &lt;/summary&gt;
        private class FakeLabelPrinter : ILabelPrinter
        {
            public bool IsRunningResult { get; set; }
            public bool PrintResult { get; set; }

            public bool IsRunning()
            {
                return IsRunningResult;
            }

            public bool Print(string contents)
            {
                return PrintResult;
            }
        }
    }
}

