More than 3 years have passed since last update.の回答で書いたやつなんですが。メディアファイル「a.mp3」「b.mp3」「c.mp3」があり、 a の再生が終わったら b を再生…とする方法です(MediaPlayer 使用)。MediaPlayer は、再生が完了すると onCompletion を通知するので、それを受信して次の曲を再生開始すればよいのですが、普通に書くとコールバック地獄に陥るので、Task&lt;T&gt; 化して、フラットに書けるようにします。このような、「非同期処理で完了がイベントやコールバックで通知されるやつ」を Task&lt;T&gt; な非同期メソッドに変換するために TaskCompletionSource&lt;T&gt; を使う方法、は非常によく使うので覚えておくとよいと思います。過去にはダイアログボックスの表示について同様のテクニックで async/await 化する方法を書きました。この Task&lt;T&gt; を使ったテクニックは 「C# ならでは」 でしたが、Androidアプリ開発の公式言語である Kotlin でも同じようなことができます。TaskCompletionSource&lt;T&gt; の代わりに Continuation&lt;T&gt; を使う感じで。
非同期処理でも、レスポンス(or エラー)が一発で終わるものは RxJava を使う必要はないので、上記のようなパターンもよく使いますね。


