More than 1 year has passed since last update.本記事はC#からOutlookメールを操作するための基本的な情報をまとめることを目的としています。
​Officeをインストールしたときに自動でインストールされるMicrosoft Outlook 16.0 Object Libraryコンポーネントを対象のプロジェクトの参照に追加します。
VisualStudioのプロジェクトの参照の右クリックメニューから参照の追加を選択します。以下の画面が出てくるので、Microsoft Outlook 16.0 Object Libraryコンポーネントを選択し、OKを押します。
すると、Microsoft.Office.Interop.Outlook名前空間をインポートできます。
そして、メールの操作を行いたいクラスで、このようにusingを宣言することで、Outlookメール様々な機能を使えるようになります。
このusingステートメントは関数の直前に置くことはできないので、Class宣言の前に追加しておきましょう。
ここからの説明は上記のように名前空間にエイリアスを付けた状態で説明します。
​早速メールを作成してみましょう。
とても簡単です。以下、サンプルコードです。​
たったこれだけで色々な情報がすでに入った状態のOutlookメールの送信画面を立ち上げることができます。
OutlookのApplicationオブジェクトのインスタンスを生成し、MailItemを作成します。CreateItemメソッドの引数にアイテムタイプを指定することでMailItemを作成できます。
MailItemのプロパティにそれぞれ値を入れて、最後にMailItemのDisplayメソッドを呼んでメールを表示させるだけです。
MailItemのBodyプロパティで設定するメール本文の改行コードについて、CR/LF/CRLFいずれも改行コードとして同じ扱いなのでどれを使用しても構いません。
宛先はMailItemオブジェクトのRecipientsプロパティで全受信者を表すRecipientsコレクションオブジェクトを取得し、RecipientsオブジェクトのAddメソッドで新たな宛先を追加することできます。
そして、ResipientオブジェクトのTypeプロパティを変更することで、ResipientをToやCc、Bccに変更することができます。
また、あらかじめ固定で宛先が決まっている場合はMailItemオブジェクトのToプロパティに直接値を代入すればよいです。複数宛先を追加したい場合、セミコロン区切りのメールアドレスを代入することで設定できます。以下がその例です。メールを作成するで説明したこととほぼ同様に作成できます。CreateItemメソッドの引数にOlItemType.olAppointmentItemを指定してアイテムタイプをAppointment(予定表)にしてAppointmentItemオブジェクトを作成します。
また、AppointmentItemのMeetingStatusプロパティに、OlMeetingを設定することで会議を予定することができます。
また、メール作成と同様にRecipients.Addメソッドで宛先を追加し、RecipientオブジェクトのTypeで必須出席者か任意出席者に設定できます。
以下がサンプルコードです。私は思っていたよりも簡単にC#からOutlookを操作できてすごいと感じました。AppointmentItemのプロパティ等を眺めると、予定が競合しているかどうかを確認できたり、アラームが設定できたりと、便利な機能が色々作れそうだなと思いました。
最後までお読みいただき、ありがとうございました。https://docs.microsoft.com/ja-jp/dotnet/api/microsoft.office.interop.outlook?view=outlook-pia
https://docs.microsoft.com/ja-jp/office/client-developer/outlook/pia/how-to-create-a-mail-item-by-using-a-message-template
https://docs.microsoft.com/ja-jp/office/client-developer/outlook/pia/how-to-create-a-meeting-request-add-recipients-and-specify-a-location


