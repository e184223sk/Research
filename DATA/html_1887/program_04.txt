
using System.Collections.ObjectModel;
using System.ComponentModel;

namespace TestApp
{
    class TestViewModel : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler? PropertyChanged;

        public ObservableCollection&lt;PathInfo&gt; PathInfoList { get; private set; }

        private int _SelectedItemsCount;
        public int SelectedItemsCount
        {
            get =&gt; _SelectedItemsCount;
            set
            {
                if (_SelectedItemsCount != value)
                {
                    _SelectedItemsCount = value;
                    SelectedItemsCountReport = $"SelectedItemsCount : {_SelectedItemsCount}";
                }
            }
        }

        private string _SelectedItemsCountReport = string.Empty;
        public string SelectedItemsCountReport
        {
            get =&gt; _SelectedItemsCountReport;
            set
            {
                if (_SelectedItemsCountReport != value)
                {
                    _SelectedItemsCountReport = value;
                    PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(nameof(SelectedItemsCountReport)));
                }
            }
        }

        public TestViewModel()
        {
            PathInfoList = new ObservableCollection&lt;PathInfo&gt;
            {
                new PathInfo(@"C:\temp\file0001.txt") { IsSelected = true },
                new PathInfo(@"C:\temp\file0002.txt") { IsSelected = true },
                new PathInfo(@"C:\temp\file0003.txt") { IsSelected = false },
                new PathInfo(@"C:\temp\file0004.txt") { IsSelected = true },
                new PathInfo(@"C:\temp\file0005.txt") { IsSelected = false }
            };
        }
    }
}

