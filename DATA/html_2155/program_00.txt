// 対象
IEnumerable&lt;UniTask&lt;string&gt;&gt; tasks = CreateSample();

// ---

// 並列にまとめる（要素の順序を無視して、終わったものから結果を返す）
IObservable&lt;string&gt; parallel = tasks
    .Select(x =&gt; x.ToObservable()) // IE&lt;IO&lt;T&gt;&gt;
    .Merge(); // IO&lt;T&gt;

// 直列にまとめる（要素の先頭から順番に結果を返す)
IObservable&lt;string&gt; sequential = tasks
    .Select(x =&gt; x.ToObservable()) // IE&lt;IO&lt;T&gt;&gt;
    .Concat(); // IO&lt;T&gt;


// 全部終わってからまとめて結果をとるなら（IO&lt;IE&lt;T&gt;&gt;）
IObservable&lt;IList&lt;string&gt;&gt; whenAll = tasks
    .Select(x =&gt; x.ToObservable()) // IE&lt;IO&lt;T&gt;&gt;
    .Zip(); // IO&lt;IList&lt;T&gt;&gt;

// でも、全部まとめてとるならUniTask.WhenAllでいいのでは?
UniTask&lt;string[]&gt; whenAll2 = UniTask.WhenAll(tasks);

