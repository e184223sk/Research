
private void ShortTeleportGhost(Player player)
{
    // (省略)
    // 移動距離が0以外の場合
    if (teleportOffset != Vector2.Zero)
    {
        bool isSSC = Main.ServerSideCharacter;
        TSPlayer tsPlayer = TShock.Players[playerIndex];

        // サーバーサイドキャラクターではない場合、サーバーサイドキャラクターに一時的にする
        if (!isSSC)
        {
            Main.ServerSideCharacter = true;
            NetMessage.SendData((int)PacketTypes.WorldInfo, playerIndex, -1, null, 0, 0f, 0f, 0f, 0, 0, 0);
            tsPlayer.IgnoreSSCPackets = true;
        }

        player.position += teleportOffset;

        // プレイヤーがワールド端に行き過ぎないように補正
        if (player.position.X &gt; Main.rightWorld - 992)
        {
            player.position.X = Main.rightWorld - 992;
        }
        if (player.position.X &lt; 992)
        {
            player.position.X = 992;
        }
        if (player.position.Y &gt; Main.bottomWorld - 992)
        {
            player.position.Y = Main.bottomWorld - 992;
        }
        if (player.position.Y &lt; 992)
        {
            player.position.Y = 992;
        }

        // クライアントにプレイヤー情報送信(事実上のテレポート)
        NetMessage.SendData((int)PacketTypes.PlayerUpdate, playerIndex, -1, null, playerIndex);

        // サーバーサイドキャラクターではなかった場合、元に戻す
        if (!isSSC)
        {
            Main.ServerSideCharacter = false;
            NetMessage.SendData((int)PacketTypes.WorldInfo, playerIndex, -1, null, 0, 0f, 0f, 0f, 0, 0, 0);
            tsPlayer.IgnoreSSCPackets = false;
        }
    }
}

