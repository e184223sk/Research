More than 1 year has passed since last update.以降の投稿は、ML.NET 0.1 についてです。現在 (2019/05/19) 時点での最新は、ML.NET 1.0 となります。ML.NET 1.0 ベースで、同様の投稿を別に行っていますので、必要な方は、そちらを確認ください。2018/05/07 に ML.NET 0.1 がプレビュー リリースとなり、クロスプラットフォームで動作する .NET Core 上で、機械学習が利用可能となりました。 これまで、機械学習の言語といえば Python がほとんどですが、普段 C# を利用している身からしたら、今後 C# も機械学習で利用できるメジャーな言語となることを期待しています。ここでは、ML.NET を利用して、ワインの品質を回帰分析で推論する機械学習モデルを作成する手順を紹介します。データセットは、UCI が公開している UC Irvine Machine Learning Repository の Wine Quality Data Set を利用します。また、ML.NET は、Visual Studio 2017 15.6 以降が必要となるため、必要に応じて Visual Studio を更新してください。Visual Studio 2017 を起動し、[ファイル] - [新規作成] - [Visual C#] - [.NET Core] - [コンソール アプリ (.NET Core)] を選択し、[名前] に任意のプロジェクト名(ここでは、 "WinequalityDemo001" ) を入力し [OK] を選択します[ソリューション エクスプローラー] から、プロジェクトを選択し、右クリックメニューから、[NuGet パッケージの管理] を選択します。[参照] タブの [検索]　テキスト ボックスに "Microsoft.ML" と入力し、[Microsoft.ML] を選択し、[インストール] を選択し、以降画面の指示に従い "Microsoft.ML" をインストールします。[ソリューション エクスプローラー] から、プロジェクトを選択し、右クリックメニューから、[追加] - [新しいフォルダー] を選択しフォルダーを作成し、任意の名前 (ここでは、"Data") を付けます。Wine Quality Data Set - Data Folder から、winequality-red.csv をダウンロードし、作成した "Data" フォルダーに格納します。[ソリューション エクスプローラー] から、"winequality-red.csv" を選択し、[プロパティ] - [出力ディレクトリにコピー] から、"常にコピーする" を選択します。まず、データセットのカラムの定義を行います。[ソリューション エクスプローラー] から、プロジェクトを選択し、右クリックメニューから、[追加] - [クラス] - [名前] に "WineQuality" と入力し、[追加] を選択します。以下のコードを記述します。"WineQualityData" というクラスは、読み込むデータのカラムを定義をしています。
各フィールドの属性でデータファイルに対応するインデックスを定義しています。"WineQualityPrediction" というクラスでは、推論時に出力するデータセットを定義しています。以降から、"Program.cs" にコードを追加していきます。
はじめに、以下のコードで各ライブラリを using しておきます。"Program.cs" に、学習データのパスを引数にもつ Train メソッドを定義します。"Program.cs" に、モデルを評価する Evalute メソッドを定義します。
このメソッドは、対象の学習モデル、テストデータのパスを引数に持ちます。以下のスレッドによると、v0.2 でデータの分割がサポートされるようですが、2018/06/04 現在では、データ分割がサポートされていないため、テキストファイルをランダムに分割するカスタムメソッドを定義します。SplitData メソッドは、引数にデータファイルのパスと学習に利用するデータの割合を指定します。データを指定された割合で分割し、学習データと評価データのパスをタプルで返します。最後に各メソッドを定義します。今回の手順においては、以下のサイトを参考に記載しました。


