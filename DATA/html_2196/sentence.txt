「プログラムは英語の自然言語に近くなるように」というテーマで命名を検討するに当たって、イベントハンドラに付与するonプレフィックスについての質問を受けました。
なんとなくはわかるもののうまく言語化できず、良い機会なので調べてみました。その調査結果として、どのように捉えれば上記テーマと齟齬が生じないのか、一つの解釈を提示してみます。
※あくまで一つの解釈です。まずは前置詞としてのonの意味を掘り下げます。
用途として多いのは「上に」に類するものですが、本来は「接触している」状況を表していたのだそうです。
そこから「上側に接している」という意味で使用されたり、「時間に接している」ということでon Mondayやon scheduleという用法が用いられたりするようになったようです。更にそこから転じて、「on + 動作を表す名詞/動名詞」で「〜するとすぐに」という意味を持つようにもなりました。Oxford Advanced Learner's Dictionaryの例文が分かりやすかったです。immediately after somethingイベントハンドラのonプレフィックスはこの用法を利用していると考えられます。また、英語の掲示板では、onがタイミングを示す意味で使われることから、whenのタイプ数を減らすために代わりにonが用いられたのではないか、という意見もありました。
このどちらかで整理できそうな気がしてきました。まずはC#のevent構文での命名を考えます。これのenemy.OnDead += () =&gt; this.FinishBattle()の部分を英文にすると下記のようになります。
()は省略されている単語を補った部分です。翻訳サイトで日本語に翻訳してみましょう。きれいな文章になりましたね。
命令文として扱ってほしいところが主語省略版の平叙文として訳されてしまってはいますが。では、イベントハンドラメソッドにonプレフィックスを付与するのはどのように解釈できるでしょうか。これのOnAuthenticationSucceeded() =&gt; this.OpenWindow()の部分を英文にすると下記のようになります。
()は省略されている単語を補った部分です。翻訳してみましょう。こちらもきれいな文章にできました。多用は避けたいですが、依存の方向が「処理を行うクラス→タイミング決めるクラス」ではなく逆の場合があります。
こういう場合はevent構文は使用できないので、外から直接メソッドを呼び出すことになります。これのcharacter.OnSelected()の部分を英文にすると下記のようになります。
()は省略されている単語を補った部分です。
このパターンの場合はonをそのまま使うよりwhenに置き換えた方が理解しやすい文章になります。翻訳してみましょう。Characterのままだと不自然な文章なため上手く訳してくれなかったので、Johnにしてみました。話の繋がる文章になりました。「do process forの省略だなんて無理矢理だ」と感じるかもしれません。
しかしこの部分は「do things for」等複数の表現が可能な大した意味を持たない部分なので省略し、大事な部分のみ残して簡潔に意図が伝わるようにした、という見解は可能なのではないかと考えます。しかし、イベント駆動にできそうな場合は、そちらを軸に設計を行うのが適切な場面が多いように思います。言語やフレームワークにより両方の命名パターンが存在し、これまでそれぞれどういう思想なのか自信を持って説明できずにいました。
しかし今回調査を行なって、下記のような解釈で良いのではないかと整理できました。「on + 動作を表す名詞/動名詞」で「〜するとすぐに」となる
ここから以下のパターンが作れます。「click」は動詞の原型ではなく、名詞だったのですね。「on + 動作を表す名詞/動名詞」で「〜するとすぐに」を意味するので、「on + イベント名」で「〇〇イベント後すぐに」を表すと考えることも可能です。OnButtonClick = on button's click event翻訳してみましょう。省略部分の補完量が少ないので、まずはこちらの考え方で慣らすというのはアリかもしれません。


