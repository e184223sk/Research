More than 1 year has passed since last update.下記の記事の続きとなります。
【WPF】リファクタリングで学ぶMVVM、Prism　ー　はじめにこの記事では、MainWindow.xaml.csを対象にＭＶＶＭ観点でどの層に処理を任せるか？を学んでいきます。MainWindow.xaml.csを分割するまえに、MVVMの各層の役割を簡単にご紹介します。詳細については、こちらに非常に綺麗にまとめられているのでご参照ください。
https://docs.microsoft.com/en-us/previous-versions/msp-n-p/gg405484(v=pandp.40)#sec1MainWindow.xaml.csコードがこちらです。ソースコードをもとに、MainWindow.xaml.csが行っている処理を下記のように列挙しました。それでは、責務分割の基準を参考に、それぞれの処理を各層に分類してみましょう。　［振り分け］
　　プレゼンテーションレイヤで扱うデータを定義するため、 ViewModel で対応します。　［振り分け］
　　ユーザインタラクションの処理のため、 ViewModel で対応します。　［振り分け］
　　ビジネスロジックおよびビジネスロジックで扱うデータ管理のため、 Model で対応します。　［振り分け］
　　ビジネスロジックおよびビジネスロジックで扱うデータ管理のため、 Model で対応します。MainWindow.xaml.csの処理を列挙し、ＭＶＶＭの各層への振り分けを決めました。
次の章から、ViewModelおよびModelの外枠を作り、各処理を分割していきましょー。【WPF】リファクタリングで学ぶMVVM、Prism。その② ～ Model,ViewModelを作成 ～


