※dynamic型を否定するつもりは全くありません。
「dynamic型が絡むメソッドの戻り値とかで、型が決まっていてキャストできるものはキャストしておくとメリットがあるよ」という話です。C#におけるdynamic型は、COMオブジェクトを操作するときなどに割とお世話になります。
今回、dynamic型を使って起動中のエクスプローラから情報を取得するようなコードを書きました。上記のコードでは、String.Compareの戻り値がint型であることをうっかり忘れていますが、コンパイルは通ります。String.Compareの戻り値がint型なので、if文内でbool型へのキャストをしようとして例外が発生しました。上記のコードでは、String.Compare(String, String, Boolean)を使っています。
しかし、メソッドの引数にdynamic型が含まれる場合、引数の型や戻り値の型は実行時に動的に決まるようです。
（つまり、コンパイル時には、bool型かもしれないとして扱われ、if文の条件式として使われていてもコンパイルエラーとして扱われない。）試しに、下記のコードのように、引数を明示的にキャストしてあげると、下記のようにコンパイル時に型のアンマッチを検出できます。明示的にキャストする場合としない場合を、下記のコードのif文の行を切り替えてそれぞれコンパイルし、ildasmで実行ファイルのコードを確認してみました。左：キャストあり　　　右：キャストなし
（余分な差異が表示されないように、IL_#### は IL_XXXX に置換してあります。）
ちゃんとは追ってないですが、右側は、リフレクションによるメソッド呼び出しをしていそうなコードがあります。
繰り返し処理の中であれば、キャストすることで処理時間を大きく改善できるケースもありそうな気がします。


