using System;
using System.Linq;
using System.Collections.Generic;

public class Program
{
    public static IEnumerable&lt;TResult&gt; product&lt;T1, T2, TResult&gt;(IEnumerable&lt;T1&gt; ts1, IEnumerable&lt;T2&gt; ts2, Func&lt;T1, T2, TResult&gt; func)
    {
         return ts1.SelectMany((t1) =&gt; (ts2.Select((t2) =&gt; func.Invoke(t1, t2))));
    }

    public static IEnumerable&lt;TResult&gt; product&lt;T1, T2, T3, TResult&gt;(IEnumerable&lt;T1&gt; ts1, IEnumerable&lt;T2&gt; ts2, IEnumerable&lt;T3&gt; ts3, Func&lt;T1, T2, T3, TResult&gt; func)
    {
        return ts1.SelectMany((t1) =&gt; product(ts2, ts3, (t2, t3) =&gt; func.Invoke(t1, t2, t3)));
    }

    public static void Main()
    {
        var strs = new List&lt;string&gt;() { "a", "b", "c" };
        var nums = new List&lt;int&gt;() { 1, 2, 3 };

        // "べた"に書く場合:
        var tuples1 = strs.SelectMany((str) =&gt; nums.Select((num) =&gt; new Tuple&lt;string, int&gt;(str, num)));
        foreach (var tuple in tuples1)
        {
            Console.WriteLine(tuple);
        }

        // メソッド定義した場合: 
        var tuples2 = product(strs, nums, (str, num) =&gt; new Tuple&lt;string, int&gt;(str, num));
        foreach (var tuple in tuples2)
        {
            Console.WriteLine(tuple);
        }

        // 引数が3つの場合:
        var xs = new List&lt;int&gt;() { 1, 2, 3 };
        var ys = new List&lt;int&gt;() { 1, 2, 3 };
        var zs = new List&lt;int&gt;() { 1, 2, 3 };
        var tuples3 = product(xs, ys, zs, (x, y, z) =&gt; (new Tuple&lt;int, int, int&gt;(x, y, z)));
        foreach (var tuple in tuples3)
        {
            Console.WriteLine(tuple);
        }

        // ===&gt; "べた"に書く場合 &lt;===
        // (a, 1)
        // (a, 2)
        // (a, 3)
        // (b, 1)
        // (b, 2)
        // (b, 3)
        // (c, 1)
        // (c, 2)
        // (c, 3)

        // ===&gt; メソッド定義した場合 &lt;===
        // (a, 1)
        // (a, 2)
        // (a, 3)
        // (b, 1)
        // (b, 2)
        // (b, 3)
        // (c, 1)
        // (c, 2)
        // (c, 3)

        // ===&gt; 引数が3つの場合 &lt;===
        // (1, 1, 1)
        // (1, 1, 2)
        // (1, 1, 3)
        // (1, 2, 1)
        // (1, 2, 2)
        // (1, 2, 3)
        // (1, 3, 1)
        // (1, 3, 2)
        // (1, 3, 3)
        // (2, 1, 1)
        // (2, 1, 2)
        // (2, 1, 3)
        // (2, 2, 1)
        // (2, 2, 2)
        // (2, 2, 3)
        // (2, 3, 1)
        // (2, 3, 2)
        // (2, 3, 3)
        // (3, 1, 1)
        // (3, 1, 2)
        // (3, 1, 3)
        // (3, 2, 1)
        // (3, 2, 2)
        // (3, 2, 3)
        // (3, 3, 1)
        // (3, 3, 2)
        // (3, 3, 3)
    }
}

