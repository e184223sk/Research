More than 1 year has passed since last update.byte配列からプリミティブ型(int, short等)を切り出すとき、BitConverterを使用しますが、BitConverterリトルエンディアンで動作します。ここで、ビッグエンディアンのときはBitConverterは使用できません。
インターネットで調べると大体以下の結論となっています。関連記事：
エンディアン指定が必要な場合のBitConverterの書き方
http://schima.hatenablog.com/entry/20110301/1299001406
Union使用版
http://d.hatena.ne.jp/finger_works/20120726/1343307427私は以下のようにビット反転マクロを作成していました。ここで、MSの実装はどうなっているのかとmscorelibの公開コードを見てみると、
http://referencesource.microsoft.com/mscorlib/system/bitconverter.cs.html#mscorlib/system/bitconverter.cs,8640d8adfffb155b...ビッグエンディアン用のコード入ってるじゃん。しかし、このIsLittleEndianは最初に書いたとおりReadOnlyです。だた、ここまでのコードが書いてあれば、ほとんど手を入れずにビッグエンディアン対応が実現できそうです。パフォーマンスもMSのBitConverter相当ですね。
ただし、気を付けないといけないのは、fixedすぐあとの最初のifです。このコードはリトルエンディアンでしか動作しないので、リトルエンディアンのスコープへ移動させる必要があります。また、VS用のパラメータヒントなどで使用されるAttributeですが、MSのページには載っていないので、mscorelibをILSpyで見ると、BitConverterのToInt*は以下のようになっています。これも、クラスを自作したときに流用できそうです。BitConverterのMS実装にビッグエンディアン用のコードが入っているので、ここを流用すると簡単にビッグエンディアン対応版BitConverterを作成できそう。ネットで実装方法を何通りか調べてどれがいいのかとか調べる(理解に時間をかける)前に、まずこの方法を選択する価値はあるかもしれません。
MsCorelib.dllのライセンスでBitStreamReaderの改変&amp;公開可能か不明なため上記対応の実装例の記載は控えます。


