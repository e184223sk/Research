
    class Program
    {
        static int howManyHolidays(int firstDay,int N, int L, int[] list)
        {
            int counter = 0;
            for(int i = firstDay; i &lt; N; i++)
            {
                if(list[i] == 1)
                {
                    counter++;
                }
                else if(L &gt; 0)
                {
                    counter++;
                    L--;
                }
                else
                {
                    break;
                }
            }
            return counter;
        }
        static void Main(string[] args)
        {
            string[] input = Console.ReadLine().Trim().Split(' ');
            int N = int.Parse(input[0]), L = int.Parse(input[1]);
            input = Console.ReadLine().Trim().Split(' ');
            int[] list = new int[N]; //1 -&gt; 休業日、0 -&gt; 営業日
            for(int i = 0; i &lt; N; i++)
            {
                list[i] = int.Parse(input[i]);
            }
            //連休の初日が１日目の場合求める
            int firstDay = 0;
            int temp = howManyHolidays(firstDay, N, L, list);
            int max = temp;
            int lastDay = firstDay + temp - 1; //連休の初日がfirstDayの場合の連休の最終日
            //連休の初日を一日ずつずらす
            for(int i = 1; i &lt; N; i++)
            {
                temp--;
                //連休の初日の前日営業日の場合、(lastDay+1)日目から後１回年休が使える
                int paidDay; 
                if(list[i - 1] == 0)
                {
                    paidDay = 1;
                }
                else
                {
                    paidDay = 0;
                }
                for(int j = lastDay + 1; j &lt; N; j++)
                {
                    if(list[j] == 1)
                    {
                        temp++;
                    }else if(paidDay == 1)
                    {
                        temp++;
                        paidDay--;
                    }
                    else
                    {
                        lastDay = j - 1;
                        break;
                    }
                }
            if(temp &gt; max)
                {
                    max = temp;
                }
            }
            Console.WriteLine(max);
        }
    }

