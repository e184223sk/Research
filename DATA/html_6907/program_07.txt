
public class Timer : MonoBehaviour
{
    /// &lt;summary&gt;
    /// 一時停止フラグ
    /// &lt;/summary&gt;
    public bool IsPaused { get; private set; }

    void Start()
    {
        //60秒カウントするストリームをコルーチンから作る
        Observable.FromCoroutine&lt;int&gt;(observer =&gt; GameTimerCoroutine(observer, 60))
            .Subscribe(t =&gt; Debug.Log(t));
    }

    /// &lt;summary&gt;
    /// 初期値から0までカウントするコルーチン
    /// ただしIsPausedフラグが有効な場合はカウントを一時停止する
    /// &lt;/summary&gt;
    private IEnumerator GameTimerCoroutine(IObserver&lt;int&gt; observer, int initialCount)
    {
        var current = initialCount;
        while (current &gt; 0)
        {
            if (!IsPaused)
            {
                observer.OnNext(current--);
            }
            yield return new WaitForSeconds(1);
        }
        observer.OnNext(0);
        observer.OnCompleted();
    }
}

