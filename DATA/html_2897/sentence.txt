More than 1 year has passed since last update.（Qiita初めてそれなりに経つんですけど。）
（そういえばWPFやElectronばかりでC#単体の記事って書いたことないなって思ったので）
（今日から雑に小ネタ挟んでいきたいと思います。雑に。）今日は拡張メソッドについて紹介したいと思います！前職のあるプログラムで 文字列型 → 数値型 の変換が散見されていたのですが、
皆さんC#で 文字列型 → 数値型 を行う場合って、どの方法が思いつきますかね？こんなんだったり、あんなんだったり、そんなんだったり、C#だといろいろな変換方法があって嬉しいですね！すごい！さすがC#！
ただ、これだとコーダーによって同じプログラムの中で多数の変換方法が混在してしまいます。。。そこで、やむをえず変換を繰り返すことが想定されているなら、拡張メソッドを使ってみよう！
というのが今回の本題です。
表題に3分と書いてしまったのでサクサクいきます。拡張メソッド (C# プログラミング ガイド) | Microsoft Docsよりはい、つまり ToString() のように、「既存の型にメソッドを追加して利用できるもの」ですね。ではさっそく拡張メソッドを使用した例を見ていきましょう。だいぶさっぱりしましたね！今度は少し発展した例を紹介します。以下の例を見てみましょう。
これはインデックスが付与されたデータベースタイプ列挙体「Engine」です。この列挙体を使用する際に、数値に変換したくなる時ってありますよね。
インデックスついてるんだもん。
単純に数値に変換しようとすると以下のようになります。この変換を、拡張メソッドを使用して記述してみます。だいぶさっぱりしましたね！（二回目）拡張メソッドを使えば、逆方向の変換もお手軽に実装可能です。いかがでしょうか？だいぶ駆け足になりましたが、拡張メソッドを使用すると頻出する処理をお手軽に共通化することが可能になります。今回は型変換に絞って紹介しましたが、メソッドなので当然他の処理を挟むことも可能です。カプセル化の概念にも通じるので、コード全体の可読性だけでなく保守性も向上させることができますね！ぜひご活用ください～。


