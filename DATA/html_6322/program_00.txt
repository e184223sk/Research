public static class StreamCreater
{
    static readonly private Queue&lt;string&gt; queue = new Queue&lt;string&gt;();
    static private Random random = new Random();
    /// &lt;summary&gt;
    /// 入力したパターンからランダムに出力し、完成パターンと一致すれば出力を終了する
    /// &lt;/summary&gt;
    /// &lt;param name="inputPattern"&gt;入力パターン&lt;/param&gt;
    /// &lt;param name="finishedPattern"&gt;完成パターン&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public static IEnumerable&lt;string&gt; Create(string[] inputPattern, string[] finishedPattern)
    {
        queue.Clear();
        while (!queue.SequenceEqual(finishedPattern))
        {
            queue.Enqueue(inputPattern[random.Next(inputPattern.Count())]);
            if (queue.Count == finishedPattern.Count() + 1)
            {
                queue.Dequeue();
            }
            yield return queue.Last();
        }
    }
}

