初めてUWPの開発を行って、何もかもが初めてで四苦八苦しながら作っていたところ、どうもUWPは特定のプリンタに直接印刷することができないらしい。最初から難しそうだなーなんて思ってた。
なんかお店とかだとタブレットからレシートに印刷をかけてるようなイメージがあったので、なんかやり方あるんだろとも思ってたけど、調べまくっても、ユーザーに印刷を促すコードばかりが出てくる。結論、UWPではセキュリティの関係上、印刷をユーザーに促すことはできても、天地がひっくり返っても直接特定のプリンタに印刷をすることはできない。
しかもカメラデバイスの利用許可のように一度だけ出る分にはまぁまぁとも思うけど、印刷の場合は常に促される形になるらしく、話にならんかった。コードで何も指定できなくて、どのプリンタに印刷するの？何ページ目を印刷するの？みたく聞いてくるならそりゃ毎度毎度聞くわなって感じ。UWPから直接実行する考えは切り捨て、UWPから.NET Frameworkで作られたexeを実行することで実現する。参考にしたのは下記。
UWP – Print PDF Files Silently (Without Print Dialog)流れの概要は下記の通り。
情報の受け渡しにオブジェクトは利用できないので、Newtonsoft Json.NETとかを利用して、JSON文字列とかで受け渡しすればいい感じになる。記事の便宜上出力の種類をWindowsアプリケーションにする。これはコンソール画面を表示させないため。
参照設定から、『C:\Program Files (x86)\Windows Kits\10\UnionMetadata\10.0.17763.0\Windows.winmd』を選択する。
パスの『10.0.17763.0』は、UwpAppで選択している最小バージョンに合わせたパスにある Windows.winmd を選択する。
App.configを設定する。それらしいコードを書く。
Windows.Storage.ApplicationData.Current.LocalSettings.Values["xxx"]で、UWP側から渡された値を取得できるようになる。参照設定で、Universal Windows -&gt; 拡張 から、『Windows Desktop Extensions for the UWP』を選択する。
バージョンはUwpAppの最小バージョンに合わせたものを選択する。
ビルドしたNetApp.exe、NetApp.exe.configをプロジェクトに含める。
（NetApp.exe.configは、アプリケーション構成ファイルを操作したい場合）。
NetApp.exe.config の中身が色々な都合で変わっちゃっていたら、元の形に変える。（.NET Core のDLLを参照してる時は変えないとダメそう）プロジェクトのプロパティ→ビルド から、『.NETネイティブツールチェーンでコンパイルする』のチェックを外す。
Debugビルドだと初めから外れているけど、Releaseビルドだと既定値としてチェックがついている。
よくわからんけどチェックがついてると、.NET Native を使ってネイティブコンパイルするようになるようだ。
NetApp.exeが.NET Frameworkを利用するものである以上、ネイティブコンパイルはNGなので、チェックを外す。
というのが正解のようだ。
Package.appxmanifest をコード表示して Extensions、Capabilities 部分を加えて、NetApp.exeを実行できるようにする。NetApp.exe に渡したい値を設定する。NetApp.exe を実行する。UWPアプリケーションの上に、キャンセルボタンが押せるダイアログが表示される。
印刷が終われば消えるし、UWPで画面が切り替わるわけでもないので、まぁまぁ求めた動作はする。
NetAppでは、Windows.Storage.ApplicationData.Current.LocalSettings.Values[] によって値を取得しているため、入口がUWP側から実行してないと下記例外が発生してしまう。前段としてどうやるとそこがうまいこと通るようになるのか分からなかったので、当該部分だけ望む値が渡ってきたという想定のコードに変えてデバッグしました。


