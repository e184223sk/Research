More than 1 year has passed since last update.　.NET Coreも3.* になったし、そろそろ.NET Frameworkで作ったプロジェクトも置き換えようと始めてみたのですが、単体テストにPrivateObjectがないことに気がつきました。
　あれ？　それじゃあプライベートメソッドのテストが出来ないじゃないですか？　どういうことですか！？.NET Core と .NET Standard での単体テストのベスト プラクティス
https://docs.microsoft.com/ja-jp/dotnet/core/testing/unit-testing-best-practicesパブリック メソッドの単体テストを行うことでプライベート メソッドを検証する
ほとんどの場合、プライベート メソッドをテストする必要はありません。 プライベート メソッドは実装の詳細です。 プライベート メソッドは独立して存在することはない、と考えることができます。　ご、ごめんなさい！！
　確かにそうですね。プライベートメソッドのテストを書きながら「面倒だなぁ。でもやっておいた方がなんか安心するしなぁ」という感じで作ってました。あと単純にテストのパターン数が減らせるので。1
　とはいえ、既に作っちゃったわけで、これからは心を入れ替えて Publicだけでやっていくんで、既存部分だけは何とかならないかなと思うわけです。
　一時的な措置ということでリフレクションを使って代替案としたいと思ったのが始まりです。　初期に考えたものです。課題点があります。
　説明はコメントとして書いておきました。　お気づきのように、テスト対象のコンストラクタに引数がない場合は良いのですが、ある場合はPrivateObjectのインスタンス化時に、その引数も渡してあげる必要がある状態となっています。
　それを無くすためにはテストオブジェクト対象の内容をそのままコピーすることが出来ればいいわけで、原理的には出来るはずだと思うのですが(.NET Frameworkなら出来ていたわけで)、生憎と今の私の拙いリフレクション知識ではこれが精一杯です。これだけでも大分軽減できたのでまずは十分です。　色々調べたところ、InvokeMemberを使えば解決できるということが分かりました。　シンプルで良し！
　もちろん元々のを完全に再現しているわけではないので、色々と足りないところはありますが、まぁ十分かなと。
　こういうメタプログラミングも学んでいかないといけないですね。publicで3分岐、privateで4分岐があったとしたら、privateのテストもやれば3＋4の足し算で済むけど、publicのみだと、3×4の乗算になるので。 ↩


