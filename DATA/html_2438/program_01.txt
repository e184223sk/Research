
using UnityEngine;
using UnityEngine.InputSystem;

// 生成されたクラスはI[ActionMap]インターフェスを持っているので、これを実装します。
public class ActionMapSample : MonoBehaviour, SampleControls.ISampleMapsActions
{
    private SampleControls.SampleMapsActions _sampleMapsActions = default;

    private void Awake()
    {
        // SampleControlsに登録したActionMapを生成ます。
        _sampleMapsActions = new SampleControls.SampleMapsActions(new SampleControls());
        // SampleControls.ISampleMapsActionsが実装されたクラスをSetCallbacksに指定します。
        _sampleMapsActions.SetCallbacks(this);
    }

    // SampleControls.ISampleMapsActionsによって定義されたMoveActionのコールバック
    public void OnMoveAction(InputAction.CallbackContext callbackContext)
    {
        var value = callbackContext.ReadValue&lt;Vector2&gt;();
        Debug.Log($"position {value.x},{value.y}");
    }

    // SampleControls.ISampleMapsActionsによって定義されたJumpActionのコールバック
    public void OnJumpAction(InputAction.CallbackContext callbackContext)
    {
        var value = callbackContext.ReadValue&lt;float&gt;();
        if (value &gt; 0)
        {
            Debug.Log("On Jump.");
        }
    }

    private void OnEnable()
    {
        // 忘れずEnabl(）
        _sampleMapsActions.Enable();
    }

    private void OnDestroy()
    {
        // こっちはDisposeではなくDisable(）
        _sampleMapsActions.Disable();
    }
}

