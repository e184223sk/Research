
 public class ExVisitor : ExpressionVisitor
 {
     public List&lt;PropertyInfo&gt; Properties = new List&lt;PropertyInfo&gt;();

     protected override Expression VisitMember(MemberExpression node)
     {
         if (node.Member is PropertyInfo propInfo)
             Properties.Add(propInfo);
         return base.VisitMember(node);
     }
     protected override Expression VisitMethodCall(MethodCallExpression node)
     {
         if (node.Method is MethodInfo methodInfo)
         {
             if (methodInfo.Name.StartsWith("get_"))
             {
                 string candProp = methodInfo.Name.Substring(4);
                 var props = methodInfo.DeclaringType.GetProperties()
                     .Where(prop =&gt; prop.Name == candProp);
                 PropertyInfo itemProp = props.FirstOrDefault();
                 if (itemProp != null)
                     Properties.Add(itemProp);
             }
         }
         return base.VisitMethodCall(node);
     }
 }

