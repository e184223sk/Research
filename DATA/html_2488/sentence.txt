More than 1 year has passed since last update.Unity Cloud BuildではCocoapodが使えません。
なのでCocoapodを使わずにFirebaseの機能をiOSで使う方法を紹介します。まず ここ からFirebaseのUnity用のSDKをダウンロードします。
次にダウンロードしたSDKをUnityにインポートします。
[Assets]&gt;[Import Package]&gt;[Custom Package...]

ダウンロードしたzipファイルから使うものを選びます
Downloads\firebase_unity_sdk_6.6.0\firebase_unity_sdk\dotnet4\
↑このパスの中の Firebase???.unitypackage次にFirebaseのiOS版のFrameworkを ここ からダウンロードします。
ダウンロードしたzipファイルを解凍し、使いたいFirebaseの機能のファイルを開く。[Downloads/Firebase-6.11.0/Firebase/Analytics]内のすべての .framework フォルダを
Unityの[Assets/Plugins/iOS]に入れます。

こんな感じでその他のframeworkも入れていきます。
frameworkが入れ終わったら、[Firebase-6.11.0\Firebase]内にある
[Firebase.h]というファイルも[Assets/Plugins/iOS]に入れます。下のファイルを[Assets/Editor]内に置きます。長いですね・・・
コメントを見て少し書き換えたりしてください。上のBuildProcess.csにこんな行があると思います
ここをframeworkファイル内のmodule.modulemapに沿って書き換えます。場所 [FirebaseAnalytics.framework/Modules/module.modulemap]と書いてある場合は
proj.AddBuildProperty(target, "OTHER_LDFLAGS", "-ObjC");//　必須！
の下に
proj.AddBuildProperty(target, "OTHER_LDFLAGS", "-lz");
proj.AddBuildProperty(target, "OTHER_LDFLAGS", "-lsqlite3");
を追加します。
要するに
 "-l"+"link の後に書いているもの"
を追加します。
link frameworkの部分は、
List&lt;string&gt; frameworks = new List&lt;string&gt;() {
の中に上の例ではを追加します。こんな感じで他のframeworkのmodule.modulemapを見て追加します。後はビルドしてみましょう！
そうすれば多分できるはずです。わからないことやエラーが起きたらコメントで知らせてください。


