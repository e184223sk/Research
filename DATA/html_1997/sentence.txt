More than 1 year has passed since last update.サーバーサイドとフロントサイド(今回はAngular)を別サーバーで実装する場合、Hostされるポート番号が異なるため、CORSの設定をする必要がある。Angular 8.2.14
.NET Core 3.1サーバーサイド：https://localhost:44342フロントサイド：http://localhost:4200※ localhost:4200はAngularのデフォルトのポート番号何も設定しないと、フロントサイドからサーバーサイドにhttpリクエストした場合、下記のエラーによりレスポンスが返されない。Access to XMLHttpRequest at 'https://localhost:44342/api/weatherforecast/getweatherforecast' from origin 'http://localhost:4200' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.CORSの設定は、Startup.csで行う。ポイントはControllerの属性に[EnableCore("CorsPolicyName")]を指定するとAPIごとにCORSを設定できます。ASP.NET Core でのクロスオリジン要求 (CORS) を有効にする | Microsoft Docs.NET CORE 2.0 Angular 5: Allowing Cors - Stack OverflowASP.NET Core 3.0 への移行時に悩んだ点と新しくなった Endpoint Routing について - しばやん雑記


