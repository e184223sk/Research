using System.Collections.Generic;
using System.IO;
using System.Text.RegularExpressions;

namespace testconsole
{
    class Program
    {
        /// &lt;summary&gt;
        /// 元ディレクトリの構造を引き継いで別名でディレクトリを作成する
        /// &lt;/summary&gt;
        /// &lt;param name="sourceDir"&gt;元ディレクトリ&lt;/param&gt;
        static void CreateDestDir(string[] sourceDir)
        {
            // 作成する別名ディレクトリのリスト
            List&lt;string&gt; destDir = new List&lt;string&gt;();

            // 1つ目の文字列だけ置換するためRegexインスタンス作成
            Regex reg = new Regex("orig");

            // 取得したパスから重複を抜いてリストに登録
            foreach (string dir in sourceDir)
            {
                // リスト内に既に文字列がある場合はAdd処理を飛ばす
                if (destDir.Contains(reg.Replace(dir.Remove(dir.LastIndexOf('\\')), "TestDir", 1)))
                    continue;

                // 最初に出現した文字列をTestDirに置き換える
                destDir.Add(reg.Replace(dir.Remove(dir.LastIndexOf('\\')), "TestDir", 1));
            }

            // ディレクトリの作成
            foreach (string dir in destDir)
            {
                // 取得したパスはエスケープがされている状態なので、そのままディレクトリ作成
                Directory.CreateDirectory(dir);
            }
        }

        static void Main(string[] args)
        {
            // メンバ変数
            string directoryPath = @"C:\Users\watame\Desktop\orig";
            string searchFileName = "*.txt";

            // 対象のフォルダ以下の .txt ファイル一覧を取得
            string[] filePaths = Directory.GetFiles(directoryPath, searchFileName, SearchOption.AllDirectories);

            // ディレクトリの作成
            CreateDestDir(filePaths);
        }
    }
}

