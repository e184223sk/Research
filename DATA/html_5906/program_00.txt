public class DataGridViewCheckBoxCellEx : DataGridViewCheckBoxCell
{
    // チェックボックス拡大サイズ
    private const int CHECKBOX_INFLATE_SIZE = 8;

    protected override void Paint(Graphics graphics, ...)
    {
        // 塗りつぶしと枠線描画
        bool cellSelected = (elementState &amp; DataGridViewElementStates.Selected) != 0;
        SolidBrush br = new SolidBrush(cellSelected ? cellStyle.SelectionBackColor : cellStyle.BackColor);
        graphics.FillRectangle(br, cellBounds);
        this.PaintBorder(graphics, clipBounds, cellBounds, cellStyle, advancedBorderStyle);

        // チェックボックス描画
        Rectangle checkboxRect = this.GetCheckboxBounds(graphics, cellStyle, rowIndex);
        checkboxRect.Offset(cellBounds.Location);
        ControlPaint.DrawCheckBox(graphics, checkboxRect, his.GetButtonState(formattedValue));
}

    protected override Rectangle GetContentBounds(Graphics graphics, DataGridViewCellStyle cellStyle, int rowIndex)
    {
        Rectangle checkboxBounds = base.GetContentBounds(graphics, cellStyle, rowIndex);
        Rectangle cellBounds = this.DataGridView.GetCellDisplayRectangle(this.ColumnIndex, rowIndex, false);
        Size marginSize = new Size(cellBounds.Width - checkboxBounds.Width, cellBounds.Height - checkboxBounds.Height);
        if (marginSize.Width &lt; CHECKBOX_INFLATE_SIZE * 2 || marginSize.Height &lt; CHECKBOX_INFLATE_SIZE * 2)
        {
            return checkboxBounds;
        }
        checkboxBounds.Inflate(CHECKBOX_INFLATE_SIZE, CHECKBOX_INFLATE_SIZE);
        return checkboxBounds;
    }

    private ButtonState GetButtonState(object formattedValue)
    {
        ButtonState bs = ButtonState.Normal;
        if (formattedValue != null &amp;&amp; formattedValue is CheckState)
        {
            bs = ((CheckState)formattedValue == CheckState.Unchecked) ? ButtonState.Normal : ButtonState.Checked;
        }
        else if (formattedValue != null &amp;&amp; formattedValue is bool)
        {
            bs = ((bool)formattedValue) ? ButtonState.Checked : ButtonState.Normal;
        }
        return bs;
    }
}

