
public bool CheckPrime(BigInteger n) {
    if(n == 2)
        return true;
    if(n &lt;= 1 || CheckEven(n))
                return false;

    var d = (n - 1) &gt;&gt; 1;
    while(CheckEven(d))
        d &gt;&gt;= 1;

    for(int i = 0 ; i &lt; 100 ; i++) {
        var a = RandomNext(1,n - 1);
        var t = d;
        var y = BigInteger.ModPow(a,t,n);

        while(t != n - 1 &amp;&amp; y != 1 &amp;&amp; y != n - 1) {
            y = (y * y) % n;
            t &lt;&lt;= 1;
        }

        if(y != n - 1 &amp;&amp; CheckEven(t))
            return false;
    }
    return true;
}

