
using System;

namespace IFPlactice
{
    class IFPlacticeMain
    {
        static void Main()
        {
            SimpleQueue sq = new SimpleQueue(10);
            ListQueue lq = new ListQueue();

            // インターフェース参照用変数
            ICharQueue iq;

            // SimpleQueueオブジェクトを参照する
            iq = sq;

            char tempCh;
            int i;

            for (i = 0; i &lt; 10; i++)
            {
                // 参照先のクラスを意識せずメソッドを呼びだせる
                iq.Enqueue((char)('A' + i));
            }

            Console.Write("Simple Queue :");
            for (i = 0; i &lt; 10; i++)
            {
                // 参照先のクラスを意識せずメソッドを呼びだせる
                tempCh = iq.Dequeue();
                Console.Write(tempCh);
            }
            Console.WriteLine();


            // ListQueueオブジェクトを参照する
            iq = lq;
            for (i = 0; i &lt; 10; i++)
            {
                // 参照先のクラスを意識せずメソッドを呼びだせる
                iq.Enqueue((char)('A' + i));
            }

            Console.Write("List Queue   :");
            for (i = 0; i &lt; 10; i++)
            {
                // 参照先のクラスを意識せずメソッドを呼びだせる
                tempCh = iq.Dequeue();
                Console.Write(tempCh);
            }
            Console.WriteLine();
        }
    }
}

