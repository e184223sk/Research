More than 1 year has passed since last update.プログラミングにおける「インターフェース」について、自分の備忘録として記載しておきます。
言語はC#になります。クラスにどんなメソッドやプロパティを実装するかの形だけ定め、実装は継承先の子クラスで行うもの。上記はchar型データのFIFOのキューを実装するインターフェースです。エンキュー/デキューのメソッドの定義がありますが、この実装は子クラスで行うことになります。インターフェースを継承してメソッドの処理内容を記述してみます。違う記述をしたFIFOのキュークラスを２つ作成してみます。片方はchar型の配列を作成し、古い順にデキューするクラスSimpleQueue、もう一つはList型のコレクションを使用してFIFOのキュー処理を実装するクラスListQueueになります。
両クラスとも同じインターフェースを継承し、Enqueue()、Dequeue()メソッドを実装していますが、その処理内容は大きく異なります。継承先でメソッド等の処理内容をそれぞれ実装することができるメリットとして、インターフェース参照ができることが挙げられます。
インターフェース型の変数を用意し、対象のインターフェースを実装する任意のオブジェクトを参照することで、メソッド呼び出しを行うと参照先のオブジェクトに実装された形でメソッドを実行することができます。
先ほどのSimpleQueue、ListQueueを用いて実例を示します。オブジェクトのクラスを意識することなくメソッド呼び出しが出来ました。なお、実行すると以下の様になります。Simple Queue :ABCDEFGHIJ
List Queue   :ABCDEFGHIJ
続行するには何かキーを押してください . . .後日記載・・・できればいいな・・・(汗


