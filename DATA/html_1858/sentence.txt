More than 1 year has passed since last update.ASP.NET CoreアプリケーションではRazorページアプリケーションでもMVCでも、ビューで使用する（＝表示したり入力したりする）可変要素は全てページモデルのプロパティーとして割り当てる。
一覧画面の場合、既定のモデルはListのように表示対象要素のリストである。
この画面に検索条件やソート機能を追加する場合、以下のような事柄が画面UIから設定される。したがってページモデル側はそれらの項目をPropertyとして用意する必要がある。
即ちEntityFrameworkのスキャフォールディングが自動生成してくれた大元のモデルのリストをメンバーの一つとして新たな「専用ページモデル」を作成する必要がある。一覧表示するリストはページモデルのプロパティーの一つとなる。ビュー側には検索条件＋ソート条件設定用のUIを&lt;form&gt;&lt;input type=XXXX&gt;として用意する。検索やソートはモデル側のデータを更新するわけではないので&lt;form method="Get"&gt;となる。
こうしておいてのように書いて行けば、自動的に一覧画面ビューのGet時にコールされるメソッドで何も特別なことをしないでCrt_Nameを引数に指定するだけで自動的にバインドしてくれる。
ここがASP.NET Coreの素晴らしいところ！\Models\Personal.csまずはこのモデルをベースにしてスキャフォールディング使用して既定のコントローラとビューを作成し、続けてとマイグレーションを使用してデータベースにPersonテーブルを作成する。（スキャフォールディングの結果作成されたPersonControllerや\View\Person\Index.cshtmlを後続の処理で修正しながらこのノートの課題をクリアしていく。
データベースに初期データを投入するための静的メソッドを持つSeedDataクラスを作ってProgram.csからコールさせる\Models\SeedData.csProgram.csの中でSeedData.Initalizeをコールするには以下のような書き方が一般的こうしてアプリケーションを実行すると以下のようにPersonテーブルに初期データが挿入される。
Modelsフォルダ内に新しいモデルクラスを作成し、Personをリスト化してメンバーにする。\Models\PersonalSearchModel.cs一覧表示する項目はList Peopleのみである。それ以外に以下のメンバーを有する。ソート条件用のメソッドは画面上の項目名リンククリックで昇順・降順が反転するよにしており、項目表示メソッドは現在の並べ替え状態ではなく、次のクリックで並べ替えられる方向を示す。Index.cshtmlを修正して検索条件入力エリアを設け、また一覧表示テーブルのタイトル行の項目名をソート指定用のリンク(&lt;a&gt;)に修正する。
\Views\People\Index.cshtml一覧表示画面において検索条件・ソート条件を入力して実行する箇所は&lt;form&gt;であっても&lt;a&gt;であっても必ず以下のタグヘルパーを付ける。即ち自分自身にGET命令で戻すため、検索条件＋ソート条件としてクエリパラメータを引き渡さないといけない。その値もタグに応じて以下のようにタグヘルパーで指定する。検索条件／ソート条件を受け付けるページでは、大抵の場合それらを全て複数パラメータとして引き受けるため、&lt;a&gt;タグで自身をコールバックする場合には往々にして一つのタグ内に複数のタグヘルパーを書く必要が生じる。asp-controllerとasp-actionを使用できるのがMVCアプリケーションの強み！コントローラのIndexアクションを検索条件とソート条件をパラメータとして受け取るように修正し、実際の検索とソート処理を実装する。また検索条件によるデータ絞り込みにはトライアル的にSQLの直接実行を組み込む。\Controllers\PeopleControllerここではスキャフォールディングによるお任せLINQ式を使うのではなく可能な限りSQLを直書きする方法を紹介する。IndexメソッドはGET要求しか受け取らないように[HttpGet]属性で修飾する。● 注意するのはasp-for-XXXXのパラメータ名部分のスペルミスのみ。  予告編として、次節で一覧表示対象となるpepleListをページングする方法を紹介する。画面が最初に表示された状態
検索を実行
ソートを実行
ASP.NET Core MVC アプリへの検索の追加
(https://docs.microsoft.com/ja-jp/aspnet/core/tutorials/first-mvc-app/search?view=aspnetcore-3.0)ASP.NET Core の Razor Pages と EF Core - 並べ替え、フィルター、ページング - 3/8
(https://docs.microsoft.com/ja-jp/aspnet/core/data/ef-rp/sort-filter-page?view=aspnetcore-3.0)


