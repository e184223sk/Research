

using ANCEntry_EFMvcApp.Common;
using Microsoft.AspNetCore.Mvc.Rendering;
using System;

namespace ANCEntry_EFMvcApp.Models
{
    public class PersonSearchModel
    {
        /// &lt;summary&gt;
        /// 項目名とソート方法(ASC/DSC)を繋ぐ区切り文字
        /// &lt;/summary&gt;
        internal const char DLM = '$';

        // public List&lt;Person&gt; People { get; set; }
        /// &lt;summary&gt;
        /// ビュー側に一覧表示するモデル(=Person)のリスト
        /// &lt;/summary&gt;
        public List&lt;Person&gt; People { get; set; }

        /// &lt;summary&gt;
        /// ビュー側で選択されたソート対象項目
        /// &lt;/summary&gt;
        public string SortField { get; set; }

        /// &lt;summary&gt;
        /// 名前(FirstName/ LastNameの何れか）の検索値
        /// &lt;/summary&gt;
        public string Crt_Name { get; set; }

        /// &lt;summary&gt;
        /// 年齢(Age）の検索値
        /// &lt;/summary&gt;
        public string Crt_Age { get; set; }

        /// &lt;summary&gt;
        /// ビューの一覧表示グリッドの項目名リンクのタグヘルパーasp-for-SortFieldに使用する関数。
        /// コールされると元の引数に指定された昇順・降順を反転させて返す。
        /// 元の引数に昇順・降順の指定がない場合は既定で昇順をセットして返す。
        /// &lt;/summary&gt;
        /// &lt;param name="sortFieldName"&gt;元となる項目名。&lt;/param&gt;
        /// &lt;returns&gt;
        /// リンククリック時に当該ページをコールバックする際のクエリパラメータ「SortField」にセットする
        /// 項目名＋区切り文字＋昇順・降順の指定を返す。
        /// &lt;/returns&gt;
        public string GetSortFieldParamValue(string sortFieldName)
        {
            var result = sortFieldName;
            string direction = "ASC";
            if (!string.IsNullOrEmpty(this.SortField) &amp;&amp;
                (this.SortField.StartsWith(sortFieldName, StringComparison.CurrentCultureIgnoreCase)))
            {
                string[] tokens = this.SortField.Split(DLM);
                if (tokens.Length &gt; 1)
                {
                    var sortDirection = tokens[tokens.Length - 1];
                    if (sortDirection.Equals("ASC", StringComparison.CurrentCultureIgnoreCase))
                    {
                        direction = "DESC";
                    }
                    else if (sortDirection.Equals("DESC", StringComparison.CurrentCultureIgnoreCase))
                    {
                        direction = "ASC";
                    }
                }
            }
            result += DLM + direction;
            return result;
        }

        /// &lt;summary&gt;
        /// ビューの一覧表示グリッドの項目名リンクの表示文字列の出力に使用する関数。
        /// 当該クラスのソート項目が引数と一致する場合、現在の昇順・降順の指定とは逆方向の
        /// アイコンを項目名の右隣にセットして返す。
        /// &lt;/summary&gt;
        /// &lt;param name="sortFieldName"&gt;ソート元となる項目名。&lt;/param&gt;
        /// &lt;returns&gt;
        /// 当該クラスのソート項目が引数と一致する場合、現在の昇順・降順の指定とは逆方向の
        /// アイコンを項目名の右隣にセットした値。
        /// 一致しない場合は単に引数の項目名のみを返す。
        /// &lt;/returns&gt;
        public string GetSortFieldDisplayName(string sortFieldName)
        {
            var result = sortFieldName;
            if (!string.IsNullOrEmpty(this.SortField) &amp;&amp;
                 (this.SortField.StartsWith(sortFieldName, StringComparison.CurrentCultureIgnoreCase)))
            {
                string direction = "▲";
                string[] tokens = this.SortField.Split(DLM);
                if (tokens.Length &gt; 1)
                {
                    var sortDirection = tokens[tokens.Length - 1];
                    if (sortDirection.Equals("ASC", StringComparison.CurrentCultureIgnoreCase))
                    {
                        direction = "▲";
                    }
                    else if (sortDirection.Equals("DESC", StringComparison.CurrentCultureIgnoreCase))
                    {
                        direction = "▼";
                    }
                }
                result += direction;
            }
            return result;
        }
    }
}

