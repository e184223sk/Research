More than 3 years have passed since last update.　本記事には私が思いついたこと・学習したこと等をメモとして書いていきます。場合によってはタイトルから少し外れた内容も含まれるかもしれませんし、言葉が足りない・知識が間違っている部分もあるかもしれません。できる限り事細かく書きますので、なにかの参考になればと思います。　ObjPosという座標の格納変数を用意します。最終的に、この変数の座標がオブジェクトの位置になります。　このコードがなければオブジェクトのz座標が０となり、ゲーム画面でうまく表示されません。　Debug.Log(ObjPos)で確認できると思いますが、このコードによってワールド座標とスクリーン座標を切り替えています。
　通常mousePositionはワールド座標であるため、そのままObjPosに代入するとゲーム画面ではゲーム画面の遥か彼方に飛ばされます。　各ピースに目的の座標を設定しておき、その点に任意の距離ほど近づいた際、設定した座標にワープすることで「穴にはまるパズルピースの挙動」を目指しまた。　OnMouseUp()をさらに追加しました。
　spanに任意に距離を設定し、ドラッグ後のオブジェクトの座標と目的の座標の距離の絶対値をspanと比較し、span以下だった場合にワープさせています。
　spanの値を調整することで、ピースがワープする距離を変更できます。　今回はピースの目的位置を座標として与えましたが、パズルによっては複数の穴にはまるものもあります。その場合、Rayを使って穴を取得し、もっとも近い穴にワープするというのも手かもしれません。
　以上をもちまして、「パズルピースの挙動」とさせていただきます。
　少しでも参考にでもなればと思います。ありがとうございました！


