More than 3 years have passed since last update.Oculus Rift Advent Calendar 2017の7日目の記事です。自分はエンジニアではないのですが、趣味でOculus Rift用のTwitterクライアント的なアレを開発してまして、「ツイッター、ユニティちゃんが通知してくれたら、素敵やん？」と思った結果が以下になります通知にユニティちゃんの反応をつけつつAnimatorの勉強中… #VR用Twitterクライアント pic.twitter.com/uHPdAp3knWフォローされたりツイートがいいねされたりすると喜んで教えてくれ、逆にいいねを外されたりすると悲しみながら伝えてくれます。
ユニティちゃんも好きですが、SDユニティちゃんが可愛くて好きです。実装としては自前のTwitterAPIラッパーを使い、TwitterのUser Streamに接続しています。
世の中ではTwitterが有料APIを発表したり、User Streamの廃止がアナウンスされていたりしていますが、魂はまだUser Streamを求めています。なお、動作確認はUnity 2017.1.0f3で行っており、中途半端に古くて申し訳無さがあります。
こんな風に書くのが良いのかどうかよくわかりませんが、全体のクラス関係はこのような感じです。という流れでユニティちゃんから通知をもらいます。ちなみにフキダシをユニティちゃんに直接紐付けなかったのは、ユニティちゃんの動きに沿ってフキダシが動いたりするのが読みづらかったからです。GitHubのReadMeに書いてあるとおりです。ここもGitHubのReadMeに書いてあるとおりなんですが一応説明すると、User Streamのコールバックにはレスポンス本文(string)とメッセージの種類(Twitter.StreamMessageType)が引数として渡されます。
https://developer.twitter.com/en/docs/tweets/filter-realtime/guides/streaming-message-types主に返ってくるのはFriendsList、Tweet、StreamEventの3種類です。このTwitter.StreamMessageTypeに応じて返ってきたstringをJsonUtilityでオブジェクトにします。NortificationHandlerというクラスで通知に関する諸々を制御しているので、そこのpublicメソッドであるShowNotificationにTwitter.StreamEvent streamEventを渡します。通知は「フキダシ」と「ユニティちゃんの動き」の2つで表現します。どの種類のStreamEventを渡されたかによって、フキダシは表示するテキストが変わり、ユニティちゃんは喜ぶか悲しむかが変わります。 StreamEventの種類も https://developer.twitter.com/en/docs/tweets/filter-realtime/guides/streaming-message-types に載っています。いっぱいありますが、今回はfavorite、unfavorite、followの3つを考えます。ちなみにunfollowは自分が誰かのフォローを外した場合だけが取得でき、自分へのフォローが外されたことはなぜか取得できません。また、リツイート関係も取得できません。フキダシはそれ用のPrefabを作っておいて、通知があるたびにそれを生成する形にしています。
こんなん。適当につくりました。ちなみに、StreamEventは「自分が誰かをフォローした」というような自分の行動も通知として流れ込んできます。自分の行動は通知してもらってもしかたないので除外する必要があります。StreamEventの中身自体はこうなっているので、sourceが自分の場合は何も通知しないようにします。
(さらにちなみにですが、TwitterのUser Streamで返ってくるメッセージ自体はevent_nameではなくeventというキー名になっています。しかしC#ではeventが予約語のため、このライブラリではevent_nameという名前に置換して使っています)これでユニティちゃんが通知してくれるフキダシができました（上の動画ではフォローしてくれた相手などは表示していませんでしたが、このコードだと表示されます）。ユニティちゃんにはNotificationUnitychanというよくわからない名前のクラスをattachしています。
動きとしては簡単(というかデフォルトの)ジャンプと悲しみの動作に絞って、StreamEventがfavorite、followのときはジャンプして喜び、unfavoriteのときは悲しむようにしました。それぞれの場合に"Jump"、"Sad"というStateをNotificationHandlerからNotificationUnitychanに送ります。ユニティちゃん側の制御はたぶん普通のやりかた。
Animator自体はユニティちゃんに初めからついてくるものをちょこちょこいじっている程度です。そのあたりの知見は無です。こんな感じでユニティちゃんから通知をもらえるようになりました。正直Oculus Riftというか単なるUnityの記事なんですが、ただ画面上で通知をもらうのに比べると、目の前でユニティちゃんが喜んだりしてくれるのは圧倒的な"良さ"があります。
VR空間上でのUIは色々と試行錯誤がなされている感じですが、キャラクターを媒介としたUIも良いものだなと思いました。誰かの本で読みましたが、「人間は人間のためのインターフェースとして残っていく」ってやつは本当にありえると思います。なお、VR用のTwitterクライアントは細々と作り続けている趣味プロジェクトなので、もしご指摘ご意見などあればどしどしいただけると嬉しいです。
なんとなく #VR用Twitterクライアント のプレイ動画を簡単だけど改めてつくった https://t.co/rSamWpzbHa*この記事はユニティちゃんライセンス条項の元に作成されています。


