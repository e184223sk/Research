
/// &lt;summary&gt;
/// 確実にファイル／ディレクトリの名前を変更する
/// &lt;/summary&gt;
/// &lt;param name="sourceFilePath"&gt;変更元ファイルパス&lt;/param&gt;
/// &lt;param name="outputFilePath"&gt;変更後ファイルパス&lt;/param&gt;
public static void Rename(string sourceFilePath, string outputFilePath)
{
    var fileInfo = new FileInfo(sourceFilePath);

    if (fileInfo.Attributes.HasFlag(FileAttributes.Directory))
    {
        RenameDirectory(sourceFilePath, outputFilePath);
    }
    else
    {
        fileInfo.MoveTo(outputFilePath);
    }
}

/// &lt;summary&gt;
/// 確実にディレクトリの名前を変更する
/// &lt;/summary&gt;
/// &lt;param name="sourceFilePath"&gt;変更元ファイルパス&lt;/param&gt;
/// &lt;param name="outputFilePath"&gt;変更後ファイルパス&lt;/param&gt;
public static void RenameDirectory(string sourceFilePath, string outputFilePath)
{
    //Directory.Moveはなぜか、大文字小文字だけの変更だとエラーする
    //なので、大文字小文字だけの変更の場合は一度別のファイル名に変更する
    if ((String.Compare(sourceFilePath, outputFilePath, true) == 0))
    {
        var tempPath = GetSafeTempName(outputFilePath);

        Directory.Move(sourceFilePath, tempPath);
        Directory.Move(tempPath, outputFilePath);
    }
    else
    {
        Directory.Move(sourceFilePath, outputFilePath);
    }
}

/// &lt;summary&gt;
/// 指定したファイルパスが他のファイルパスとかぶらなくなるまで"_"を足して返す
/// &lt;/summary&gt;
private static string GetSafeTempName(string outputFilePath)
{
    outputFilePath += "_";
    while (File.Exists(outputFilePath))
    {
        outputFilePath += "_";
    }
    return outputFilePath;
}

