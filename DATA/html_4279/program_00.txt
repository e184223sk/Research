using System;
using System.ComponentModel;
using System.Linq;
using System.Reactive.Linq;
using Reactive.Bindings;

namespace reactivepropertytest2
{
    public class ViewModel : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        public ReactiveProperty&lt;int&gt; Counter { get; } = new ReactiveProperty&lt;int&gt;();

        public ReactiveCommand UpCommand { get; private set; }
        public ReactiveCommand DownCommand { get; private set; }

        public ViewModel()
        {
            UpCommand = Counter.Select(_ =&gt; Counter.Value &lt; 10).ToReactiveCommand();
            UpCommand.Subscribe(_ =&gt; Counter.Value++);//(() =&gt; Counter.Value++)ではコンパイルエラー
            DownCommand = Counter.Select(_ =&gt; Counter.Value &gt; 0).ToReactiveCommand();
            DownCommand.Subscribe(_ =&gt; Counter.Value--);//(() =&gt; Counter.Value--)ではコンパイルエラー
        }
    }
}

