More than 3 years have passed since last update.オーバーライドしていないvirtualでないメソッドや, 継承元の無いsealedなクラスなどの動作を, スタブに置き換える.このコードは, 特別なデバイス(実機)上で動作させるものとする.
実機にはモーターが接続されており, Motorクラスを通じて制御をおこなう.このSampleMethodメソッドのテストを作成し, CIツール(Travis CIとかAppVeyorとか)で自動テストさせたい.
でも, CIツールの環境では, モーターが接続されていないので, GetSpeed()メソッドは動作しない.
テストの時は, GetSpeed()は呼ばず, 代わりのメソッドを呼ぶようにしたい.ここまでであれば, 自分が作ったクラスのインスタンスメソッドをスタブに置き換えるのと同じである.
しかしここでは, 上記の記事とは異なり, Motorクラスは自分で作ったものでなくライブラリなどで提供されているもので, 自分では手を入れることができないものとする.
つまり, 上記の記事にあるような"インタフェースに依存させる"ということができない.
また, virtualが付いてないので, Motorクラスを継承してGetSpeed()の動作を上書き(オーバーライド)することもできない.以降で, Motorインスタンスをスタブに置き換えて, SampleMethodメソッドをテストできるようにしてみる.インタフェースに依存させることもできず, 動作をオーバーライドすることもできないともあれば, もうしょうがないのでMotorをラップするクラスを作るぐらいしかない.具体的には次のようにする.こちらで説明した, "メソッドを格納できる変数"を利用している.
使う側では, 次のようになるだろう.MotorWrapperインスタンスを受け取れば, あとはMotorのときと同じようにGetSpeed()を実行できる.では, テストコードで, GetSpeed()メソッドの動作を入れ替えてみる.ラムダ式を知っていると, もうちょっと簡単に入れ替えられる.おしまい."メソッドを格納する変数"を使うと, Intellisenseによるメソッドの説明が出てこなくなるのがつらい.
インタフェースを用意していないライブラリを恨むしかないのか...


