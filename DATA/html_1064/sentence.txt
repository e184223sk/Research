More than 1 year has passed since last update.これまでJavaをメインに仕事してきたのですが、ほとんど触れてこなかったC#を仕事で使うことになったので勉強しました。
似ているところもありますが、思想の違いや微妙な書き方の違いがあるので「これどう書くんだっけ？」が絶対に起きると思いましたので、よく使いそうなところをピックアップしてチートシートとしてまとめてみました。
細かいところは追々知っていこうと思います。呼び出し方が違う。宣言が違う。
また思想も違うのでネーミングは注意。Javaにはないinternalやprotected internalが存在する。
同じ修飾子でも思想の違いによることでアクセス可能範囲が異なる事にも注意。同一のアセンブリ(DLL)とは
同一アセンブリとは、同一のexeファイルや、DLLファイルの事。
VisualStudioのソリューション内であれば、同一プロジェクトということらしい。継承するときは:(コロン)を使用する。
オーバーライドさせたいメソッドにはvirtualを付け、オーバーライドする時はoverrideをつける。
オーバーライドを禁止したい時、Javaならばfinalをメソッドに付与するが、C#の場合はsealedを付与する。(2020.07.21 更新)virtual、overrideを付けなかった場合、オーバーライドされない。
以下のような結果となる。(2020.08.13 更新)違いなし。
Stringの比較は等値演算子でも値比較可能という違いがある。補足
String型を参照型なのでJavaでは等値演算子で比較すると同じインスタンスを参照しているかの比較になるが、C#の場合は裏でstring.equalsを呼び出しているためこの書き方でも値の比較が可能。
String.equals(String, StringComparison)という比較方法の指定が可能なメソッドもあるため、コードを書く時はこちらを使用するのが無難と感じた…が、やっていることが同じならコード量の少ない等値演算子がベターか。（2020.07.17 更新）参照→String.Equalsメソッド - .NET Tips｜dobon.net違いなしJavaの拡張for文はC#ではforeachとなる。前判定、後判定共に違いなし。C#とJavaの比較
C# 入門


