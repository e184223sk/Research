
using System;
using StaticDelegate;
using System.Diagnostics;
static class Program
{
    static Guid CALC() =&gt; Guid.NewGuid();
    [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveOptimization)]
    static void Main(string[] args)
    {
        const int V = 50000000;
        Stopwatch watch = new Stopwatch();
        var funcDelegate = new Func&lt;Guid&gt;(CALC);
        IntPtr funcPtr = funcDelegate.GetFuncPtr();
        watch.Start();
        for (int i = 0; i &lt; V; i++)
            funcPtr.Call&lt;Guid&gt;();
        watch.Stop();
        System.Console.WriteLine(watch.ElapsedMilliseconds);
        watch.Reset();
        watch.Start();
        for (int i = 0; i &lt; V; i++)
            funcDelegate();
        watch.Stop();
        System.Console.WriteLine(watch.ElapsedMilliseconds);
        watch.Reset();
    }
}

