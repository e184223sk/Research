
// モック
// IWebUploader.PostString() のふるまいを自由に変えられるテスト用クラス
public class MockWebUploader : IWebUploader
{
    public Func&lt;string&gt; UploadStringFunc { get; set; }

    public string PostString(string url, string data)
    {
        return UploadStringFunc();
    }
}

// ユニットテストクラス
[TestClass]
public class HogeServiceClientTest
{
    [TestMethod]
    public void PostMessageはメッセージ投降に成功したらHTTP応答本文を返す()
    {
        // モックのセットアップ
        MockWebUploader m = new MockWebUploader();
        m.UploadStringFunc = (() =&gt; "OK"); // Webサーバが "OK" を返すパターンをシミュレート

        // モックオブジェクトを HogeServiceClient のコンストラクタに渡す
        HogeServiceClient3 h = new HogeServiceClient3(m);
        string ret = h.PostMessage("test");
        Assert.AreEqual("OK", ret);
    }

    [TestMethod]
    public void PostMessageはHTTP接続に失敗したらExceptionを投げる()
    {
        // モックのセットアップ
        MockWebUploader m = new MockWebUploader();
        m.UploadStringFunc = () =&gt; throw new Exception("なんかエラー"); // 接続エラーをシミュレート

        // モックオブジェクトを HogeServiceClient のコンストラクタに渡す
        HogeServiceClient3 h = new HogeServiceClient3(m);
        Assert.ThrowsException&lt;Exception&gt;(() =&gt;
        {
            h.PostMessage("test");
        });
    }
}

