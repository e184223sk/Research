More than 1 year has passed since last update.2020/03/04
デッドロックする可能性があったので一部修正しました。2020/03/11
WordPressの記事一覧取得が10記事までしか取得できなかったので、すべての記事を取得するように修正しました。WPService.cs
リンクはこちらQiitaに投稿した記事のリンクを楽にWordPressに送りたい #1
Qiitaに投稿した記事のリンクを楽にWordPressに送りたい #3
Qiitaに投稿した記事のリンクを楽にWordPressに送りたい #4IDE：VisualStudio2019
アプリケーション：コンソールアプリ
フレームワーク：.NET Core 3.1前回の続きになります。WordPressの環境を借りている方に、アプリケーションパスワードの設定を行ってもらった。
以下サイトを参考に設定してもらった。
WordPressのRESTAPIでアプリケーションパスワードの認証がとおらないなら更新をやってみたところ、まだエラーが起きる。401のエラーであり、権限がないとのこと。以下で追加した名前と発行されるパスワードを「名前:パスワード」の形で設定しているのになぜエラーに・・・
以下の戻り値がfalseになっており、Authorizationヘッダーがうまく付与されていなかった。HttpRequestMessageを使用するらしい
調べると以下のようにHttpRequestMessageを使用して、ヘッダーに追加するとよいらしい。HttpRequestMessageを使用しても依然エラーとなる。
調べてみるとどうやらの「名前:パスワード」は誤りで、「WordPressのログインユーザーID：パスワード」らしい。
しかも、パスワードは「c8cO ABCD UUb9 7DDX Rq22 1shl」のように空白区切りで発行されるが、そのまま使用するらしい。
空白は除去しないで設定することでうまくいった。
めちゃめちゃわかりにくい！！！！！例認証に成功したので、記事の更新／追加の処理を実装し、全体的に修正しました。QiitaServiceWPServiceQiita2WPメインクラス実行前
実行後

4つほど記事が追加されました。また、既存の記事は更新されています。気になるのはQiitaの記事投稿順になっていないことです。
WordPress側で記事作成処理が非同期で動いてそうです。TestProject現状ではタグが何も設定されていないので、Qiitaから読み取ったタグを連携してみようとおもいます。
→次回


