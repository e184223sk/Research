こんにちは、ATL Systems 鍋島です。
今回は、Azure Functionsで Google Workspaceのレポートデータを取得する手順について説明していきます。ちなみに、Consoleアプリで実行する場合は、こちらのドキュメントを公式参考にしてください。
OAuth 認証を使ったサンプルコードがあります。
Google Workspace Admin SDK &gt; .Net &gt;.NET quickstartReports APIをAzure Functionsなどサーバーで利用する場合、OAuthによる認証を利用できません。今回は検証のため、その代わりにサービスアカウントを使っています。
サービス アカウント キーは、不正使用されるとセキュリティ上のリスクになる可能性があります。サービス アカウント キーをダウンロードするのではなく、代わりに Workload Identity 連携を使用することをおすすめします。 
Workload Identityについては以下のドキュメントを参照してください。まずはサービスアカウントを作る前にプロジェクトを作成します。Google Consoleにログインします。
https://console.cloud.google.com/次に、Google Cloud Platformで新しいプロジェクトを追加します。
ここではプロジェクト名を AzureFunctionProject とします。プロジェクトを作成したら、作成したプロジェクトに切り替えます。
次に利用するAPIを有効化します。ここでは Admin SDK APIを有効化していきます。
Admin SDK API を検索して、有効にする ボタンをクリックします。
次に、認証情報を作成ボタンをクリックして、認証情報追加していきます。

使用するAPIはAdmin SDK APIを選択し、アクセスするデータの種類は アプリケーションデータを選択します。

ロールはオーナーを選択します。

最後に完了をクリックして、認証情報の追加を完了します。
サービスアカウントが作成されたことを確認します。
次にReports APIを利用するために、サービスアカウントの設定を変更て、
Google Workspace ドメイン全体の委任を有効にする にチェックを入れます。チェックを入れると
ドメイン全体の委任を変更するには、OAuth 同意画面でプロダクト名を構成する必要があります。 
と表示されるので、プロダクト名を入力して、保存 ボタンをクリックします。Google Admin で APIの制御 にアクセスします。Google Admin &gt; セキュリティ &gt; APIの制御 にアクセスします。
 https://admin.google.com/ac/owl/domainwidedelegation?hl=ja次に[新しく追加] ボタンをクリックして、新しいクライアントIDを追加します。ここで登録するクライアントIDは Google Cloud Consoleで追加したサービスアカウントのクライアントIDです。以下のドキュメントを参考にOAUTHスコープも追加します。
https://developers.google.com/admin-sdk/reports/v1/guides/authorizingGoogle Cloud Platformに戻り、サービスアカウントメニューから作成したサービスアカウントを表示して、キータブを表示します。
JSONを選択して、作成ボタンをクリックして、秘密鍵ファイルを作成します。
秘密鍵入りのJSONファイルが端末へ保存されると、以下のメッセージが表示されます。
Visual Studio 2019を起動し、新しいプロジェクトを作成します。
スケジュールされた間隔で実行される、Time trigger を選択します。
ちなみに実行間隔を5分から1分に変更するには 5 を 1に変更します。
パッケージマネージャーコンソールで必要なパッケージ Google.Apis.Admin.Reports.reports_v1を追加します。秘密鍵ファイルを追加します。サービスアカウントで作成した秘密鍵ファイルをプロジェクトに追加します。
その際、ファイルのプロパティで出力ディレクトリにコピーを常にコピーするに変更します。最後に、Azure Functionsのコードを変更します。
Functions1.csを開いて、以下のコードを貼り付けます。
コード中の以下のワークスペース名や定数については各自の環境に合わせて変更してください。最後にエミュレータを実行して試します。うまくいきましたね！Azure Functionsのエミュレータで Google Workspaceのレポートデータを取得できました。


