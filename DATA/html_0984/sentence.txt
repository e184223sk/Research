More than 1 year has passed since last update.　「ASP.NET Core 3.1でPostgreSQLを利用してIdentityで認証を使えるようにする」を記述している中で、除外したユーザー登録のSMTPでの確認メールを試してみました。とりあえず送信できるところまでで、送信時のエラー等の対処は行っていません。このあたりの対処の問題で、マイクロソフトはSMTPの利用を推奨していない様です。　今回の環境は以下の通りです。
- VisualStudio2019 Ver.16.6.4
- ASP.NET Core 3.1
- MailKit 2.8.0
- 認証を組み込んだテンプレートでプロジェクトが作成されていること
- データベースのマイグレーションが行われて利用可能になっていること　テンプレートで認証有のプロジェクトを作成すると、「Startup.cs」の「ConfigureServices()」で基本的な認証が以下のように設定されます。　この時に設定されているオプションの「RequireConfirmedAccount」がアカウントの確認を要求するオプションで、メールを利用してアカウントの確認を行うことを要求しています。これが設定されていると、アカウントの確認ができていない利用者ではログインできません。確認が必要ない場合はこのオプションを消してしまえば良いのですが、確認を実行したい場合はメール送信の設定が必要なので、「IEmailSender」インタフェースを実装したクラスを作成してサービス登録する必要があります。　送信でSMTPを利用するために、SMTPのパッケージを利用します。今回はNuGetで「MailKit」パッケージを追加します。　メール送信用の送信元の情報ですが、「appsettings.json」から取得しようと思います。そのため、DIで利用できるようにメール送信パラメータのクラスを作成します。　「Startup.cs」の「ConfigureServices」メソッドで以下のようにすることでDIの対象となります。実際のパラメータは「appsettings.json」で以下のように設定しています。　認証で利用するメール送信クラスは以下の通りです。エラーの対処などは行っていません。　これを利用するために最終的に「Startup.cs」の「ConfigureServices」は以下のようになります。　これでメール送信の設定ができたので、起動して最初の画面の右上の「Regist」でユーザー登録します。もちろん、送信メールサーバーなどの設定や、ネットワークへの接続はできる状態にしておいてください。ユーザー登録を実施すると、登録したメールアドレス宛てに、以下のような確認メールが送信されます。ここで、リンクをクリックして登録を実施すると確認完了画面が表示され、このメールアドレスでログインできるようになります。　メール内容が英語なので、実際に使うには認証をスキャフォールディングして該当ソースを探して変更する必要がありそうです。


