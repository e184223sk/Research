こちらの記事を拝見し、
C# 9.0で加わったC# Source Generatorと、それで作ったValueObjectGeneratorの紹介私も練習がてらに何か作ってみようかな、ということで作ってみました！構造体の宣言で必要なプロパティだけ記述すると、以下のコードを自動生成するGeneratorです。
（Record型の構造体版のようなものをイメージしました）ソースコード
https://github.com/pierre3/ReadonlyStructGeneratorビルドすると以下のコードが自動生成されます。Visual Studio でビルドして使う場合は、Visual Studio 自身が.NetFrameworkで動いているため、ターゲットフレームワークをnetstandard2.0としないと動作してくれません。
また、Microsoft.CodeAnalysis系のライブラリも下記バージョンでないと動作しませんでした。（2020/12/6現在）ただし、dotnet コマンドでビルドする分には.NET5.0でも問題なく動作します。
（手元の環境で試したところ、.NET5.0, Microsoft.CodeAnalysis.CSharp v3.8.0, Microsoft.CodeAnalysis.Analyzers v3.3.2 で動作しました。）利用側のプロジェクトでは、Generatorをアナライザーとして参照する必要があります。
（ProjectReferenceに OutputItemType="Analyzer" ReferenceOutputAssembly="false" を付与）開発中は、C#のシンタックスツリーとかセマンティックモデルだとか使い慣れないオブジェクトを触るため、トレースデバッグは必須です。
Source GeneratorではInitializeメソッドに下記コードを記述することでトレース実行が可能となります。
（実行時ではなくビルド時にSystem.Diagnostics.Debugger.Launch();の行でブレイクされます。）更新したコードが反映されないだとか、コードは正しいのにエラーが解消されないだとか挙動がおかしくなった場合はVisual Studioを再起動すると直ることがあります。Source Generatorを作ってみた感想ですが、ドキュメントやサンプルが少ないのと動きが安定していないということもあって、現時点では複雑な機能を作るのはしんどそうな気がします。
が、この機能自体はいろいろ面白いことができそうなので、何か思いついたらまたチャレンジしてみたいと思います。


