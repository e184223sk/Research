オブジェクトをゲーミング化させるにあたり、その振る舞いをどう表現するか考えます。（ソースを見たい人は飛ばしてもOK！）さて、あなたはUnityにおいて、オブジェクトの色を変更すると言ったら「どのような規格」を使って変更しますか？ほとんどの人はRGBモデルによる変更を思い浮かべると思います。しかし、このRGBモデルはオブジェクトをゲーミング化させるにあたり少々使い勝手が悪いです。ではここで 初期準備(4) で用意したマテリアル選択し、Albedo項目のカラーを開きましょう。カラーウインドウが開けたら上画面の虹色に光っているリングをマウスでグリグリ動かしてみてください。オブジェクトが虹色に光り、ゲーミング化されました。これをスクリプトで制御したいのですが、リングの下の部分のRGBの各値の動きを見てください。複雑な動きをしていますね。これをスクリプトで制御するとなれば、場合分けが6つほど発生しスクリプトが長くなります。これがRGBモデルがゲーミング化に向いていない理由です。ここでカラーウィンドウの[ RGB 0-255 ] を [ HSV ] に変更して、また上のリングをグリグリ動かしてください。今度は、一番上の Hの要素が0から360の範囲で変化していますね。これだと場合分けは１つで済むので、スクリプトの制御はRGBモデルと比べて格段に楽になります。HSVは色相・彩度・明度の三要素で定義される色です。の範囲で表現されます。（余談）HSVモデルは人間の色認知と非常に似ている規格で、デザイナーの世界ではRGBモデルよりもHSVモデルが使われることが多いそうです。ゲーミング化にはHSVモデルを使うのが最適だと分かりましたが、なんとUnityはRGBモデル以外での色の指定はできません。なのでHSVモデルをRGBモデルに変換しなければなりません。なんとも面倒ですね。真面目に変換しようとすると以下の数式で表すことができます。Wikipedia HSV色空間 HSVからRGBへの変換数式を見るだけでイヤになりますね！(´；ω；｀)でも、安心してください！なんとUnityには標準でHSVをRGBに変換してくれる機能があります。それが「HSVtoRGB」です。第一引数に色彩を、第二引数に彩度を、第三引数に明度を格納するとUnityが自動でRGBモデルに変換してくれます。それではスクリプトを見てみましょう。
スクリプト名は「Gaming_Material_2」です。
コピペして保存してください。宣言部分です。
マテリアルや色彩・彩度・明度など必要な情報と、少し拡張したゲーミング化スクリプトにするための情報を宣言しています。特にこの二つが重要で、前者は次の色に変更するまでの時間を、後者は色変更の細かさを表しています。Start関数内部では、マテリアルを取得する、色彩を設定した最小値に変更する、"Change_Color"というコルーチンを呼び出す、ことをしています。
特に難しくはありませんね。コルーチン内部です。コルーチンが呼ばれるごとに、float型のHSV_HueにSmoothで宣言した分加算します。また、HSV_Hueが宣言したHSV_max以上になると、HSV_Hueに宣言したHSV_minを代入します。
つまり、色彩のリセットを行っています。そしてHSVtoRGBを用いて、マテリアルに色を設定します。ここで宣言したfloat型のChnge_Color_Time秒待ちます。最後は自身であるコルーチンを呼び出しています。まるで再帰関数のようですね。コピペして保存、そしてオブジェクトにアタッチ出来たら早速ゲームを再生してみましょう！オブジェクトが虹色（1,680万色）に光れば成功です。お疲れさまでした。( ◠‿◠ )Wikipedia HSV色空間　（アクセス日：2021/5/20）
https://ja.wikipedia.org/wiki/HSV%E8%89%B2%E7%A9%BA%E9%96%93naichilab RGBではなくHSVによる色指定（アクセス日：2021/5/20）
https://naichilab.blogspot.com/2013/11/unitycrgbhsv.html?m=1おもちゃラボ スクリプトでRGBとHSVを相互に変換する方法（アクセス日：2021/5/20）
https://nn-hokuson.hatenablog.com/entry/2017/04/12/194631Unity DOCUMENTION Color.HSVToRGB（アクセス日：2021/5/20）
https://docs.unity3d.com/ja/current/ScriptReference/Color.HSVToRGB.html


