More than 5 years have passed since last update.Android アプリを作成してみたくて、慣れない Java に奮闘していたところ、MS様から Xamarin 無償提供の吉報！
Android.Media.AudioRecord クラスを利用して、リアルタイムで録音を行うアプリケーションを早速作成してみました。
途中、主なてこずった点が以下です。一部の機能のコード例（録音部のみ、しかもひたすら蓄積）です。実用には録音開始・終了・再生・保存などの機能を追加する必要があります。
Visual Studio 2015 Community で、プロジェクトテンプレート C# -&gt; Android -&gt; Blank App (Android) を選択してプロジェクト（ソリューション）を生成しています。
プロジェクトのプロパティにある Android Manifest の Required Permissions から RECORD_AUDIO にチェックを入れて、録音に関してアクセス許可を設定してあります。起動すると、マイクから録音し、WAV 形式でキュー（自前構築の AudioBuffer クラス）へ蓄積していきます。AudioRecord.GetMinBufferSize メソッドで、サンプリングレート、チャネル、ビット数など、動作させるデバイスで利用できない条件を指定すると、-2 が返されるようです。SetRecordPositionUpdateListener メソッドのシグネチャはなので、の基底クラス、インターフェイスをと、最初コーディング。これは自動展開させると次のようなスケルトンが生成されます。しかし、これらをすべて実装（実体をコーディング：Handle には AudioRecord オブジェクトの Handle プロパティを代入）してもUnhandled Exception: Java.Lang.IncompatibleClassChangeError: interface not implementedがスローされてしまいます。
Xamarin や Mono の何かがおかしいのだろうと半ばあきらめてほかの実装法を探っていましたが、
ビルド中のメッセージをよくよくみると1&gt;Type 'TestProgram.MainActivity/OnRecordPositionUpdateListener' implements Android.Runtime.IJavaObject but does not inherit from Java.Lang.Object. It is not supported.と書かれているのを発見。メッセージ通り Java.Lang.Object からも派生させてみたところ、見事うまく動くようになりました。次のイベントはどう使うのか未だにわからずじまいです。名前からすると、上記のような面倒な実装をせずとも、それぞれ録音データがたまったらイベントハンドラを呼び出してくれそうなのですが、どうも呼ばれませんね。。SetNotificationMarkerPosition メソッドや SetPositionNotificationPeriod メソッド以外にも、何かおまじないが要るのでしょうか？AudioRecord.IOnRecordPositionUpdateListener インターフェイスは、MainActivity クラスにインプリメントさせるほうが、Java 流？の書き方に沿っているようですね。Windows アプリ開発経験のほうが長いので、まだあまりしっくりこなくて...Xamarin での録音・再生に関する素敵な情報、もっときれいな書き方などありましたら、ぜひご教示くださいまぜ！


