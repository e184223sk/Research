More than 1 year has passed since last update.他の記事ではあまり記述されていない高速化手法を延々と並べていく
シーン切り替えやファイル読み込みが遅くて困っている人向けの記事
対象プラットフォームはiOS、AndroidSceneManager.LoadSceneを使用したシーン切り替えは遅いので、起動シーン以外は使わないようにする
ただし、ライティングがシーンに紐づくのでライティングが異なるステージなどはマルチシーンで読み込みを行う
各画面ごとにprefabを作成して読み替える作りにすると高速に画面切り替えを行うことが出来る
この時、GCやResources.UnloadUnusedAssetsを呼ぶと遅くなってしまうので呼ばないことGCやResources.UnloadUnusedAssetsはバトルなど大きな括りの画面に遷移する時にメモリ使用量をみて、危険域に達していたら呼ぶようにするゲーム中はシーン切り替えを基本行わないが、全くシーンを使わないと各画面の開発が面倒になってしまう。
この問題を解決するには、各画面ごとにシーンを作成してシーンにはcanvasオブジェクトを配置し、その下に画面として使うprefabを作成して画面を構築していく。ゲームで使うシーンにも常時canvasを1つ常駐させるようにして、ゲーム中はそのcanvasの下に上記で作ったprefabを読み替えるようにする。ある画面に入るときに「通信」「画面を構築するprefabのロード」をそれぞれコルーチンで作成して同時に実行することにより、並列で処理が走りロードが高速化される。その２を書きました。


