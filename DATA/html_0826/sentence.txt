More than 1 year has passed since last update.C# のテスト実装で Moq を使ったのでメモ。あくまで用例のための実装であり、 Moq が活きるテスト対象ではない。テスト対象クラスを実装する上での注意点。モック対象のメソッドはオーバーライド可能な状態にする必要があるため virtual 修飾子が必須となる。可視性も protected 以上。以下はオーバーライド不能なメソッドをモック化しようとしたときのエラー文。 (一時的に CreateFullName() メソッドから virtual 修飾子を除去して実行)静的なメソッドやプロパティ等はモック化できない。テスト実装項目で使用するクラスの構造。Moq を用いたモック化では Moq.Mock&lt;T&gt; クラスを用いる。new 時は &lt;T&gt; 部にモック化対象のクラスを設定し、引数にはモック化対象のコンストラクタのメソッドを設定する。モック化されたオブジェクトは Moq#Object から呼び出す。Mock クラスで最初につまずいたのは CallBase プロパティの扱い。この値は、初期状態では false が設定されている。次の例では CallBase が false のため、モック未設定のメソッドは null 返却となる。 (メソッド自体も呼び出されない)次の例では CallBase が true のため、モック未設定のメソッドは本来のメソッドが呼び出される。Mock#SetupGet メソッドの Func 型引数からモック化対象のプロパティを指定し、その返却オブジェクトの Returns メソッドからモック化対象の返却値を設定する。モック化されたプロパティは、設定された返却値を常に返すようになる。Mock#Setup メソッドの Func 型引数からモック化対象のメソッドを指定し、その返却オブジェクトの Returns メソッドからモック化対象の返却値を設定する。Func 型引数で設定するメソッドには Moq.It&lt;T&gt; クラスを利用するなどして、モック化するメソッドを引数構成込みで明示的に設定する。Moq.It&lt;T&gt; を使わず、固定値を設定することもできる。Moq#Protected メソッドの返却オブジェクトの Setup&lt;T&gt; メソッドからモック化の設定を行う。&lt;T&gt; 部には戻り値の型を設定し、第 1 引数にモック化対象のメソッド名を設定する。Setup&lt;T&gt; の第 2 以降の引数に ItExpr.IsAny&lt;T&gt;() 等を用いて引数構成を設定する。通常のテスト実装で、モック化したメソッドが常にテストされないことは珍しいと思う。Moq の範囲ではないが、可視性が public でないメソッドのリフレクション実行の方法も記述しておく。上記まではクラスメソッドについての記述となる。テストのためだけにメソッドをオーバーライド可能な状態にするのに違和感を覚えていたが、 @naminodarie さんのコメントにより、インターフェイスを使えばオーバーライドを避けられると知った。仮実装や、特定環境でフェイクオブジェクトを使う際に特に効果を発揮しそうな予感。ただし、下記の目的では使えない。


