
private static IAsyncPolicy&lt;HttpResponseMessage&gt; GetRetryPolicy()
{
     var jitterier = new Random();
     return HttpPolicyExtensions
         .HandleTransientHttpError()
         .OrResult(msg =&gt; msg.StatusCode == System.Net.HttpStatusCode.NotFound)
         .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(Math.Pow(2, retryAttempt))
                                                      + TimeSpan.FromMilliseconds(jitterier.Next(0, 100)),
         onRetry: (response, delay, retryCount, context) =&gt;
         {
             Console.WriteLine($"Retrying: StatusCode: {response.Result.StatusCode} Message: {response.Result.ReasonPhrase} RequestUri: {response.Result.RequestMessage.RequestUri}");
         });
 }

