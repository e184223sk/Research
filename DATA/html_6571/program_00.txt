using System;
using System.Text;

class Program
{
    // issuerがGHKENのJWTを生成する
    static void Main(string[] args)
    {
        // 共通鍵を用意
        var keyString = "hogehogehogehoge";
        // トークン操作用のクラスを用意
        var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
        // 共通鍵なのでSymmetricSecurityKeyクラスを使う
        // 引数は鍵のバイト配列
        var key = new Microsoft.IdentityModel.Tokens.SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));
        // 署名情報クラスを生成
        // 共通鍵を使うのでアルゴリズムはHS256使っとけばいいはず
        var credentials = new Microsoft.IdentityModel.Tokens.SigningCredentials(key, "HS256");
        // トークンの詳細情報クラス？を生成
        var descriptor = new Microsoft.IdentityModel.Tokens.SecurityTokenDescriptor
        {
            Issuer = "GHKEN",
            SigningCredentials = credentials,
        };
        // トークンの生成
        //SecurityTokenDescriptor使わずにhandler.CreateJwtSecurityToken("GHKEN", null, null, null, null, null, credentials)でもOK
        var token = handler.CreateJwtSecurityToken(descriptor);
        // トークンの文字列表現を取得
        var tokenString = handler.WriteToken(token);
        // eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYmYiOjE0ODc4MjQ3MTQsImV4cCI6MTQ4NzgyODMxNCwiaWF0IjoxNDg3ODI0NzE0LCJpc3MiOiJHSEtFTiJ9.PJ-5KzFq7n2hBiJnoZMli0XajaJPNup0BztIO9QlDFY
        Console.WriteLine(tokenString);
        Console.Read();
    }
}

