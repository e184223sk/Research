
using (var mat = image.ToMat())
using (var gray = mat.CvtColor(ColorConversionCodes.RGB2GRAY))
using (var bin = gray.Threshold(mythreshold, 255, ThresholdTypes.Binary))
{

    var contours = bin.FindContoursAsMat(RetrievalModes.List, ContourApproximationModes.ApproxSimple);

    var candidatre = contours
        .Select(c =&gt;
        {
            var outputMat = new MatOfPoint();
            Cv2.ApproxPolyDP(c, outputMat, 0.01 * c.ArcLength(true), true);
            var criteria = new TermCriteria(CriteriaType.Eps | CriteriaType.MaxIter, 100, 0.001);
            var corners = Cv2.CornerSubPix(gray, outputMat.Select(x =&gt; new Point2f(x.X, x.Y)).ToArray(), new Size(5, 5), new Size(-1, -1), criteria);
            //MEMO : 角のPointコレクションと面積をペアで返します。
            return new Tuple&lt;Point2f[], double&gt;(corners, Cv2.ContourArea(c.ToArray()));
        })
        //MEMO : 面積で区切ってゴミを除去してます。
        .Where(c =&gt; c.Item2 &lt; myMaxArea &amp;&amp; c.Item2 &gt; myMinArea);
    return candidatre.Select(x =&gt; x.Item1).ToArray();

}

