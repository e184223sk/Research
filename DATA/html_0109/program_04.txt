
public class FieldGetter
{
    void Getter()
    {
        FieldInfo fieldInfo = typeof(T).GetField("FieldName");
        T obj = "Data";
        var met = new System.Reflection.Emit.DynamicMethod("Get",
            fieldInfo.FieldType, new Type[1] { typeof(FieldInfo) });
        var il = met.GetILGenerator();
        il.Emit(System.Reflection.Emit.OpCodes.Ldarg_0);
        il.Emit(System.Reflection.Emit.OpCodes.Ldfld, fieldInfo);
        il.Emit(System.Reflection.Emit.OpCodes.Ret);
        var del = (Func&lt;Delegate, int&gt;)met.CreateDelegate(typeof(Func&lt;Delegate, int&gt;));
        var func = new Func&lt;T&gt;(obj);
        del.Invoke(func);
    }
}

