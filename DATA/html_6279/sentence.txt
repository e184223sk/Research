More than 3 years have passed since last update.この記事は、「Spineを採用するUnityプロジェクトのエンジニア」を対象としており、Spineの詳しい使い方よりは、Spineにどんな機能があり、どうスクリプトを書いたらいいのかについて着目して調査をしています。ゲーム向けに作られた多機能な2Dアニメーションソフトウェアです。同ジャンルとしてのソフトウェアとしてなどが挙げられます。しかし、FlashやAfterEffectでアニメーションを作成した場合、クライアントエンジニアがその演出をUnityで再現する必要がありますが、Spineを使用するとそのままUnityに取り込めるため、その必要がありません。また、Spineを導入した場合の利点は以下の通りです。以下はSpineの公式サイトの紹介を抜粋したものです。Spineのプロセスはスケルタルまたはカットアウトアニメーションと呼ばれ、従来のフレームごとのアニメーションに比べ、以下の利点を提供する。Spineの体験版をインストールしては見たけど、体験版だとエクスポートができないらしいので、軽く触って見て「大体こんなもんか〜」ってところまでにしておきました。では、次は作ったアニメーションをUnityにどう入れるかについてメモしておきます。まずはSpineでエクスポートしたデータをUnityで使用するために、以下からSpineのランタイムをインポートする必要があります。その後、メニュー → Assets → Import Package → Custom Packageから、先ほどDLしたpackageファイルをインポートします。データ形式をJSONにし、以下のチェック項目を確認します。この後、Unity側からエクスポートを行なったSkeletonデータをSceneにD&amp;Dを行うことで、配置することが可能です。オブジェクト化時に方法が二つ表示されます。尚、オブジェクト化してもアニメーションは再生されません。Mecanimに関しては以下の記事に調査メモを綴ってます。
(執筆後、リンク貼ります。)体験版ではエクスポートができないため、スクショはありませんが、Skeleton Animationの要素に関する説明をメモ書きしておきます。申し訳なす。SkeltonAnimationの場合はプログラムでアニメーションを制御を行います。スケルトンのアニメーションを実際に制御するクラスは、Spine.AnimationStateです。SkeletonAnimationもこのクラスを中心に構築されています。このSpine.AnimationStateのインスタンスをAwake時点でインスタンス化し、参照をSkeletonAnimation.stateに格納しています。AnimationStateは、より低レイヤーでアニメーションの更新、キューイング、レイヤー、ミキシング/クロスフェーディングを管理します。例えば、これらコードの記述に関しては公式ドキュメントを読むことをお勧めします(英語しか見つからなかったので、日本語版を知ってる方は教えてください)。これは複数のSpineアニメーションを同時再生するアニメーションレイヤーです。例えば、キャラの体が動くアニメーションを再生しながら、銃を持った腕のアニメーションを再生するようなシチュエーションに利用できます。先ほどのコードではトラック0でアニメーション再生を行なっており、ここでトラック1に「Shot」のようなアニメーションを再生するコードを入れると、両方のアニメーションが同時に再生され、それぞれに設定されている再生期間に応じて終了またはループします。数字が高いほど、高い優先順位を持ちますので、使用する際は注意してください。


