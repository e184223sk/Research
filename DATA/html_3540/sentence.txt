More than 1 year has passed since last update.ループ処理は同じような処理を繰り返して実行する際に用いられます．
foreach文はコレクションというものを知らなければ理解しづらいと思うので，次回の配列でももう一回説明します．初期化式のところには初めに一度だけ実行する式で，大抵は繰り返し変数という変数を定義・初期化するために用いられます．条件式は※の処理を実行する前に毎回判定され，条件式がtrueの間※の処理が繰り返されます．更新式は※の処理の後に毎回実行される処理です．
次に具体例を見てみましょう．while文は条件式がtrueの間※の処理を繰り返すものです．for文とは違い，初期化式をwhile文の前に，更新式をwhile文の中に書く必要があります．for文，while文は初めから条件式がfalseなら1度も※の処理を実行しませんが，do-while文は初めから条件式がfalseでも1度は※の処理を実行してくれるというものです．foreach文は，いくつものデータをまとめて扱うコレクションを用いる際に非常に有用なループ処理です．コレクションの要素を順に変数に代入して※の処理で使えるようにしてくれるというものです．今はコレクションというものが想像しにくいと思うので，次の配列の回でもっと詳しく解説します．break文は一番内側のループ処理を強制的に抜ける文です．このfor文は条件式にtrueが入っているので，ずっとHello, world!と出力し続ける無限ループのコードになってしまいます．しかし，if文によってもしiが5のときはbreak文を実行するようになっているので，6回目のHello, world!は出力されずに処理が終わります．continue文はループ処理のcontinue文以降の処理をスキップするものです．continue文がなければ，このfor文は5回だけHello, world!と出力されるものになります．しかし，またしてもif文によってもしiが2のときはcontinue文を実行するようになっているので，3回目のHello, world!は出力されずに処理が中断されますが，4回目の処理から再開されます．次回は配列について説明します．100から1までカウントダウンして画面に出力するコードを書いてください．ただし，6の倍数はカウントせずに飛ばしてください．解答例

iを100で初期化したりデクリメントしたりしてfor文を回していくパターンです．


LoopSample.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LoopSample
{
    class Program
    {
        static void Main(string[] args)
        {
            for(int i = 100; i &gt; 0; i--)
            {
                if (i % 6 == 0) continue;
                Console.WriteLine(i);
            }
        }
    }
}






