クライアントが「Web APIをコールし、サーバから応答を得るまでの時間」を計測した。
具体的には、HttpClientとBenchmarkDotNetを使って、処理時間の集計(平均値・最小値・最大値を算出)し、集計結果をHTMLでエクスポートとした。
計測の手順と実装を掲載する。.NET Framework4.6.1
Nugetパッケージ
　・BenchmarkDotNet 0.13.0
　・NewtonsoftJson 13.0.1ASP.NET Web API
.NET Framework4.6.1今回はGET/PUT/POST/DELETEを準備する。
下記表のWeb APIをサーバ側に実装する（自動生成コードをそのまま利用する)。コンソールアプリケーションでソリューションを作成して、下記手順を実行する。「BenchmarkDotNet」をNugetパッケージでインストールする。「BenchmarkDotNet」で計測する対象メソッド、その他オプションは「属性」で設定する。
各属性の意味はコメントで補足説明する。自動生成コード使って、Web　APIを準備する。Web　APIを選ぶ。
「ソリューションエクスプローラー」
→「Controllers」
　　ValuesControllers.csを開く。※Releaseビルドで実行すること。
計測が完了することを待つ。ターミナル出力で「Summary」を探して確認する。今回はHTMLファイル出力しているため、ターミナルでExport先を確認する。ファイルエクスプローラで下記パスに移動する。
ソリューションのパス\bin\Release\BenchmarkDotNet.Artifacts
下記画像のファイルが存在する。
「BenchMark.WebApiClient-20210606-231210.log（※）」に、ターミナル出力と同様の内容が記録されている。
※ソリューション名-クラス名-実行日時.logって命名の様子。ソリューションのパス\bin\Release\BenchmarkDotNet.Artifacts\resultsに移動する。
BenchmarkDotNet.Artifacts\results\BenchMark.WebApiClient-report.htmlを開く。
下図のようにサマリーと同様の内容が表示される。logファイルとResultフォルダを控えておけば、報告資料や調査結果にそのまま利用できそう。


