More than 1 year has passed since last update.もくじ
⇒https://qiita.com/tera1707/items/4fda73d86eded283ec4fとりあえず、自前でユーザーコントロールを作れるようにひな型と、作り方の流れを自分の中に持っておきたい。.NET Framework 4.7.2を使用して下記を作成した。画面は下図のようにする。赤で囲ったところがユーザーコントロール。
見た目(xaml)コードビハインド見た目(xaml)コードビハインド基本的に、下記のようなイメージで処理を書けばいい。依存関係プロパティをつくる。具体的には下記の部分。DependencyProperty.Register()に色々引数を指定して、DependencyPropertyを作る。
引数は下記のようにする。依存関係プロパティには、対になるプロパティが必要。それが下記の部分。このプロパティの中では、GetValue、SetValueを呼ぶこと以外には何もしない方がよい。
⇒こちら参照（CLRプロパティでは、setvalue,getvalue以外のことをしないほうがよい）必要に応じて、ユーザーコントロール内部で処理を行う。
上のひな型では、下記の部分で、プロパティの値を＋＋している。この例だと、プロパティは画面に下記のようにバインドしている。これにより、＋＋した値は画面に表示される。
※特にInotifyPropertyChangedを継承して実装したりしなくても、プロパティの値が変化したら、それが画面に反映される。画面側では、UserControlではない普通のコントロール(例えばTextBlock)にプロパティをバインドする要領で、バインドして使えばいい。コードビハインド(やビューモデル)でプロパティを作成して、画面(xaml)でそれをバインドする。ユーザーコントロール、触ってみた感じ、扱い方のクセが強い気がする。
ひな型のように、基本的なことしかしないとそれほどでもないが、「プロパティの値が変わった時に〇〇したい」とか「プロパティの値が100を超えたら100に丸めたい」とかをやろうと思うと、かなりハマった。
丸めるとか、変化検出とかは、それ用の仕組みがあるのだが、そいつらがまたよくわからない動きをする。(個人の感覚)


