もくじ
→https://qiita.com/tera1707/items/4fda73d86eded283ec4fファイル名に日付が入ってるログファイルがあって、それがあるフォルダにまとめて入れられている。
そういうログファイルたちの中から、ファイルの更新日付ではなく「ファイル名に付いてる日付」が一番新しいものの日付を取り出したい、ということがあった。※下図のようなファイルがある場合は、「testlog_21201017+0900.log」の日付が一番新しいので、DateTimeの「2120/10/17」を取り出したい。
今回の場合は、ファイル名にyyyyMMddだけではなくタイムゾーンを示す+0900というのが入った形式だった。調べた結果、日付の文字列(20201016など)を一旦DateTimeに直して、その値でどれが新しいか判断することにしたが、特にタイムゾーンのところをDateTimeに直すときに少しクセがあったのでメモを残しておく。下記のようなことをした。具体的な流れは、下のサンプルコードを参照だが、
3番のDateTime.ParseExact()をするところに少しクセがあった。DateTime.ParseExact()は、書式を指定して、文字列からDateTimeに変換するものだが、
上の図にあったようなファイル名に含まれる、20201016+0900をDateTimeに変換する際、そのままの文字列と書式指定のyyyyMMddzzzをDateTime.ParseExact()に渡してもうまくいかなかった。対策は、
20201016+0900を20201016 +09:00に直したうえで、DateTime.ParseExact()に渡すということ。これで、タイムゾーンも込みで、DateTimeに変換することができた。@htsignさんからコメント頂いた。上記だと、特に特殊なことをしなくてもOKということが判明。ありがとうございます。
この記事の肝だと思ってた部分が崩れる感じでなんだかお恥ずかしいですが、シンプルにできることがわかってすっきりです。※ファイル名から日付を取り出す正規表現は、改善の余地ありかも。ParseExact()のクセがそうでもないことが分かったので、その辺を考慮していた部分を外してすっきりさせ、かつLinqについてもコメント頂いていたのでその部分もちょっと手直ししたのが下記。だいぶわかりやすくなった。■標準の日時の書式指定文字列
https://docs.microsoft.com/ja-jp/dotnet/standard/base-types/standard-date-and-time-format-strings■カスタムの日時の書式指定文字列
ParseExactのフォーマット指定(yyyyMMdd zzzとか)に何を指定すればよいかがここで分かる。
https://docs.microsoft.com/ja-jp/dotnet/standard/base-types/custom-date-and-time-format-strings
→これによると、zzzは標準の書式指定文字列ではなく、DateTimeOffset用のカスタム書式指定文字列らしい。
■標準の日時の書式指定文字列の日本語解説ページ
https://dotnet.programmer-reference.com/csharp-date-format/


