
[BotAuthentication]
public class MessagesController : ApiController
{
    /// &lt;summary&gt;
    /// POST: api/Messages
    /// Receive a message from a user and reply to it
    /// &lt;/summary&gt;
    public async Task&lt;HttpResponseMessage&gt; Post([FromBody]Activity activity)
    {
        ConnectorClient connector = new ConnectorClient(new Uri(activity.ServiceUrl));

        if (activity.Type == ActivityTypes.Message)
        {
            // 「オウム返しだ」「オウム返しだ！」
            Activity reply = activity.CreateReply($"「{activity.Text}！」");
            await connector.Conversations.ReplyToActivityAsync(reply);
        }
        else
        {
            var reply = HandleSystemMessage(activity);
            //システムメッセージに対する応答
            if (reply != null)
            {
                await connector.Conversations.ReplyToActivityAsync(reply);
            }
        }
        var response = Request.CreateResponse(HttpStatusCode.OK);
        return response;
    }

    private Activity HandleSystemMessage(Activity message)
    {
        if (message.Type == ActivityTypes.DeleteUserData)
        {
            // Implement user deletion here
            // If we handle user deletion, return a real message
        }
        else if (message.Type == ActivityTypes.ConversationUpdate)
        {
            if(message.MembersAdded.Count &gt; 0)
            {
                //アイサツは実際大事。古事記にもそう書かれている。
                return message.CreateReply($"「こんにちは！」");
            }
        }
        //省略

        return null;
    }
}

