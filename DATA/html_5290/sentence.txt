More than 3 years have passed since last update.この記事は属性を使用した列挙型の拡張とコードスニペットの続きです。前回は列挙体と属性を用いてソースコード上で表に似た表現ができました。
ただし内部でリフレクションを使用しているため速度はあまり早くありません。そこで今回はConcurrentDictionaryを使用したキャッシュを用いることで、これの高速化を行います。
実行結果やデモコードは前回と同じです。前回のコードを少し変更して、各種属性クラスとその取得拡張メソッド定義とその土台となる部分を別クラスに分けます。
まず土台となるクラスが以下です。前回のGetAttributeメソッドはGetAttributeCoreに変更されています。
そして新しく定義したGetAttributeメソッドの中身は以下です。キャッシュの中身はConcurrentDictionaryです。
それを属性の型ごとに用意するために、クラス内ジェネリッククラスを使用しています。
なぜ直接ジェネリッククラスにせずクラス内クラスにしているかといいますと、拡張メソッドはジェネリッククラスでは定義できないからです。次に属性クラスとその取得拡張メソッド定義です。
本題ではないので、Code属性とColor属性は省略します。ShortName取得メソッドにキャッシュを使用する通常のメソッドとパフォーマンス比較用のキャッシュ非使用のメソッドがあります。上から順にというわけで、2桁近く速くなりました。http://engineering.grani.jp/entry/2017/07/28/145035
http://neue.cc/2010/11/13_285.htmlVisual Studio 2017
.NET Framework 4.6
C#6


