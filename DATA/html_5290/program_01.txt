
static class EnumExtension
{
    #region ShortName属性
    /// &lt;summary&gt;
    /// ShortName属性
    /// &lt;/summary&gt;
    [AttributeUsage(AttributeTargets.Field, Inherited = false, AllowMultiple = false)]
    public sealed class ShortNameAttribute : Attribute
    {
        public String ShortName { get; private set; }

        public ShortNameAttribute(String ShortName)
        {
            this.ShortName = ShortName;
        }
    }
    /// &lt;summary&gt;
    /// ShortName属性の取得（キャッシュ使用）
    /// &lt;/summary&gt;
    public static String GetShortName(this Enum value)
        =&gt; value.GetAttribute&lt;ShortNameAttribute&gt;()?.ShortName
            ?? value.ToString();

    /// &lt;summary&gt;
    /// ShortName属性の取得（キャッシュ非使用）
    /// &lt;/summary&gt;
    public static String GetShortNameCore(this Enum value)
    {
        return value.GetAttributeCore&lt;ShortNameAttribute&gt;()?.ShortName
                ?? value.ToString();
    }
    #endregion

    #region Color属性
...
    #region Code属性
...

}

