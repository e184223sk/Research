
using Reactive.Bindings;
using System;
using System.ComponentModel;
using System.Reactive.Linq;
using System.Threading.Tasks;

namespace RxPropLabWpf
{
    // WPF のメモリリーク対策で INotifyPropertyChanged は実装しておく
    public class MainWindowViewModel : INotifyPropertyChanged 
    {
        public event PropertyChangedEventHandler PropertyChanged;

        public AsyncReactiveCommand SampleCommand { get; }
        public ReactivePropertySlim&lt;string&gt; Message { get; }

        public MainWindowViewModel()
        {
            SampleCommand = new AsyncReactiveCommand()
                // 非同期処理を Subscribe 可能
                .WithSubscribe(async () =&gt;
                {
                    Message.Value = "開始";
                    await Task.Delay(3000);
                    Message.Value = "終了";
                });
        }
    }
}

