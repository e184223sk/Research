
using Reactive.Bindings;
using System;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Threading.Tasks;

namespace RxPropLabWpf
{
    // WPF のメモリリーク対策で INotifyPropertyChanged は実装しておく
    public class MainWindowViewModel : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        public ReactiveCommand SampleCommand { get; }
        public ObservableCollection&lt;Guid&gt; Guids { get; }
        public ReadOnlyReactiveCollection&lt;string&gt; Views { get; }

        public MainWindowViewModel()
        {
            // 元になる ObservableCollection
            Guids = new ObservableCollection&lt;Guid&gt;();
            // 同期する読み取り専用コレクションを作成
            // ToReadOnlyReactiveCollection の引数で変換処理も指定可能
            Views = Guids.ToReadOnlyReactiveCollection(x =&gt; $"Guid: {x}");
            SampleCommand = new ReactiveCommand()
                .WithSubscribe(() =&gt; Task.Run(() =&gt;
                {
                    // 別スレッドから元になるコレクションを操作
                    Guids.Add(Guid.NewGuid());
                }));
        }
    }
}

