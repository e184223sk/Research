
using Reactive.Bindings;
using System;
using System.Reactive.Subjects;

namespace RxPropLab
{
    class Program
    {
        static void Main(string[] args)
        {
            var commandSource = new Subject&lt;bool&gt;();

            // 初期状態
            var command = commandSource.ToReactiveCommand&lt;string&gt;(true);
            command.Subscribe(x =&gt; Console.WriteLine($"Execute が呼ばれたよ。: {x}"));
            command.CanExecuteChanged += (_, __) =&gt; Console.WriteLine("CanExecuteChanged が呼ばれたよ！");

            // CanExecute の値は最後に発行された値
            Console.WriteLine($"CanExecute: {command.CanExecute()}");

            // ソースから値が発行されると CanExecuteChanged が呼ばれる
            commandSource.OnNext(false);
            commandSource.OnNext(true);

            command.Execute("ぱらめーたー"); // Subscribe が呼ばれる。パラメーターも渡せる
        }
    }
}

