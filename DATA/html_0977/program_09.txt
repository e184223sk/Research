
using Reactive.Bindings;
using System;
using System.ComponentModel;
using System.Linq;
using System.Reactive.Linq;
using System.Threading.Tasks;
using System.Windows;

namespace RxPropLabWpf
{
    // WPF のメモリリーク対策で INotifyPropertyChanged は実装しておく
    public class MainWindowViewModel : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        public ReactiveCommand SampleCommand { get; }
        public ReactiveCollection&lt;DateTime&gt; Timestamps { get; }

        public MainWindowViewModel()
        {
            Timestamps = new ReactiveCollection&lt;DateTime&gt;();
            SampleCommand = new ReactiveCommand()
                .WithSubscribe(() =&gt;
                {
                    foreach (var i in Enumerable.Range(1, 10))
                    {
                        Timestamps.AddOnScheduler(DateTime.Now);
                    }

                    MessageBox.Show($"{Timestamps.Count}");
                });
        }
    }
}

