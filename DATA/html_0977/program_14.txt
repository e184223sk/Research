
public class MainPageViewModel
{
    private readonly IScheduler _uiThreadScheduler;

    public ReadOnlyObservableCollection&lt;string&gt; Items { get; }

    public MainPageViewModel(IScheduler uiThreadScheduler = null)
    {
        // null の場合は現在の SynchronizationContext に紐づいたスケジューラーを使う
        _uiThreadScheduler = uiThreadScheduler ?? new SynchronizationContextScheduler(SynchronizationContext.Current);
        // ReactiveProperty 系のクラスを作るときは、このスケジューラーを指定して作る
        Items = Model.Items.ToReadOnlyReactiveCollection(scheduler: _uiThreadScheduler);
    }
}

public static class Model
{
    // 今回は手抜きでグローバルな位置にあるコレクション
    public static ObservableCollection&lt;string&gt; Items { get; } = new ObservableCollection&lt;string&gt;();
}

