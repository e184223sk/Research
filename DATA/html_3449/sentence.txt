More than 1 year has passed since last update.どうも洋梨🍐です。
ゲームによくある「スコアランキング」ですが、この機能を実装していくまでの話を簡単に書いていきます。
こちらも是非ご覧ください。テスト環境としてXAMPP
データーベースはMySQL (MariaDB)
サーバーはNode.js
フロント側はUnityで行っています。
今回構築するデーターベースはid(プレイヤー のID) ,name (プレイヤー の名前) ,score (プレイヤーの点数) ,date(記録した日時)を保存するものとします。
まずデーターベースを構築します。今回はテストとしてデーターをいくつか追加しておきます。なお、テーブル名は”RANK“としてます。今回フレームワークとして Express を使用します。なお、サーバーはポート番号:3000で待ち受け、 localhost:3000/Getにアクセスされ、データーの一覧をjson形式で返すものとします。
実行した後、ブラウザなどでアクセスすると動いているのを確認できると思います。まずはUnity上でサーバーから受信できるかをテストします。画面のGETボタンをクリックしたら受信をするようにします。取得できている場合、ログに出力されると思います。シリアライズに使うクラス(構造)はこんな感じです。
サーバーからのリスポンス(JSON)はこのようなデーターです先ほど書いたソースコードを受信したJSONデーターを表示するように書き換えます。
成功するとこのように表示されます。これでUnity上でサーバーから取得した情報が使えるようになりました。次はUnityからサーバーにスコア(情報)を登録できるようにしていきたいと思います。今回サーバーに送信するリクエスト形式は次のようにしました。JSON { id , action, name , score }
 id : ユーザー識別用ID
 action : 操作内容(例：追加 = ADD)
 name : ユーザー名
 score : スコアまずはNode.jsでリクエストを処理するためのプログラムを作成します。今回は追加(ADD)リクエストが来たらとりあえず何も考えずデーターベースに登録するとします。
なお、リクエスト先は localhost:3000/post とします。テストデーターとして{ id:”a003” , action:”ADD” , name:”MyUser” , score:300 }を送信するとします。
なお、送信はPOSTで行います。実行してみるとデーターベースに登録されているのがわかると思います。

↑ リクエスト送信前と送信後でデーターが追加されているのがわかる
送信後 /Get でリストを取得すると確かに登録されていることが確認できます。これでUnityからサーバーに登録もできるようになり、ランキング表示機能として使えるようになりました👼インジェクション対策(例：SQL文に?を利用していない等)などせず簡単に書いてしまってあるのでこのまま運用すると間違いなく問題が起きますのであしからず。


