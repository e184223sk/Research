
public class UserStore : IUserStore&lt;User&gt;
{
    static List&lt;User&gt; cache = new List&lt;User&gt;();

    public void Dispose()
    {
    }

    public Task&lt;User&gt; FindByNameAsync(string userName)
    {
        return Task.FromResult(
            (from user in cache
                where user.UserName == userName
                select user)
            .SingleOrDefault());
    }

    public Task CreateAsync(User user)
    {
        if (!cache.Any(already =&gt; already.Id == user.Id))
        {
            cache.Add(user);
        }
        return Task.CompletedTask;
    }

    public Task DeleteAsync(User user) { throw new NotImplementedException(); }

    public Task&lt;User&gt; FindByIdAsync(string userId) { throw new NotImplementedException(); }

    public Task UpdateAsync(User user) { throw new NotImplementedException(); }
}

