More than 5 years have passed since last update.ASP.NETを学習し始めたので、
とりあえず小さなWebアプリを作ってみようと思いました。最初にログイン機能を作らないと何もできないので、
手軽にTwitter認証ができるということなので、
ASP.NET Identityを利用して作ることにしました。ググった方法でやってみると、確かに簡単なのですが、
Visual Studioが自動で書いてくれた大量のコードに数行追加するだけだから簡単、
という話なのでちょっと。下手すると作る予定のWebアプリより多機能そうなユーザー管理機能をデフォルトで用意されてしまうと、
なんというか邪魔です。なので、Twitter認証を実現する最低限の実装を調べてみました。
多少調査に手間取ったので、結果を書いておきます。深い理解しているわけでもないのに認証関連で最小限のコードを目指したので、
セキュリティ的に重要なコードが抜けている可能性があります。
気付いた方がいたら指摘ください。使ったのは
Visual Studio Community 2015 
ASP.NET MVCのバージョンは5.2.3でした。NuGetでMicrosoft.AspNet.Identity.Owinを入れておく必要があるようです。ASP.NETのプロジェクトを、EnptyにMVCのチェックをつけて作成します。Twitter Developpersへのアプリの登録の説明はあちこちにあるので省略。
Websiteは開発用に
http://127.0.0.1:60003/
とかで。
60003の部分はポート番号なので、プロジェクトのプロパティのWebタグのプロジェクトのURLにあるものに合わせます。以下コードの説明。
名前空間などは省略してあります。この部分はデフォルトで用意されたままです。これも用意されたまま使っています。アプリ内でユーザーを表すクラスです。
あまり利用しないので最低限の機能だけつけました。アプリ内でユーザーを管理するクラス。
これもできるだけ最低限の機能で済ませました。
ユーザーはstatic変数に突っ込んであるだけなので、アプリ再起動したら消えますが、
ユーザー情報をほとんど利用しないならこれでなんとかなります。
普通はDBに保存とかしたほうが良いでしょう。Task.FromResultとかTask.CompletedTaskはあまり見かけない機能かもしれませんが、
これは単にasyncメソッドのWarning対策なので認証とは関係ありません。ConsumerKey とConsumerSecret はTwitterからもらったものを記入してください。BackchannelCertificateValidator に設定してある英数字の羅列は、認証方法の設定を登録しているようです。
普通はなくても動くようなのですが、必要とされる条件がわかりませんでした。
localhostになっているのが怪しいかもしれません。認証用のコントローラーです。認証用のコードはここまでで、
あとはこれを利用する最小限のMVCとなります。モデル。最小限の機能です。コントローラー。
適当にメッセージを設定します。
ここでログインユーザーの名前は利用できます。ビュー。上記のHomeControllerで設定したメッセージを表示します。
@modelにあるのはモデルの名前空間込みのクラス名です。ここだけは最低限ではないです。
最低限にすると見た目がたいへんしょぼくなるので。ログインとログアウトのリンクはここに書いてあります。
真ん中あたりですね。
ログイン済みかどうかで切り替えています。ほかいろいろ、MVCで必要なファイルはありますが、
Visual Studioが用意したままで、かつたぶん認証と関係ないので省略します。


