
class Program
{
    static void Main()
    {
        System.Console.WriteLine(new Gcder&lt;int, IntOperator&gt;(30030).Calc(42));
        System.Console.WriteLine(new Gcder&lt;ulong, ULongOperator&gt;(30030).Calc(42));
        System.Console.WriteLine(new Gcder&lt;int, IntOperator&gt;(120).Calc(119));
        System.Console.WriteLine(new Gcder&lt;ulong, ULongOperator&gt;(120).Calc(119));
    }
}
class Gcder&lt;T, TOp&gt; where T : struct where TOp : struct, INumOperator&lt;T&gt;
{
    static readonly TOp op;
    static T Gcd(T a, T b) =&gt; op.GreaterThan(b, a) ? Gcd(b, a) : (op.Equals(b, default) ? a : Gcd(b, op.Modulo(a, b)));
    public T a;
    public Gcder(T a) { this.a = a; }
    public T Calc(T b) =&gt; Gcd(a, b);
}

