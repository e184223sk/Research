More than 3 years have passed since last update.大学の実験「大規模ソフトウェアを手探る」でオープンソースのツイッタークライアントOpenTweenを手探っていじってみたときの記録です。古いツイートをふぁぼると新しいツイートに埋もれてふぁぼ一覧で確認できない！　のでふぁぼったツイートをふぁぼった順にソートする機能を追加しようとしました。
また、フォローフォロワーの数が減っているといなくなったのが誰か気になってしょうがないので、フォローフォロワーの変化を記録する機能を追加しようとしました。今回手探ったのはこの時点で最新のOpenTween v1.3.5。OpenTweenはC#で開発されているのでOSはWindows10。Visual Studioを使いました。ソースコードは以下から入手できます。git cloneするかエクスポート:zipでダウンロードします。
https://ja.osdn.net/projects/opentween/scm/git/open-tween/tree/master/フォルダ内にあるOpenTween.slnでVisual Studioが開きます。上のstartを押せばあっさり実行できました。最初にふぁぼ順ふぁぼの実装を試みます。OpenTweenはRecent, Reply, Direct, Favoriteなどのタブごとにツイートが振り分けられるようになっているので、ここにFavorites2タブを新しく追加してそこでのソート基準をふぁぼった時間にすることにします。ツイート自体にはふぁぼられた時間は記録されていないので、クライアント側で記録するようにします。OpenTweenはこんな感じでタブにツイートが振り分けられてます。最初からあるFavoritesタブをそのまま複製してFavorites2タブを作ってみます。コード全体の構造を把握するなどできるわけもないので、適当に検索をかけて手探っていきます。Visual StudioではCtrl+Fでファイル内の検索、Ctrl+Shift+Fで全体の検索ができます。タブにFavoritesと表示されているので、これにあたりをつけて「”Favorites”」(文字列としてのFavoritesを探したいのでダブルクオーテーションまで含めて)で全体を検索します。するとMyCommon.cs内の以下の部分で引っかかります。デフォルトのタブを設定してるところみたいですね。ここにを追加してみますがタブが増えることはありません。ならばということでDEFAULTTABのところで右クリックしてFind All Referencesします。するとFavoritesTabModel.csというそれっぽいファイルが出てきました。これがFavoritesタブの本体のようなものでしょう。同じModelsディレクトリに新しくFavoritesTabModel2.csというファイルを作成して内容をほぼパクります。以下の部分だけ変更します。当たり前ですがMyCommon.TabUsageType.Favorites2のところで怒られます。TabUsageTypeのところで右クリックしてGo To Definitionします。するとMyCommon.cs内のというところに飛ばされます。なんだかよくわからないので適当にを追加してみるとエラーはなくなりましたが、タブが増えてはくれません。さて、いったんFavoritesTabModel.csにもどって考えてみます。FavoritesTabModelというクラスがどのように扱われているのか調べるために「FavoritesTabModel」で全体を検索します。するとTween.csなる怪しげなファイルに出くわしました。どうやらこのファイルがメインの処理を行っているようです。Tween.cs内で検索に引っかかったところを順番に見ていくと、まずここはコメントに書いてある通りデフォルトタブを追加しているところなのでを追加します。
つぎを見るとどうやらタブごとに色々設定しているらしいのでを追加します。
次はタブがない場合はデフォルトタブを追加、といった感じでしょうか。ここにもを追加します。
もう一か所GetFavoritesAsyncというタスクで検索が引っ掛かりましたが、どうもAPIを叩いてふぁぼったツイートを取得しているところのようなのでとりあえず無視します。これで実行するとようやくFavorites2タブが表示されました。ふぁぼった時間を記録するために、ふぁぼったときに呼ばれる場所を探します。先ほど見つけたTween.csなるメインの処理を行っていそうなところに「favorite」で検索をかけます。いくつか引っかかりますが順番に見ていくとFavoriteChangeというタスクが見つかります。というコメントがあるので間違いないでしょう。ここに処理を加える前にふぁぼったツイートのIDと時間を記録するためのDictionaryを作っておきます。FavoritesTabModel2のクラス内にを追加します。Tween.csのFavoriteChangeに戻ります。Dictionaryに追加すると同時にテキストにも書き出すので以下のように変更します。コメントにあったようにFavAddがtrueのときにふぁぼったときの処理、falseの時にふぁぼを解除した時の処理を書きます。ふぁぼを解除した時、テキストにはツイートのIDとハイフンを記録しておきます。OpenTween起動時にテキストから読みだしてDictionaryに移し替えます。起動時に呼ばれる場所を探すためにTween.cs内を「起動」で検索するとTweenMain_Loadなる関数が見つかりました。ブレークポイントを立ててみると起動時に止まるのが確認できます。この関数の中の適当な位置に以下を追加します。ハイフンがあったらそのIDはDictionaryから削除するようにしてあります。これでふぁぼった時間の記録ができるようになりました。Favorites2タブにふぁぼったツイートを表示させます。ふぁぼったツイートがどうやってFavoritesタブに表示されるのか調べるために、先ほど見つけた「TabUsageType.Favorites」で全体に検索をかけます。するとTableInformations.csにDistributePostsという関数が見つかります。ツイートを各タブに振り分けているみたいなので、以下のように変更を加えてFavorites2タブに振り分けられるようにします。まずの後ろにを加えます。次にの後ろにを加えます。OpenTweenでふぁぼったものだけがFavorites2タブに追加されるようにしてあります。これで実行してみますが、ふぁぼってもFavorites2タブには振り分けられません。OpenTweenを再起動しないと反映されないようです。ふぁぼを削除した時も同様です。もう1度「TabUsageType.Favorites」で全体に検索をかけます。するとFavAddAsyncInternalとFavRemoveAsyncInternalという2つのタスクの中で引っかかります。OpenTweenの実行中にはここで振り分けを行っているようです。favTabをパクって、FavAddAsyncInternalの方はの後ろにを追加します。FavRemoveAsyncInternalの方はの後ろにを、またの後ろにを加えます。これでふぁぼったツイートがFavorites2タブに振り分けられるようになりました。Favorites2タブのソート基準をふぁぼった時間に変更します。適当に「sort」で全体に検索をかけるとTabModel.csにApplySortModeなる関数を発見しました。これがおそらく時間順(実際はツイートID順ですがツイートIDは時間順に付けられるみたいなので)にソートするよう設定しているところでしょう。ここをFavorites2タブの時だけふぁぼった時間を基準にソートされるように変更します。これで実行すると新しくふぁぼったツイートがうまくソートされません。OpenTweenを再起動しないとちゃんと反映されないようです。これはおそらくソート基準がFavorites2タブだけ違うためでしょう。本来どのタブも同じソート基準で並んでいるはずなので、新しくふぁぼを追加してもRecentタブと同じ基準でFavorites2タブに振り分けているだけで、いちいちそのタブでの基準でソートし直してはいないように思えます。ApplySortModeの参照元をたどっていってもそういう感じに見えます。なのでなんとかしていいタイミングでApplySortModeを呼び出させましょう。ふぁぼる度に毎回呼び出してもいいですが、例えばFavorites2タブを選択したタイミングで呼び出せれば無駄は少ないです。適当に「select」等で検索していくと「tabselect」で検索したときにTween.csでListTabSelectという関数を発見しました。ここにブレークポイントを立てて実行すると、タブを切り替えるたびに止まります。ここでApplySortModeを呼び出したいところですが、ApplySortModeはprivateな関数なので、代わりにこのApplySortModeを呼び出しているSetSortModeを呼び出すことにします。以下の内容をListTabSelectに追加します。これでようやくふぁぼ順ふぁぼが完成しました。下の画像でもツイートの順番が日時(ツイート自体の日時)の順番でないことが確認できます。
OpenTweenを手探ってみた#2に続きます。


