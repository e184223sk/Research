
public class ParseSelectTest {
    // (snip)
    [Test]
    public void _数字リテラルのパーズ_小数の場合() {
        var unum_p = Parser.Digit.AtLeastOnceString();
        var exp_part_p = Parser.CIChar('E').Then(unum_p, (l, r) =&gt; l + r);

        var result8 = exp_part_p.Parse("E31");
        Assert.That(result8.Success, Is.True, "[8]パーズは成功しなければならない");
        Assert.That(result8.Value, Is.EqualTo("E31"), "[8]取り出された数字リテラル");

        var result8_2 = exp_part_p.Parse("e13");
        Assert.That(result8_2.Success, Is.True, "[8_2]パーズは成功しなければならない");
        Assert.That(result8_2.Value, Is.EqualTo("e13"), "[8_2]取り出された数字リテラル");

        var exp_num_p = unum_p.Then(exp_part_p.Optional(), (l, r) =&gt; r.HasValue ? l + r.Value : l);

        var result9 = exp_num_p.Parse("1234E31");
        Assert.That(result9.Success, Is.True, "[9]パーズは成功しなければならない");
        Assert.That(result9.Value, Is.EqualTo("1234E31"), "[9]取り出された数字リテラル");

        var result10 = exp_num_p.Parse("234");
        Assert.That(result10.Success, Is.True, "[10]パーズは成功しなければならない");
        Assert.That(result10.Value, Is.EqualTo("234"), "[10]取り出された数字リテラル");
    }
}

