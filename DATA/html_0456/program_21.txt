
class KeyboardHandler : IKeyboardHandler
{
    // ZoomLevelの定義
    private static readonly List&lt;double&gt; ZOOM_LEVLES = new List&lt;double&gt;{ -7.604, -6.081, -3.802, -2.197, -1.578, -1.224, -0.578, 0, 0.523, 1.224, 3.069, 3.802, 5.026, 6.026, 7.604, 8.827 };

    //　(省略)

    bool IKeyboardHandler.OnPreKeyEvent(IWebBrowser chromiumWebBrowser, IBrowser browser, KeyType type, int windowsKeyCode, int nativeKeyCode, CefEventFlags modifiers, bool isSystemKey, ref bool isKeyboardShortcut)
    {
        if (type == KeyType.RawKeyDown)
        {
            // Ctrl + NumberPad_Add
            // Ctrl + Add
            if ((windowsKeyCode == (int)Keys.Add &amp;&amp; (modifiers == (CefEventFlags.ControlDown | CefEventFlags.IsKeyPad))) ||
                (windowsKeyCode == (int)Keys.Oemplus &amp;&amp; (modifiers == (CefEventFlags.ControlDown | CefEventFlags.ShiftDown))))
            {
                // 現在のZoomLevelを取得する
                browser.GetZoomLevelAsync().ContinueWith((t) =&gt;
                {
                    // 現在のZoomLevelの次に大きなZoomLevelを求めて設定する
                    int index = ZOOM_LEVLES.IndexOf(t.Result);
                    index = Math.Min(++index, ZOOM_LEVLES.Count - 1);
                    browser.SetZoomLevel(ZOOM_LEVLES[index]);
                });
                return true;
            }
            // Ctrl + NumberPad_Minus
            // Ctrl + Minus
            else if ((windowsKeyCode == (int)Keys.Subtract &amp;&amp; (modifiers == (CefEventFlags.ControlDown | CefEventFlags.IsKeyPad))) ||
                (windowsKeyCode == (int)Keys.OemMinus &amp;&amp; (modifiers == (CefEventFlags.ControlDown | CefEventFlags.ShiftDown))))
            {
                // 現在のZoomLevelを取得する
                browser.GetZoomLevelAsync().ContinueWith((t) =&gt;
                {
                    // 現在のZoomLevelの次に小さいZoomLevelを求めて設定する
                    int index = ZOOM_LEVLES.IndexOf(t.Result);
                    index = Math.Max(--index, 0);
                    browser.SetZoomLevel(ZOOM_LEVLES[index]);
                });
                return true;
            }
            // Ctrl + NumberPad_0
            // Ctrl + 0
            else if ((windowsKeyCode == (int)Keys.D0 &amp;&amp; modifiers == CefEventFlags.ControlDown) ||
                (windowsKeyCode == (int)Keys.NumPad0 &amp;&amp; modifiers == (CefEventFlags.ControlDown | CefEventFlags.IsKeyPad)))
            {
                // 100%の倍率に戻す
                browser.SetZoomLevel(0);
                return true;
            }
        }

        return false;
    }
}

