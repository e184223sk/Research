using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Input;
using System.Windows.Media;

namespace Sample
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        // マウス押下中フラグ
        private bool _isMouseDown;

        // マウスの移動が開始されたときの座標
        private Point _startPoint;

        // マウスの現在位置座標
        private Point _currentPoint;

        // マウス左ボタン押下イベントのイベントハンドラ
        private void OperationArea_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
        {
            // フラグを"マウス押下中"にする
            _isMouseDown = true;

            // GetPositionメソッドで現在のマウス座標を取得し、マウス移動開始点を更新
            // （マウス座標は、OperationAreaからの相対的な位置とする）
            _startPoint = e.GetPosition(OperationArea);

            // イベントを処理済みとする（当イベントがこの先伝搬されるのを止めるため）
            e.Handled = true;
        }

        // マウス左ボタン解放イベントのハンドラ
        private void OperationArea_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)
        {
            // マウス押下中フラグを落とす
            _isMouseDown = false;

            e.Handled = true;
        }

        // マウス移動イベントのイベントハンドラ
        private void OperationArea_MouseMove(object sender, MouseEventArgs e)
        {
            // マウス押下中でなければドラッグ操作ではないのでメソッドを抜ける
            if (!_isMouseDown)
            {
                return;
            }

            // マウスの現在位置座標を取得（OperationAreaからの相対位置）
            _currentPoint = e.GetPosition(OperationArea);

            //移動開始点と現在位置の差から、MouseMoveイベント1回分の移動量を算出
            double offsetX = _currentPoint.X - _startPoint.X;
            double offsetY = _currentPoint.Y - _startPoint.Y;

            // 動かす対象の図形からMatrixオブジェクトを取得
            // このMatrixオブジェクトを用いて図形を描画上移動させる
            Matrix matrix = ((MatrixTransform)Target.RenderTransform).Matrix;

            // TranslateメソッドにX方向とY方向の移動量を渡し、移動後の状態を計算
            matrix.Translate(offsetX, offsetY);

            // 移動後の状態を計算したMatrixオブジェクトを描画に反映する
            Target.RenderTransform = new MatrixTransform(matrix);

            // 移動開始点を現在位置で更新する
            // （今回の現在位置が次回のMouseMoveイベントハンドラで使われる移動開始点となる）
            _startPoint = _currentPoint;

            e.Handled = true;
        }
    }
}


