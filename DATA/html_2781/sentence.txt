More than 1 year has passed since last update.画面上の図形オブジェクトをマウスドラッグ操作によってユーザが動かせるアプリを作りたい。・OS:Windows10
・IDE：Visual Studio 2017
・言語やフレームワーク：C#、WPF・マウスボタンを押下したら図形を動かし始め、マウスボタンから指を放したら動かすのを止める。
・マウスの動きに沿って図形が平行移動するような感じにする。
・動かす対象の図形を触らなくても操作できるようにする（ウィンドウ枠内のどこを触っても図形が反応するように）。こんなイメージ
1.WPFアプリケーションとしてプロジェクトを作成する。2.XAMLに動かす対象の図形オブジェクトと、マウス操作を可能にする範囲（具体的に言えばマウスイベントを拾う範囲）を定義する。
またそれぞれの図形はコードビハインドで使うため、x:Nameを指定しておく。
今回はWindow直下にGrid（マウス操作を可能とする範囲）を、その下にRectangleを配置した。ここで地味にはまったポイントについて少しばかりお話を・・・。
イベントを拾う範囲については、無色だとしてもBackgroundプロパティを設定すること。
「背景色いらんし」という方はBackground="Transparent"とする。
Backgroundを設定しないとサイズを設定していたとしてもイベントが拾われない（Grid, Canvas, DockPanelで確認済み）。
　
　
3.定義したオブジェクトに各種イベントプロパティを設定する。　
　4.上記XAMLのコードビハインドに、XAMLで設定したイベントに対応するイベントハンドラを定義する。　
これでいったんは期待通りに動く。が、
このままだとウィンドウ（正確に言えばイベントを拾う範囲）からマウスが離れた場合の挙動に問題がある。
ウィンドウから離れたあとにマウスボタンを解放してもMouseULeftButtonUpイベントが拾われないので、マウスポインタをウィンドウ枠内に戻したときにドラッグ操作が継続した状態になってしまう。これを防ぐために、
イベントを拾う範囲にはMouseLeftButtonUpだけでなくMouseLeaveイベントプロパティも追加し、マウスボタン解放時と同等の処理を行うMouseLeave専用のイベントハンドラを設定する必要がある。
※MouseLeaveイベント：マウスポインタが要素の範囲から離れたときに起きるイベント


