More than 1 year has passed since last update.Unityのコルーチンで、yield returnで待つ方法と MoveNext() &amp; Currentで待つ２つのパターンがある。
どう違うのかを検証してみた。どうやら完了時までの最低経過フレーム数で差が出る実際に両方のテストコードを書いて実行してみたTime.frameCount
 - 実行してから現時点まで経過フレーム数を取得できる。
 - コルーチンを呼ぶ前と後でこいつをログで表示して経過フレーム数を測定する。
STARTログからENDログの表示まで、１フレーム経過している
STARTログからENDログの表示まで、同フレームで完了している完了タイミングが最低１フレームを待つかどうかの違い。
IEnumeratorで即座に完了するものがある場合は、.MoveNextのほうを使うと良い。使い道としては、Commandパターンなど、親クラスに virutal IEnumerator Execute() のようなコルーチンを継承先で override して、待たせる処理をする/しないの違いをさせる場合など。ちなみに、
yield return SubTask();
の部分は、
yield return StartCoroutine( SubTask() );
と書き直しても同じ結果だった


