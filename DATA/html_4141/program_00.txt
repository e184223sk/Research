public List&lt;OrderHeader&gt; GetOrderHeaderList()
{
    string connectionString = Util.GetConnectionString();
    string selectQuery = "SELECT * FROM Sales.SalesOrderheader";

    List&lt;OrderHeader&gt; modelList = new List&lt;OrderHeader&gt;();

    using (var connection = new SqlConnection(connectionString))
    {
        // データベースと接続
        connection.Open();

        using (var command = new SqlCommand())
        {
            // コマンドの組み立て
            command.Connection = connection;
            command.CommandText = selectQuery;

            // SQLの実行
            using (SqlDataReader rdr = command.ExecuteReader())
            {
                while (rdr.Read())
                {
                    // ひたすら詰め替える
                    OrderHeader model = new OrderHeader();
                    model.SalesOrderID = rdr["SalesOrderID"] == DBNull.Value ? default(int) : Convert.ToInt32(rdr["SalesOrderID"]);
                    model.RevisionNumber = rdr["RevisionNumber"] == DBNull.Value ? default(byte) : Convert.ToByte(rdr["RevisionNumber"]);
                    model.OrderDate = rdr["OrderDate"] == DBNull.Value ? default(DateTime) : Convert.ToDateTime(rdr["OrderDate"]);
                    model.DueDate = rdr["DueDate"] == DBNull.Value ? default(DateTime) : Convert.ToDateTime(rdr["DueDate"]);
                    model.ShipDate = rdr["ShipDate"] == DBNull.Value ? default(DateTime) : Convert.ToDateTime(rdr["ShipDate"]);
                    model.Status = rdr["Status"] == DBNull.Value ? default(byte) : Convert.ToByte(rdr["Status"]);
                    model.OnlineOrderFlag = rdr["OnlineOrderFlag"] == DBNull.Value ? default(bool) : Convert.ToBoolean(rdr["OnlineOrderFlag"]);
                    model.SalesOrderNumber = rdr["SalesOrderNumber"] == DBNull.Value ? string.Empty : Convert.ToString(rdr["SalesOrderNumber"]);
                    model.PurchaseOrderNumber = rdr["PurchaseOrderNumber"] == DBNull.Value ? string.Empty : Convert.ToString(rdr["PurchaseOrderNumber"]);
                    model.AccountNumber = rdr["AccountNumber"] == DBNull.Value ? string.Empty : Convert.ToString(rdr["AccountNumber"]);
                    model.CustomerID = rdr["CustomerID"] == DBNull.Value ? default(int) : Convert.ToInt32(rdr["CustomerID"]);
                    model.SalesPersonID = rdr["SalesPersonID"] == DBNull.Value ? default(int) : Convert.ToInt32(rdr["SalesPersonID"]);
                    model.TerritoryID = rdr["TerritoryID"] == DBNull.Value ? default(int) : Convert.ToInt32(rdr["TerritoryID"]);
                    model.BillToAddressID = rdr["BillToAddressID"] == DBNull.Value ? default(int) : Convert.ToInt32(rdr["BillToAddressID"]);
                    model.ShipToAddressID = rdr["ShipToAddressID"] == DBNull.Value ? default(int) : Convert.ToInt32(rdr["ShipToAddressID"]);
                    model.ShipMethodID = rdr["ShipMethodID"] == DBNull.Value ? default(int) : Convert.ToInt32(rdr["ShipMethodID"]);
                    model.CreditCardID = rdr["CreditCardID"] == DBNull.Value ? default(int) : Convert.ToInt32(rdr["CreditCardID"]);
                    model.CreditCardApprovalCode = rdr["CreditCardApprovalCode"] == DBNull.Value ? string.Empty : Convert.ToString(rdr["CreditCardApprovalCode"]);
                    model.CurrencyRateID = rdr["CurrencyRateID"] == DBNull.Value ? default(int) : Convert.ToInt32(rdr["CurrencyRateID"]);
                    model.SubTotal = rdr["SubTotal"] == DBNull.Value ? default(decimal) : Convert.ToDecimal(rdr["SubTotal"]);
                    model.TaxAmt = rdr["TaxAmt"] == DBNull.Value ? default(decimal) : Convert.ToDecimal(rdr["TaxAmt"]);
                    model.Freight = rdr["Freight"] == DBNull.Value ? default(decimal) : Convert.ToDecimal(rdr["Freight"]);
                    model.TotalDue = rdr["TotalDue"] == DBNull.Value ? default(decimal) : Convert.ToDecimal(rdr["TotalDue"]);
                    model.Comment = rdr["Comment"] == DBNull.Value ? string.Empty : Convert.ToString(rdr["Comment"]);
                    model.rowguid = rdr["rowguid"] == DBNull.Value ? default(Guid) : (Guid)rdr["rowguid"];
                    model.ModifiedDate = rdr["ModifiedDate"] == DBNull.Value ? default(DateTime) : Convert.ToDateTime(rdr["ModifiedDate"]);

                    modelList.Add(model);
                }
            }
        }
    }

    return modelList;
}

