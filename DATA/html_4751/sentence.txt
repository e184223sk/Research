More than 3 years have passed since last update.こちらの記事の続きです。
【C#】TextFieldParserで郵便番号データを処理する【ほぼパクリ】 - Qiitaこのコードで100万行のCSVファイルに耐えられるか…というかもっと高速で実行できる処理はないんだろか。と考えて色々実験してみました。※今回のコード全て、実行にはMicrosoft.VisualBasicの参照設定が必要です☆
もとい、100万行のCSVファイルを手っ取り早くつくるのに、前回使った郵便番号データ(約12万行)をサクラエディタ上でコピペして10倍に増やしました。あと、実データを考えたときにはこいつはフィールド数が少ないな、と思ったのでこれもサクラエディタ上で矩形貼り付けを使って70項目に増やしました。ファイル容量的には約600MBとまあまあの量です。こんな感じです。まあ普通じゃない？まずは前回記事のコードをちょっとだけ改変。単一のクラスにまとめて実行開始時間・実行終了時間の表示を追加しました。基本的な処理は変えてない。高速化を目指していろいろやってみました。単純に「c# テキスト　読み込み 最速」とかそういうキーワードで調べると、.net系の場合テキストをLine読み込みするよりもテキスト全体をガツンと読み込んでから処理するほうが早い！と言われるのでやってみようとしました。………………「型 'System.OutOfMemoryException' の初回例外が mscorlib.dll で発生しました」と怒られてしまいました。メモリ不足？どうも、環境的に力不足でファイル全体を処理しきれないみたいです。
…？いやもしかして環境に関係なくそもそも100万件のテキストだとFile.ReadAllTextで処理し切れんのだろか。例外の内容を細かく解析してそこらへんハッキリさせてみたい気もするものの、他に試したいこともあるので放っておいて次へ。しかたないのでFile.ReadAllLinesっすよ。作戦としてはFile.ReadAllLinesで読み込んだ一行のテキストを、一行ずつ個別に無理やっこTextFieldParserで処理していこうと。…それで速くなるかはまあ、やってみましょうっていう。さらに。foreachではなくforでループしてみたい！と思ったのですがそれにはまず、本処理の前にファイルの「行数」を確保しておかないといけないですよね…？行数取得するだけでえらい時間かかるんじゃね？と思っていたら意外と速い。今回のテスト環境だと数秒で行数を取得できてしまう。というわけで最初に行数を取得して(そして列数は固定値にして)forでループを回す処理がこちら。同じようなこと(定番のファイル読み込み処理をしつつ一行のテキストを無理矢理TextFieldParse)をStreamReaderでもやってみようかとStreamReaderでやってもファイル全体読み込みは同じくコケるだろうな、と思っていたら案の定。「System.IO.StreamReaderクラスには行数を取得するメソッドが用意されていない」そうなんだ…。というわけでwhileループの中でTextFieldParser。最初のコードだけ妙に時間かかってるな…？最初のコード、他のコードと同じようにフィールドなめるところで固定値の列数分forで回すように改良したら高速化するかなー、と思ってやってみました。列に対するループをforeachからforに変えただけでこの違い。たかだか要素数70に対してforeachするのと、forを70回するのとでは微々たる差でしょうが、それが×100万回となると大差になるということのようです。今回の結果としては「どれもそんなに変わらんけどFile.ReadAllLines + forでループが多少速いようですね」ってことにはなるんですけど、単純に取得したフィールドをコンソールに出すだけでコレですから。いずれの方法でも実処理は結構な時間かかるということになります。なので。
実用プログラムに応用する上でも、全体の行数を最初に取得してしまう「File.ReadAllLines + forでループ方式」を応用して、全体の行数から見た現在の処理行数のパーセンテージなど取得してプログレスバー表示するとか、そういうインターフェイスをかませた方が無難かと。
そういう点でも、「File.ReadAllLines + forでループ方式」が良さそうです。読み込み時点でファイル全体をなんらか処理(集計・ソート)したい場合は最初の、FileStream全体をTextFieldParserで処理する方式で、結果をLINQ操作するやり方でもいいかもしれないですが、ファイルそのものが巨大だったらそのへんの処理はやはりいったんDBに格納してからやった方がいいのかな…などと考えたりもしています。まあそこらへんまでいくと今回のテーマからだんだん離れていくので、今回はこのへんで。以上です。


