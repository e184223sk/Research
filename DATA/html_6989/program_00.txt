using System;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using CsvHelper;
namespace ML
{
    public static class LoadData
    {
        /// &lt;summary&gt;
        /// Reads the csv.
        /// &lt;/summary&gt;
        /// &lt;returns&gt;The csv.&lt;/returns&gt;
        /// &lt;param name="filename"&gt;ファイル名&lt;/param&gt;
        /// &lt;typeparam name="T"&gt;CSVのカラム情報.&lt;/typeparam&gt;
        /// &lt;typeparam name="M"&gt;Mapper&lt;/typeparam&gt;
        public static List&lt;T&gt; LoadCsv&lt;T, M&gt;(string filename) where M : CsvHelper.Configuration.CsvClassMap&lt;T&gt;
        {
            //絶対ファイルパス
            using (var parse = new CsvReader(new StreamReader(filename)))
            {
                parse.Configuration.HasHeaderRecord = false;
                parse.Configuration.RegisterClassMap&lt;M&gt;();
                List&lt;T&gt; data = parse.GetRecords&lt;T&gt;().ToList();
                return data;
            }
        }
    }

    class Iris
    {
        public double SepalLength { get; set; }
        public double SepalWidth { get; set; }
        public double PetalLength { get; set; }
        public double PetalWidth { get; set; }
        public string Species { get; set; }

    }

    class IrisMap : CsvHelper.Configuration.CsvClassMap&lt;Iris&gt;
    {
        public IrisMap()
        {
            Map(x =&gt; x.SepalLength).Index(0);
            Map(x =&gt; x.SepalWidth).Index(1);
            Map(x =&gt; x.PetalLength).Index(2);
            Map(x =&gt; x.PetalWidth).Index(3);
            Map(x =&gt; x.Species).Index(4);
        }
    }
}

