MirageSoloでMRが可能になる新しい機能です。本記事投稿時点ではベータ版として公開されています。
GoogleVRからダウンロードできます。MirageSoloを用いてビルドを行うまでの手順はこちらの記事が参考になりました。
→Mirage Soloから始めるDaydream開発ただし、
・SDK、NDK等のバージョンチェックが必要(動作しないバージョンがある)
・2019.1では動作しない？(ビルドできない、apkファイルを開けない)などの条件があるのでシースルーモードを導入するにはひと手間必要です。①Unity2019.1のインストール時にAndroidのもろもろ一緒にダウンロードする
②Unity2018で①でダウンロードしてきたAndroidのもろもろを利用してビルドするという手順で行えばSDK関連は何も考えず勝手にビルド環境が構築されるのでおススメです。
→さらに詳しくはこちらあとはMirageSolo側でバージョンアップをして、
設定&gt;ベータ版の機能&gt;Turn on see- through modeのチェックを入れときましょう。Assets &gt; GoogleVR &gt; Beta &gt; Demos &gt; Scenes &gt; HelloMR
をAdd Open Scenesしてビルドするだけでも可能ですが、せっかくなのでまっさらのシーンから配置してみました。
Playerというゲームオブジェクトはデモシーンにも存在しており、
コントローラーとカメラを一緒に移動させるために用意されたものと解釈して同様の階層構造を再現してます。Demo用のPrefabやInstantPreviewなどは必要ないので配置してません。あとはコードです。デモシーンのスクリプトはAppボタンを押すと
VR空間→白黒→セピア調→以後ループ
の順に遷移するようになっています。今回はVR空間→セピア調→以後ループという実装で書き換えました。スタート内でシースルーモードに対応しているかどうか確認しています。
なくても動きますが一応。シースルーモード⇔通常のVRモード
この遷移時に不要なゲームオブジェクトを非アクティブに、
必要なゲームオブジェクトをアクティブにしています。使い道の例としては、デモシーンのようにVR空間内で部屋(オブジェクト)の中にいた場合などが挙げられます。部屋(オブジェクト)自体を消してあげないとシースルーモード時に
部屋(オブジェクト)が邪魔して周りが見えません。また、別の例として
コントローラーをシースルーモード時に映しっぱなしにしていると
現実空間のものとゲームオブジェクトの両方が目に入って気持ち悪いです。
なので、消してあげたほうがいいです。このコードももちろん丸パクリなのですが、アクティブ、非アクティブを含めて
たった5行でキレイに書いてて心から美しいと思いました。GvrBetaHeadset.CameraModeを参照して
現在のカメラモードに応じて、別のカメラモードに切り替えています。2019/05/12 追記今回はスクリプトでカメラモードを変更しました。
最初から最後までシースルーモードを使用し、変更する必要がない場合は
GvrBetaHeadSetのパラメータを変更してあげればOKです。こいつのパラメーターが2つ用意されていて、
AugmentedとVirtualなのですが違いがさっぱりでした。ドキュメントにはThese control where the scene is rendered from. Generally in a virtual scene the scene should be rendered from the users' eyes while an augmented scene should be rendered from the camera's position to match the see-through images. とありましたが、被ってみても何の違いも感じませんでした。誰かわかる方いたら教えてください。カメラのBackgroundを変更してあげれば見える景色の色も変えられます。
MirageSolo(Daydream)に幸あれ...


