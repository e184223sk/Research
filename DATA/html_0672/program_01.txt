
public partial class MainPageViewModel : INotifyPropertyChanged
{
  public event PropertyChangedEventHandler PropertyChanged;

  // PropertyChangedEventArgs が無駄に沢山作られないように一応配慮
  private static readonly PropertyChangedEventArgs XxxxPropertyChangedEventArgs = new PropertyChangedEventArgs(nameof(Xxxx));
  private static readonly PropertyChangedEventArgs LastNamePropertyChangedEventArgs = new PropertyChangedEventArgs(nameof(LastName));
  private static readonly PropertyChangedEventArgs FullNamePropertyChangedEventArgs = new PropertyChangedEventArgs(nameof(FullName));

  public string Xxxx // AutoNotify でプロパティ名を明示的に指定したらそれを使う
  {
    get =&gt; this._firstName;
    set
    {
      if (EqualityComparer&lt;string&gt;.Default.Equals(this._firstName, value)) { return; }
      this._firstName = value;
      PropertyChanged?.Invoke(this, XxxxPropertyChangedEventArgs);
      // FullName プロパティに AutoNotify がついてるので、FullName プロパティで参照しているプロパティが変更されたときに自動で変更通知とばす
      PropertyChanged?.Invoke(this, FullNamePropertyChangedEventArgs);

      XxxxChanged();
    }
  }

  partial void XxxxChanged();

  public string LastName // 普通はフィールド名からいい感じにプロパティ名作る
  {
    get =&gt; this._lastName;
    set
    {
      if (EqualityComparer&lt;string&gt;.Default.Equals(this._lastName, value)) { return; }
      this._lastName= value;
      PropertyChanged?.Invoke(this, LastNamePropertyChangedEventArgs);
      // FullName プロパティに AutoNotify がついてるので、FullName プロパティで参照しているプロパティが変更されたときに自動で変更通知とばす
      PropertyChanged?.Invoke(this, FullNamePropertyChangedEventArgs);

      LastNameChanged();
    }
  }

  partial void LastNameChanged();
}

