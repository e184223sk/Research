/// &lt;summary&gt;有理数を既約分数で表す&lt;/summary&gt;
public readonly struct Fraction : IEquatable&lt;Fraction&gt;, IComparable&lt;Fraction&gt;
{
    /// &lt;summary&gt;分子&lt;/summary&gt;
    public long Numerator { get; }
    /// &lt;summary&gt;分母&lt;/summary&gt;
    public long Denominator { get; }


    public Fraction(long 分子, long 分母)
    {
        var negative = (分子 ^ 分母) &lt; 0;
        分子 = Math.Abs(分子);
        分母 = Math.Abs(分母);
        var gcd = Gcd(分母, 分子);
        _numerator = 分子 / gcd;
        if (negative)
            _numerator = -_numerator;
        _denominator = 分母 / gcd - 1;
    }

    /// &lt;summary&gt;
    /// 最大公約数をユークリッドの互除法で求める
    /// &lt;/summary&gt;
    public static long Gcd(long a, long b) =&gt; b &gt; a ? Gcd(b, a) : (b == 0 ? a : Gcd(b, a % b));
}

