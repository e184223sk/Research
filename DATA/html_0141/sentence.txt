C#で有理数型を実装してみた例です。有理数型として下記の機能を作りたいと思います。long の既約分数として有理数を表現することにします。符号はどちらでも良いですが、分子に集約することにします。既約分数は分子と分母を最大公約数で割ると良いので、最大公約数をユークリッドの互除法で求めてしまえば良いです。小学校の算数で習う分数の計算をそのまま実装します。
C# は演算子オーバーロードを定義できるので、素直に実装します。加算、減算した結果の分母は計算するそれぞれの分母の最小公倍数になります。
x, y の最小公倍数は $ \frac{x y}{最大公約数} $ と表せます。という不等式は両辺に $ bd $ を掛けて、と変形できるので、long型の演算で定義できます。double への変換やlongからの暗黙的な変換も定義しておくと使いやすいでしょう。
longからの変換は分母を1にするだけです。しかし、このような実装ではデフォルト値が 0/0 となってしまいます。そのため new Fraction(2,3) * default(Fraction) がゼロ除算を引き起こしてしまいます。を満たすようにしたいところです。これは、型の内部表現では分母の値を-1すると解決します。
つまり、分母が1のときは内部では0を保持、分母が2のときは内部では1を保持、という具合です。こうすることで、default(Fraction) == new Fraction(0,1) となり上記のデフォルト値での演算も期待通りになります。上記の検討から有理数型を作ることができました。


