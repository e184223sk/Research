
    class Program
    {
        static void Main(string[] args)
        {
            string[] input = Console.ReadLine().Trim().Split(' ');
            int M = int.Parse(input[0]);
            int D = int.Parse(input[1]);
            string d = input[2];
            //曜日を数値に変換
            int day = 0;
            switch (d)
            {
                case "SUN":
                    day = 0;
                    break;
                case "MON":
                    day = 1;
                    break;
                case "TUE":
                    day = 2;
                    break;
                case "WED":
                    day = 3;
                    break;
                case "THU":
                    day = 4;
                    break;
                case "FRI":
                    day = 5;
                    break;
                case "SAT":
                    day = 6;
                    break;
            }

            int[] nextWorkingDay = new int[2]; //翌営業日の日付
            do
            {//月～木、日なら翌日が営業日
             //金なら3日後が営業日
             //土なら2日後が営業日
                switch (day % 7)
                {
                    case 5:
                        {
                            nextWorkingDay = NextWorkingDay(M, D, 3);
                            M = nextWorkingDay[0];
                            D = nextWorkingDay[1];
                            day += 3;
                            break;
                        }
                    case 6:
                        {
                            nextWorkingDay = NextWorkingDay(M, D, 2);
                            M = nextWorkingDay[0];
                            D = nextWorkingDay[1];
                            day += 2;
                            break;
                        }
                    default:
                        {
                            nextWorkingDay = NextWorkingDay(M, D, 1);
                            M = nextWorkingDay[0];
                            D = nextWorkingDay[1];
                            day++;
                            break;
                        }
                }
            } while (isPublicHoliday(M, D)); //翌営業日が祝日ならば次の営業日を求める
            Console.WriteLine("{0}月{1}日", nextWorkingDay[0], nextWorkingDay[1]);
        }
        //2019年の祝日かどうかを判断
        static bool isPublicHoliday(int month, int day)
        {
            List&lt;int[]&gt; publicHoliday = new List&lt;int[]&gt;();
            publicHoliday.Add(new int[] { 1, 1 });
            publicHoliday.Add(new int[] { 1, 14 });
            publicHoliday.Add(new int[] { 2, 11 });
            publicHoliday.Add(new int[] { 3, 21 });
            publicHoliday.Add(new int[] { 4, 29 });
            publicHoliday.Add(new int[] { 4, 30 });
            publicHoliday.Add(new int[] { 5, 1 });
            publicHoliday.Add(new int[] { 5, 2 });
            publicHoliday.Add(new int[] { 5, 3 });
            publicHoliday.Add(new int[] { 5, 4 });
            publicHoliday.Add(new int[] { 5, 5 });
            publicHoliday.Add(new int[] { 5, 6 });
            publicHoliday.Add(new int[] { 7, 1 });
            publicHoliday.Add(new int[] { 7, 15 });
            publicHoliday.Add(new int[] { 8, 11 });
            publicHoliday.Add(new int[] { 8, 12 });
            publicHoliday.Add(new int[] { 9, 16 });
            publicHoliday.Add(new int[] { 9, 23 });
            publicHoliday.Add(new int[] { 10, 14 });
            publicHoliday.Add(new int[] { 10, 22 });
            publicHoliday.Add(new int[] { 11, 3 });
            publicHoliday.Add(new int[] { 11, 23 });

            return publicHoliday.Any(n =&gt; n[0] == month &amp;&amp; n[1] == day);
        }

        //日付から何日後の日付を求める
        static int[] NextWorkingDay(int month, int day, int a)
        {
            for (int i = 0; i &lt; a; i++)
            {
                //翌日の日付を求める
                day++;
                //月末を超えていた場合
                if (day &gt; lastDay(month))
                {
                    day = 1;
                    month++;
                }
                if (month &gt; 12)
                {
                    month = 1;
                }
            }
            return new int[] { month, day };
        }
        //各月の最終日を返す
        static int lastDay(int month)
        {
            switch (month)
            {
                case 2:
                    return 28;
                case 4:
                case 6:
                case 9:
                case 11:
                    return 30;
                default:
                    return 31;
            }
        }
    }
}

