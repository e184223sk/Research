
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NextWorkingDayModelAnser
{
    class Program
    {
        static int dayToInteger(string d)
        {
            switch (d)
            {
                case "SUN":
                    return 0;
                case "MON":
                    return 1;
                case "TUE":
                    return 2;
                case "WED":
                    return 3;
                case "THU":
                    return 4;
                case "FRI":
                    return 5;
                case "SAT":
                    return 6;
                default:
                    throw new Exception();
            }
        }
        static int[] tomorrow(int M, int D, int d)
        {
            d = (d + 1) % 7;
            switch (M)
            {
                case 2:
                    if(D == 28)
                    {
                        return new int[] { 3, 1, d };
                    }
                    break;
                case 4:
                case 6:
                case 9:
                case 11:
                    if(D == 30)
                    {
                        return new int[] { M + 1, 1, d };
                    }
                    break;
                default:
                    if(D == 31)
                    {
                        return new int[] { M + 1, 1, d };
                    }
                    break;
            }
            return new int[] { M, D + 1, d };
        }

        static List&lt;int[]&gt; Holidays = new List&lt;int[]&gt;()
        {
            new int[]{1,1},
            new int[]{1,14},
            new int[]{2,11},
            new int[]{3,21},
            new int[]{4,29},
            new int[]{4,30},
            new int[]{5,1},
            new int[]{5,2},
            new int[]{5,3},
            new int[]{5,4},
            new int[]{5,5},
            new int[]{5,6},
            new int[]{7,1},
            new int[]{7,15},
            new int[]{8,11},
            new int[]{8,12},
            new int[]{9,16},
            new int[]{9,23},
            new int[]{10,14},
            new int[]{10,22},
            new int[]{11,3},
            new int[]{11,23}
        };

        static bool isHoliday(int M, int D)
        {
            int[] date = new int[] { M, D };
            return Holidays.Any(n =&gt; n[0] == M &amp;&amp; n[1] == D);
        }
        static int[] nextBusinessDate(int M, int D, int d)
        {
            int[] nextDate = tomorrow(M, D, d);
            M = nextDate[0]; 
            D = nextDate[1];
            d = nextDate[2];
            if(d == 0 || d == 6) {  //日曜化土曜
                return nextBusinessDate(M, D, d);
            }
            else if (isHoliday(M, D))
            {
                return nextBusinessDate(M, D, d);
            }else{
                return new int[] { M, D };
            }
        }
        static void Main(string[] args)
        {
            string[] input = Console.ReadLine().Trim().Split(' ');
            int M = int.Parse(input[0]);
            int D = int.Parse(input[1]);
            int d = dayToInteger(input[2]); //曜日を０から６に変換する
            int[] date = nextBusinessDate(M, D, d);　//date[0]: 月、 date[1]: 日
            Console.WriteLine("{0}月{1}日",date[0],date[1]);
        }
    }
}

