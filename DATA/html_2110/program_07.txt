
public interface IStrategy {
    void Execute();
}

public class ConcreteStrategyA : IStrategy {
    public void Execute() {
        Console.WriteLine("ConcreteStrategyA.Execute()");
    }
}

public class ConcreteStrategyB : IStrategy {
    public void Execute() {
        Console.WriteLine("ConcreteStrategyB.Execute()");
    }
}

public class Context {

    private readonly IStrategy strategyA = new ConcreteStrategyA();
    private readonly IStrategy strategyB = new ConcreteStrategyB();

    private IStrategy currentStrategy;

    public Context() {
        currentStrategy = strategyA;
    }

    public void DoSomething() {

        currentStrategy.Execute();

        // 呼び出しごとに戦略(ストラテジー)を切り替える
        currentStrategy = (currentStrategy == strategyA) ? strategyB : strategyA;
    }
}

