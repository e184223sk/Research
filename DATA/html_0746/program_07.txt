
/// &lt;summary&gt;
/// MainWindow.xaml の相互作用ロジック
/// &lt;/summary&gt;
public partial class MainWindow : Window
{
    List&lt;ExampleClass&gt; list = new List&lt;ExampleClass&gt;();
    public MainWindow()
    {
        InitializeComponent();

        list.Add(new ExampleClass() { Id = 0, Name = "aaa", Age = 10 });
        list.Add(new ExampleClass() { Id = 1, Name = "bbb", Age = 20 });
        list.Add(new ExampleClass() { Id = 2, Name = "ccc", Age = 30 });
        list.Add(new ExampleClass() { Id = 3, Name = "ddd", Age = 40 });
        list.Add(new ExampleClass() { Id = 4, Name = "eee", Age = 50 });
        ExampleList1.ItemsSource = list;
        ExampleList2.ItemsSource = list;
    }

    //! リストボックス1の選択中アイテムを表示する
    private void Btn1_Click(object sender, RoutedEventArgs e)
    {
        // 操作するコントロール
        string controlName = "ExampleList1";

        ItemShow(controlName);
    }

    //! リストボックス2の選択中アイテムを表示する
    private void Btn2_Click(object sender, RoutedEventArgs e)
    {
        // 操作するコントロール
        string controlName = "ExampleList2";

        ItemShow(controlName);
    }

    // SelectedItemsの中身を取り出す～メッセージボックス表示メソッド
    private void ItemShow(string controlName)
    {
        // リストボックスを探す
        object controlObj = FindName(controlName);
        ListBox listBox = (ListBox)controlObj;

        // 選択項目が0 =&gt; メソッドを出る
        if (listBox.SelectedItems.Count == 0)
            return;

        // 選択中のアイテムを取得する
        GetSelectedItems&lt;ExampleClass&gt; g = new GetSelectedItems&lt;ExampleClass&gt;(listBox);
        var selItems = g.Get();

        // メッセージボックスに表示する内容
        string message = "";
        foreach (var line in selItems)
        {
            message = message + string.Format("\r\nId：「{0}」　Nmae：「{1}」　Age：「{2}」", line.Id, line.Name, line.Age);
        }
        message = string.Format($"{controlName} で選択中の項目は\r\n{message}\r\n\r\nです");

        MessageBox.Show(message);
    }
}

