
public class UnitTest1
{
    [Fact]
    public void Test_FileElement()
    {
        string targetFileName = "coopy -copy.txt";
        string targetDir = @"D:\FileRenamerDiff_TestTarget\";
        string expectedRenamedFileName = "coopy -XXX.txt";
        string regexPattern = "-copy";
        string replaceText = "-XXX";

        //ファイル準備
        string targetFilePath = targetDir + targetFileName;   //☆変更
        string expectedRenamedFilePath = targetDir + expectedRenamedFileName;   //☆変更
        var fileSystemMock = new MockFileSystem(new Dictionary&lt;string, MockFileData&gt;()   //☆変更
        {
            [targetFilePath] = new MockFileData("UNIT TEST"),
        });

        var fileElem = new FileElementModel(fileSystemMock, targetFilePath);   //☆変更

        //ファイル名の一部を変更する置換パターンを作成
        var regex = new Regex(regexPattern, RegexOptions.Compiled);
        var rpRegex = new ReplaceRegex(regex, replaceText);

        //リネームプレビュー実行
        fileElem.Replace(new[] { rpRegex });

        fileElem.OutputFileName
            .Should().Be(expectedRenamedFileName, "リネーム変更後のファイル名になったはず");

        fileElem.IsReplaced
            .Should().BeTrue("リネーム変更されたはず");

        //リネーム保存実行
        fileElem.Rename();

        fileElem.InputFileName
            .Should().Be(expectedRenamedFileName, "リネーム保存後のファイル名になったはず");

        fileSystemMock.File.Exists(targetFilePath)   //☆変更
                .Should().BeFalse("元のファイルはないはず");
        fileSystemMock.File.Exists(expectedRenamedFilePath)   //☆変更
            .Should().BeTrue("リネーム後のファイルはあるはず");
    }
}

