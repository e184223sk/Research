    // テスト対象のクラス
    public class MyClass
    {
        // privateメソッド
        private int AddValue(int additionValue)
        {
            return _Value + additionValue;
        }

        // privateプロパティ
        private bool IsZero =&gt; _Value == 0;

        // privateフィールド
        private int _Value = 0;

        // staticなprivateメソッド
        private static int GetTotalValue(int value1, int value2)
        {
            return value1 + value2;
        }
    }

    // MyClassのprivateなメンバーをテストするためのテストコード
    [TestClass]
    public class MyClassTest
    {
        // privateメソッドのテスト
        [TestMethod]
        public void AddValueTest()
        {
            // PrivateObjectを作成して、AddValueメソッドを呼び出す
            var myClass = new MyClass();
            var privateObject = new PrivateObject(myClass);
            var value = (int) privateObject.Invoke("AddValue", 1);
            Assert.AreEqual(1, value);
        }

        // privateプロパティとprivateフィールドのテスト
        [TestMethod]
        public void IsZeroTest()
        {
            // PrivateObjectを作成して、_ValueフィールドとIsZeroプロパティを呼び出す
            var myClass = new MyClass();
            var privateObject = new PrivateObject(myClass);

            // privateフィールドを取得
            var value = (int) privateObject.GetField("_Value");
            Assert.AreEqual(0, value);

            // privateプロパティを取得
            var isZero = (bool) privateObject.GetProperty("IsZero");
            Assert.IsTrue(isZero);
        }

        // staticなprivateメソッドのテスト
        [TestMethod]
        public void GetTotalValueTest()
        {
            // PrivateTypeを作成して、GetTotalValueメソッドを呼び出す
            var privateType = new PrivateType(typeof(MyClass));
            var value = (int) privateType.InvokeStatic("GetTotalValue", 1, 1);
            Assert.AreEqual(2, value);
        }
    }


