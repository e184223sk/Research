
    // 拡張メソッドの定義(テストプロジェクト内で定義)
    public static class MyClassExtensions
    {
        // privateメソッド用の拡張メソッド
        public static int AddValue(this MyClass myClass, int additionValue)
        {
            return (int) new PrivateObject(myClass).Invoke("AddValue", additionValue);
        }

        // privateプロパティ用の拡張メソッド
        public static bool IsZero(this MyClass myClass)
        {
            return (bool) new PrivateObject(myClass).GetProperty("IsZero");
        }

        // privateフィールド用の拡張メソッド
        public static int _Value(this MyClass myClass)
        {
            return (int) new PrivateObject(myClass).GetField("_Value");
        }

        // staticなprivateメソッド用のstaticメソッド
        public static int GetTotalValue(int value1, int value2)
        {
            return (int) new PrivateType(typeof(MyClass)).InvokeStatic("GetTotalValue", value1, value2);
        }
    }

    // テストコードは、PrivateObjectとPrivateTypeを用いずに、シンプルに記載
    [TestClass]
    public class MyClassTest
    {
        // privateメソッドのテスト
        [TestMethod]
        public void AddValueTest_Simple()
        {
            var myClass = new MyClass();
            var value = myClass.AddValue(1);
            Assert.AreEqual(1, value);
        }

        // privateプロパティとprivateフィールドのテスト
        [TestMethod]
        public void IsZeroTest_Simple()
        {
            var myClass = new MyClass();

            // privateフィールドを取得
            var value = myClass._Value();
            Assert.AreEqual(0, value);

            // privateプロパティを取得
            var isZero = myClass.IsZero();
            Assert.IsTrue(isZero);
        }

        // staticなprivateメソッドのテスト
        [TestMethod]
        public void GetTotalValueTest_Simple()
        {
            var value = MyClassExtensions.GetTotalValue(1, 1);
            Assert.AreEqual(2, value);
        }
    }

