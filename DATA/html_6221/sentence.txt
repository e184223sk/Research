More than 3 years have passed since last update.一般のアプリのように使用者に承認してもらってアクセスするのではなく、社内でのアプリ・サービスのバックエンドとしてG Suiteのドメイン内のカレンダーにアクセスする方法。
ドメイン外のカレンダーにはアクセスできない。サービスアカウントのドメインへの認証はG Suiteの管理画面から行うため、管理者しか行うことが出来ません。Google CalendarのAPIパッケージをインストールしておきます。Google cloud platformのdeveloper consoleにアクセス。
プロジェクトを作成し、左メニューのライブラリからGoogle Calendar APIを検索して有効にする。左メニューの認証情報→認証情報を作成→サービスアカウントキーを選択し、サービスアカウント→新しいサービスアカウントを選ぶ。
サービスアカウント名を適当（ここでは"hogehoge"とする）に入力。役割はひとまずProject→オーナーを選択。1
キーのタイプはP12を選択。鍵ファイル（.p12）がダウンロードされるので保存しておく。サービスアカウントの管理をクリックし、先程作成したサービスアカウントの右側のメニューから編集をクリック。
「G Suite ドメイン全体の委任を有効にする」のチェックを入れて保存する。認証情報画面をリロードするとOAuth2.0 クライアントIDに「hogehoge のクライアント」が作成されているので右側の編集ボタンをクリック。
クライアント詳細ページのクライアントIDとサービスアカウントのメールアドレスを控えておく。G Suite管理コンソール（ https://admin.google.com/ ）にログイン。
セキュリティ→APIリファレンスを開き「API アクセスを有効にする」にチェックを入れる。
同じくセキュリティ→詳細設定→「API クライアント アクセスを管理する」をクリック。クライアント名に先ほど控えたクライアントID、1つ以上のAPIの範囲にスコープを入力して承認。Calendar APIのスコープは下記のページの2つ。
https://developers.google.com/identity/protocols/googlescopes#calendarv3ここでは"https://www.googleapis.com/auth/calendar" を入力。
ここのスコープは実際に書くプログラムと合わせる必要がある。C#コンソールアプリで作成。example.comドメインの場合。コードの説明はコメントに記載。実行するとpiyo@example.com部分のアカウントのカレンダーに予定が作成され、作成者はmoge@example.com部分のアカウントになっているはずです。
カレンダーIDを指定すればドメイン内のカレンダーリソースにもアクセスできる。この部分は要検証 ↩


