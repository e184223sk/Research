More than 1 year has passed since last update.会社のノートPCが変わったんですが、キーボードが微妙に使いづらいので、東京出張の時にヨドバシカメラでELECOM TK-SLP01を購入。
(参考までにAmazonのリンク。気になる方はレビュー読むといいかも)
しかし、ファンクションキーを押すと、F1やF2じゃなくて、ボリューム調整や輝度調整などが割り当てられていて、Fn+ファンクションキーでF1やF2など、通常のファンクションキーの動きになる。
全角で入力して、F7を押してカタカナにしたいのにボリュームを小さくする動作をしちゃうんですね。
で、Fn+F7とかになれると、ほかのPCを触ったときに、Fn+F7と押して、ボリューム調整したり・・・とストレス溜まっちゃうことになります。そういえば、グローバルフックでなんとかできるよなぁ・・・ということで、ちょこちょこっとツールを作ったのでどんな感じで実装したのかを紹介します。。余談ですが、昔、グローバルフックでメッセージをフックして、秀丸をタブ化する「ひでたぶ」なんてものを作ったこともあります。
数か月後に秀丸がタブ化しちゃいましたけどｗ
(ちなみに、今でもVectorでも公開してますが、需要はもうないですよね)
秀丸のメッセージを調べて、ユーザーメッセージの連続でそれはそれですごく楽しかったｗひでたぶの時はたしかDelphiで作ったんですが、最近はDelphiなんて使ってないので、C#で作りました。
といっても、もう10年以上前にやったことだし、メモにもちゃんと残してないので、ググって以下のサイトを参考にしました。
気まま研究所ブログ C# - グローバルキーフックでキーの捕捉と入力を行う
これの応用で、お仕事で開発していたWindowsのアプリをEclipseの子ウィンドウにしてタブの中に表示したりするプロトタイプを作ったりしました。1
あと、Bluethoothで接続している機器を確認するために32feetを使っています。
こちらを参考に実装しました。C#でWindows APIの呼び出し方とか知ってる前提で書いています。
まぁ、この辺もググればいろいろと出てくるので、わからないところはググりながら読んでください。会社のVVisual StudioがVS2010なので、書き方がちょっと古いかもしれませんが、目をつむってくださいｗとりあえず、参考にしたサイトをもとに以下の抽象クラスを実装長いｗ
このクラスは、HookProcedureを実装してらうためのクラス。
また何かの時に再利用しやすいようにするつもりでこんな実装。
フックの開始と終了のメソッドを用意したのは、タスクトレイに常駐させといて、終了させたり、一時的に停止させたりできるようにしたいなと思って外部から呼び出せるようにしています。で、このクラスを継承したクラスのソースもうちょっと考えれば、短くきれいにできそうな気もしますが、それは今後、時間のある時にやるとして。
何やってるかというと、キーのイベントは
- キーダウン(WM_KEYDOWN)
- キーアップ(WM_KEYUP)
があります。
WM_KEYDOWNで置き換えたいキーが押されたら、別のキーイベントを発生させ、置き換え元のイベントはキャンセルさせます。
ポイントとして、
- F9 91(VK_LWIN)→9(VK_TAB)
- F10 がスクリーンショット
という罠がありました。
F9に関してはWK_LWINが来た後に、VK_TABが来たら疑似キーを送信するようにしました。
F10の場合、PrtScのみ、ALT+PrtScというケースもあります。
なので、VK_PRINTSCREENの時のみVK_F10におきかえるようにし、ALT,Shift,Ctrlを押しながらPrtScキーが推されてる場合は、通常のキーの処理を行うようにしました。
書いてて思ったけど、WM_KEYUPの処理、もしかして、いらない？
また今度検証して、アップデートします。あと、以下の場所でBTUtilのIsCpnnectedメソッドを呼び出してます。ここで、"ELECOM Bluetooth Keyboard"という名前のデバイスが接続されていない場合は、フックしたメッセージを処理せずに次に回すために、スーパークラスのHookProcedureメソッドを呼び出すようにしています。
で、このBTUtilクラスで32feetsを使っています。BluetoothClient.DiscoverDevicesメソッドが思いのほか時間がかかったので、1秒間隔でチェックするようにしています。
で、その結果を変数に保持し、IsConnectedメソッドでチェックしその結果を返却するようにしています。
非同期でチェックしないと、キーフックのところでメッセージがうまく処理されなくて、残念な結果になります。コピペして改造しているので結構簡単にできました。
多分、ちょっと変えれば似たようなキーボードも対応できると思います。あと、グローバルフックは、変な実装すると、面倒なことになったりするので、実装には注意が必要になります。それにしても、昔やった経験があったので、ググれば何とかなるなぁと思った。
経験って大事だよね！作ったツール、需要があればGitHubで公開するけど、あるかな？気が向いたら公開するけど。Eclipseのプラグインで起動したWindowsアプリのウィンドウハンドルを取得して、親ウィンドウをEclipseの中に作ったタブにして、グローバルフック使って、メッセージをフックして、不都合のあるメッセージを受け取って、処理を改善したり・・・とおかしなことをしてました ↩


