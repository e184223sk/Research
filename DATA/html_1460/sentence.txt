More than 1 year has passed since last update.SerilogとFody.Anotarを使用して、ゴテゴテにした全部盛りのログを取ります。最終的にはと書くと、以下のように出力されます。中身は記録時刻、ログレベル、スレッドID、スレッド名、プロセスID、プロセス名、メッセージ本文、呼び出し元名前空間＋クラス名、呼び出し元メソッドシグネチャ、行番号、アセンブリ名、アセンブリバージョン、マシン名、ユーザー名、使用メモリ量、(あれば例外)、と盛るぜぇ～超盛るぜぇ～になっています。さらに、メッセージ本文と例外は構造化ログの機能があるため、単純な文字列以上の表現ができます。まず、VisualStuidoのコンソールアプリケーションテンプレートを選んで作成します。
記事では.NET Coreを使用しますが、.NET Frameworkでも問題ありません。これを変更していきます。まずは最小限のSerilogを使ったログからです。
nugetで"Serilog"と検索すると、似たロゴのパッケージがズラリと並びます。腰が引けるきもしますが、1つ1つのパッケージはそれほど重くありません。
まず、ログの出力先に合わせたパッケージを指定します。そして、先ほどのコンソールアプリケーションを変更します。SetupLoggerConfig()でロガーのセットアップを行っています。
ここではC#を用いますが、appsettings.jsonやApp.config(XML)ファイルで設定することもできます。各項目の解説です。出力はこのようになります。
まだシンプルですね。ここからログ内容にいろいろ盛るぜぇ～超盛るぜぇ～。出力内容を盛るためのパッケージを選択します。構造化ログ用のパッケージも選択しますロガーのセットアップ部分に、いろいろ追加していきます。各項目の解説です。対応するものがoutputTemplateにも追加されています。ログ書き込み部分は変わらないです。
この段階での出力が以下です。一部抜けがありますが、かなり盛れています。さらに、メソッド名やクラス名を取得するために、Serilog連携用のFodyパッケージを使用します。
Fodyは中間言語（IL）に対してコンパイル時に加工を行うパッケージです。ログ内容を盛るためだけに使うのは大げさな気もしますが、超盛るためだからショウガナイ。プロジェクトの直下に
FodyWeavers.xmlファイルを追加して編集します。Log書き込み部分をLog.~からLogTo.~に変更します。ログセットアップ部分は変更無いです。
そして最終結果が以下です。先ほど抜けていたクラス名などがFody.Anotarによって埋められました。12文字のメッセージが215文字にまで膨らみました。
めでたしめでたしログ出力は全部で6段階あります。重要度が低い順に出力すると以下のようになります。これをコンソールで出力すると少し色付けがされています。出力ウインドウに表示する場合VSColorOutputを使用すると見やすくなります。メモリ使用量のわかり易い例と例外出力です。
以下のように、倍々で配列の長さを増やしていくと、そのうちOutOfMemoryExceptionが発生します。出力結果の一部です。
行の最後の ~Bがメモリ使用量です。
例外は例外種類・Message・StackTraceが表示されています。メッセージ内にオブジェクトをJSON型式にシリアライズして埋め込みできます。こんな変哲もないPersonクラスがあったとして、ログ出力します。
ポイントは@をつけること、メッセージ文字列の最初に$をつけないことです。出力結果は以下のようになります。
person変数の中身がJSON型式で表示されています。この記事ではあまり構造化ログについて触れていませんが、本来Serilogはそのためのライブラリです。
ログのセットアップ部分で以下のようにComact-JSON型式のファイル出力を追加します。上記、person変数の出力は以下のようになっています。
通常のJSON型式よりは一部が短くなっています。構造化ログの詳細については参考URLを参照ください。構造化ログを簡単に見たい場合は、Compact Log Format Viewerが便利です。
作成したログファイル(JSON)を読込するだけで、このように表示されます。Serilogは多様なプラットフォームに対応したパッケージです。
試していませんが、ASP.NETでもできますし、最近話題のAzure App SeriviceでもAWSでも使えるようです。
webの場合RequestIdなども取得できるようです。以下に置いておきます。
https://github.com/soi013/SerilogConsoleTesthttps://github.com/serilog/serilog/wiki
https://github.com/Fody/Anotarhttps://www.buildinsider.net/column/kawai-yoshifumi/003
https://www.youtube.com/watch?v=_iryZxv8RxwVisualStudio2019
.NET Core 3.1
C#8


