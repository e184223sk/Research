

        /// &lt;summary&gt;
        ///     DataGridViewセルフォーマット時
        /// &lt;/summary&gt;
        /// &lt;param name="sender"&gt;&lt;/param&gt;
        /// &lt;param name="e"&gt;&lt;/param&gt;
        private void dgvList_CellFormatting(object sender, DataGridViewCellFormattingEventArgs e)
        {
            DataGridView dgv = sender as DataGridView;
            if (dgv == null) return;

            if (e.RowIndex &lt; 0 || e.ColumnIndex &lt; 0 || e.RowIndex &gt;= dgv.Rows.Count || e.ColumnIndex &gt;= dgv.Columns.Count) return;

            DataGridViewCell cell = dgv[e.ColumnIndex, e.RowIndex];
            if (cell == null) return;

            DataGridViewRow row = cell.OwningRow;
            if (row == null) return;

            DataGridViewColumn col = cell.OwningColumn;
            if (col == null) return;

            DgvRowSample1 rowBound = row.DataBoundItem as DgvRowSample1;
            if (rowBound == null) return;

            if (e.ColumnIndex == this.colName.Index)
            {
                //名前
                if (rowBound.Name == null || rowBound.Name.Trim().Length == 0)
                {
                    //未入力
                    cell.Style.BackColor = Color.LightPink;
                }
                else
                {
                    //入力有
                    cell.Style.BackColor = Color.White;
                }
            }
            else if (e.ColumnIndex == this.colKyoka1.Index)
            {
                //国語の点数
                if (rowBound.Kyoka1Point != null &amp;&amp; rowBound.Kyoka1Point.Value &lt; 30)
                {
                    //赤点
                    cell.Style.BackColor = Color.LightPink;
                }
                else
                {
                    //合格点
                    cell.Style.BackColor = Color.White;
                }
            }
            else if (e.ColumnIndex == this.colKyoka2.Index)
            {
                //数学の点数
                if (rowBound.Kyoka2Point != null &amp;&amp; rowBound.Kyoka2Point.Value &lt; 30)
                {
                    //赤点
                    cell.Style.BackColor = Color.LightPink;
                }
                else
                {
                    //合格点
                    cell.Style.BackColor = Color.White;
                }
            }
            else if (e.ColumnIndex == this.colKyoka3.Index)
            {
                //理科の点数
                if (rowBound.Kyoka3Point != null &amp;&amp; rowBound.Kyoka3Point.Value &lt; 30)
                {
                    //赤点
                    cell.Style.BackColor = Color.LightPink;
                }
                else
                {
                    //合格点
                    cell.Style.BackColor = Color.White;
                }
            }
            else if (e.ColumnIndex == this.colKyoka4.Index)
            {
                //社会の点数
                if (rowBound.Kyoka4Point != null &amp;&amp; rowBound.Kyoka4Point.Value &lt; 30)
                {
                    //赤点
                    cell.Style.BackColor = Color.LightPink;
                }
                else
                {
                    //合格点
                    cell.Style.BackColor = Color.White;
                }
            }
            else if (e.ColumnIndex == this.colKyoka5.Index)
            {
                //英語の点数
                if (rowBound.Kyoka5Point != null &amp;&amp; rowBound.Kyoka5Point.Value &lt; 30)
                {
                    //赤点
                    cell.Style.BackColor = Color.LightPink;
                }
                else
                {
                    //合格点
                    cell.Style.BackColor = Color.White;
                }
            }
        }

