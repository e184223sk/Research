using UnityEngine;

/// &lt;summary&gt;
/// 角速度推定コンポーネント
/// &lt;/summary&gt;
public class AngularVelocityEstimator : MonoBehaviour
{
    /// &lt;summary&gt;
    /// 推定角速度 [rad/s]
    /// &lt;/summary&gt;
    [SerializeField]
    private Vector3 _estimatedAngularVelocity = Vector3.zero;

    /// &lt;summary&gt;
    /// 回転前回値
    /// &lt;/summary&gt;
    private Quaternion _rotationPrevious = Quaternion.identity;

    public Vector3 EstimatedAngularVelocity
    {
        get { return _estimatedAngularVelocity; }
    }

    private void FixedUpdate()
    {
        // 回転変化量を計算
        Quaternion deltaRotation = Quaternion.Inverse(_rotationPrevious) * transform.rotation;

        // 角度と回転軸に変換
        deltaRotation.ToAngleAxis(out float angle, out Vector3 axis);

        // 角速度 [rad/s] を算出
        float angularSpeed = (angle * Mathf.Deg2Rad) / Time.deltaTime;
        _estimatedAngularVelocity = axis * angularSpeed;

        // 今回値を覚えておく
        _rotationPrevious = transform.rotation;
    }
}

