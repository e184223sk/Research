More than 1 year has passed since last update.C#の統合言語型クエリ
コレクションの要素を処理するメソッドがある。Linqを使用するとfor文やforeach文、if文を使用しなくても
処理を書くことが出来る場合があります。
そのため、全体のライン数とネストを減らして記載することが出来ます。
ライン数やネストが減ると可読性向上にも繋がります。今回はそれぞれの動作を確認しつつ、Listに格納したデータを処理してみます。
以下に記載しているサンプルソースは以下のリストを宣言しており、以下の宣言はサンプルソースから省いています。また、foreachはListクラスのForEachメソッドを使用して、以下のように書き換えています。WhereはList内から条件に一致したデータを抽出します。Linqを使わない場合Linqを使った場合出力結果はどちらも以下のようになります。
SelectはList内の要素を計算した結果を出力できます。
リストの値にLinqを使わない場合Linqを使った場合出力結果はどちらも以下のようになります。
Selectでは以下のようにして、インデックスを抜き出すこともできます。foreachとwhichを組み合わせるとforeachの中でif文を記載しなくても、同様の処理が出来たりします。
リストの値を出力する処理です。組み合わせると以下のような処理もできたりします。
0番目から偶数位置に格納されているリストの値を出力する処理です。
ここまですると逆に複雑な気もします。Linqのメソッドを紹介してみました。
Linqはぱっと見でわかりにくい場合もあるので、なるべくコメントは書いた方がよさそうですね
他にもLinqの便利なメソッドはあるので、また時間があるときに書きます。


