More than 1 year has passed since last update.結城浩「Javaで学ぶデザインパターン入門」をC#で勉強既存のプログラムを必要な形に変換する際に使用するパターン。
Adapterパターンには以下の2種類がある。
1. クラスによるAdapterパターン(継承を使ったもの)
2. インスタンスによるAdapterパターン(委譲を使ったもの)・プログラムで重要な点はMainクラスで使用するのはあくまでPrintクラス(必要なもの)だということ。
PrintBannerクラス(アダプター)がどういった実装かはMainクラスは知らないため、PrintBannerクラスに変更を加えても、Mainクラスは変更しないでよい。Javaの委譲=「あるメソッドの実際の処理をほかのインスタンスのメソッドに任せること」
十分にテストされ、バグが少なく、実際に使用された実績のあるプログラム → 使用したい
Adapterパターンを使用することで、必要とするメソッド群を素早く作ることが可能。
またバグが出ても、既存クラスにバグがないことが分かっているっため、アダプターのクラスを重点的に調査すればよく、チェックが楽。
propertieクラスがC#にはないため(似たようなクラスはあるようだが、手元の環境になかった)
propertieクラスを使う場所はそれっぽい動きを再現


