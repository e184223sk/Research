
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DesignPatternLearn.AdapterLearn
{
    public class AdapterLearn
    {
        static void Main(string[] args)
        {
            Print p = new PrintBanner("Hello");
            p.PrintWeak();
            p.PrintStrong();
            Console.Read();
        }
    }

    /// &lt;summary&gt;
    /// 既存のプログラム
    /// &lt;/summary&gt;
    public class Banner
    {
        private string str;
        public Banner(string str)
        {
            this.str = str;
        }

        public void ShowWithParen()
        {
            Console.WriteLine("(" + str + ")");
        }

        public void ShowWithAster()
        {
            Console.WriteLine("*" + str + "*");
        }
    }

    /// &lt;summary&gt;
    /// 必要なもの
    /// インターフェースではなく、クラス
    /// &lt;/summary&gt;
    public abstract class Print
    {
        public abstract void PrintWeak();
        public abstract void PrintStrong();
    }

    /// &lt;summary&gt;
    /// アダプター
    /// (((( ここが重要 ))))
    /// フィールドのBannerクラスに処理を委譲している。
    /// &lt;/summary&gt;
    public class PrintBanner : Print
    {
        public Banner banner;
        public PrintBanner(string str)
        {
            banner = new Banner(str);
        }

        public override void PrintWeak()
        {
            banner.ShowWithParen();
        }

        public override void PrintStrong()
        {
            banner.ShowWithAster();
        }
    }
}



