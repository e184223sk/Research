More than 1 year has passed since last update.ReactiveExtensionsには、等間隔で値を発行するObservable.Intervalファクトリメソッドはあるのですが、任意の間隔で値を発行するファクトリメソッドがありません。
いや、厳密にはあるのですが、使い方が複雑なのでここで紹介します。Observable.Generateファクトリメソッドの引数に、値の発行間隔を定義できるFunc&lt;TSource, TimeSpan&gt;型のtimeSelector引数があるので、任意の時間間隔で値を発行するIObservableを作り出すことができます。まずは、Observable.Generateメソッドの定義と基本的な使い方を説明します。一番簡単な定義は次のとおりです。例えば、0〜4の値を発行するには次のようにします。まるでfor文のような引数の指定方法ですね。本題はここからです。
Observable.Generateメソッドには、値の発行間隔を指定できるオーバーロードがあります。このtimeSelectorに発行間隔を定義したメソッドを指定できます。どのように使うかですが、例えば発行する順番を定義したTimeSpanのListを用意して、timeSelectorで値を順番に読んでいくように指定することで、Listに定義した間隔で値が発行されます。1,2,3,4,5秒間隔で値が発行されています。Observable.Generateファクトリメソッドは引数が多くて面倒なので、簡単に任意の時間間隔で値を発行できるファクトリメソッドを作ります。待機したい時間の順番を定義したTimeSpan型リストを渡すだけで使えます。
ほんとは引数はIEnumerable&lt;TimeSpan&gt;にしたかったのですが、内部でCountとインデクサを使っていたのでやめました。実際に使ってみるとこんな感じです。これだと値を5個発行して終わりですが、無限に発行したければRepeat()オペレータを挟めばループしてくれます。Observable.FromAsyncファクトリメソッドはTaskを引数にとってTaskが終了したらその戻り値を流してくれます。
そのため、Task.Delay等で時間を調整してやれば任意の時間間隔で値を発行するIObservableを作り出すことが可能です。例えば、以下のような感じですね。これだと１秒待ってUnitを発行します。
Unitを発行してOnCompletedしてしまうので、Repeatで無限に発行するようにすれば、ひとまず１秒間隔で値を発行するIObservableができます。あとはどのようにTask.Delayの引数を変えるかですが、外部変数とかを使うしかないんですかね？
他になにかいい方法があれば教えて下さい。この方法だと、あまりきれいではありませんが、特定の条件下で発行する間隔を変えるなんてことも可能です。すごく汚いですし副作用も多そうなので積極的に使うべきではありませんが、どうしてもという場合は仮で使えそうです。こんな感じですかね…。
最後雑な感じで終わってしまいましたがFromAsyncを使った方法は自分でも疑問なのでアドバイスなどあればコメントくださると嬉しいです。


