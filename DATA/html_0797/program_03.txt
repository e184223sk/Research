

class MainClass
{
    public static void Main(string[] args)
    {
        //発行間隔を定義
        List&lt;TimeSpan&gt; intervals = new List&lt;TimeSpan&gt;()
        {
            TimeSpan.FromSeconds(1),
            TimeSpan.FromSeconds(2),
            TimeSpan.FromSeconds(3),
            TimeSpan.FromSeconds(4),
            TimeSpan.FromSeconds(5)
        };

        Console.WriteLine($"{DateTime.Now} 値の発行を開始します");
        Observable.Generate(initialState: 0,
                            condition: n =&gt; n &lt; intervals.Count,
                            iterate: n =&gt; ++n,
                            resultSelector: n =&gt; n,
                            timeSelector: n =&gt; intervals[n])
                  .Timestamp()
                  .Subscribe(val =&gt; Console.WriteLine($"{val.Timestamp.ToLocalTime().DateTime} 発行された値：{val.Value}"),
                              () =&gt; Console.WriteLine("値の発行が完了しました"));

        Console.Read();
    }
}

