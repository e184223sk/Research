More than 3 years have passed since last update.　本記事ではC#学習を始めたばかりの方を対象としています。初心者が理解しにくい部分などは理屈抜きで実現する方法を書いていきます。まずは基本的な動きから理解していきましょう。C#のイベント機能は、あるクラスで発生した出来事を，あらかじめ登録された一群のメソッドに対して、1回の呼び出しによって、ですべて伝える機能です。イメージ画像
発生側が発火（イベントの実行）を行うことにより、登録していたイベント受け取り側が実行されます。イベントが発生するようにしてみる。このときイベントが発生するだけで何もデータを返さないものとするイベントを受け取る側では次のように宣言する。ここではbutton_ClickイベントによりSleepClassクラスのStartメソッドを呼び出し、イベント「Time」が発生するとSleepClass_Timeが呼び出され実行される。ここでEventHandlerやEventArgsとは一体なんだろうという疑問だと思いますが、この記事では開設は省きますので、別途調べてください。
イベントハンドラを追加している部分で別のメソッドを追加すれば、むろんそちらも登録されます。これでほとんどの場合用が済んでしまうような気もするが、SleepClassを少し改良してみます。何が変わったかはわかるとコードを見ていただければわかると思います。
protected virtual void OnTime(EventArgs e)
が増えてますね。このSleepClassを継承して新たなクラスを作ることを考えればこうするべきです。
今回は特にデータを返さないため簡単な処理に終わっています。では次にデータを返すイベントを作成してみましょう。次はデータを返すイベントを作成する方法を考えましょう。返されるデータは上の例の「EventArgs」から継承されるクラスになるため、結局その部分だけを書き換えることになります。返すデータを入れるためのクラス、今回でいうところのTimeEventArgsが必要となってくる。
勿論イベントの引数として追加してやっても実行はできるが、コードの修正や使いまわしを考えるとクラスを１つ作り、EventArgsを渡したほうが効率的だと思います。さらにsender(呼び出し元のクラス)も別段渡す必要はありませんが、MSの考え的にはこうして書いてほしいらしいので、このように書きましょう。　この記事を読んで少しでもイベントを理解できたら幸いです。
また、詳しく知りたい方は言語に内蔵されたイベント機能こちらを一読することをお勧めします。


