More than 1 year has passed since last update.いつも改造しているTwitter APIを用いたアプリで，自動起動の機能を追加した際に，タスクスケジューラが便利だったものの，設定方法にてこづりました．今回はその話題．
（前回はデスクいっぱいに伸ばすウィンドウについて）Windowsに標準で入っている自動でソフトなどを起動する機能です．Windows 10なら「スタート」→「Windows管理ツール」→「タスク スケジューラ」の順でたどれば起動できるはずです．特定の時刻になったら起動，一定時間間隔で自動的に起動，あるイベントが発生したら起動など，細かく設定できます．なので，おうちに常に稼働しているデスクトップさえあれば，この設定をすることでTwitterのbotなども簡単に作ることができます（ツイートを取得して，返信する処理を一定時間間隔で起動すればよいので）．ちなみに，GUIはこんな感じです．
Twitter APIのソフトを作ったは良いものの，ショートカットをダブルクリックして起動するのが面倒くさいので，その起動を自動化したいと思いました．Twitter APIによるデータの取得があるので，ネットにつながったら自動的に起動させるようにしたかったです．もちろん，上のGUIでもタスクスケジューラにタスクを登録，削除することができますが，コマンドプロンプトからもタスクの登録や削除などを行うことができます．（C#にはタスクスケジューラ用のクラスも用意されているそうですが，登録後にその削除をプログラムでできるか不明だったので，今回はコマンドプロンプトをたたく方法を採用しました．）そのコマンドがschtasksコマンドです．最初の引数で作成か，削除かなどの指定が可能です．以下はschtasks /?を実行した際に出てくる最初の引数説明の要約です．ぶっちゃけ，今回使ったのは\createと\deleteと\queryくらいでした．各引数についてのさらなる詳細については，schtasks /create /?のようにヘルプを出せば見ることができます．（それを扱った記事も存在します．）最初はGUIのほうで設定しました．このサイトにもありますが，
トリガーをイベント時にして，細かい設定についてはにするようです．コマンドのヘルプを見ると，イベントトリガーを設定するにはschtasks /create /tn "タスク名" /tr "実行ファイルパス名" /sc onevent /ec Microsoft-Windows-NetworkProfile/Operational /mo "???"にすればよいようですが，修飾子（"???"の部分）の指定が分かりません．（本来はフィルタという形でxml形式で指定するそうです．）そこで，GUIで登録したタスクの情報を使います．schtasks /query /xml /tn "タスク名"でxmlの状態で出力できるので，これをリダイレクトでファイルに書き込んで確認しましょう．今回は*[System[Provider[@Name='Microsoft-Windows-NetworkProfile'] and EventID=10000]]を/moの後ろに入れればよいです．（他のイベントの場合も*[System...の部分を確認しましょう．）（参考）コマンドプロンプトでのコマンドが分かれば，System.Diagnostics.Processクラスを用いて実行できます．こうして組んだプログラムはこちらになります（参考）．これをGUIのイベントハンドラあたりに書けば，自動起動の登録ができるようになります．schtasksの/Fオプションで強制実行させることができます．（/createの時はいるのか不明ですが，タスクの自動起動を解除する場合で，/deleteの時は，/Fがないと削除確認の状態になり，プログラムが止まってしまうのでつける必要があります．）今回，タスクスケジューラを用いて，ネットワーク接続時に起動するプログラムを作成しましたが，様々なイベントにタスクスケジューラが対応できるので，いろいろな使い方ができるかと思います．


