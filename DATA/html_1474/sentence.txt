GoFのデザインパターンの1つであるProxyパターンを体験してみました。Proxyパターンとは、対象クラスの処理をそのクラス以外の代理人クラスが行うように処理にするデザインパターンです。
どうしても対象のクラスに処理を任せないといけないときのみ対象のクラスに処理を任せます。登場人物は4つありますが、以下の記事の説明がとても分かりやすかったので引用させていただきます。（上記の記事より引用）以下は朝起きるのに時間がかかってしまう処理（重い処理と仮定します）をProxyパターンを用いて作成しているサンプルコードです。
各クラスに上記記事で引用させていただいた4つの登場人物をコメントで記載しています。なるほど、今回のサンプルコードですと朝を知らせる内容はProxyクラスから生成でき、朝起きる内容（重い処理）を出力させるときに対象のクラスを生成することが出来ました。
これをProxyパターンを用いずに実装すると朝を知らせる内容を出力したいときにまとめてインスタンス化する必要があるわけですね。
また一つ勉強になりました。しっかり身に着けていきたいと思います。


