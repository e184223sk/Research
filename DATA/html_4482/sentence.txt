Unity Containerの解説は英語ばかりで、日本語の解説が少ないため投稿した。1.ゲームエンジンのUnityではありません。念のため。
2.本記事では使い方にフォーカスするため、IoC(制御の反転)、DIP(依存性逆転の原則)、依存性注入(DI)、IoCコンテナといった用語の説明はあまりしません。下記がわかりやすいので、そちらを参照してください。
DI (依存性注入) って何のためにするのかわからない人向けに頑張って説明してみる.NET Framework 4.6.1
Unity Container 5.11.10「ソリューションのNugetパッケージの管理」→「Unity」で検索
IFを定義し、DriverはIVehicleに依存し、Car/BikeはIVehicleに依存させる。
Dependency Injectionパターンのコンストラクタインジェクションを使う。
コンストラクタで外部から具象クラスインスタンスを渡して、振る舞いを変える。Dependency Injectionパターンのコンストラクタインジェクションを使う上で、下記作業が必要になる。
これをUnity Containerにやってもらう。
・抽象クラスと具象クラスの対応付け
・具象クラスに応じたインスタンスを提供する。実行結果GitにIoC Containerのパフォーマンスの一覧が公開されている。
IoC PerformanceUnty Container Documentation
Tutorials Teacher
StackOverFlow


