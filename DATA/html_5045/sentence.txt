More than 3 years have passed since last update.例えば、一つの画面の中でどこかボタンを押すと、バックグラウンドで長い処理が走っていて、その間一定間隔で状態を取得、その情報だけを画面上で更新するというような状況を考えます。
今回は、状態の保存と取得はローカルファイルに書き込むことにしています (C:\test.txt)非同期している部分は全体で3か所あります。
1) 画面上でボタンを押したら、そのformが非同期で通信開始(Ajax)
2) かつ、状態を一定間隔で取得しに行く処理も非同期で開始(別のAjax)
3) 1で呼ばれたActionResultから非同期の処理がコントローラ側で開始 (delegate)正直、Ajaxの部分について根本からは理解しておらず、参考サイトから拾ったものをなんとなく動かしながら使っているだけなので、変なとこあればツッコミをいただけると助かります。環境:
VisualStudio2017 community (win10)参考: 
http://blog.ch3cooh.jp/entry/20140707/1404731608
https://devadjust.exblog.jp/17358343/まずは通常通りMVCのプロジェクト(記事中では名前をMVCAsyncSampleとしました) を作って、  Nugetパッケージの管理→Microsoft.jQuery.Unobtrusive.Ajax をインストール→完了したらリビルド  してください。これやらないと動きません。次にHomeコントローラを作り、以下のように実装します。次に、おそらく既にできあがっているであろうIndex.cshtmlを以下の通りにします。そして、状態を取得する画面として、ResultViewという名前でViewを追加します。
部分ビューなので内容少な目ですが、これでOK。delegateって説明だけ読んでてもよくわかんなかったのですが、動かしてみてようやく雰囲気がつかめました。


