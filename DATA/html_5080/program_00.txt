using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System.Data;
using System.Data.SqlClient;

namespace ConsoleApp01
{
    /// &lt;summary&gt;
    /// データベース操作を管理するクラス
    /// &lt;/summary&gt;
    class DBManager
    {
        private SqlConnection sqlConnection;
        private SqlTransaction sqlTransaction;

        /// &lt;summary&gt;
        /// コンストラクタ（DB接続）
        /// &lt;para name="dbServer"&gt;DBサーバ名&lt;/para&gt;
        /// &lt;para name="dbName"&gt;DB名&lt;/para&gt;
        /// &lt;para name="dbUser"&gt;ユーザ名&lt;/para&gt;
        /// &lt;para name="dbPass"&gt;パスワード&lt;/para&gt;
        /// &lt;/summary&gt;
        public DBManager(string dbServer, string dbName, string dbUser, string dbPass)
        {
            // 接続文字列を生成
            string connectString =
            "Data Source = " + dbServer
            + ";Initial Catalog = " + dbName
            + ";User ID = " + dbUser
            + ";Password = " + dbPass
            + ";MultipleActiveResultSets=True";

            // SqlConnection の新しいインスタンスを生成 (接続文字列を指定)
            this.sqlConnection = new SqlConnection(connectString);

            // データベース接続を開く
            this.sqlConnection.Open();
        }

        /// &lt;summary&gt;
        /// DB切断
        /// &lt;/summary&gt;
        public void Close()
        {
            this.sqlConnection.Close();
            this.sqlConnection.Dispose();
        }

        /// &lt;summary&gt;
        /// トランザクション開始
        /// &lt;/summary&gt;
        public void BeginTran()
        {
            this.sqlTransaction = this.sqlConnection.BeginTransaction();
        }

        /// &lt;summary&gt;
        /// トランザクション　コミット
        /// &lt;/summary&gt;
        public void CommitTran()
        {
            if (this.sqlTransaction.Connection != null)
            {
                this.sqlTransaction.Commit();
                this.sqlTransaction.Dispose();
            }
        }

        /// &lt;summary&gt;
        /// トランザクション　ロールバック
        /// &lt;/summary&gt;
        public void RollBack()
        {
            if (this.sqlTransaction.Connection != null)
            {
                this.sqlTransaction.Rollback();
                this.sqlTransaction.Dispose();
            }
        }

        /// &lt;summary&gt;
        /// クエリー実行(OUTPUT項目あり)
        /// &lt;para name="query"&gt;SQL文&lt;/para&gt;
        /// &lt;para name="paramDict"&gt;SQLパラメータ&lt;/para&gt;
        /// &lt;/summary&gt;
        public SqlDataReader ExecuteQuery(string query, Dictionary&lt;string, Object&gt; paramDict)
        {
            SqlCommand sqlCom = new SqlCommand();

            //クエリー送信先、トランザクションの指定
            sqlCom.Connection = this.sqlConnection;
            sqlCom.Transaction = this.sqlTransaction;

            sqlCom.CommandText = query;
            foreach (KeyValuePair&lt;string, Object&gt; item in paramDict)
            {
                sqlCom.Parameters.Add(new SqlParameter(item.Key, item.Value));
            }

            // SQLを実行
            SqlDataReader reader = sqlCom.ExecuteReader();

            return reader;
        }

        /// &lt;summary&gt;
        /// クエリー実行(OUTPUT項目あり)
        /// &lt;para name="query"&gt;SQL文&lt;/para&gt;
        /// &lt;/summary&gt;
        public SqlDataReader ExecuteQuery(string query)
        {
            return this.ExecuteQuery(query, new Dictionary&lt;string, Object&gt;());
        }

        /// &lt;summary&gt;
        /// クエリー実行(OUTPUT項目なし)
        /// &lt;para name="query"&gt;SQL文&lt;/para&gt;
        /// &lt;para name="paramDict"&gt;SQLパラメータ&lt;/para&gt;
        /// &lt;/summary&gt;
        public void ExecuteNonQuery(string query, Dictionary&lt;string, Object&gt; paramDict)
        {
            SqlCommand sqlCom = new SqlCommand();

            //クエリー送信先、トランザクションの指定
            sqlCom.Connection = this.sqlConnection;
            sqlCom.Transaction = this.sqlTransaction;

            sqlCom.CommandText = query;
            foreach(KeyValuePair&lt;string, Object&gt; item in paramDict) {
                sqlCom.Parameters.Add(new SqlParameter(item.Key, item.Value));
            }

            // SQLを実行
            sqlCom.ExecuteNonQuery();
        }
    }
}


