More than 3 years have passed since last update.前回の記事C#でアスペクト指向 の続きで、アスペクトを有効に活用しようという内容です。開発したプログラムをリリースし、運用しているときに例外が発生した場合、通常のアプリケーションでは、ログファイルなりイベントログなりに例外情報を出力すると思います。しかし、その出力した情報から例外を解析するのが困難な場合が存在します。例えば、特定の入力の場合のみ発生する場合です。下記のサンプルコードは入力が「A」の場合、例外が発生します。しかし、ログからはその例外の再現方法がわからないとしましょう。例外を再現させたいけど再現できない。そんな時にアスペクトの登場です。下図の感じですね。（アスペクトについては前回の記事C#でアスペクト指向 を参照ください。）以下のようなアスペクトを実装してみました。
実行後処理の引数の「IMethodReturnMessage」にはExceptionプロパティがあります。このプロパティには発生した例外オブジェクトが設定されます。ですので、このプロパティがNULL以外の場合に対象メソッドの引数等の情報を取得すればよいのです。対象メソッドの情報は何か？それは引数の「IMethodCallMessage」に格納されています。この中には対象のメソッド名から引数、メソッドが定義されているクラス情報まで持っています。「IMethodCallMessage」の内容をファイル出力して起き、その情報をもとにエラーを再現させてやればよいのです。んなわけで下記のコードが「IMethodCallMessage」をSerializeしてファイル出力するものになります。上記でファイル出力した情報をもとに例外が発生した時の処理を再現させます。まず、Serializeしてファイル出力した情報を読み取ります。その後「IMethodCallMessage」オブジェクトに格納されている情報をもとに再現させます。下記が再現実行用のプログラムです。このプログラムをVisual Studioでステップ実行することで、解析できます。こんな感じで例外を再現させ、解析することができます。



