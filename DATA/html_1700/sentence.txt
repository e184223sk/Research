More than 1 year has passed since last update.UTAUプラグインを簡単に作るための「utauPlugin」と
見た目をイイ感じにするための「Material Design In XAML Toolkit」を使って
「例のアレ」を作ります。UTAUプラグイン作りのためプログラミングを始めて早1年3ヶ月。
Twitterに教えてくれる方がたくさんいたりDiscordにプログラミング相談所があったりするおかげで、UTAUプラグインとか関連ツールとか全然関係ないAndroidのアプリとか色々作れるようになって楽しいです。時間が足りない。完全に先人たちのおかげでここまで来れたわけですが、「【UTAU】半音上げプラグイン大会」というのがありまして、これがサンプルコードの宝庫になってます。
その後、我らがデルタ先生がC#でUTAUプラグイン作る用のクラスライブラリ「utauPlugin」というのを作ってくださって、これ無くしてはプラグイン作りとかやってられないぐらい便利なので、
今回はこれを使って半音上げプラグインを作っていこうと思います。ついでなので見た目もイイ感じにします。・半音上げプラグイン
→音程を半音上げるだけのプラグイン
　実用性は特にないけどシンプルなのでサンプルにぴったり・言語はC#、開発環境はVisual Studio Community 2019
→Windows用ソフト作るときのベーシックな環境（たぶん）・WPF
→C#で作れるものは色々あって、操作画面が必要なプラグインは「WPF」で、画面がいらないプラグインは「コンソールアプリ」で作るのがいいと思う・「utauPlugin」とは
→UTAUが出力したデータを読んで、扱いやすく整理し、処理後のデータを本体に返してくれる便利なやつ・「Material Design In XAML Toolkit」とは
→WPFの見た目のパーツたちを「マテリアルデザイン」にしてくれるやつ
マテリアルデザインとはGoogleが推してるUIのデザインの考え方で、立体感やアニメーションがついててかわいい
某Windowsのペラペラなボタンとは段違いである「C#でUTAUプラグイン開発を始める方法」にutauPluginの導入のしかたが書いてあります。
というかコンソールアプリ版半音上げプラグインの作り方がまんま書いてあります。
HelloWorldか？ってぐらいの簡素さでプラグインが書けます。Material Design In XAML Toolkitに関しては、Visual StudioのNuGetで「MaterialDesignThemes」と検索して出てくるやつをインストールしてください。
GitHubにDemoAppがあるので落としとくと便利です。C#の知識的には基本的な代入や四則演算とfor、if、Listぐらいわかれば十分かと。
配列はグループ機能的なやつですがListが駆逐したんで（してない）Listだけ覚えればとりあえず大丈夫です。
配布所ソフトの基本設定みたいなのが書いてあるApp.xaml
&lt;ResourceDictionary Source　～の一行目でLightかDarkか選ぶ
2行目で各パーツのデザインをロード（たぶん）
3行目で基本色を、4行目でサブの色を選ぶOneUpとは緑のキノコのことです見た目を書くMainWindow.xaml
HTML手打ちポチポチマンだったから親しみやすさはんぱねぇWindowStartupLocation="CenterScreen" ResizeMode="CanResizeWithGrip"
ウィンドウを真ん中に出す、ウィンドウサイズを変えられるようにする
だいたいいつもこの設定ですxmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
Material Design In XAML Toolkitが用意したコントロールを使いたいなら書く
（コントロールとは、ボタンとかのパーツのこと）コントロールを入れるためのコントロール
「WPF 個人用メモ.1」が参考になりますDialogHost：
今回は使ってませんがUserControlでポップアップ画面を作ってdialogHostに入れて出せばポップアップします
DrawerHost：
下からドロワーがにょきっと出ます
エラーが出たときにドロワーにエラーメッセージ出す用です
（このデザインだとMessageBox似合わないので・・・）
↓こんなやつ
MainWindow.xamlと対になる処理部分余談ですが、UI（見た目）絡みで調べたいことは「WPF Button」のように、
それ以外で調べたいことは「C# List ソート」のようにググるといいです。無駄に操作画面作ったり見た目をイイ感じにしたりドロワー出したりしたせいでけっこう長くなりましたが、
ust読んで各音符の情報を仕分けするのがutauPlugin.Input();、
必要な情報だけをまとめて何行も出力するのがutauPlugin.Output();だけで済むので
UTAUプラグインとしてはめっっっっちゃ簡素になってると思います。
ﾃﾞﾙﾆｬﾝｻｲｺｰ!ドロワー使わないなら、エラー通知はMessageBox.Show("エラーメッセージ");の1行で済みます。
Material Design In XAML Toolkitを導入しないならApp.xamlはデフォルトのままでok。こんな感じで作ったプラグインたちをうちの調声メモブログで配布してますのでよろしくお願いします。
ハモリ作成とか表情音源ピッカーとかビブラートストッカーとか、
あとUTAU音源をインストーラー型で配布するソフトとかprefix.mapエディタもあるよ。あと本業は調声なんでniconicoのマイリスもよろしくお願いします！


