
// ReusablePromise.csより引用
public void OnCompleted(Action action)
{
    UnsafeOnCompleted(action);
}

public void UnsafeOnCompleted(Action action)
{
    if (continuation == null)
    {
        continuation = action;
        return;
    }
    else
    {
        if (continuation is Action act)
        {
            var q = new MinimumQueue&lt;Action&gt;(4);
            q.Enqueue(act);
            q.Enqueue(action);
            continuation = q;
            return;
        }
        else
        {
            ((MinimumQueue&lt;Action&gt;)continuation).Enqueue(action);
        }
    }
}

