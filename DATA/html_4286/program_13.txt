
// ReusablePromise.csより引用
public virtual bool TrySetResult()
{
    if (status == AwaiterStatus.Pending)
    {
        status = AwaiterStatus.Succeeded;
        TryInvokeContinuation();
        return true;
    }
    return false;
}

void TryInvokeContinuation()
{
    if (continuation == null) return;

    if (continuation is Action act)
    {
        continuation = null;
        act();
    }
    else
    {
        // reuse Queue(don't null clear)
        var q = (MinimumQueue&lt;Action&gt;)continuation;
        var size = q.Count;
        for (int i = 0; i &lt; size; i++)
        {
            q.Dequeue().Invoke();
        }
    }
}

