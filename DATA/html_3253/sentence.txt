More than 1 year has passed since last update.とあるUnityのフレームワークの中で見つけたコードです。なぜCounterに値を代入した際にチェックしないでUpdateで毎フレームチェック1しているのか……謎。
こういうときはプロパティを使ったほうがいいのでは……と思ったのですが、自分もプロパティってあまり使ったことがないなーと思ったので自分が思いつくなりの用法をメモします。
ざっと調べた感じ、プロパティの使い方についての記事は出てきても「どう使うか」を実際に解説した記事は見当たらなかったので。プロパティとはなんぞや、という方は以下の記事を参照。
プロパティ - C# によるプログラミング入門 | ++C++; // 未確認飛行 CIsListeningにtrueかfalseを入れるだけでリスナの登録を管理できます。いろんなタイミングでリスナを登録/解除しているとカオスになるので、これを使うとかなり楽になります。探すときもIsListeningを検索するだけでいいし。enumでStateを定義するのはよくあることだと思います。
以下のように変化させるとこんな感じでログが出ます。ステート遷移の解析に役立ちます。重要なのはNone =&gt; Noneなど、同じステートへの変化でもログを省略しないこと。
うっとうしいですがその方が解析が楽です。ゲームでよくあるHPの管理。
ダメージを受けたり回復されたり。どれだけ食らっても一定の範囲内に収まります。毒の蓄積値が閾値以上になると値をリセットして毒状態になり、閾値を大きくします。めっちゃバグりそう
値のバリデートやログ出し程度に留めておかないと変な穴2にハマって死にそうですね。
あとクラスのメンバ変数をクラスの上に書く基本のスタイルだと、変数の部分にロジックが混ざってめっちゃ読みづらそうです。
最近はIDEがかしこいので変数とメソッドを取り混ぜて書いても3なんとかなりますが、なんとかなるってだけでつらいです。すごくつらい。なんかいい使い方あるよって方はなんか書いてわたしの蒙を啓いてください。おしまい。処理をUpdateのタイミングで行う必要もない... ↩kotlinだとfield知らないとしぬ ↩いやいるんですよそんなことする奴……いるんですよ！　しかも新しく書いたやつから下に書いてるだけで特に並びに関連性があるわけでもなく…… ↩


