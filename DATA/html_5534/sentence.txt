More than 3 years have passed since last update.「C#:逆ポーランド記法を利用した数式の計算(6)」では、逆ポーランド記法を利用して、数式の計算を行うコードを示しましたが、こんどはRoslyn使ってコードをコンパイルし、それを実行することで、数式を計算するクラスを作成してみました。準備として、Microsoft.CodeAnalysis.CSharp をNuGetからインストールします。
.csprojファイルには、以下のような記述が追加されます。ちなみに、.NET Core2.0で動作を確認しています。たぶん、そのまま .NET Framework4.6 とかの環境でも動くと思います。早速、数式を計算するExpressionクラスのコードを示します。簡単にやっていることを書くと、こんな感じ。これで、数式を計算させています。型はobjectにしていますので、必要ならば、呼び出した側で適切な型にキャストする必要があります。boxing発生してしまいますが、特定の型に固定してしまうのもどうなんだろう？　ということで、objectとしました。なお、このコードは、Compiling C# Code Into Memory and Executing It with Roslynを参考にしています。っていうか、ロジックは、ほぼそのまんまです。
これを、数式計算用として再利用しやすいようにクラスとしてきちんとコードにしたのが、このExpressionクラスです。Expression.Calculateメソッドを呼び出すテストコードを書いてみます。と意図通りの結果が出ました。ところで、これを作成している途中、って、実行すると以下のエラーが出てたんですが、いつのまにか出なくなってました。なぜ、このエラーがでたのか、どうしてエラーが消えたのか原因がわかりません。確実にわかっているのは、動的にコンパイルするコードの中（ここでは、_sourceCodeの中）に、Console.WriteLine()呼び出すコードがあると、.NET Coreでは、このエラーが出るということです。でも、Console.WriteLine()削ってもエラーが出ていたような気がするんだよな。
もしかしたら、それは気のせいかもしれません。今考えると、単にちゃんとリビルドされていなかっただけかな、という気もしています。


