More than 1 year has passed since last update.例えばa + bのような式があったとして，+ を演算子(オペレーター)，a や b を被演算子(オペランド)といいます．*や%はちょっと慣れないかもしれませんね．あと，/は整数型同士の演算の場合，小数点以下は切り捨てられるというところも注意です．また，+は文字列の結合のための演算子としても使えます．例えば，string str = "Hello, " + "world!"でstrは"Hello, world!"になります．
今回はint型同士でサンプルコードを書きましたが，double型同士や，int型やdouble型など違う型同士の演算もどうなるかやってみてください．a++，++aはaに1加算します．これをインクリメントと言います．また，a--，--aはaから1減算します．これをデクリメントと言います．インクリメント，デクリメントはそれぞれ，前置きと後置きがあり，これによってインクリメント，デクリメントのタイミングが変わります．たとえば，a++は後置きなので，演算が終わってからインクリメントされます．反対に，++aは前置きなので，インクリメントされてから演算されます．!はbool型のみ，~は整数型のみ，&amp;，|，^はbool型に加えて整数型にも適用できます．
また，&amp;&amp;，||と書いてもbool値のAND，ORと同じ意味ですが，短絡論理演算子としてはたらきます．例えば，false &amp; trueと書くと，falseとtrueどちらのオペランドも評価してfalseを返しますが，false &amp;&amp; trueと書くと，左のオペランドを評価してfalseなら，右のオペランドの評価はせずにfalseを返します．反対に，左のオペランドを評価してtrueだった場合，右のオペランドの評価を返します．45を2進数で表すと101101です．シフト演算子はこれを何ビット分かずらします．45 &lt;&lt; 3は，3ビット分だけ左にシフトするので101101000，つまり360となり，45 &gt;&gt; 2は，2ビット分だけ右にシフトするので1011，つまり11となります．まず=ですが，これは前も紹介した通り，右の被演算子を左の被演算子に代入するというもので，数学などで右辺と左辺が等しいという意味で使われるイコールではありません．
次に，算術演算子に=が付いたものですが，これは左の被演算子に右の被演算子を演算子で演算した結果を左の被演算子に代入するというものです．はい，わけわかりません．a += 5を例に挙げてみましょう．これを簡単な形にするとa = a + 5です．aとa + 5が等しいわけないじゃないか！と思う方もまだいるかもしれませんが，=は代入演算子なので等しいという意味は全くありません．aにa + 5の値を代入しているだけです．aを二度書くのが面倒なのでより簡単に書けるようにした感じですね．ちなみに，算術演算子以外にも&amp;=，|=，^=，&lt;&lt;=，&gt;&gt;=のように!と~を除く論理演算子やシフト演算子にも適用できます．先ほど=は等しいことを示す演算子ではないことを説明しましたが，プログラムの世界で二つの値が等しいか判断するための演算子があります．それが==です．その反対に，二つの値が等しくないかどうかを判断するためには!=が使われます．上の例では3と7は等しくないため，aにはfalse，bにはtrueが代入されます．&lt;，&gt;，&lt;=，&gt;=はそれぞれ数学の&lt;，&gt;，≤，≥と同じ感じです．しかし，これらも値の大小を保証する数学のそれと違って，値の大小が記述した通りであるかをbool値で返すものなので注意してください．
また，プログラムの式の中に書く丸括弧は，数学で使うそれと同じように，丸括弧で囲ったところから計算してくださいという意味です．今回のはあってもなくても変わらないんですが，あった方が分かりやすいと思って入れました．ちなみにあっても無くても変わらないものと言えばスペースですね．厳密には然るべき場所には入れないといけませんし，変なところに入れてしまうとエラーになることもあります．例えば，intnum=3;と書くとintnumなんて変数知りません！と怒られちゃいますし，i n t n u m = 3 ;なんて書いちゃうとパソコンが勝手にシャットダウンしかねません(大嘘)．しかし「キーワードの中にはスペースを入れない」，「キーワード同士はスペースで区切る」の二点を守ればどこにどれだけスペースを入れてもプログラムは動きます．ただし全角スペースだとエラーになるので気をつけてください．次回は条件分岐について説明します．float型の定数PI = 3.14と，int型の変数rを定義し，好きな整数で初期化したrを半径として円の面積，円周の長さを画面に出力してください．解答例

今回はちょっと簡単でしたね．


OperatorSample.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace OperatorSample
{
    class Program
    {
        static void Main(string[] args)
        {
            const float PI = 3.14f;
            int r = 3;

            Console.WriteLine("面積 : " + PI * r * r);
            Console.WriteLine("円周 : " + 2 * PI * r);
        }
    }
}






