前回記事ではASP.NET Coreの開発環境構築・Hello Worldを表示するWebアプリケーションを作成しました。
今回はASP.NET Coreを用いMVCアプリケーションを開発したいと思います。１．Visual Studioを開く
２．[新しいプロジェクトの作成]を選択する

３．[ASP.NET Core Web アプリケーション]を選択する

４．任意のプロジェクト名を入力し、[作成]を選択する

５．認証の項目の[変更]を選択する

６．[個別のユーザーアカウント]・[アプリ内のストアユーザーアカウント]・[OK]を選択する

７．[Web アプリケーション(モデルビューコントローラー)]・[作成]を選択する
１．[Visual Studio]-[ツール]-[NuGetパッケージマネージャ]-[ソリューションのNuGetパッケージの管理]を開く
２．[Microsoft.EntityFrameworkCore.Sqlite]を選択する
３．インストールするプロジェクトを選択する
４．[インストール]を選択する
１．Startup.csの下記箇所を変更する２．DBへの接続情報を管理しているappsettings.jsonの下記箇所を変更する３．[Visual Studio]-[ツール]-[NuGetパッケージマネージャ]-[パッケージマネージャコンソール]を開く
４．下記２つのコマンドを実行する
PM&gt; Add-Migration Initial
PM&gt; Update-Database１．[Controller右クリック]-[追加]-[コントローラ]を選択する

２．[MVCコントローラー・空]・[追加]を選択する

３．[コントローラークラス-空]を選択する
４．名前を[SampleController.cs]とする
５．[追加]を選択する

６．今回はログインせず開けるAuthNotRequiredと、ログイン必須なAuthRequiredの２画面を作成する。そのため、SampleControllerに２つの画面を返すメソッドをそれぞれ定義する。１．画面ファイルを格納するフォルダを作成するため、[Views]フォルダを右クリックし[追加]-[新しいフォルダー]を選択する。今回は仮にSampleフォルダを作成する。
２．[Sample]フォルダを右クリックし[追加]-[ビュー]を選択し、画面ファイルを作成する。
前述の通り２画面作成するためAuthNotRequired.cshtmlとAuthRequired.cshtmlを作成する。
３．ログイン不要な画面のソースは作成する。
コントローラ作成時に変数 ViewData["Message"] にメッセージを格納したが、下記のよう記述する事で画面上に表示できる。４．ログインが必要な画面のソースを作成する。
1行の記述はC#で言うところのusingで、本モデルを読み込む事でログイン情報を扱えるようになる。
そのため５行目の様に @(User.Identity.Name) と短い記述でログイン情報が表示できる。それでは実際に動かしてみましょう。
実行ボタンを押し、ログイン不要な画面 localhost:44380/Sample/AuthNotRequired にアクセスしてみます。
下画像の様にソースに記載したメッセージが表示されれば成功です。

次にログインが必要な画面 localhost:44380/Sample/AuthRequired にアクセスしてみます。ログインしていないため、ログイン画面に飛ばされれば成功です。
[Register as a new user]を選択してアカウントを作成してみましょう。

ご自身のEmail・パスワードを入力しRegisterを選択します。

[Click here to confirm your account]を選択しアドレスの確認処理をします。

最後に作成したアカウントでログインし、再度ログインが必要な画面にlocalhost:44380/Sample/AuthRequired にアクセスしてみます。
ログイン画面に飛ばされず、ソースに記載したメッセージと登録したメールアドレスが表示されれば成功です。



