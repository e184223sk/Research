
using System.Collections.Generic;

namespace SortVisualizerCUI.Framework
{
    /// &lt;summary&gt;
    /// 通知する側の抽象クラス
    /// &lt;/summary&gt;
    public abstract class Observable
    {
        /// &lt;summary&gt;
        ///  通知を受ける側への参照。
        /// &lt;/summary&gt;
        private readonly List&lt;IObserver&gt; observers = new List&lt;IObserver&gt;();

        /// &lt;summary&gt;
        ///  通知を受ける側を追加する。
        /// &lt;/summary&gt;
        /// &lt;param name="observer"&gt;&lt;/param&gt;
        public void AddObserver( IObserver observer ) =&gt; observers.Add( observer );

        /// &lt;summary&gt;
        ///  通知を受ける側を削除する。
        /// &lt;/summary&gt;
        /// &lt;param name="observer"&gt;&lt;/param&gt;
        public void RemoveObserver( IObserver observer ) =&gt; observers.Remove( observer );

        /// &lt;summary&gt;
        ///  通知を受ける側へ自身の状態変更を知らせる。
        /// &lt;/summary&gt;
        protected void NotifyObservers() =&gt; observers.ForEach( observer =&gt; observer?.Update( this ) );
    }
}

