
    &lt;summary&gt;ProgRockBandsTest&lt;/summary&gt;
    [TestClass]
    public class ProgRockBandsTest
    {
        /// &lt;summary&gt;CountTest&lt;/summary&gt;
        [TestMethod]
        public void CountTest()
        {
            ProgRockBands.Count.Is(8);
        }

        /// &lt;summary&gt;Valueses the test.&lt;/summary&gt;
        [TestMethod]
        public void ValuesTest()
        {
            // All
            ProgRockBands.Values.Is(
                ProgRockBands.MoonSafari,
                ProgRockBands.GentleGiant,
                ProgRockBands.Genesis,
                ProgRockBands.CameliasGarden,
                ProgRockBands.IQ,
                ProgRockBands.PFM,
                ProgRockBands.YoninBayashi,
                ProgRockBands.TheFlowerKings);

            // Filter by country
            ProgRockBands.Values.Where(v =&gt; v.Country == Country.Sweden)
                .Is(ProgRockBands.MoonSafari, ProgRockBands.TheFlowerKings);
            ProgRockBands.Values.Where(v =&gt; v.Country == Country.Italy)
                .Is(ProgRockBands.CameliasGarden, ProgRockBands.PFM);
            ProgRockBands.Values.Where(v =&gt; v.Country == Country.UK)
                .Is(ProgRockBands.GentleGiant, ProgRockBands.Genesis, ProgRockBands.IQ);
            ProgRockBands.Values.Where(v =&gt; v.Country == Country.Japan).Is(ProgRockBands.YoninBayashi);
        }

        /// &lt;summary&gt;FromKeyTest&lt;/summary&gt;
        [TestMethod]
        public void FromKeyTest()
        {
            ProgRockBands.FromKey(1).Is(ProgRockBands.MoonSafari);
            ProgRockBands.FromKey(8).Is(ProgRockBands.TheFlowerKings);

            // no match value =&gt; default
            ProgRockBands.FromKey(9).IsNull();
            ProgRockBands.FromKey(10, ProgRockBands.YoninBayashi).Is(ProgRockBands.YoninBayashi);
        }
   }

