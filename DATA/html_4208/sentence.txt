More than 1 year has passed since last update.簡単なツールを作るには依然としてWindowsFormがお手軽で、3Dのビューを持ったツールを作りたいのです。C#には ShaprDX があって D3D ができて、SharpDX.Windows.Form でWindowを作れる。
しかし、これだとWindow全部が3Dビューになるのでゲームとかを作るにはいいのだが、
ツリービューやリストビューがあって一部に3DのViewがあるWindowを作れない。PanelとかPictureBoxみたいな3Dビューを作りたいので、やってみる。こんな感じのやつ。
動くコード
https://github.com/ousttrue/SharpDXSampleユーザーコントロールをビルドすると、プロジェクトのツールボックスに自作のコントロールが出てくる。貼り付けた。SharpDX.Direct3D11 をインストールした。
SharpDX と SharpDX.DXGI は依存関係でインストールされた。SharpDXのサンプルのコード(ビルドの仕方が分からないんだけど)を見ると Form.Handle からCreateDeviceしていると分かった。UserControlからもHandleが取れるのでこれでやってみる。
RenderTargetをクリアするところまでできた。Shaderを作って、context.Draw をコールする。
要するに下記の一連の呼び出しをする。
必要なリソースを全部作る。
今回の例では、 vertex shader, pixel shader, input layout, buffer の４つだけ。Shaderのコンパイルに必要な SharpDX.D3DCompiler と、Vector4 等の入った SharpDX.Mathematics をインストールした。Device と string から作成する。リソースの作成には、Device を使う。ShaderこれはDeviceとは関係なくできる。InputLayoutはVertexShaderの入力レイアウトの通りに作るだけなので、Shaderリフレクションで自動化できる。
後で調べる。Device と Vector4[] から作成する。以下のコードでアクティブなオブジェクトの一覧を表示する。アプリの終了時に呼ぶことで Dispose を忘れていないか確認できる。


