
var speechtxt = outtext;
if (0.8 &lt; note.Results[0].Stability) {
    if (0 &lt; lastspeaktext.Length) {
    }
    var subtext = "";
    if (1 &lt; note.Results.Count) {
        subtext = note.Results[1].Alternatives[0].Transcript;
        if (0 &lt; subtext.Length) {
            speechtxt += subtext;
        }
    }
    // 前回の発言内容を除去
    try {
        if (10 &lt; lstLastspeaktext.Count) lstLastspeaktext.Clear();
        foreach (var tmpStr in lstLastspeaktext) {
            speechtxt = speechtxt.Replace(tmpStr, "");
        }
    } catch (Exception w_e4) {
        FuncWriteLogFile(w_e4.ToString());
    }
}

