
&gt; int i = 1234;

&gt; $"{i:00000}"                // ゼロプレースホルダー
"01234"

&gt; $"{i:00000.00}"             // ゼロプレースホルダー + 小数部指定
"01234.00"

&gt; $"{i:#####}"                // 桁プレースホルダー
"1234"

&gt; $"{i:#####.##}"             // 桁プレースホルダー + 小数部指定
"1234"

&gt; $"{0:#####.##}"             // 桁プレースホルダーのゼロの扱い
""

&gt; $"{1234567890:#,0}"         // 桁区切り記号
"1,234,567,890"

&gt; $"{1234567890:0,}"          // 数値の位取り 1000で除算される
"1234568"

&gt; $"{1234567890:0,,}"         // 数値の位取り 1000000で除算される
"1235"

&gt; $"{1234567890:#,0,}"        // 桁区切り記号 + 数値の位取り
"1,234,568"

&gt; $"{1234567890:#,0,,}"       // 桁区切り記号 + 数値の位取り
"1,235"

&gt; $"{i:#.0%}"                 // パーセントプレースホルダー
"123400.0%"

&gt; $"{i:#.0‰}"                 // パーミルプレースホルダー
"1234000.0‰"

&gt; $"{i:0.0e0}"                // 指数表記
"1.2e3"

&gt; $"{i:0.0E+0}"               // 指数表記
"1.2E+3"

&gt; $"{i:#' degrees'}"          // リテラル文字列。$"{i:#} degrees"と書かない理由がない
"1234 degrees"

&gt; $"{i:\\###00\\#}"           // エスケープ文字。ほとんどの人が$"#{i:##00}#"と書くだろう
"#1234#"

&gt; $@"{i:\###00\#}"            // エスケープ文字。なんと、こうも書ける
"#1234#"

&gt; $"{i:00000;00000000;-0-}"   // 正の値、負の値、ゼロにそれぞれ別の書式を割り当てる
"01234"                       // 正の場合は先頭の書式が使用される
&gt; $"{-i:00000;00000000;-0-}"
"00001234"                    // 負の場合は真ん中の書式が使用される
&gt; $"{0:00000;00000000;-0-}"
"-0-"                         // ゼロの場合は最後の書式が使用される

