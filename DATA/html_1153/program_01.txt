
private void Initialize(MeshType meshType)
{
    _mesh = new Mesh();

    var ovrpMesh = new OVRPlugin.Mesh();
    if (OVRPlugin.GetMesh((OVRPlugin.MeshType)_meshType, out ovrpMesh))
    {
        var vertices = new Vector3[ovrpMesh.NumVertices];
        for (int i = 0; i &lt; ovrpMesh.NumVertices; ++i)
        {
            vertices[i] = ovrpMesh.VertexPositions[i].FromFlippedXVector3f();
        }
        _mesh.vertices = vertices;

        var uv = new Vector2[ovrpMesh.NumVertices];
        for (int i = 0; i &lt; ovrpMesh.NumVertices; ++i)
        {
            uv[i] = new Vector2(ovrpMesh.VertexUV0[i].x, -ovrpMesh.VertexUV0[i].y);
        }
        _mesh.uv = uv;

        var triangles = new int[ovrpMesh.NumIndices];
        for (int i = 0; i &lt; ovrpMesh.NumIndices; ++i)
        {
            triangles[i] = ovrpMesh.Indices[ovrpMesh.NumIndices - i - 1];
        }
        _mesh.triangles = triangles;

        var normals = new Vector3[ovrpMesh.NumVertices];
        for (int i = 0; i &lt; ovrpMesh.NumVertices; ++i)
        {
            normals[i] = ovrpMesh.VertexNormals[i].FromFlippedXVector3f();
        }
        _mesh.normals = normals;

        var boneWeights = new BoneWeight[ovrpMesh.NumVertices];
        for (int i = 0; i &lt; ovrpMesh.NumVertices; ++i)
        {
            var currentBlendWeight = ovrpMesh.BlendWeights[i];
            var currentBlendIndices = ovrpMesh.BlendIndices[i];

            boneWeights[i].boneIndex0 = (int)currentBlendIndices.x;
            boneWeights[i].weight0 = currentBlendWeight.x;
            boneWeights[i].boneIndex1 = (int)currentBlendIndices.y;
            boneWeights[i].weight1 = currentBlendWeight.y;
            boneWeights[i].boneIndex2 = (int)currentBlendIndices.z;
            boneWeights[i].weight2 = currentBlendWeight.z;
            boneWeights[i].boneIndex3 = (int)currentBlendIndices.w;
            boneWeights[i].weight3 = currentBlendWeight.w;
        }
        _mesh.boneWeights = boneWeights;

        IsInitialized = true;
    }
}

