.NET Core 5.0 Web APIサーバを実装して、MySQL接続&amp;CRUD実装をおこなう。testデータベースを作成し、以下の2つのテーブルを作成する。helloテーブルhello_itemテーブルMySQLの8系を利用するとEntityFrameworkCoreの5系では未対応のため、3系を利用する。※ 本ドキュメントはMySQL接続してCRUDをおこうことが目的のため、Secret情報の考慮はしていません。
appsettings.jsonに接続情報を追加する。定義したテーブルのEntityクラスを実装する。Hello.csHelloItem.csMicrosoft.EntityFrameworkCoreのDbContextを継承して実装する。 
OnModelCreating関数のBuilderでどのEntityがどのテーブルにマッピングするか定義できるので利用する。Microsoft.EntityFrameworkCore ModelBuilder Class実装したMysqlContextの接続数は1つとして、1つのConnectionを使い回すようにする。 
Startup.csのDbContextPoolでMysqlContextをAddする。HelloテーブルのCRUDを実装する。
先ほど実装したMysqlContextをSingletonインスタンスで保持するようにDIする。
MysqlContextのコンストラクタに Generated MysqlContext" とログを入れているので、期待値は一度だけ出力されていれば良い。実装したAPIサーバを起動する。
バイナリにするまでもないので、runで実行する。クライアントのログ。サーバのログ。
サーバ起動後の初回リクエストにおいて、MySQLのSingletonインスタンスが生成されることでMySQL接続までの時間がレイテンシに乗っていることがわかった。サーバ起動時にMySQLのConnectionをはることができないかは調査が必要。クライアントのログ。サーバのログ。
MysqlContextのログは出力されていないので、使いまわすことができている。クライアントのログ。サーバのログ。クライアントのログ。サーバのログ。サーバ起動時にMySQLに接続しておきたい。
サーバ起動条件の設定を少し調べて、条件満たさない場合のサーバシャットダウン処理等はまた別ドキュメントでまとめていきたい。


