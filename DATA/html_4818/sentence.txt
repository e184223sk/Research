More than 1 year has passed since last update.前記事「【.NET】進捗ダイアログ画面で外部プロセスの進捗状況を表示する」では、取り込みバッチ処理を外部プロセス(コンソールアプリケーション)で実現しましたが、クラスライブラリー(DLL)にしたいという要望で再度サンプルを作ることになりました。クラスライブラリー(DLL)は静的な参照とはせず動的な参照とします。進捗状況をイベントで受け取りプログレスバーに進捗状況を表示することにしました。
前回同様、バックグラウンド処理にはBackgroundWorkerコンポーネントを使用します。※今回はBackgroundWorkerコンポーネントを使わなくでも出来ましたが、前記事に合わせました。バックグラウンド処理にはBackgroundWorkerコンポーネントを使用しています。【2020/05/07追記】
.NET Core 3.1で試しました。下記の部分を変更することで対応出来ます。.NET Core 3.1以降の場合、AssemblyLoadContextクラスを使用します。今回はアンロードについては考慮していません。
AssemblyLoadContext実行ボタンで進捗ダイアログ画面を表示するクラスライブラリー(DLL)で、進捗状況のイベントを発生させ進捗値を渡します。
処理内容はサンプルなので適当です。SubProccess70()の戻り値を true -&gt; false に変更。今回は動的にイベントハンドラーを追加するところと、EventArgsの値を取得する方法が分かるまで苦労してしまいました。約10年前に複数のWindowsフォームの動的DLLを使ったシステムを構築したのを思い出しました、ユーザーのところに修正したモジュールの差し替えにいった同僚が遅く帰ってきました。
聞くところによるとユーザーの仕事終わりでメニュー画面を閉じるのを待っていたそうです。DLLファイルの差し替えなんてすぐだろうと思ってたのですが、動的DLLを呼び出しているメニュー画面を閉じないとエラーで差し替え出来ないのです。このあたりは反省した覚えがあります。
動的ＤＬＬの解放について - @IT掲示板次回は、動的DLLを差し替えできるようにしてみたいと思います。


