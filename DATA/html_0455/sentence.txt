先日めでたく .NET 5がリリースされました。1.NET 5 では C# 9 がサポートされています。
早速試したいところですが手元のPCにインストールせず、少しだけ触りたいので Docker を使って使い捨ての .NET 5 開発環境を用意したいと思います。Docker のインストール不要なブラウザで使えるクラウド上の使い捨て Docker 実行環境の Play with Docker2 上で試します。実行した際の Play with Docker の Linux 環境はAlpine Linux 3.12、Docker のバージョンは19.03.11です。.NET 5 SDK の Docker image を実行します。
-itオプションで標準入出力をシェルにつなげてそのまま .NET 5 SDK のコンテナに乗り込みます。
※--rmオプションでコンテナ終了時にコンテナが自動的に削除されます3。
手元の PC で試す場合は不要なコンテナが残りません。.NET 5 がインストールされていることが確認できます。Linux のディストリビューションは Debian なようです。コンソールアプリを作成して C# 9 の新機能を試していきたいと思います。プロジェクトが作成されました。ファイル編集したいところですが vim が入っていませんのでインストールしたいと思います。
まず、パッケージをアップデートします。vim をインストールします。準備ができましたので C# 9 のコードを試してみます。
詳細は参考にさせていただいた下記の記事をご覧ください。C# 小ネタ：.NET 5.0 で使える C# 9.0 で気に入ってる機能紹介エントリポイントならクラス無しで直接コードを書けます。簡単なバッチなどで便利そうです。ビルドします。（以降のサンプルでは省略します。）イミュータブルなオブジェクトを手軽に作成することができます。
またプロパティの値が一致していれば違う参照のレコード型でも==がtrueになります。
またこの記事では試していませんがwith式を使って一部のプロパティだけ書き換えた新しいレコードを作成することができます。値オブジェクトづくりがはかどりそうです。型推論して明らかなときはnewの型名を省略できます。
今まで右辺から推論するvarはありましたがメンバー変数で使えませんでした。
また、引数や戻り値で型が明らかな場合でも型名を省略できるようです。詳しくは参考にさせていただいた下記記事を参照くださいC# 9.0 で条件式が革命を起こす条件式にor,and,notが追加されています。
特徴として評価が１回なので副作用のある式でも使いやすいようです。後から気づいたのですが、ソースコードを変更するたびにdotnet buildしなくてもdotnet runだけで勝手にビルドされました。便利です。
読んでいただきありがとうございました。https://www.publickey1.jp/blog/20/net_51windowsmaclinuxweb.html ↩https://qiita.com/tag1216/items/ec7228440f6eaf849cd6 ↩https://qiita.com/hoshino/items/9545d255cc0103b3d296 ↩https://qiita.com/okazuki/items/8043ea6f0095b3019cdf#%E3%83%88%E3%83%83%E3%83%97%E3%83%AC%E3%83%99%E3%83%AB%E3%82%B9%E3%83%86%E3%83%BC%E3%83%88%E3%83%A1%E3%83%B3%E3%83%88 ↩https://qiita.com/okazuki/items/8043ea6f0095b3019cdf#%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%89%E5%9E%8B ↩https://qiita.com/okazuki/items/8043ea6f0095b3019cdf#target-typed-new-%E5%BC%8F ↩https://qiita.com/okazuki/items/8043ea6f0095b3019cdf#%E5%A4%A7%E3%81%AA%E3%82%8A%E5%B0%8F%E3%81%AA%E3%82%8A%E3%81%AE%E6%AF%94%E8%BC%83%E3%82%82%E7%B0%A1%E5%8D%98%E3%81%AB ↩


