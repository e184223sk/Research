More than 1 year has passed since last update.こんにちは。トコロテンです。
少し早めになりますが、皆さんにお年玉💰を授けたいと思います。
今回は、自分用に作成したUnityのセーブデータを管理するクラスを公開します。実装はC#です。
Unity用とありますが、少し改造すればUnity以外にも使える汎用性の高いクラスになるので自由に改造してください。
また、無駄なusingステートメント(Unity周り)があります。こちらも気になる方は削除してくだい。主に以下の3つの機能をサポートします。データを一時的、永続的に保存します。
シングルトンで実装されているため、ゲーム中のどこからでも同じインスタンスにアクセスできます。バイナリデータをgzipフォーマットに従って圧縮、解凍します。データをAESを用いて暗号化、復号化します。
暗号化キーとブロックサイズは初期状態では256bits, 128bitsです。
暗号化キーと初期化ベクトルはEncryptionKeyとEncryptionIVに対応しています。
ここは各自変更してください。
また、絶対にこのソースコードをそのままGitHub等に上げないでください。
なぜなら、暗号化キーと初期化ベクトルがばれてしまうと暗号としての意味を成さなくなってしまうからです。
ソースコードを公開したい場合はEncryptionKeyとEncryptionIVをハードコーディングではなく、ファイル等から読み込むようにしてください。
公開しない場合は問題ありません。永続化したいデータのサンプルクラスです。
List&lt;T&gt;等のジェネリックを用いたコレクションも正常に扱うことができます。以下に使い方の簡単な例としてコードを示します。
実際に利用する際には、データを永続化する際にSave()またはSaveAll()を呼び出すのを忘れないようにしてください。
また、Get&lt;DataType&gt;(string key)とLoad&lt;DataType&gt;(string key)がジェネリックであることも忘れないでください。


