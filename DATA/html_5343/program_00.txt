
            //// エラー処理は省略

            this.button1.Enabled = false;

            this.dataGridView1.Rows.Cast&lt;DataGridViewRow&gt;()
                .Where(o =&gt; o.Selected)
                .Select((o, i) =&gt; new { Row = (DataSetSalesforce.AccountRow)((DataRowView)o.DataBoundItem).Row, Index = i })
                .ToList()
                .ForEach(selected =&gt;
                {
                    var row = this.dataSetKintone._顧客管理_営業支援パック_.Rows.Cast&lt;DataSetKintone._顧客管理_営業支援パック_Row&gt;()
                        .Where(o =&gt; o.顧客名 == selected.Row.Name)
                        .FirstOrDefault();

                    if (row == null)
                    {
                        row = this.dataSetKintone._顧客管理_営業支援パック_.New_顧客管理_営業支援パック_Row();
                        row.RecordId = selected.Index
                            + (this.dataSetKintone._顧客管理_営業支援パック_.Rows.Cast&lt;DataSetKintone._顧客管理_営業支援パック_Row&gt;().Max(o =&gt; (int?)o.RecordId) ?? 0)
                            + 1;
                        row.Revision = 0;
                    }

                    row.顧客名 = selected.Row.Name;
                    row.郵便番号 = selected.Row.IsBillingPostalCodeNull() ? "" : selected.Row.BillingPostalCode;
                    row.住所 = selected.Row.IsBillingStreetNull() ? "" : selected.Row.BillingStreet;
                    row.TEL = selected.Row.IsPhoneNull() ? "" : selected.Row.Phone;
                    row.FAX = selected.Row.IsFaxNull() ? "" : selected.Row.Fax;

                    if (row.Revision == 0)
                    {
                        this.dataSetKintone._顧客管理_営業支援パック_.Rows.Add(row);
                    }

                    this.顧客管理_営業支援パック_TableAdapter.Update(this.dataSetKintone);
                });

            this.顧客管理_営業支援パック_TableAdapter.Fill(this.dataSetKintone._顧客管理_営業支援パック_);

            this.button1.Enabled = true;


