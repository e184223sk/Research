
public class IfStrokeElement
{
    public class Value
    {
        public readonly List&lt;SingleTriggerDoElement.Value&gt; doElements = new List&lt;SingleTriggerDoElement.Value&gt;();

        public readonly IEnumerable&lt;Def.AcceptableInIfStrokeClause&gt; moves;

        public Value(IEnumerable&lt;Def.AcceptableInIfStrokeClause&gt; moves)
        {
            this.moves = moves;
        }
    }

    private readonly Value value;

    public IfStrokeElement(List&lt;Value&gt; parent, params Def.AcceptableInIfStrokeClause[] moves)
    {
        this.value = new Value(moves);
        parent.Add(this.value);
    }

    public SingleTriggerDoElement @do(Def.DoFunc func)
    {
        return new SingleTriggerDoElement(value.doElements, func);
    }
}

