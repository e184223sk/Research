
[DllImport("user32.dll", SetLastError = true)]
private static extern IntPtr SetWindowsHookEx(int idHook, SystemCallback callback, IntPtr hInstance, int threadId);
[DllImport("user32.dll", SetLastError = true)]
private static extern bool UnhookWindowsHookEx(IntPtr hook);
[DllImport("user32.dll")]
private static extern IntPtr CallNextHookEx(IntPtr idHook, int nCode, IntPtr wParam, IntPtr lParam);
[DllImport("kernel32.dll")]
public static extern IntPtr GetModuleHandle(string name);

private const int HC_ACTION = 0;
private const int WH_MOUSE_LL = 14;
private static readonly IntPtr LRESULTCancel = new IntPtr(1);

private IntPtr hHook = IntPtr.Zero;

public void SetHook()
{
    var hInstance = GetModuleHandle(Process.GetCurrentProcess().MainModule.ModuleName);
    hHook = SetWindowsHookEx(WH_MOUSE_LL, Callback, hInstance, 0);
}

public void Unhook()
{
    UnhookWindowsHookEx(hHook);
}

public IntPtr Callback(int nCode, IntPtr wParam, IntPtr lParam)
{
    if (nCode &gt;= 0)
    {
        // 何か処理をする
        if (よし通れ！)
        {
            return CallNextHookEx(hHook, nCode, wParam, lParam);
        }
        if (通さぬぞ！)
        {
            return LRESULTCancel;
        }
    }
    return CallNextHookEx(hHook, nCode, wParam, lParam);
}

