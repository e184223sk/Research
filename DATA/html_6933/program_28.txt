
public class IfSingleTriggerButtonElement
{
    public class Value
    {
        public readonly List&lt;SingleTriggerDoElement.Value&gt; doElements = new List&lt;SingleTriggerDoElement.Value&gt;();

        public readonly Def.AcceptableInIfSingleTriggerButtonClause button;

        public Value(Def.AcceptableInIfSingleTriggerButtonClause button)
        {
            this.button = button;
        }
    }

    private readonly Value value;

    public IfSingleTriggerButtonElement(List&lt;Value&gt; parent, Def.AcceptableInIfSingleTriggerButtonClause button)
    {
        this.value = new Value(button);
        parent.Add(this.value);
    }

    public SingleTriggerDoElement @do(Def.DoFunc func)
    {
        return new SingleTriggerDoElement(value.doElements, func);
    }
}

