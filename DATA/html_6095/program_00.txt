using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using UnityEngine.UI;

public class ButtonNavigation: MonoBehaviour
{

    public void VerticalButtonNavigationFix(List&lt;GameObject&gt; buttonList)
    {
        if (buttonList.Count() &gt; 1)
        {
            Navigation firstButton = buttonList[0].GetComponent&lt;Button&gt;().navigation;
            firstButton.mode = Navigation.Mode.Explicit;
            firstButton.selectOnUp = buttonList[buttonList.Count() - 1].GetComponent&lt;Button&gt;();
            firstButton.selectOnDown = buttonList[1].GetComponent&lt;Button&gt;();
            buttonList[0].GetComponent&lt;Button&gt;().navigation = firstButton;

            Navigation lastButton = buttonList[buttonList.Count() - 1].GetComponent&lt;Button&gt;().navigation;
            lastButton.mode = Navigation.Mode.Explicit;
            lastButton.selectOnUp = buttonList[buttonList.Count() - 2].GetComponent&lt;Button&gt;();
            lastButton.selectOnDown = buttonList[0].GetComponent&lt;Button&gt;();
            buttonList[buttonList.Count() - 1].GetComponent&lt;Button&gt;().navigation = lastButton;
        }
    }

    public void HorizontalButtonNavigationFix(List&lt;GameObject&gt; buttonList)
    {
        if (buttonList.Count() &gt; 1)
        {
            Navigation firstButton = buttonList[0].GetComponent&lt;Button&gt;().navigation;
            firstButton.mode = Navigation.Mode.Explicit;
            firstButton.selectOnLeft = buttonList[buttonList.Count() - 1].GetComponent&lt;Button&gt;();
            firstButton.selectOnRight = buttonList[1].GetComponent&lt;Button&gt;();
            buttonList[0].GetComponent&lt;Button&gt;().navigation = firstButton;

            Navigation lastButton = buttonList[buttonList.Count() - 1].GetComponent&lt;Button&gt;().navigation;
            lastButton.mode = Navigation.Mode.Explicit;
            lastButton.selectOnLeft = buttonList[buttonList.Count() - 2].GetComponent&lt;Button&gt;();
            lastButton.selectOnRight = buttonList[0].GetComponent&lt;Button&gt;();
            buttonList[buttonList.Count() - 1].GetComponent&lt;Button&gt;().navigation = lastButton;
        }
    }

    public void VerticalButtonNavigationFix(List&lt;Button&gt; buttonList)
    {
        if (buttonList.Count() &gt; 1)
        {
            Navigation firstButton = buttonList[0].navigation;
            firstButton.mode = Navigation.Mode.Explicit;
            firstButton.selectOnUp = buttonList[buttonList.Count() - 1];
            firstButton.selectOnDown = buttonList[1];
            buttonList[0].navigation = firstButton;

            Navigation lastButton = buttonList[buttonList.Count() - 1].navigation;
            lastButton.mode = Navigation.Mode.Explicit;
            lastButton.selectOnUp = buttonList[buttonList.Count() - 2];
            lastButton.selectOnDown = buttonList[0];
            buttonList[buttonList.Count() - 1].navigation = lastButton;
        }
    }

    public void HorizontalButtonNavigationFix(List&lt;Button&gt; buttonList)
    {
        if (buttonList.Count() &gt; 1)
        {
            Navigation firstButton = buttonList[0].navigation;
            firstButton.mode = Navigation.Mode.Explicit;
            firstButton.selectOnLeft = buttonList[buttonList.Count() - 1];
            firstButton.selectOnRight = buttonList[1];
            buttonList[0].navigation = firstButton;

            Navigation lastButton = buttonList[buttonList.Count() - 1].navigation;
            lastButton.mode = Navigation.Mode.Explicit;
            lastButton.selectOnLeft = buttonList[buttonList.Count() - 2];
            lastButton.selectOnRight = buttonList[0];
            buttonList[buttonList.Count() - 1].navigation = lastButton;
        }
    }
}


