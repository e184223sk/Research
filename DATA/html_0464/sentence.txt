2020/11/10 (日本時間11日 1:00)に、.NET 5が正式リリースされたそうなので試してみました。.NET 5をVisual Studioで扱う場合は、Visual Studio 2019 Version 16.8以降が必要とのことなので、
まずはアップデートを行います。
インストールがまだの場合は、最新のVisual Studioをインストールしましょう。
Download Visual Studio 2019 for Windows &amp; Mac既にインストールされている場合は、Visual Studio Installerを起動し、更新ボタンをクリック
または、Visual Studioの [ヘルプ] -&gt; [更新プログラムの確認] で更新します。
アップデートが完了したら、 [ヘルプ] -&gt; [Microsoft Visual Studio のバージョン情報] とクリック
現在のバージョンが確認できます。
いよいよ.NET 5のインストールです。
まず、ダウンロードページにて、.NET 5のSDKインストーラをダウンロードします。
(種類がいろいろあるので、自分の使ってる端末にあったものをダウンロードします。)
ダウンロードが完了したら、インストーラを起動し、インストールボタンをクリック

しばらく待つと、インストール完了の旨が表示されます。

これで、.NET 5の環境が整いました。
意外と簡単だった。さっそく新規プロジェクトを作って使ってみようと思います。とりあえずコンソールからやりたいと思います。
新しいプロジェクトの作成から、コンソール アプリ (.NET Core)を選択1して、次へのボタンをクリック
適当なプロジェクト名を決め、作成ボタンをクリック
仮に、「Dotnet5Test」としました。
プロジェクトを作成したら、まずは、プロジェクトのプロパティを開きます。
対象のフレームワークを、.NET 5に変更します。
これで.NET 5が使えるようになったので、さっそくコードを書いていきましょう。
個人的に目玉なのが、トップレベルステートメントというのが追加されたそうなので、試してみたいと思います。
最初に出力されたProgram.csのコードは、全てコメントアウトにします。

そしたら、1行だけ書きます。えっメインメソッドとかコメントアウトしたけど実行できるの？

できちゃいました2
トップレベルステートメントというのは、メインメソッド相当のを自動生成してくれるらしいです。
なのでいきなり標準出力の処理を書いても、勝手にメインクラスとして認識してくれるというわけですね。
(なんか感動)
ちなみに以下のコードを実行すると...こうなります。
Mainメソッドは無視されるようです。(たしか警告が出てたような...)
他の機能を試したい場合は、以下を参照してください。
What's new in .NET 5　(英語)
C# 9.0 の新機能 (日本語)今度はFormsアプリを作ってみます。
Windows Forms App (.NET)で作成(dotnet5Formsで作成しました。)

プロジェクトを作成したら、先程と同じように、プロパティから、対象のフレームワークを.NET 5に変更します。
すると、Formsの場合、以下のような警告が表示されます。
検討してくださいとのことなので、.csprojのProject要素のSdk属性を、Microsoft.NET.Sdkに変更します。
(1行目のところ)
ビルドすると警告が消えるのでそのまま実行してみます。

この通り、普通に実行させることができました。.NET 5をインストールすると、dotnetというコマンドが使えるようになっています。
なので、コマンドでプロジェクトを作って、実行ができます。.NET 5のテンプレートプロジェクトがないようなので、今回は.NET Coreを選択しました。.NET 5のテンプレートを表示する方法ってあるのかな？ ↩予め、[ツール] -&gt; [オプション] -&gt; [デバッグ] -&gt; [デバッグの停止時に自 動的にコンソールを閉じる] のチェックを外す。 ↩


