More than 1 year has passed since last update.ORiN2は、FA/ロボット向けの通信インタフェース。このページを参照。
ORiNとは何かORiN2 SDKなどこちらの方の記事がよくまとまっている。
ORiNについて調べてみたユーザーズガイドに記載されていたサンプルを、Visual Studio 2017/C#に移植してみた。ORiN2 SDKのC#実装については、以下の動画が役に立った。
ORiN2 - Read Variable Example (RC8 Controller)元となっているサンプルは以下のユーザーズガイドから２つ。ORiN2 SDKユーザーズガイド Version 2.1.324.3は4.2からの続きになっている。
本記事ではソースコードの詳しい説明は省略するので、上記ユーザーズガイドを参照。指定したIPアドレスに対してpingを実行し、到達可能かを調べるアプリを作る。Visual Studio 2017を起動し、ファイル&gt;新規作成&gt;プロジェクトでプロジェクトを作成する。以下のコントロールを配置する。(1) 入力用テキストボックス
Name: textBox_IP_Address
(2) メッセージ出力用テキストボックス
Name: textBox_Message
(3) pingボタン
Name: button_Ping
Text: pingついでにフォームの名前も変更し、サイズもいい感じにする。
Text: ORiNCaoApp
ソリューションエクスプローラーからForm1.csを選んで右クリックし、コードの表示を選択する。
コード入力の画面になる。
ソリューションエクスプローラーからMyORiNAppを選んで右クリック、追加&gt;参照を選択する
参照マネージャが表示されるので、左メニューCOM&gt;タイプライブラリを選択し、中央メニューからCAO 1.0 Type Libraryをチェックする
OKボタンを押すForm1.cs[デザイン]タブで、pingボタンをダブルクリックする。
Form1.csタブのソースコードに、button_Ping_Click()が追加されたことを確認する。
以下のようになっているはず。Form1.csを以下のように編集する。最後にCtrl+Shift+Sで全て保存にする。実行ボタンを押して実行する。ORiNCaoAppのダイアログが表示されるので、上のテキストボックスに到達可能なIPアドレスを入力し、pingボタンを押す。到達できた場合は、以下のようにメッセージのテキストボックスにエラーコード0が表示される。
到達できなかった場合は、以下のように0以外のエラーコードが表示される。
CAOチュートリアルの機能に追加して、CRDファイルでエラーコードとメッセージを登録し、エラーコードに対応したエラーメッセージを表示する。ソリューションエクスプローラからORiNCaoAppを選択し、右クリックメニューで追加&gt;新しい項目をクリックする。新しい項目の追加ダイアログが表示されるので、左メニューからVisual C#アイテム&gt;Dataを選ぶと候補が表示される。XMLを選択し、名前をtutorial.xmlにする。
追加ボタンを押す。以下の内容を記載する。
先頭のcodingをutf-8に変更した以外は、元のサンプルからそのまま持ってくる。以下のように修正する。
ただし、caoWS.AddController()のPathは各環境で修正すること。実行ボタンを押して実行する。ORiNCaoAppのダイアログが表示されるので、上のテキストボックスに到達可能なIPアドレスを入力し、pingボタンを押す。到達できた場合は、テキストボックスにメッセージが表示される。到達できなかった場合は、以下のようにエラーメッセージが表示される。
以上


