
private void InitializeBlend() {
    var blend = new Dx11.BlendStateDescription() {
        AlphaToCoverageEnable = false, IndependentBlendEnable = false
    };
    for(int i = 0;i &lt; 8; i++) {
        blend.RenderTargets[i] = new Dx11.RenderTargetBlendDescription();
        blend.RenderTargets[i].BlendEnable = true;
        blend.RenderTargets[i].BlendOperation = Dx11.BlendOperation.Add;
        blend.RenderTargets[i].BlendOperationAlpha = Dx11.BlendOperation.Add;
        blend.RenderTargets[i].DestinationBlend = Dx11.BlendOption.InverseSourceAlpha;
        blend.RenderTargets[i].DestinationBlendAlpha = Dx11.BlendOption.Zero;
        blend.RenderTargets[i].RenderTargetWriteMask = Dx11.ColorWriteMaskFlags.All;
        blend.RenderTargets[i].SourceBlend = Dx11.BlendOption.SourceAlpha;
        blend.RenderTargets[i].SourceBlendAlpha = Dx11.BlendOption.One;
    }
    device.ImmediateContext.OutputMerger.BlendFactor = new Color4(1, 1, 1, 1);
    device.ImmediateContext.OutputMerger.BlendSampleMask = 0xffffff;
    device.ImmediateContext.OutputMerger.BlendState = Dx11.BlendState.FromDescription(device, blend);
}

