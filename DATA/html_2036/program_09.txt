
/// &lt;summary&gt;
/// Stringを2進数に変換します。
/// &lt;/summary&gt;
/// &lt;param name="plain_text"&gt;暗号化する文字列&lt;/param&gt;
/// &lt;returns&gt;2進数配列&lt;/returns&gt;
private uint[] ToUInt32Array(string plain_text)
{
    //文字列を16進数に変換. 実体はbyte配列
    var a = Encoding.ASCII.GetBytes(plain_text);

    //結果を格納する配列
    uint[] result = { };

    foreach (var n in a)
    {
        //16進数を2進数に変換
        var j = int.Parse(Convert.ToString(n, 2));
        var len = j.ToString().Length;
        var fill_len = 0;

        //2進数を8桁に揃える  0を先頭に追加
        if(len &lt; 8)
        {
            //2進数が8桁以下であったとき、埋めるべき数は |8 - len| である
            fill_len = Math.Abs(8 - len);
            while (fill_len &gt; 0)
            {
                fill_len--;
                SelfAppend(ref result, 0u);
            }
        }

        SelfConcat(ref result, ToArray((uint)j));
    }
    return result;
}

