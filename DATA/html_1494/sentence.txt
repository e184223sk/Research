More than 1 year has passed since last update.先日、業務でAutoMapperについて学習しました。
自分の理解を深めるためにメモを兼ねて記事を作成します。この記事ではFruit.csとApple.csという2つのクラスを作成し、前者から後者へ値を転送するやり方について説明していきます。
ここで扱う転送処理は次の通りです。この記事の内容は以下の環境で検証しました。FruitクラスからAppleクラスに値を転送する例を書いてみました。
以下のような仕様であると仮定します。先にソースコードをすべて示します。転送仕様を定義するAppleMappingProfile.csというクラスを作成します。
CreateMap&lt;Fruit, Apple&gt;()でFruitクラスからAppleクラスへの転送であることを宣言します。
CreateMap&lt;&gt;()の&lt;&gt;の中に編集元項目と編集先項目を入れてマッピングを行います。同じ項目名の場合は.ForMemberを書く必要がなく、CreateMap&lt;&gt;()のみで転送が行われます。
Apple.csのIDとBrandCodeがこちらに当てはまります。今回はそれぞれFruit.csのIDとBrandCodeを転送しています。.ForMemberメソッドの引数に編集先項目(apple)を取り、MapFromメソッドの引数に編集元項目(fruit)を取ります。
Apple.csのProductionAreaがこちらに当てはまります。今回はFruit.csのOriginを転送しています。.ForMemberメソッドの引数に編集先項目(apple)を取り、MapFromメソッドの引数に編集元項目(fruit)を取ります。
Apple.csのExpirationDateがこちらに当てはまります。MapFromメソッドの =&gt; の先で編集元項目(fruit)から計算します。今回はFruit.csのExpirationDateから3日を引いた値を転送しています。.ForMemberメソッドの引数に編集先項目(apple)を取り、ResolveUsingメソッドの型に編集用のValueResolverを取ります。
Apple.csのBrandNameがこちらに当てはまります。ResolveUsingメソッドを使うためにはValueResolverの実装としてAppleBrandNameResolverを用意します。
AppleBrandNameResolverはIValueResolverを実装する必要があり、1つ目の型に編集元項目(Fruit)、2つ目の型に編集先項目(Apple)、3つ目の型に設定する項目の型を設定します。今回はBrandCodeが「111」の場合に「ふじ」、「222」の場合に「ジョナゴールド」、その他の場合は「その他の品種」と返すようにif文で条件を設定しています。.ForMemberメソッドの引数に編集先項目(fruit)を取り、UseValueメソッドの引数に固定値として設定する値を取ります。
Apple.csのPriceがこちらに当てはまります。今回は固定値120を転送しています。作成したAppleMappingProfile.csを使うためには以下のようにして呼び出します。以上が今回私が学習したAutoMapperの編集機能です。最初は自分がQiitaに記事を投稿するとは思ってもみませんでしたが、現場リーダーの強要すすめで時間を取っていただき挑戦することができました。
記事の作成にあたり多くのことを教えていただき、本当にありがとうございます。
自分の理解を深めるためにメモを兼ねて書いた記事ですが、自分と同様プログラミングを始めたばかりの方やAutoMapperをこれから使ってみようという方に読んでいただけますと幸いです。


