More than 1 year has passed since last update.音楽プレイヤーのシャッフル再生やtwitterのbotのように「ランダムに一つずつ選択したい」という機能を作るときの「ランダム」はどう実現するのが良いかということがふと気になったので実装してみました。単純にリストからランダムに選ぶと同じものが連続して選ばれるといったような現象が発生します。参考
これは自然なシャッフル再生ではなくなってしまいます。それぞれの要素に重みを付けたランダム選択を行い選択されたら重みを0にする。選択されなければ重み付けを回復させていく という手法で自然なシャッフル再生を実現したいと思います。重み付けランダムは重みをつけてランダムに何か出したい のようにして実現できそうです。C#で上記の機能を実装しました。として重み付けを行っています。ここの重み付けの仕方がアルゴリズムの良さに直結するかと思うので、市販のプレイヤーアプリではもっと複雑なアルゴリズムを採用しているかもしれません。ひらがな・カタカナ(164文字)から取り出す動作を164×5000回行って検証します。重み付けのランダムから取り出す場合と一様分布のランダムから取り出す場合で比較します。Excelのヒストグラムの自動表示の都合で表示が揃ってないのはご勘弁を。出現回数はどちらも正規分布っぽい感じになりました。重み付けしている方が分散が小さくなっているようです。頻度は次に同じ要素が選出するまで何回かかったかで考えます。
たとえば'か'が1回目に選出されたとして、次に'か'が選出されるのが10回目ならば9となります。
最後の要素(次に選出されるまで∞回)の場合は無視します。上記のようなコードで一覧にしました。ヒストグラム化するといい感じに回数が少ないときには選ばれづらくなっていることが確認できました。また、長く選ばれていない要素が相対的に選ばれやすくなる効果も出ています。重み付けを変えると結果がどう変わるか確認してみます。上記では重みが初期値を超えないようにしていましたが、その制限を撤廃して選ばれない間は際限なく数値が大きくなるようにします。制限撤廃前に比べて長く選ばれていない要素がさらに選ばれやすくなりました。この2つの条件で重み付けしたうえでランダム選出することでいい感じにシャッフルができそうでした。


