WPF でおしゃれっぽい画面を作るときに多くの人がお世話になる MahApps.Metro と Material Design In XAML Toolkit の導入方法をメモっておきます。普通に WPF アプリのプロジェクトを作ります。私は、.NET 5 で作ってますが .NET Core 3.1 でもほぼ同じ手順だと思います。白いウィンドウだけだと何が変わったのかわかりづらいと思うので、MainWindow.xaml をちょっと書き換えてコントロールを置いておきます。実行するとこんな見た目です。ということで見た目変えていきます。MaterialDesignThemes.MahApps を追加します。自動で MahApps.Metro も依存先にあるので入るのですが、2.0.0 が追加されたので、手動で MahApps.Metro の最新版を追加しました。私がやった時点での最新版は 2.3.3 でした。App.xaml に MahApps.Metro と MaterialDesignThemes 用のリソースを追加します。この Issue にある App.xaml の例からまるっと拝借してきます。
https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/issues/1896MainWindow.xaml も MetroWindow を継承するようにするのと GlowBrush と BorderThickness を設定するように変更します。MainWindow.xaml.cs の方も基本クラスを Window から MetroWindow に変更します。これで実行するといい感じの見た目になっているはずです。とりあえず App.xaml にある以下の定義の部分で DeepPurple を指定しているので、そこを変更すると全体的に色が変わります。指定できる XAML は以下のリポジトリで確認できます。例えば Pink を指定すると以下のような感じになります。MetroWindow に TitleCharacterCasing というプロパティがあるので、ここに Nromal を設定しましょう。MainWindow.xaml で以下のように指定します。これで大文字にならなくなりました。ボタンがボールド体とまではいかないのですが、ちょっと太くなってしまっています。
MaterialDesignThemes のソースを見てみると Button に既定であたるスタイルは MaterialDesignRaisedButton というキーで定義されていることがわかります。そして、その定義を見てみると…、あっ、ハードコードしてますね。なので、気に入らない場合は App.xaml でデフォルトのボタンにあたるスタイルを上書きしてやればいいです。こんな感じになります。これで実行すると、以下のようにフォントが普通の太さになります。全部のボタンがこうなるのが嫌な場合は x:Key を Style に指定して自分で太字にしたくないボタンに対してだけスタイルを指定してやりましょう。他のコントロールで見た目が気に入らない場合も、この方法と同じ手順でカスタマイズが出来ます。Wiki の内容が古くてちょっと大変だった。


