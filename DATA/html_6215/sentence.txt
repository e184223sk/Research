More than 3 years have passed since last update.過去に何度かTreeViewをいじってExplorer風にしたりしてみたが、汎用的に使えるようにしたかったので改めて作ってみた
このModelを使うと簡単にこんなのが作れるModelのsummary見てもらえばだいたい分かると思うけど、RootDirectoryNodeクラスをVMでインスタンス化して、コンストラクタでDirectoryInfoとTreeViewHelperを渡す
TreeViewHelperはフォルダ・ファイルのアイコンを指定する
また、ファイルの検索パターン、アイコンのサイズも指定できる(省略可)TreeViewのItemsSourceにインスタンス化したRootDirectoryのListをバインドするだけ
選択したNodeのDirectoryInfoかFileInfoは、SelectedValuePathに_Infoを指定することでSelectedValueから取得できる
FileSystemInfoで取得されるので、実際に使う際は型判定が必要だと思うBehaviorを使えばいろいろできる
私は選択したNodeをダブルクリックした時にCommandを実行したかったのでこんな感じで書いてみたBehaviorを使うためには
・System.Windows.Interactivity
・Microsoft.Expression.Interactions
を参照設定に追加する必要がある
参考：かずきのBlog@hatena/WPF4.5入門 その59「Behaviorの自作」Commandは添付プロパティとして作り、ViewからBindさせる
MouseDoubleClickイベントは、TreeViewのどこをダブルクリックしても発生する
そのため、発生したPointがTreeViewのSelectedItem内かを判定し、範囲内であればCommandを実行するようにしている
Commandには引数としてTreeViewを渡し、ViewModelで処理するようにしている
ViewModel側のCommandはこんな感じ(ReactiveCommandを使用)Viewのバインドはこんな感じいい感じにModelが書けたかなと思う・ω・
軽くするために参照型でアイコンとか共有してるからファイルとかに関連付けられたアイコンを使うのは無理
でも実際気軽に使おうとしたらアイコンは勝手に付けてくれたほうが使いやすそうだからそのうち勝手にアイコンも付けてくれるやつも作るかも
dllにしたらもっと使いやすいだろうけどライセンス周りは全く詳しくないから配布は気が引ける(´・ω・｀)


