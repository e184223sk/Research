
using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Threading;
using System.Windows.Forms;

namespace RImageConverter
{
    public partial class Form1 : Form
    {
        private delegate void SafeCallDelegate(string text);
        private FileSystemWatcher watcher = new FileSystemWatcher();
        private string moveFolder;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            watcher.Filter = "*.bmp";
            watcher.Created += new FileSystemEventHandler(watcher_Created);
        }

        private void AddLog(string text)
        {
            if (textBox1.InvokeRequired)
            {
                var d = new SafeCallDelegate(AddLog);
                textBox1.Invoke(d, new object[] { text });
            }
            else
            {
                textBox3.Text = $"{text}\r\n{textBox3.Text}";
            }
        }

        private void watcher_Created(object sender, FileSystemEventArgs args)
        {
            try
            {
                Thread.Sleep(1000);
                using (var bmp = new Bitmap(args.FullPath))
                {
                    var dateFolder = DateTime.Now.ToString("yyyy-MM-dd");
                    Directory.CreateDirectory($@"{textBox2.Text}\{dateFolder}");
                    var path = $@"{moveFolder}\{dateFolder}\{args.Name.Replace(".bmp", ".png")}";
                    bmp.Save(path, ImageFormat.Png);
                    AddLog(path);
                }
                File.Delete(args.FullPath);
            }
            catch (Exception ex)
            {
                AddLog(ex.Message);
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (button1.Text.Equals("監視開始"))
            {
                watcher.Path = textBox1.Text;
                moveFolder = textBox2.Text;
                watcher.EnableRaisingEvents = true;
                button1.Text = "監視停止";
            }
            else
            {
                watcher.EnableRaisingEvents = false;
                button1.Text = "監視開始";
            }
        }

        private void Form1_Resize(object sender, EventArgs e)
        {
            if (this.WindowState == FormWindowState.Minimized)
            {
                this.Visible = false;
                notifyIcon1.Visible = true;
            }
        }

        private void notifyIcon1_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            this.Visible = true;
            this.WindowState = FormWindowState.Normal;
            notifyIcon1.Visible = false;
        }

    }
}

