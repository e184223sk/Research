
public class IntegerValue : AsnValue
    {
        public const byte TAGTYPE = 0x02;

        public BigInteger Value { get; set; }

        public IntegerValue(BigInteger value)
        {
            this.Value = value;
        }
        public override List&lt;byte&gt; GetBytes()
        {
            List&lt;Byte&gt; result = new List&lt;byte&gt;();
            byte[] data = Value.ToByteArray();
            result.Add(GetTag());
            result.AddRange(GetFieldLengthByte(data.Length));
            result.AddRange(data.Reverse().ToList());

            return result;
        }

        public override byte GetTag()
        {
            return TAGTYPE;
        }

        public static AsnValue Parse(byte[] valueByteData)
        {

            // バイトオーダーをBigEndienからLittle Endienに変換してからBigIntegerを生成
            BigInteger value = new BigInteger(valueByteData.Reverse().ToArray());

            return new IntegerValue(value);

        }

