using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class NewBehaviourScript : MonoBehaviour{

    public Material material;
    List&lt;int&gt; triangles     = new List&lt;int&gt;();
    List&lt;Vector3&gt; vertices  = new List&lt;Vector3&gt;();
    List&lt;Vector2&gt; uv        = new List&lt;Vector2&gt;();

    void Start(){
        Append(new Voxel(0,0,0,0));
        Init(new GameObject());
    }
    void Append(params Voxel[] voxels){
        foreach(Voxel v in voxels){
            foreach(int t in v.triangles) triangles.Add(vertices.Count+t);
            vertices.AddRange(v.vertices);
            uv.AddRange(v.uv);
        }
    }
    void Init(GameObject g){
        var f = g.AddComponent&lt;MeshFilter&gt;();
        var r = g.AddComponent&lt;MeshRenderer&gt;();
        var m = new Mesh(){
            vertices    = vertices.ToArray(),
            uv          = uv.ToArray(),
            triangles   = triangles.ToArray(),
        };
        f.mesh      = m;
        r.material  = material;
        m.RecalculateNormals();
    }
}

public class Voxel{

    static List&lt;int&gt; data   = new List&lt;int&gt;();
    static int[] order      = {6,7,2,3, 2,3,0,1, 0,1,4,5, 6,2,4,0, 7,6,5,4, 3,7,1,5};
    static int slice        = 8;
    static Voxel(){
        for(int i=0;i&lt;order.Length;i+=4){
            data.AddRange(new []{i,i+1,i+2,i+3,i+2,i+1});
        }
    }

    public List&lt;int&gt; triangles      = data;
    public List&lt;Vector3&gt; vertices   = new List&lt;Vector3&gt;();
    public List&lt;Vector2&gt; uv         = new List&lt;Vector2&gt;();
    public Voxel(int x,int y,int z,int type){
        var cube = new Vector3[8];
        var face = new []{0,1,2,1,1,1};
        for(int i=0;i&lt;8;i++){
            cube[i] = new Vector3((i&amp;1)+x,(i&gt;&gt;1&amp;1)+y,(i&gt;&gt;2&amp;1)+z);
        }
        for(int i=0;i&lt;order.Length;i++){
            vertices.Add(cube[order[i]]);
            uv.Add(new Vector2(type+(i&amp;1),slice-(i&gt;&gt;1&amp;1)-face[i&gt;&gt;2])/slice);
        }
    }
}

