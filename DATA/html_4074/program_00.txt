
private const string BGM_PATH = "Audio/BGM";
private const string SE_PATH = "Audio/SE";
private const int BGM_SOURCE_NUM = 1;
private const int SE_SOURCE_NUM = 5;

// BGMは一つづつ鳴るが、SEは複数同時に鳴ることがある
private AudioSource bgmSource;
private List&lt;AudioSource&gt; seSourceList;
private Dictionary&lt;string, AudioClip&gt; seClipDic;
private Dictionary&lt;string, AudioClip&gt; bgmClipDic;


for (int i = 0; i &lt; SE_SOURCE_NUM + BGM_SOURCE_NUM; i++)
{
    gameObject.AddComponent&lt;AudioSource&gt;();
}

// LinQを使い、BGMはループさせ、ボリュームをそれぞれ代入しました。
IEnumerable&lt;AudioSource&gt; audioSources = GetComponents&lt;AudioSource&gt;().Select(a =&gt; { a.playOnAwake = false; a.volume = BGM_VOLUME; a.loop = true; return a; });
bgmSource = audioSources.First();
seSourceList = audioSources.Skip(BGM_SOURCE_NUM).ToList();
seSourceList.ForEach(a =&gt; { a.volume = SE_VOLUME; a.loop = false; });

bgmClipDic = (Resources.LoadAll(BGM_PATH) as Object[]).ToDictionary(bgm =&gt; bgm.name, bgm =&gt; (AudioClip)bgm);
seClipDic = (Resources.LoadAll(SE_PATH) as Object[]).ToDictionary(se =&gt; se.name, se =&gt; (AudioClip)se);

public enum BGMLabel
{
    None,
    Home,
    Game,
    Library
}

public enum SELabel
{
    Start,
    PlayGame,
    TapButton,
    Efect,
    Win,
    Lose,
    ItemGet
}

