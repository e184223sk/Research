More than 3 years have passed since last update.迷路を解くプログラムです。幅優先探索を用いて解いてみました。幅優先探索の特徴は、深さ優先探索とは異なり、最初に見つかった経路が最短経路となるという点です。幅優先探索がどんな方法かを簡単に記すと、一歩進むたびにその時にその時の迷路の状態と、次に進める一歩先の道をキューに入れていきます。進める道がなくなってしまったら、その経路はあきらめ、キューからデータを一つ取り出し、そこから探索を再開します。これを繰り返せば、いつかはゴールにたどり着くことになります（ゴールにたどり着く道があればですが)。幅優先探索についての詳細は、 Wikipediaの「幅優先探索」を参照してください。コンソールアプリケーションとして作成しています。ソースコードを示す前に、どんな実行結果なのかを示します。コンソールに表示される記号の意味は以下の通りです。以下、その実行結果です。実際には、探索が終わってから、このような、解の経路を描画しています。スタート位置からカーソルが動いて、足跡(経路)を残しながら、ゴールに進んでいきます。見てお分かりのように、Macで動作させています。.NET Core2.1で作成しているのですが、ソースコードはそのまま.NET Frameworkでもビルドできるはずです。このプログラムでは、テキストファイルで作成した迷路データを読み込むようにしています。なので、データを作成すれば様々なパターンでの確認ができるようになっています。自動で迷路を生成するプログラムも併せて作成すればよいのでしょうが、今回はそこまではやっていません。上記実行例の迷路データを以下に示します。作成したクラス等は以下の通りです。この記事は、Gushwell's C# Programming Pageで公開したものを加筆・修正したものです。


