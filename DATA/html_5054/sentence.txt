More than 3 years have passed since last update.レバーによって方向入力が行える装置のことですが、ここでは上の画像のように、丸を動かしてキャラクターを操作できるやつのことを指します。ジョイスティックの導入と、キャラクターがジョイスティックを動かした向きを向くようにする方法を初心者向けに解説していきます。なんだかとっても大変そうですが、
Asset Storeに無料で提供されているSimple Touch Controllerを使えば簡単！ まずはこれをImportしましょう。

SimpleTouchControllerに同封されているSceneのExample1~3を参考にしましょう。Exampleでは球を動かすLeftControllerとカメラを動かすRightControllerが搭載されていますが、今回はプレイヤーをバーチャルパッドで動かせるだけなので、LeftControllerのみ使えるようにすれば良いです。
では、どんな操作が必要だったのか説明していきます。SimpleTouchController&gt;Scenes&gt;Example2を開き、Left SimpleTouch Joystickをコピーして、使いたいシーンのCanvasにペーストします。これを
ここに持ってくる！
次にプレイヤーにPlayerMoveControllerをつけます。
このまま実行するとRight Controllerがないためにエラーになったり、
プレイヤーが正面を向いたまま移動したりしてしまうので、コードを少しいじります。(記事の一番下にPlayerMoveControllerをいじったコードが置いてあります。)
今回使うのはLeft Controllerなので、Right Controllerに関係する式は取っ払ってしまいましょう。
プレイヤーの向きをジョイスティックにと連動させる命令は、
//スティックの倒れた向きを向く の下に書かれているコードで制御しています。float v2 = leftController.GetTouchPosition.y; 
float h2 = leftController.GetTouchPosition.x;
v2とh2にそれぞれ、Left Controllerのy軸の値とx軸の値をとり、if (v2 == 0 &amp;&amp; h2 == 0) {
            speed = 0f;
        } else {
            speed = 10f;
        }
あとLeft Controllerを動かしていないときはspeedが0になるようにしましょう。
勝手に動いてしまいます。Vector3 direction = new Vector3(h2,0,v2);
transform.localRotation = Quaternion.LookRotation (direction);
向きを代入してあげています。なお、以下のコードには取っ払い損ねているものもありますが、動きには影響ないです。これで動くはずです。
お疲れさまでした！


