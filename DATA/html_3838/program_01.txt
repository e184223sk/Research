
    public class ViewModel : INotifyPropertyChanged, INavigationAware
    {
        public event PropertyChangedEventHandler PropertyChanged;
        private CompositeDisposable DisposeCollection = new CompositeDisposable();
        public ReactiveProperty&lt;string&gt; Input { get; }
        public Model Model { get; }

        public ViewModel(Model _model)
        {
                Model = _model;
                Input =
                    Model.VO.ToReactivePropertyAsSynchronized(
                        x =&gt; x.Value, // propertySelector.
                        x =&gt; x.Name/* ValueObject型のstirngプロパティ */,  // convert.
                        x =&gt; new ValueObject(x), // convertBack.
                        ReactivePropertyMode.Default | ReactivePropertyMode.IgnoreInitialValidationError, // mode.
                        true // ignoreValidationErrorValue.
                    ).SetValidateNotifyError(x =&gt; String.IsNullOrEmpty(x) ? "何か入力してください。" : null) // バリデーション.
                    .AddTo(DisposeCollection);
        }

        public void OnNavigatedTo(NavigationContext navigationContext) =&gt; Model.非同期処理Async();
    }

