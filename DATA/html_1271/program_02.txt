
public Surface InterpolatedSurface(double xStart, double xEnd, double yStart, double yEnd, int U, int V)
{
    // U 方向のネットワークスプライン曲線群を作る
    Curve[] uCurves = new Curve[U + 1];
    for(int i = 0; i &lt; U+1; i++)
    {
        double stepY = (yEnd - yStart) / V;
        double y = yStart + i * stepY;
        Point3d[] pts = new Point3d[V + 1];
        for(int j = 0; j &lt; V+1; j++)
        {
            double stepX = (xEnd - xStart) / U;
            double x = xStart + j * stepX;
            double z = this.Z(x, y);
            pts[j] = new Point3d(x, y, z);
        }
        uCurves[i] = NurbsCurve.CreateInterpolatedCurve(pts, 3);
    }
    // V 方向のネットワークスプライン曲線群を作る
    Curve[] vCurves = new Curve[V + 1];
    for (int i = 0; i &lt; V + 1; i++)
    {
        double stepX = (xEnd - xStart) / U;
        double x = xStart + i * stepX;
        Point3d[] pts = new Point3d[U + 1];
        for (int j = 0; j &lt; U + 1; j++)
        {
            double stepY = (yEnd - yStart) / V;
            double y = xStart + j * stepY;
            double z = this.Z(x, y);
            pts[j] = new Point3d(x, y, z);
        }
        vCurves[i] = NurbsCurve.CreateInterpolatedCurve(pts, 3);
    }
    // Network Surface の構築
    int error;
    Surface interpolatedSurface = NurbsSurface.CreateNetworkSurface(uCurves, 1, 1, vCurves, 1, 1, 0.1, 0.1, 0.1, out error);
    return interpolatedSurface;
}

