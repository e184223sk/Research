More than 1 year has passed since last update.C#でJSONを扱う記事は探せばたくさん出てくるのですが、そのほとんどが
・一段階のフラットJSONしか扱ってない
・先に展開先クラスを用意する方法
のどちらかしか扱っていません。それらの方法では私のやりたいことができなかったので、そこらへんについて調べた記録です。Microsoft公式のSystem.Text.Jsonを使ってJSONを扱うためには、先に展開したいJSONと相似形のクラスを用意しておく必要があります。以下では公式のJSONサンプルを例に、操作を行ってみます。めんどくさすぎる…何が困るって、APIとかの外部からやってくる不定形のJSONをパースしたいのですよ。
APIなんて形がすぐ変化するので、先に形式を用意しておかないといけないSystem.Text.Jsonは全くもってこの世界には向いていません。
もっとこう$obj = json_decode($jsonString)みたいなのはないんですかね。実のところSystem.Text.Jsonはかなり機能が少ないです。
このような用途にはNewtonsoft.Jsonのほうが向いています。こうするとクラスを用意しておく必要がなくなるのですが、返ってくるのはobjectなのでいまいち役に立ちません。
全部Dictionaryあたりにしてほしいのですが。…普通にNewtonsoft.Json公式にあったわ。やったか！
と思いきやDatesAvailableあたりはstringじゃないので当然ながら死にます。
パース方法はDataSetとかImmutableListとか色々ありますが、どれも全ての値が同じ型で、段階がフラットであることを前提としたものです。中身が入れ子になってたりなってなかったりするJSONを、全部連想配列か何か展開してほしいのですよ。
Dictionary&lt;string, typeof(Value)&gt;みたいに書けないものですかね。それからなんやかんやあって、最終的にJObjectを使ってどうにかすることができました。とりあえずこれで、C#でJSONをそこそこ自在に操ることができるようになったと思います。
PHPならどれも一瞬でできるのに……とか思いつつここまで調べるのに半日かかった。なおサンプルはそのままだと.ToList()のあたりでエラーになるので、どこかで仕様が変わったようです。このくらいの記事ってPHPなら腐るほど転がってると思うのですが、C#だとMicrosoftのドキュメントか、ほとんど公式のコピペのような内容しか見つからないんですよね。
それらを応用してどうこうするって内容がどうにもなかなか存在しない。
独学でレベルアップするには非常に厳しい言語だと思います。いや、この程度書くほどでもない常識だからどこにも書いてないんだよ、とか言われたら死にます。


