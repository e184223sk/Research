More than 1 year has passed since last update.この度、業務で未経験のC#を使ってAPIを作る機会がありました。
色々調べながらの作業だったので、同じ様な境遇に合っている人に向けて、「自分の場合はこれでできたよ」っていう内容を書いておきます。少しでも解決の一助になればと思います。っていうレベルの完全初心者です。なんとか作った今でもほとんど分かっていません。
間違っている箇所があれば修正しますので、ご指摘いただければ幸いです。Visual Studioを立ち上げるとプロジェクトの雛形（テンプレート）を選択することになったので、「.NET Core &gt; Webアプリケーション（モデル ビュー コントローラー）」を選びました。3つ上にある「API」でもよかったのですが、作ったAPIをViewで表示したかったのでこれを選びました。テンプレートを選択するとコントローラクラスが出来上がっているので、以下の様に追記していきます。[HttpPost]を書くと、「/コントローラ名/メソッド名」というURLにPOST通信でリクエストが来た時に動くメソッドになります。
そして、引数のRequestJson requestは自分で作ったクラスです。こうすると、DI的な機能なのでしょうか？　.NETフレームワークが良い感じにJSONをこのクラスのメンバー変数に入れてくれます。よくわかってません。他の言語でもいいので、何かしらのフレームワークを使った事がある人なら、なんとなく分かるのではないでしょうか。僕はSpring FrameworkやLaravelをちょっとかじっていたのですが、同じような感じですね。渡ってくるJSONの形式に合わせてクラスを作成します。
ちなみに、JSONと変数を完全に合わせなくてもエラーにはなりませんでした。
JSONにはあるけれど、クラスには定義していないものは無視されます。（当たり前ですが、変数を定義していないので取得できない）リクエストの受け取りと同じように、ResponseJsonというレスポンス用のクラスを定義して、それをJsonクラス（.NET標準で使えるクラスだと思われる）に入れてreturnするだけでJSON形式で返してくれました。ここら辺も他のフレームワークと同じ感じですね。ここでは書いていませんが、リクエスト時と同様に、定義してやれば配列やネスとしたオブジェクトもちゃんとJSON形式に変換してくれます。色々と参考にさせて頂いたサイトがあるのですが、見過ぎて覚えていません。。
ほんの一部ではありますが列挙いたします。


