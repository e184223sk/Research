
public class SceneFadeManager : MonoBehaviour
{
    //透明度が変わるスピード
    float fadeSpeed = 0.75f;
    //画面をフェードさせるための画像をパブリックで取得
    public Image fadeImage;
    //画像のRGBA値設定用
    float red, green, blue, alfa;
    //シーン遷移のための型
    string afterScene;
    //フェードイン用のコルーチン
    IEnumerator fadeInCoroutine;
    //フェードアウト用のコルーチン
    IEnumerator fadeOutCoroutine;
    // Start is called before the first frame update
    void Start()
    {
        fadeInCoroutine = FadeIn();
        fadeOutCoroutine = FadeOut();
        DontDestroyOnLoad(this);
        SetRGBA(0, 0, 0, 1);
        StartCoroutine(fadeInCoroutine);
        //シーン遷移が完了した際にフェードインを開始するように設定
        SceneManager.sceneLoaded += fadeInStart;
    }
    //シーン遷移が完了した際にフェードインを開始するように設定
    void fadeInStart(Scene scene,LoadSceneMode mode)
    {
        fadeInCoroutine = FadeIn();
        StartCoroutine(fadeInCoroutine);
    }
    /// &lt;summary&gt;
    /// フェードアウト開始時の画像のRGBA値と次のシーン名を指定
    /// &lt;/summary&gt;
    /// &lt;param name="red"&gt;画像の赤成分&lt;/param&gt;
    /// &lt;param name="green"&gt;画像の緑成分&lt;/param&gt;
    /// &lt;param name="blue"&gt;画像の青成分&lt;/param&gt;
    /// &lt;param name="alfa"&gt;画像の透明度&lt;/param&gt;
    /// &lt;param name="nextScene"&gt;遷移先のシーン名&lt;/param&gt;
    public void fadeOutStart(int red,int green,int blue,int alfa,string nextScene)
    {
        SetRGBA(red, green, blue, alfa);
        SetColor();
        afterScene = nextScene;
        fadeOutCoroutine = FadeOut();
        StartCoroutine(fadeOutCoroutine);
    }
    IEnumerator FadeIn()
    {
        for (int i = 0; i &lt; 360; i++)
        {
            //不透明度を徐々に下げる
            alfa = Mathf.MoveTowards(alfa, 0f, fadeSpeed * Time.deltaTime);
            //変更した透明度を画像に反映させる関数を呼ぶ
            SetColor();
            yield return null;
            if (alfa &lt;= 0)
                StopCoroutine(fadeInCoroutine);
        }
    }
    IEnumerator FadeOut()
    {
        for (int i = 0; i &lt; 360; i++)
        {
            //不透明度を徐々に上げる
            alfa = Mathf.MoveTowards(alfa, 1f, fadeSpeed * Time.deltaTime);
            //変更した透明度を画像に反映させる関数を呼ぶ
            SetColor();
            yield return null;
            if (alfa &gt;= 1)
            {
                SceneManager.LoadScene(afterScene);
                StopCoroutine(fadeOutCoroutine);
            }
        }
    }
    //画像に色を代入する関数
    void SetColor()
    {
        fadeImage.color = new Color(red, green, blue, alfa);
    }
    //色の値を設定するための関数
    public void SetRGBA(int r, int g, int b, int a)
    {
        red = r;
        green = g;
        blue = b;
        alfa = a;
    }
}

