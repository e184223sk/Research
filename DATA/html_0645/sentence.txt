こんにちは。もぐめっとです。

仕事をするときはちゃんとスーツを着るタイプです。今回は豪華二本立てのunity tipsです。!!Attention!!
前提条件として、nullableを使うためにC#8が使えるunity2020.2（2020/10/08現在、まだベータ版）を使って説明してます。
それ以前は適宜[CanBeNull]とかに置き換えてもらえればきっとできるんじゃないかと思います。（未検証）unityでいい感じにenum変換するにはConverterTypeをかます必要があります。例えば人狼ゲームで、役職によってチームが人狼と村人チームと別れている。。。みたいなのを表現するとします。
その役職チームはRoleTeamとして表現して、string型なenumでWerewolf, Villageと2チームに表現します。
下記のように表現しますはい、ここで出てきました。MrコンバーターことFirestoreEnumNameConverter君です。
これを使ってあげることによってDocumentSnapshotにあるConvertToメソッドでenumが入っていたとしても簡単にRole型のデータを取得することができるようになります。
では実際にどうやってDecodeしているかの例を見てみましょう。とても簡単にDecodeできちゃいますね。
基本はConvertToで変換できるようにするのが一番楽です。でもnullableがはいってるとまだ対応してねーっすって怒られちゃうんです・・・
おじさん悲しい・・・たとえばこのRoleにnullableな値として、占い師などは占う能力(ability)をもっていますが、村人は何も能力を持ちません。このように役職ごとに値があったりなかったりするとしましょう。
こんな感じで新しく定義してみました。どうしたもんかと悩んでいたらこんな記事を見つけました。【Unity×Cloud Firestore(Firebase)】UnityにおけるFirestoreへの書き込み＆読み込み上記からヒントを得て、こんなExtensionを作ってみました。EnumもDecodeできるようにExtensionを作りましたそしてDocumentSnapshotからDecodeするメソッドを作っていました。これで無事にnullableでもdecodeできるようになりました！！ただ、Mapで入れ子状にデータを入れることもあると思います。
例えば占い師が占ったプレイヤー情報をRoleに格納するとしましょう。
この場合はまた色々と変換処理をかまさないとできません。
まず、このようなinterfaceを準備します。そしてMapなデータをコンバートできるようにExtensionを拡張しますPlayer情報はこんな感じで定義しておきます。このPlayer情報をRoleでDecodeできるような感じにすると下記のようになります！これでいい感じにnullableを扱えるようになりました！！unityで、nullableは最近ようやく対応してきたばかりでこんな苦労をしていますが、firestoreでのnullableもいずれ対応してくれるようになると非常に嬉しいですね。また、nullableなstringのコンバートでいい感じの方法がわからないのでもし誰かわかる方いらっしゃったらコメント欄とかでひっそりと教えて下さい。同じ感じの要領でMapデータのArray版もつくってみたので良かったら使ってみてくださいワンナイト人狼のアプリ作ってます！よかったら遊んでみてね！


