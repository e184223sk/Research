using System.Net;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;

namespace Hoge
{
    public class ProxyInjectionHandler : DelegatingHandler
    {
        private readonly IWebProxy Proxy;
        private bool FirstCall = true;

        public ProxyInjectionHandler(IWebProxy proxy)
        {
            this.Proxy = proxy;
        }

        protected override Task&lt;HttpResponseMessage&gt; SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
        {
            if (FirstCall)
            {
                var handler = (HttpClientHandler)this.InnerHandler;
                handler.Proxy = this.Proxy;
                handler.UseProxy = true;
                FirstCall = false;
            }
            return base.SendAsync(request, cancellationToken);
        }
    }
}

