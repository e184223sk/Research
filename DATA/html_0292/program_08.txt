
using Miniscript;
using UnityEngine;

public class MiniScriptPlayer : MonoBehaviour {
    private readonly Interpreter _interpreter = new Interpreter();

    [Multiline(7)] public string _scriptField;

    private void Start() {
        _interpreter.hostData = this;
        _interpreter.standardOutput = Debug.Log;
        _interpreter.implicitOutput = s =&gt; Debug.Log($@"implicit {s}");
        _interpreter.errorOutput = Debug.LogError;

        var f = Intrinsic.Create("mes"); 
        f.AddParam("text", string.Empty);
        f.code = (context, result) =&gt; {
            Debug.Log(context.GetVar("text").ToString());
            return Intrinsic.Result.Null;
        };

        _interpreter.Reset(_scriptField);
        _interpreter.Compile();
    }

    private void Update() {
        if (!_interpreter.Running()) return;

        // スクリプトが終了する、または途中で中断(yield)されたり、一定の処理時間が経過するまで処理が実行されます
        _interpreter.RunUntilDone();
    }
}

