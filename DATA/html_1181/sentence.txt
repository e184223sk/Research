More than 1 year has passed since last update.Windows 10ではデスクトップのPCアイコンのプロパティから「コンピューターの基本的な情報の表示」を表示できます。C#ではSHGetKnownFolderIDListにFOLDERID_ComputerFolderを与えてLPITEMIDLISTを取得した後、SEE_MASK_INVOKEIDLISTを指定してShellExecuteExWを呼び出すことでこれを表示できます。Windows 10以外ではおそらく普通にPCのプロパティが表示されます。SHGetKnownFolderIDListの戻り値であるpidlComputerはアンマネージリソースのポインタであり、Marshal.FreeCoTaskMemで解放する必要があります。tryの中でvar pidlComputer = ...とするとfinallyのスコープからはpidlComputerを参照できないので、tryの外側でpidlComputerを宣言しています。この冗長さを回避するためにはSafeHandleの派生クラスを作成してusingと組み合わせます。構造体はnew 型名 {field1 = ..., field2 = ..., ...}の形式で初期化できます。P/Invoke時（DllImport属性を持つ関数の呼び出し時）、構造体中の文字列は自動的にIntPtr型へ変換・復元されます。IntPtrを指定して毎回Marshal.PtrToStringAnsi/Uniを呼び出すこともできますが、文字列を再利用しなければこちらの方が簡潔です。変換時のANSI/UNICODEはStructLayout属性のCharSetで指定します。C#側で値渡しした構造体（Guid等）をP/Invoke時にそのポインタとして渡します。C++のREFCLSIDやREFIIDにC#のtype(...).GUID等を渡すとき、ref Guid ...とすると必要になる一時的な変数に省略に使います。


