More than 1 year has passed since last update.TextBlockに設定された文字列が表示しきれない時省略記号を付けたい。xamlを示します。上記のxamlの結果を示します。
上の結果からTextTrimmingプロパティにCharacterEllipsisを設定した時は、
1文字でも多く表示し、収まらないない場合末尾に"..."が表示され、
それ以降の文字は表示されないことが確認できました。xamlを示します。上記のxamlの結果を示します。
上の結果からTextTrimmingプロパティにWordEllipsisを設定した時は、
単語単位でできる限り多く表示し、収まらないない場合末尾に"..."が表示され、
それ以降の文字は表示されないことが確認できました。CharacterEllipsis設定時と違うことは1文字単位では省略しないということが確認できました。多くの場合は、前述のTextTrimmingの設定だけで済むと思いますが中には、末尾に表示される文字を"..."ではなく"(略"みたいな感じで
表示させたい場合もあるかと思います。というわけで自分で指定文字以降は省略などのカスタムしたい場合はConverterを使用します。
また、TextBlockのフォントサイズ等の書式設定も文字列の幅計算時に必要になるため、複数のオブジェクトをバインドさせるためにMultiBindingを使用します。Converterとは？という方はこちらのサイトで紹介されているのでご覧ください。
MultiBindingとは？という方はこちらのサイトで紹介されているのでご覧ください。では、xamlを示します。上記では、MultibindingをTextBlockのTextプロパティに使用していますが、Convereterにはここで記述した順番でvalues配列に詰められますので、記述する順番に注意してください。EnglishWordが設定されているTextBlockのMultiBindingのvalues配列の詰められる内容です。また、TextBlockからActualWidthプロパティを取得することは可能ですが、それだとConverter処理時ActualWidthに0が入っていることがあり適切な処理ができなかったので、ActualWidthプロパティだけ別にバインドしています。以下にCustomTrimmingViewModelクラスを示します。行っていることは文字列を設定し表示しているだけです。今回は1度設定したら文字列は変更していないので、INotifyPropertyChangedの実装も要らないと思います。では最後にTextBlockTrimmingConverterクラスを記載します。MultiBindingのConverterに設定する場合はIMultiValueConverterを実装しなければなりません。
上記の設定では、省略時に末尾に設定する文字列を直接設定していますが、ソース内のコメントに書いている通りxaml側でConverterParameterに設定しても同じように表示されました。
以下に設定例を記載します。これらの結果を以下に示します。
上記の結果から、省略記号をMultiBindingとConverterでカスタムすることができることが確認できました。
ただ、今の文字列省略判定処理は判定を範囲内に収まるまで最後尾から1文字ずつ削る処理を繰り返しているので、設定される文字列が多くなればなるほど、重くなります。
なので2分探索等の探索アルゴリズムを採用された方が早くなると思います。調べている中で見かけた省略処理関係で役に立つかもしれないサイトのURLも記載しておきます。自分で省略記号をカスタムする方法がConverter以外にありましたら教えていただけると嬉しいです。中身が薄い記事でも時間はかかりますね。。。1
ちなみに省略時に使用される三点リーダのunicodeは\x2026みたいです。2
参考URL : https://referencesource.microsoft.com/#PresentationCore/Core/CSharp/System/Windows/Media/TextFormatting/TextTrailingWordEllipsis.cs,f319f4c292028bf3,references※ソースコードは自己責任でご自由にご利用くださいたくさん記事を書かれる人尊敬します。 ↩何とか省略記号だけ置き換えようと頑張りましたが、途中で力尽きました... ↩


