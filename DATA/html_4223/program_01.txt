
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using NCMB; //追記
using System;

 public class NCMBTest : MonoBehaviour
    {
        [ContextMenu("Test")]
        void Test()
        {
            StartCoroutine(TestCoruotine());
        }

        private IEnumerator TestCoruotine()
        {
            bool isConnecting = true;

            if (NCMBUser.CurrentUser == null)
            {
                // ログインしていない
                yield break;
            }
            NCMBQuery&lt;NCMBObject&gt; query = new NCMBQuery&lt;NCMBObject&gt;("クラス名");
            //一致する値で取得（例えばユーザーID）
            query.WhereEqualTo("キー", "値");
            //ソートkeyを設定,updateDateやcreateDateもOK
            query.OrderByDescending("updateDate");
            //12/1~12/31で抽出,DateTime型で渡せばOK
            query.WhereGreaterThanOrEqualTo("updateDate", new DateTime(2018,12,1));
            query.WhereLessThanOrEqualTo("updateDate", new DateTime(2018, 12, 31));
            //検索結果を取得
            query.FindAsync((List&lt;NCMBObject&gt; objList, NCMBException e) =&gt;
            {
                if (e != null)
                {
                    //検索失敗時の処理
                    Debug.Log("失敗");
                }
                else
                {
                    Debug.Log("成功");
                    //objListを使う処理
                    OnResult(objList);
                }
                // ログイン処理終了
                isConnecting = false;
            });

            // ログイン処理が終了するまで以下の行で待機
            yield return new WaitWhile(() =&gt; { return isConnecting; });
        }

        void OnResult(List&lt;NCMBObject&gt; objList)
        {
            /*君だけの処理を書こう！*/

            //ただし...
            //エラーになる
            Debug.log(objList[0]["createDate"]);
            //エラーになる
            Debug.log(objList[0]["updateDate"]);
        }
    }

