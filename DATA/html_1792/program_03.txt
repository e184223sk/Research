
using System;
using System.Collections.Generic;
using Object = System.Object;
using Random = UnityEngine.Random;

public static class IReadOnlyListExtensions
{    
    private static readonly int[] TempIndices = new int[1024];
    private static readonly Object LockObject = new Object();

    /// &lt;summary&gt;
    /// 候補が空のときはdefault値を返します
    /// &lt;/summary&gt;
    public static T GetAtRandom&lt;T&gt;(this IReadOnlyList&lt;T&gt; ir, Func&lt;T,bool&gt; predicate)
    {
        lock (LockObject)
        {
            int count = 0;
            // 条件に一致する要素のindexを取得します
            for (int i = 0; i &lt; ir.Count; i++)
            {
                if (predicate(ir[i]))
                {
                    TempIndices[count] = i;
                    count++;
                }
            }

            if (count == 0)
            {
                return default;
            }

            // 抽出したindexから抽選して返します
            int randomIndex = TempIndices[Random.Range(0, TempIndices.Length)];
            return ir[randomIndex];
        }
    }
}

