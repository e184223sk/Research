
public class Cell : INotifyPropertyChanged
{
    public event PropertyChangedEventHandler PropertyChanged;
    private void RaisePropertyChanged([CallerMemberName]string propertyName = null)
    =&gt; PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));

    private bool _IsAlive;
    /// &lt;summary&gt;
    /// 生存しているか
    /// &lt;/summary&gt;
    public bool IsAlive
    {
        get =&gt; _IsAlive;
        set
        {
            if (_IsAlive == value)
                return;
            _IsAlive = value;
            RaisePropertyChanged();
        }
    }

    /// &lt;summary&gt;
    /// セルの位置
    /// &lt;/summary&gt;
    public Position Position { get; set; }

    private bool nextAlive;
    private List&lt;Cell&gt; neibers;

    /// &lt;summary&gt;
    /// 次の世代での生存状態の決定
    /// &lt;/summary&gt;
    internal void DetermineNextGeneration()
        =&gt; nextAlive = DetermineNextAlive(IsAlive, neibers.Select(c =&gt; c.IsAlive));

    /// &lt;summary&gt;
    /// 生存状態の更新
    /// &lt;/summary&gt;
    internal void UpdateGeneration()
        =&gt; IsAlive = nextAlive;

    /// &lt;summary&gt;
    /// 隣接セルの受け取り
    /// &lt;/summary&gt;
    /// &lt;param name="cells"&gt;隣接セル候補&lt;/param&gt;
    internal void SetNeiberCells(IEnumerable&lt;Cell&gt; cells)
        =&gt; this.neibers = cells.Where(c =&gt; IsNeiber(c)).ToList();

    /// &lt;summary&gt;
    /// 与えられたCellが隣接セルか判定する
    /// &lt;/summary&gt;
    internal bool IsNeiber(Cell another)
        =&gt; (this != another) &amp;&amp;
            Math.Abs(another.Position.Row - this.Position.Row) &lt;= 1 &amp;&amp;
            Math.Abs(another.Position.Column - this.Position.Column) &lt;= 1;

    /// &lt;summary&gt;
    /// 次の世代での生死を決定する
    /// &lt;/summary&gt;
    private static bool DetermineNextAlive(bool currentAlive, IEnumerable&lt;bool&gt; neiberAlives)
    {
        var countneiberAlive = neiberAlives.Where(x =&gt; x).Count();

        //現在生きていて、
        if (currentAlive)
        {
            //過疎なら死
            if (countneiberAlive &lt;= 1)
            {
                return false;
            }
            //過密なら死
            if (countneiberAlive &gt;= 4)
            {
                return false;
            }
        }
        //死んでいて、
        else
        {
            //誕生なら生
            if (countneiberAlive == 3)
            {
                return true;
            }
        }
        //それ以外はそのまま
        return currentAlive;
    }

    public override string ToString() =&gt; IsAlive ? "Live" : "Death" + $"{Position}";
}

