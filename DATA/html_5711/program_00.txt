class MainWindowViewModel
{
    private Model appModel = new Model();

    public int CountRowColumn =&gt; appModel.CountRowColumn;

    public Cell[] Cells =&gt; appModel.Cells;

    public ReadOnlyReactiveProperty&lt;long&gt; Generation =&gt; appModel.Generation;

    public ReactiveProperty&lt;int&gt; IntervalMSec =&gt; appModel.IntervalMSec;

    public ReactiveCommand StartGameCommand { get; } = new ReactiveCommand();
    public ReactiveCommand StopGameCommand { get; } = new ReactiveCommand();

    public ReactiveCommandRandomStateCommand { get; } = new ReactiveCommand();

    public ReactiveProperty&lt;string&gt; SaveName { get; } = new ReactiveProperty&lt;string&gt;();
    public ReactiveCommand SaveStateCommand { get; } = new ReactiveCommand();

    public ObservableCollection&lt;WorldState&gt; SavedStates =&gt; appModel.SavedStates;

    public ReactiveProperty&lt;WorldState&gt; SelectedState { get; } = new ReactiveProperty&lt;WorldState&gt;(mode: ReactivePropertyMode.None);

    public ReactiveCommand RemoveStateCommand { get; } = new ReactiveCommand();

    public MainWindowViewModel()
    {
        StartGameCommand.Subscribe(appModel.StartGame);
        StopGameCommand.Subscribe(appModel.StopGame);
        RandomStateCommand.Subscribe(appModel.RandomizeState);
        SaveStateCommand.Subscribe(_ =&gt; appModel.SaveState(SaveName.Value));
        SelectedState.Subscribe(appModel.LoadState);
        RemoveStateCommand.Subscribe(_ =&gt; appModel.SavedStates.Remove(SelectedState.Value));
    }
}

