
[CompilerGenerated]
private sealed class &lt;Hoge&gt;d__1 : IAsyncStateMachine
{
    public int &lt;&gt;1__state;

    public AsyncTaskMethodBuilder &lt;&gt;t__builder;

    private int &lt;i&gt;5__1;

    private TaskAwaiter &lt;&gt;u__1;

    void IAsyncStateMachine.MoveNext()
    {
        int num = this.&lt;&gt;1__state;
        try
        {
            TaskAwaiter awaiter;
            TaskAwaiter awaiter2;
            if (num != 0)
            {
                if (num == 1)
                {
                    awaiter = this.&lt;&gt;u__1;
                    this.&lt;&gt;u__1 = default(TaskAwaiter);
                    this.&lt;&gt;1__state = -1;
                    goto IL_F2;
                }
                this.&lt;i&gt;5__1 = 0;
                awaiter2 = Task.Delay(100).GetAwaiter();
                if (!awaiter2.IsCompleted)
                {
                    this.&lt;&gt;1__state = 0;
                    this.&lt;&gt;u__1 = awaiter2;
                    Program.&lt;Hoge&gt;d__1 &lt;Hoge&gt;d__ = this;
                    this.&lt;&gt;t__builder.AwaitUnsafeOnCompleted&lt;TaskAwaiter, Program.&lt;Hoge&gt;d__1&gt;(ref awaiter2, ref &lt;Hoge&gt;d__);
                    return;
                }
            }
            else
            {
                awaiter2 = this.&lt;&gt;u__1;
                this.&lt;&gt;u__1 = default(TaskAwaiter);
                this.&lt;&gt;1__state = -1;
            }
            awaiter2.GetResult();
            int num2 = this.&lt;i&gt;5__1;
            this.&lt;i&gt;5__1 = num2 + 1;
            Console.WriteLine(num2);
            awaiter = Task.Delay(100).GetAwaiter();
            if (!awaiter.IsCompleted)
            {
                this.&lt;&gt;1__state = 1;
                this.&lt;&gt;u__1 = awaiter;
                Program.&lt;Hoge&gt;d__1 &lt;Hoge&gt;d__ = this;
                this.&lt;&gt;t__builder.AwaitUnsafeOnCompleted&lt;TaskAwaiter, Program.&lt;Hoge&gt;d__1&gt;(ref awaiter, ref &lt;Hoge&gt;d__);
                return;
            }
            IL_F2:
            awaiter.GetResult();
            num2 = this.&lt;i&gt;5__1;
            this.&lt;i&gt;5__1 = num2 + 1;
            Console.WriteLine(num2);
        }
        catch (Exception exception)
        {
            this.&lt;&gt;1__state = -2;
            this.&lt;&gt;t__builder.SetException(exception);
            return;
        }
        this.&lt;&gt;1__state = -2;
        this.&lt;&gt;t__builder.SetResult();
    }

    [DebuggerHidden]
    void IAsyncStateMachine.SetStateMachine(IAsyncStateMachine stateMachine)
    {
    }
}

