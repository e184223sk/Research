
    [SerializeField, Header("スプライトとpivot.xからsize自動計算")]
    public bool autoSizeAdjust = true;

    // マテリアルのメインテクスチャサイズ
    private Vector2Int texSize;

    // Spriteのテクスチャ領域
    private RectInt spriteRect;

    // Inspector 表示用の警告メッセージ
    public string heplMessage;

    private void doAutoSizeAdjust()
    {
        Debug.LogFormat("Texture size:({0},{1})", texSize.x, texSize.y);
        Debug.LogFormat("Sprite rect:({0},{1})-({2},{3})", spriteRect.x, spriteRect.y, spriteRect.width, spriteRect.height);
        pivot.y = 0;
        pivot.x = Mathf.Clamp(pivot.x, 0, spriteRect.width);

        size.z = pivot.x;
        size.x = spriteRect.width - pivot.x;
        size.y = spriteRect.height - spriteRect.width / 2;

        if (size.y &lt; 0)
        {
            heplMessage = "スプライトの高さが足りません。最低でも横幅の半分以上必要です。";
            size.y = 0;
        }
    }

    void Start()
    {
        if (!needRestruct) return;
        needRestruct = true;
        heplMessage = null;

        if (fieldsNotReady()) return;
        spriteRect = GetSpriteRect();
        texSize = GetTextureSize();

        if (autoSizeAdjust)
        {
            doAutoSizeAdjust();
        }
        else if (!verifySize())
        {
            heplMessage = "スプライトのサイズは指定の3Dサイズに必要な大きさがありません";
        }

        //... 中略 ... //
    }

    private bool verifySize()
    {
        var width = size.x + size.z;
        if (spriteRect.width &lt; width) return false;
        return spriteRect.height &gt;= size.y + width / 2;
    }

