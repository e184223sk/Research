More than 1 year has passed since last update.コマンドライン引数と言えばあれですみたいなやつ。　このa b c d が↓の例だとそれぞれエントリポイントであるMain関数の引数(args)に入りますね。しかし、これだとという欠点があります。そのため、せめてこんな感じでurlパラメータみたいに、=で指定したいところ。
では、これをプログラムで受け取った時にどう解析(パース)するか色々な方法はありますが…（本題）Linqを使えば1行です。(引数の変数は string[] args とする)シンプル！一応説明をすると、まず
args.Select(arg =&gt; arg.Split('='))
で、引数で渡されているstring[]の要素一つ一つを'='で分割、in=d:\huga.txt なら、 [0]="in",[1]="d:\huga.txt" に分割されます。　この時点で、 string[] が IEnumerable&lt;string[]&gt; に(=で分割されたstring[]が列挙)次に
.Where(s =&gt; s.Length == 2)
で、=で分割されたstring[]の要素数が2のものだけに厳選。　引数からイコールが入っていないパターンと a=b=c のように、イコールが2つ以上ある物を弾いてます。最後に
.ToDictionary(v =&gt; v[0], v =&gt; v[1]);
で、=で分割されたstring[]の[0]の方をKeyに、[1]の方をValueにしたDictionaryに変換して完了です。
(一つ前のWhereで要素数2が確定しているので、範囲チェックが必要ない)これで、この引数だとしてこのように、Dictionry化されているので、使いやすい！！もちろん世の中にはたくさん高機能なパーサーがあるので、それを使えばいいと言えばそれまでなんですが。
ちょっとテストで作ってるコンソールアプリにライブラリとか、手の込んだパーサー入れたくない。　という人（例えば自分）には手軽で良いと思います。ちょっとまたんか、引数省略すると例外発生するではないか!!
まぁ、そりゃそうですね。　このプログラムを引数指定しないで実行すると、と例外発生してしまいます。まぁ、そこは良しなにContainsKeyとかやってくだされば～というのは簡単ですが。C#7から、out変数宣言の拡張がされたので、これまた1行で済むと言えば済みます。これでinDataには、コマンドライン引数で in=*** が指定されている時には *** の部分が入りますし、指定されていない場合はnullになります。
やったね！まぁ、個人的にはこういう拡張メソッドを用意したほうが良いと思いますけれど。それでは。


