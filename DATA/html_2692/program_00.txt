private static HttpClient client;

public void mainRun()
{
    var filename = @"&lt;解凍されたファイル名&gt;"; // 本当は全体パスにしています
    // ファイルがなければダウンロードします
    if (!File.Exists(filename))
    {
        // ダウンロードが終わるまで待ち合わせます
        GetDownloadFile().GetAwaiter().GetResult();
    }
         :
         :
         // ファイルの内容をチェック・取り込みなどしてますが割愛します
}

///
/// ダウンロードする
///
public async Task GetDownloadFile()
{
   try
   {
       // まずは、スクレイピングするデータを取得します
       var response = await client.GetAsync(@"&lt;スクレイピングするサイトのURL&gt;");
       var sorce = await response.Content.ReadAsStringAsync();

       // パースします
       var doc = default(IHtmlDocument);  
       var parser = new HtmlParser();
       doc = await parser.ParseDocumentAsync(sorce);    // ここが変わっています!!

       // 取得したいURLデータを探します
       // 今回取得したいデータは、同一のselectorの最後のデータでしたので、
       // .Last()で取得しています
       // .Select()とかで取得したほうがいいこともあると思います
       var url = doc.QuerySelectorAll("&lt;取得したい条件&gt;").Last().GetAttribute("href");

       // ファイルをダウンロードします
       // 今回取得したURLはhttps://xxx から始まるURLなのでそのまま使用しています
       WebClient webClient = new WebClient();
       webClient.DownloadFile(url, &lt;保存するファイル名（絶対パスで）&gt;);

       // ZIPファイルを解凍します
       ZipFile.ExtractToDirectory(&lt;保存するファイル名（絶対パスで）&gt;, &lt;解凍先フォルダー名&gt;);
   }
   catch (Exception e)
   {
       // エラー処理
   }
}

