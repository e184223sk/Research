
private async void Button_Click_4(object sender, RoutedEventArgs e)
{
    var t1 = Task.Run(() =&gt; { throw new NotImplementedException(); });
    var t2 = Task.Run(() =&gt; { throw new ArgumentException(); });
    var t3 = Task.Run(() =&gt; { throw new InvalidOperationException(); });
    var all = Task.WhenAll(t1, t2, t3);

    try
    {
        await all;
    }
    catch (Exception ex)
    {
        if (all.Exception is AggregateException age)
        {
            age.Handle((excep) =&gt;
            {
                // excep はAggregateExceptionに包まれている個別の例外。
                Debug.WriteLine(excep.GetType());

                // trueにしたら、ここでもう処理済みということで例外を再throwしない
                // falseにしたら、まだ未処理ということで例外を再throwする。
                return true;
            });
        }
    }
}

