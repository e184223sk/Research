More than 1 year has passed since last update.この記事は リンク情報システム の「2019 Tech Connect Summer」のリレー記事です。
engineer.hanzomon のグループメンバーによってリレーされます。2019 Tech Connect Summer インデックスはこちら1日目らしいです。頑張ります。
こんなニッチな記事が初っ端で大丈夫か。静的コード解析 (static code analysis) または静的プログラム解析 (static program analysis)とは、
コンピュータのソフトウェアの解析手法の一種であり、実行ファイルを実行することなく解析を行うこと。Wiki:静的コード解析ちょっと何言ってるかわかんない。(わかるけど)(ここでいうコードはcodeではなくchord)
(エンジニアらしからぬ発言)ということで「ギターフレット上で押さえたところからギターコードを解析する」プログラムを作成してみたいと思います。こんな感じですかね。自分で「音も鳴る」とか書いておいて、全然どうすればいいかわかんないという悪夢
そんなリアルな音は求めてないので今回はMIDI音源を鳴らします。以下のようなGUIを作成(まさにC#)
以下のようなクラスを作成C#(ドの#)のメジャーコードが鳴りましたね。
(これがやりたかっただけ)上記のソースを流用して以下のようなGUIを作成しました。
ラジオボタンをクリックするとMIDI音源が流れます。
以下を使ってギターで押さえた個所をコード分析します。
ギターコードなんて死ぬほどたくさんあるので
「ここがルート音で、次の音がこれだけ離れてて…」なんて解析するのは至極面倒midiファイルを読み込んだだけでコードの名前当ててくれる何かがあればなぁー
とか思っていたらpythonのmusic21というライブラリでできるようなので使ってみます。それと同時に前章で作成したGUIからMIDIファイルを作成してみます。MIDIファイルの構造を読み解くためにこのページを参考にしてプログラムを作成しました。
ってか難しいな…。実装したら予想以上に汚くなりました。一応midiファイルを作成することができました。music21をインストール以下のようなスクリプトを作成テスト用にmidiを作成(わかりやすくCメジャー)、読み込ませてみる。おお、見事Cメジャーと言い当てました。ここまでで作ったものをいい感じに結合する。こんな感じにしてみました。さて実行結果、試しにDメジャーを入力して解析ボタンを押すと…
ちゃんと出ましたね！
なんか複雑なコードも入れてみましょう。例えばギターの神様ことジミ・ヘンドリックスが多用したコードで知られる、
E7(#9) 通称 ジミヘンコードを入力してみます。
うーん、よくわからん。
music21というライブラリは音楽全般の解析用ライブラリみたいなので
ギターコードのように簡易な表記にはしてくれないようです…Python ScriptのExe化とかもやってみたいと思っていたが間に合わなかったので、
機会があったらまた同じようなことに挑戦してみたいと思います。


