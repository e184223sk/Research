More than 3 years have passed since last update.O'Reilly プログラミング C# を元に勉強しながらテストコードなどを殴り書きしていくスタイル．型推論型 var の使い方は，Microsoft からガイドライン(https://msdn.microsoft.com/ja-jp/library/bb384061.aspx) に詳細が掲載されている．for, foreach は比較的分かりやすい．とにかく var で受け取れば良い．結果(コンソール)．GetType は，CLR名を返すんだね．ローカル変数のときは，少し複雑になる．整数リテラル(整数の即値)で宣言したときは，基本的には 32bit 符号付き整数になる．
(まあ，当然と言えば当然かも)結果．sbyte, short など，int32 以内に収まる整数型は int32 になる．

| value name         |                      value | get type       |
|:-------------------|---------------------------:|:---------------|
| intention_is_sbyte |                        128 | System.Int32   |
| intention_is_short |                     32,767 | System.Int32   |
| intention_is_int   |                     65,536 | System.Int32   |
| intention_is_long  |              4,294,967,296 | System.Int64   |
| intention_is_ulong |  9,223,372,036,854,775,808 | System.UInt64  |
では，sbyte や short の範囲のときはどうすればいいか．var をやめればよい．
おとなしく，sbyte や short で宣言しろってことですね．次の場合は混乱するかもしれない．
csharp
Int16 value      = 16500;
var whatItWillBe = value + 1;
Console.WriteLine(whatItWillBe);
Console.WriteLine(whatItWillBe.GetType());
結果

16501
System.Int32
はい，int になりました．整数リテラルが int なので，short + int = int となったんでしょうね．
他のプログラミング言語でも 大きい方の型を採用することがほとんどです．
なので，以下の例はコンパイルエラーが出ます．このように，便利だからと言ってなんでも var を使うと，コンパイルエラーとなります．
引数に渡す変数は，明確に関数の引数に宣言されている変数型を合わせるべきです．


