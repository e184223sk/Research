
// 整数リテラルで宣言する
//
// これら全ては，Int32, Int64, UInt64 で型推論を試みることを確認する．
// できるだけ Int32 で済ませようとし，Int32 以上ならば Int64，
// それ以上ならば UInt64 になることを確認する．
//
// すなわち，優先度は以下の通りとなる
//   1.   int,  Int32  32bit 符号付き整数
//   2.  long,  Int64  64bit 符号付き整数
//   3. ulong, UInt64  64bit 符号なし整数
var intention_is_sbyte = 128;                  // sbyte  = Int8 のつもり
var intention_is_short = 32767;                // short  = Int16 のつもり
var intention_is_int   = 65536;                // int    = Int32 のつもり
var intention_is_long  = 4294967296;           // long   = Int64 のつもり
var intention_is_ulong = 9223372036854775808;  // ulong = UInt64 のつもり

// 標準出力用のフォーマット
var format = "| {0, -19}| {1, 26:N0} | {2, -15}|";

Console.WriteLine(String.Format(format, "value name",
                  "value", "get type"));

Console.WriteLine("|:-------------------|" +
                  "---------------------------:|" +
                  ":---------------|");

Console.WriteLine(String.Format(format, "intention_is_sbyte",
                  intention_is_sbyte, intention_is_sbyte.GetType()));

Console.WriteLine(String.Format(format, "intention_is_short",
                  intention_is_short, intention_is_short.GetType()));

Console.WriteLine(String.Format(format, "intention_is_int",
                  intention_is_int, intention_is_int.GetType()));

Console.WriteLine(String.Format(format, "intention_is_long",
                  intention_is_long, intention_is_long.GetType()));

Console.WriteLine(String.Format(format, "intention_is_ulong",
                  intention_is_ulong, intention_is_ulong.GetType()));

