More than 3 years have passed since last update.1,2,3,4..Nの要素からなる順列において、i番目の要素が iでない順列を攪乱(かくらん)順列といいます。完全順列とも言うようです。 複数人でプレゼントを交換する場合のパターンだと言えば具体的イメージが湧くと思います。ソースコードは、GitHubでも公開しています。攪乱順列を求めるのに、「n個の異なった要素の中から k個を選ぶ順列」で示したPermutationクラスをそのまま利用しています。攪乱順列を求めるDerangementクラスでは、まず、このPermutationクラスを使い、普通の(重複のない)順列を求め、次に、i 番目の要素が、オリジナルの i番目の要素と一致する場合を取り除くという当たり前すぎる方法で、攪乱順列を求めています。このi番目の要素と一致する場合を取り除くところで、LINQの ZipメソッドとAllメソッドを使っています。Zipメソッドで２つの要素を比較しているのがミソですね。ジェネリックメソッドにしていますので、== 使えないので、Equalsメソッドで2つの値を比較しています。以下、Derangementクラスの利用サンプルです。結果は以下の通りです。この記事は、Gushwell's C# Programming Pageで公開したものを加筆・修正したものです。


