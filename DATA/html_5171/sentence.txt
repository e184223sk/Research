More than 3 years have passed since last update.覆銭問題とは、積み上げたコインを以下の手順でひっくり返すと何回目で初期状態に戻るかというものです。英語では、Penny Flipping Problem というらしいです。まずは作成したコードを載せます。その後簡単なコードの解説をしています。コインの枚数を入力できるようにしていますが、3～20に制限しています。初期設定のコードを省略するために、コインの表を false, 裏を trueで表しています。回数を求めるのにどちらが表面でも同じですから。
配列にセットしたコイン(bool型)を実際にひっくり返していって、元の状態(すべてがfalse）に戻るまで、処理を繰り返しています。PennyFlippingクラスには、IEnumerable&lt;int&gt;を戻り値として無限に繰り返すRepeatメソッドを定義しています。
事前に何回繰り返したら良いかわからない問題では、こういったメソッドを定義すると、すっきりしたコードが書けますね。PennyFlippingクラスのSolveメソッドの内部で、コインをひっくり返す処理をしていて、その経過を列挙しています。こうすれば、途中結果も表示できます。そして、この列挙した回数を数えれば、答えが見つかります。コードを見てもらえばわかりますが、intとbool[]のタプルを列挙しています。最新のC#はタプルが言語機能として備わっているのでとても便利です。実行結果です。初期状態は示していません。()の中はひっくり返した枚数を示しています。右側がひっくり返したあとの状態です。左が上を示し、一番右が底を示しています。ちなみに、途中経過を表示するコードは、以下のようにも書けます。変更したメソッドだけ示します。途中経過を示すのに、IObservable&lt;T&gt; 、IObserver&lt;T&gt; を使う方法もありますが、それはまた別のプログラムの時に紹介したいと思います。この記事は、Gushwell's C# Programming Pageで公開したものをに大幅に加筆・修正したものです。


