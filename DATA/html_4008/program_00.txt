internal class LargeSearchServiceImpl : LargeSearch.LargeSearchBase
{
    public override async Task GetImages(Condition request, IServerStreamWriter&lt;BufferResponse&gt; responseStream, ServerCallContext context)
    {
        // レスポンスのインスタンスは使いまわす
        BufferResponse response = new BufferResponse();

        byte[] buffer = new byte[1024];

        foreach (Stream stream in GetImages(request))
        {
            using (stream)
            {
                while (true)
                {
                    int length = await stream.ReadAsync(buffer, 0, buffer.Length).ConfigureAwait(false);

                    response.Data = length &lt;= 0 ? null : Google.Protobuf.ByteString.CopyFrom(buffer, 0, length);
                    response.Eof = length &lt; buffer.Length;

                    await responseStream.WriteAsync(response).ConfigureAwait(false);

                    if (response.Eof) { break; }
                }
            }
        }

    }

    /// &lt;summary&gt;
    /// 画像データを取得します。
    /// &lt;/summary&gt;
    /// &lt;param name="condition"&gt;取得条件&lt;/param&gt;
    /// &lt;returns&gt;画像データを格納しているストリーム&lt;/returns&gt;
    private IEnumerable&lt;Stream&gt; GetImages(Condition condition)
    {
        // 実際には条件に該当するファイルなどから列挙するように実装します。
        yield return new FileStream(@"image1.jpg", FileMode.Open, FileAccess.Read);
        yield return new FileStream(@"image2.jpg", FileMode.Open, FileAccess.Read);
    }
}

