
public class MyQueue&lt;T&gt;
{
    private readonly List&lt;T&gt; queue = new List&lt;T&gt;();
    private readonly int capacity;
    private readonly object locker = new object();

    public MyQueue(int capacity)
    {
        this.capacity = capacity;
    }

    public void Put(T data)
    {
        lock (locker)
        {
            while (queue.Count &gt;= capacity)
                Monitor.Wait(locker);
            queue.Add(data);
            Monitor.PulseAll(locker);
        }
    }

    public T Poll()
    {
        lock (locker)
        {
            while (queue.Count &lt;= 0)
                Monitor.Wait(locker);
            var data = queue[0];
            queue.RemoveAt(0);
            Monitor.PulseAll(locker);
            return data;
        }
    }
}

