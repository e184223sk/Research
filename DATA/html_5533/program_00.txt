        private BitmapSource CreateImage(string filePath, int scaledWidth, int scaledHeight)
        {
            try
            {
                using (System.IO.Stream stream = new System.IO.FileStream(
                    filePath,
                    System.IO.FileMode.Open,
                    System.IO.FileAccess.Read,
                    System.IO.FileShare.ReadWrite | System.IO.FileShare.Delete
                ))
                {
                    // 画像をデコード
                    BitmapDecoder decoder = BitmapDecoder.Create(
                        stream,
                        BitmapCreateOptions.PreservePixelFormat,
                        BitmapCacheOption.OnLoad
                    );

                    BitmapSource bmp = null;
                    if ((scaledWidth &gt; 0) &amp;&amp; (scaledHeight &gt; 0))
                    {
                        // 拡大/縮小したイメージを生成する
                        double scaleX = (double)scaledWidth / decoder.Frames[0].PixelWidth;
                        double scaleY = (double)scaledHeight / decoder.Frames[0].PixelHeight;
                        double scale = Math.Min(scaleX, scaleY);

                        // TransformedBitmapをそのまま保持する
                        bmp = new TransformedBitmap(decoder.Frames[0], new ScaleTransform(scale, scale));
                    }
                    else
                    {
                        // 原寸でイメージを生成する
                        bmp = new WriteableBitmap(decoder.Frames[0]);
                    }
                    bmp.Freeze();

                    return bmp;
                }
            }
            catch (Exception exc)
            {
                System.Diagnostics.StackFrame sf = new System.Diagnostics.StackFrame(1);
                System.Diagnostics.Debug.WriteLine(string.Format("[{0}]エラー：{1}", sf.GetMethod(), exc));
            }

            return null;
        }

