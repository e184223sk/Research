More than 1 year has passed since last update.ね。面倒くさいですよね。（iOSには無いわけですし・・・）
さしあたり一番簡単なのは「画面上の『ネガティブ的』なボタンと同等の機能をつける」事です。ダイアログを開いたのであれば、戻るキーが「閉じるボタン」や「戻るボタン」相当になればよいですし。
画面遷移したのであれば、戻るキーが「Backボタン」（前の画面に戻る）相当になればよいわけです。
そう書くと簡単のように聞こえますが、
画面遷移した次の画面で、ダイアログを表示した場合は？
戻るキーを押したら、ダイアログも閉じてしまう＋画面も前の画面に戻ってしまうでは困るわけです。これをまともに対応しようとすると、といった、管理が必要になります。　はい面倒臭いですね！そもそも、上記例の「画面遷移した次の画面で、ダイアログを表示した場合」って、普通はダイアログがモーダル的に表示されていて、後ろの「戻るボタン」は押せないようにしているのがほとんどのはず。（わざわざ後ろのボタンのintaractiveをfalseにしているのか、「タッチガード」的な全画面Panelを一枚噛ませてタッチイベントを遮断しているかのどちらかがほとんどでしょう）問題なのは、単純に戻るキーとボタンが押されたときの処理を関連付けてしまうと、uguiのイベントとは関係無しに処理が呼ばれてしまうことです。なので、徹底的にuguiのイベントを倣い、戻るキーの押下を指定ボタンへのマウスクリックへとすり替えてあげれば解決です。（よくわからんなりに調べて作ったので、大分力業ですが・・・）このScriptをButtonコンポーネントが乗っているGameObjectに追加します。
Target Button は勝手に同GameObjectのButtonがセットされます。
そして
Bind Key には割り当てたいハードキー を指定します(KeyCode の一覧が候補で出ます）
Androidの戻るキーは KeyCode.Escape で割り当たります。
なんと、これだけで、ボタンのタップとAndroidの戻るキーが同等になります！　シンプル！！Androidの戻るボタン対応1回目は、普通にマウスでダイアログの「戻るボタン」と画面の「バックボタン」をクリック、2回目はAndroidの戻るボタンによる処理。”クリックできるボタンのみ反応"するので、お手軽Android戻るキー対応としてはありなんじゃないかと。解説はこちらhttps://t.co/je9qlPXJ7V pic.twitter.com/DfkPELJYqpボタンを疑似的にクリックした相当なので、（利点でも欠点でもあるんですが）ボタンのTransitionがそのまま効きます。
↑の動画をよく見ると分かるんですが、戻るキーを押した時でもボタンの色が変化しています（戻るキーを押しっぱなしにすると、ボタンも押されっぱなしになる）
それが嫌！　という場合には使えないです。　悪しからず・・・。今回、 Androidの戻るキー対応 と銘打っては居ますが、既に書いた通りボタンには KeyCodeで割り当てるキーを指定することができます。
もう一つの使い道として、入力処理の一元化があります。初めてUnity(2019.3)使うので、練習としてテトリス？っていうのを作ってみました。聞くところによると「Tスピン」というのが強いらしいので見様見真似で実装してみましたが、回転力を強くしすぎてしまったようです。#madewithunityhttps://t.co/7XjEMvHJLx pic.twitter.com/us0kXPFT4Gこちらの動画のゲームで今回のKeyBind.csが実際に使われており、前半はマウスでボタンをクリックして操作ですが、後半はそれぞれのボタンに割り当てられたキーボードで操作しています。このように「複数方法の入力処理を制御」するにはなどなど。方法はありますがそれなりに面倒で。対して、↑の動画のゲームでは入力制御は「ボタン処理」のみ対象に記述しています。
そして、KeyBind.csはあくまでもボタンの疑似クリック処理なので、キーボード操作を増やしても入力制御処理は何も手を入れずに済んでいます。　つまり、ボタンによる入力処理で「処理の一元化」がされている状態です。もちろん、これは画面上にバーチャルパッド的なものをuguiで置いているから出来るだけなので適用範囲はそう広くは無いですが、使える人も少なくないのではないでしょうか。


