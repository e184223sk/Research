public class MathTest : MonoBehaviour
{
    public const int count = 1000000;
    public const int loop = 100;

    public static double f;

    IEnumerator Start()
    {
        yield return new WaitForSeconds(1f);
        Test();
    }

    static void Test()
    {
        long loopTime = 0L;
        long multTime = 0L;
        long sqrtTime = 0L;

        for (int i = 0; i &lt; loop; i++)
        {
            loopTime += Loop();
            multTime += Mult();
            sqrtTime += Sqrt();
        }

        Debug.Log($"{f}");

        Debug.Log($"Loop={loopTime} Mult={multTime} Sqrt={sqrtTime}");

        Debug.Log("for文あり");
        Debug.Log($"Mult={multTime / loop / 10L}us Sqrt={sqrtTime / loop / 10L}us");
        Debug.Log($"SqrtはMulの{(double) sqrtTime / multTime:F3}倍");

        Debug.Log("for文なし");
        multTime -= loopTime;
        sqrtTime -= loopTime;
        Debug.Log($"Mult={multTime / loop / 10L}us Sqrt={sqrtTime / loop / 10L}us");
        Debug.Log($"SqrtはMulの{(double) sqrtTime / multTime:F3}倍");
    }

    static long Loop()
    {
        f = 1.0;
        var sw = System.Diagnostics.Stopwatch.StartNew();
        for (int i = 0; i &lt; count; i++)
        {
            f = f;
        }

        sw.Stop();
        return sw.ElapsedTicks;
    }

    static long Mult()
    {
        f = 1.00001;
        var sw = System.Diagnostics.Stopwatch.StartNew();
        for (int i = 0; i &lt; count; i++)
        {
            f *= f;
        }

        sw.Stop();
        return sw.ElapsedTicks;
    }

    static long Sqrt()
    {
        f = 100000.0;
        var sw = System.Diagnostics.Stopwatch.StartNew();
        for (int i = 0; i &lt; count; i++)
        {
            f = System.Math.Sqrt(f);
        }

        sw.Stop();
        return sw.ElapsedTicks;
    }
}


