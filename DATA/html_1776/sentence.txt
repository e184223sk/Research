More than 1 year has passed since last update.WPFで値をBindingする際、そのままの値を使うのではなく
定数を加算、2倍、逆数など 簡単な演算をしたい事が度々あります。
毎回それ用にプロパティを用意したり、専用ValueConverterを作るのも面倒なので
Lambda式で処理を渡せる汎用のValueConverterを作ってみました。こちらに同じような記事があったのですが
Converterを書くのが面倒だというはなし
IronPythonか～と思い、自分でも作ることに。結果としては上手くいかず、今回は専用のValueConverterを作ることにしたのですが、
使える場面もあるかなと思い、ここに残す事にしました。Microsoft.CodeAnalysis.CSharp.Scriptingを使ってるのですが
EvaluateAsyncの初回起動が遅いためか、アプリそのものの起動時間がかかるようになってしまいました
(今回のケースでは起動時からTextBoxに初期値が入っていてConverterが走ります)。
Bindingの際にIsAsync=Trueとすると起動時間は短縮できるものの、
FallbackValueには固定値しか設定できないため、値が変わる度にちらついてしまいます。
Converter完了まで前回の値を表示しておく事ができれば良いのですが…Lambda式をConverterParameterで文字列として受け取り
Microsoft.CodeAnalysis.CSharp.Scriptingで処理しています。ConverterParameterで処理内容をLambda式で定義します。こんな感じ
起動さえすれば、実行中の速度は気にならないんですけどね～


