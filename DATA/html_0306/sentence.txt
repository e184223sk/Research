本記事は、サムザップ #1 AdventCalendar 2020の12/10の記事です。
12/9の記事は、@kurosawa_tomokazuさんのムービー再生中にFPSを落とさせない工夫でした。UnityでEditor拡張やScriptableObjectを使ってツールを作る時に、
あるディレクトリの中にあるアセットに対して何かしらの処理を行うために、そのディレクトリの中にあるアセットのパスの一覧を取得したいという場面に出くわすことは、割とよくあると思います。この時、起点となるディレクトリのパスをソースコードやScriptableObjectなどに文字列として定義してしまいがちになりますが、あまり良い方法とはいえません。ディレクトリのパスが変わってしまった場合、定義している文字列も変える必要があるからです。
ソースコード内に定義してしまっていれば、主にソースコードを書いているエンジニアしか変えることができませんし、ScriptableObjectに定義していたとしても、ディレクトリのパスの文字列を取得してくるという一手間が掛かってしまいます。では、どうすれば良いでしょうか。
その答えは、DefaultAssetにあります。Unityのドキュメントを見ると、DefaultAsset is used for assets that do not have a specific type (yet).とあり、
型が（まだ）決まっていないアセットは、DefaultAssetとして扱われるようです。具体的には、Unityプロジェクト内のディレクトリやExcelファイル等のUnityのアセット以外のアセットが、DefaultAssetとして扱われます。DefaultAsset型のフィールドをUnityエディタに表示させると、DefaultAssetをD&amp;Dで指定したりObject Pickerから選択したりすることができるようになります。
DefaultAssetは、Unity.Objectを継承しているので、
AssetDatabase.GetAssetPathメソッドでDefaultAssetのパス（Assetsディレクトリ以下の相対パス）を取得することができます。DefaultAssetを通してディレクトリのパスを取得するということをScriptableObjectとEditorWindowで行うとどうなるかを例として挙げます。さらに、上で取得したディレクトリのパスからそのディレクトリの中にあるアセットのパスの一覧を取得したい場合は、
AssetDatabase.FindAssetsやAssetDatabase.GUIDToAssetPathを使って、などとすれば、取得できます。本記事では、ネットでも比較的情報が少ないDefaultAssetについて紹介し、その使いどころの１つとして、Unityプロジェクト内のディレクトリをEditor上でD&amp;DやObject Pickerで指定できるようにするのに使えるということを書きました。
UnityのEditor拡張でツールを開発するとなると、まとまった情報が比較的少ない上に開発期間もそこまで取れないことが多いため、その時知っている事だけを使って開発を進めてしまいがちになりますが、
少しでも使いやすくメンテしやすいツール作りができるようになるために、Editor拡張についての情報を仕入れる時間もしっかり取っていきたいと思いました。明日は、@higuchi_yutaさんの記事です。


