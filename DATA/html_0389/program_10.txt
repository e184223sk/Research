
public  partial struct IntStructSample : System.IEquatable&lt;IntStructSample&gt;
{
    public int Value { get; }
    public IntStructSample(int value)
    {
        Value = value;
    }
    public override bool Equals(object obj) =&gt; ReferenceEquals(this, obj) || obj is IntStructSample other &amp;&amp; Equals(other);
    public override int GetHashCode() =&gt; Value.GetHashCode();
    public override string ToString() =&gt; Value.ToString();
    public static bool operator ==(IntStructSample left, IntStructSample right) =&gt; Equals(left, right);
    public static bool operator !=(IntStructSample left, IntStructSample right) =&gt; !Equals(left, right);
    public bool Equals(IntStructSample other)
    {


        return Value == other.Value;
    }
    public static explicit operator IntStructSample(int value) =&gt; new IntStructSample(value);
    public static explicit operator int(IntStructSample value) =&gt; value.Value;
}

