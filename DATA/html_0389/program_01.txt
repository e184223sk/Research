
public sealed class ProductId: IEquatable&lt;ProductId&gt;
{
    public int Value { get; }

    public ProductId(int value)
    {
        Value = value;
    }

    public override bool Equals(object obj) =&gt; ReferenceEquals(this, obj) || obj is ProductId other &amp;&amp; Equals(other);
    public override int GetHashCode() =&gt; Value.GetHashCode();
    public override string ToString() =&gt; Value.ToString();
    public static bool operator ==(ProductId left, ProductId right) =&gt; Equals(left, right);
    public static bool operator !=(ProductId left, ProductId right) =&gt; !Equals(left, right);

    public bool Equals(ProductId other)
    {
        if (ReferenceEquals(null, other)) return false;
        if (ReferenceEquals(this, other)) return true;
        return Value == other.Value;
    }

    public static explicit operator ProductId(int value) =&gt; new ProductId(value);
    public static explicit operator int(ProductId value) =&gt; value.Value;
}

public class CategroyId: IEquatable&lt;CategroyId&gt;
{
    public int Value { get; }

    public CategroyId(int value)
    {
        Value = value;
    }

    public override bool Equals(object obj) =&gt; ReferenceEquals(this, obj) || obj is CategroyId other &amp;&amp; Equals(other);
    public override int GetHashCode() =&gt; Value.GetHashCode();
    public override string ToString() =&gt; Value.ToString();
    public static bool operator ==(CategroyId left, CategroyId right) =&gt; Equals(left, right);
    public static bool operator !=(CategroyId left, CategroyId right) =&gt; !Equals(left, right);

    public bool Equals(CategroyId other)
    {
        if (ReferenceEquals(null, other)) return false;
        if (ReferenceEquals(this, other)) return true;
        return Value == other.Value;
    }

    public static explicit operator CategroyId(int value) =&gt; new CategroyId(value);
    public static explicit operator int(CategroyId value) =&gt; value.Value;
}

