
public sealed partial class CustomizedPropertyName : System.IEquatable&lt;CustomizedPropertyName&gt;
{
    public string StringValue { get; }
    public CustomizedPropertyName(string value)
    {
        StringValue = value;
    }
    public override bool Equals(object obj) =&gt; ReferenceEquals(this, obj) || obj is CustomizedPropertyName other &amp;&amp; Equals(other);
    public override int GetHashCode() =&gt; StringValue.GetHashCode();
    public override string ToString() =&gt; StringValue.ToString();
    public static bool operator ==(CustomizedPropertyName left, CustomizedPropertyName right) =&gt; Equals(left, right);
    public static bool operator !=(CustomizedPropertyName left, CustomizedPropertyName right) =&gt; !Equals(left, right);
    public bool Equals(CustomizedPropertyName other)
    {
        if (ReferenceEquals(null, other)) return false;
        if (ReferenceEquals(this, other)) return true;
        return StringValue == other.StringValue;
    }
    public static explicit operator CustomizedPropertyName(string value) =&gt; new CustomizedPropertyName(value);
    public static explicit operator string(CustomizedPropertyName value) =&gt; value.StringValue;
}

