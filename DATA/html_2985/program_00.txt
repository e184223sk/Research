class DataManager
{
    // データ読み書き排他用
    ReaderWriterLockSlim rwlock = new ReaderWriterLockSlim();

    /// &lt;summary&gt;
    /// データリスト
    /// &lt;/summary&gt;
    private List&lt;int&gt; listData = new List&lt;int&gt;();


    ~DataManager()
    {
        // しっかり破棄する
        rwlock.Dispose();
    }

    /// &lt;summary&gt;
    /// リストを参照する処理
    /// &lt;/summary&gt;
    private IEnumerable&lt;int&gt; ListData
    {
        get
        {
            try
            {
                // 読み込みロック取得
                rwlock.EnterReadLock();
                return listData.ToList();
            }
            finally
            {
                // 読み込みロック解放
                if(rwlock.IsReadLockHeld)
                    rwlock.ExitReadLock();
            }
        }
    }

    /// &lt;summary&gt;
    /// リストにデータを入れる処理
    /// &lt;/summary&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public void LoadMaster()
    {
        try
        {
            // 書き込みロック取得
            _rwlock.EnterWriteLock();

            // データを取得するような処理
            listData = new List&lt;int&gt;{ 0, 1, 2 };
        }
        finally
        {
            // 書き込みロック解放
            if(_rwlock.IsWriteLockHeld)
                _rwlock.ExitWriteLock();
        }
    }
}

