
        public IDisposable Subscribe(IObserver&lt;T&gt; observer)
        {
            if (observer == null) throw new ArgumentNullException("observer");

            var ex = default(Exception);

            lock (observerLock)
            {
                ThrowIfDisposed();
                if (!isStopped)
                {
                    var listObserver = outObserver as ListObserver&lt;T&gt;;
                    if (listObserver != null)
                    {
                        outObserver = listObserver.Add(observer);
                    }
                    else
                    {
                        var current = outObserver;
                        if (current is EmptyObserver&lt;T&gt;)
                        {
                            outObserver = observer;
                        }
                        else
                        {
                            outObserver = new ListObserver&lt;T&gt;(new ImmutableList&lt;IObserver&lt;T&gt;&gt;(new[] { current, observer }));
                        }
                    }

                    return new Subscription(this, observer);
                }

                ex = lastError;
            }


