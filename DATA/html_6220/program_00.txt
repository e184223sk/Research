using System;
using System.Collections.Generic;
using System.Linq;

namespace DebugUtilities{
    /// &lt;summary&gt;
    /// usage  DebugUtilities.DebugTimeCounter logs = new DebugUtilities.DebugTimeCounter();
    ///    logs.Add(linenumber);
    /// &lt;/summary&gt;
    public class DebugTimeCounter
    {
        private static DateTime lastaccesstime = DateTime.Now;
        private static IList&lt;DebugTimeCounterLog&gt; Logs = new List&lt;DebugTimeCounterLog&gt;();
        private const string LOG_HEADER = "fff linenumber";
        private const string LOG_FORMAT = "{0:000} {1:00000}"; // ミリ秒３桁 linenumber５桁想定
        public void Add(int linenumber)
        {
            Add(linenumber, DateTime.Now);
        }
        public void Add(string line)
        {
            Add(0, DateTime.Now, line);
        }

        public void Add(int linenumber, DateTime logtime, string line = "")
        {
            var log = new DebugTimeCounterLog()
            {
                LineNumber = linenumber,
                LineContent = line,
                BetweenTimes = logtime - lastaccesstime
            };
            Logs.Add(log);
            lastaccesstime = logtime;
        }


        public void Clear()
        {
            Logs.Clear();
            lastaccesstime = DateTime.Now;
        }
        public string GetLog()
        {
            var log = new List&lt;String&gt;();
            log.Add(LOG_HEADER);
            log.AddRange(Logs.Select(ValidationConstraints =&gt; string.Format(LOG_FORMAT, ValidationConstraints.BetweenTimesFFF, ValidationConstraints.LineNumber, ValidationConstraints.LineContent)));
            return String.Join(Environment.NewLine,log.ToArray&lt;string&gt;()) ;
        }
    }

    public class DebugTimeCounterLog
    {
        public int LineNumber { get; set; }
        private TimeSpan betweenTimes;
        public TimeSpan BetweenTimes { get { return betweenTimes; } set { betweenTimes = value; } }
        public int BetweenTimesFFF { get { return betweenTimes.Milliseconds; } }
        private string lineContent = string.Empty;
        public string LineContent {
            get { return lineContent; }
            set { lineContent = value; }
        }
    }
}

