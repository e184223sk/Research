using System;
class Pure{

 public static
 Func&lt;object,Func&lt;object&gt;&gt;
 pure=a=&gt;()=&gt;a;

 public static
 Func&lt;Func&lt;object&gt;,
 Func&lt;Func&lt;object,Func&lt;object&gt;&gt;,
 Func&lt;object&gt;&gt;&gt;
 bind=m=&gt;f=&gt;()=&gt;f(m())();

 public static
 Func&lt;Func&lt;object&gt;,object&gt;
 exec=m=&gt;m();

 public static
 Func&lt;Func&lt;object,object&gt;,
 Func&lt;object,Func&lt;object&gt;&gt;&gt;
 wrap=f=&gt;a=&gt;()=&gt;f(a);
}

class MainClass{
 static void Main(){

   string str="";

   Func&lt;object,Func&lt;object&gt;&gt;
   put=Pure.wrap(a=&gt;{Console.WriteLine(a);
   return a;});

   Func&lt;object,Func&lt;object&gt;&gt;
   get=Pure.wrap(x=&gt;Console.ReadLine());

   Func&lt;int,Func&lt;object,Func&lt;object,
   Func&lt;object,object&gt;&gt;&gt;&gt;
   _hanoi=n=&gt;from=&gt;work=&gt;dest=&gt;null;
   _hanoi=n=&gt;from=&gt;work=&gt;dest=&gt;
   { if(n&gt;=2)_hanoi(n-1)(from)(dest)(work);
     str=str+n.ToString()+" を "
     +from+" から "+dest+" へ\n"; 
     if(n&gt;=2)_hanoi(n-1)(work)(from)(dest);
     return str;
   };

   Func&lt;object,Func&lt;object&gt;&gt;
   hanoi=Pure.wrap(a=&gt;
   _hanoi(int.Parse((string)a))
   ("A")("B")("C"));

   Func&lt;object&gt;
   step1=Pure.bind(get(null))(hanoi);

   Func&lt;object&gt;
   main=Pure.bind(step1)(put);

   Pure.exec(main);

 }
}

