
// 身長の平均を求める
var aveHeight = IDOLList.Select(x =&gt; x.Height)
                        .Aggregate(
                          (height: 0.0, count: 0), 
                          (x, y) =&gt; x = (x.height + y, x.count + 1), 
                          z =&gt; z.height / z.count);
// 中身はこんな感じです
public static TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(this IEnumerable&lt;TSource&gt; source, TAccumulate seed, Func&lt;TAccumulate, TSource, TAccumulate&gt; func, Func&lt;TAccumulate, TResult&gt; resultSelector)
{
    if (source == null)
    {
        throw Error.ArgumentNull("source");
    }
    if (func == null)
    {
        throw Error.ArgumentNull("func");
    }
    if (resultSelector == null)
    {
        throw Error.ArgumentNull("resultSelector");
    }
    TAccumulate val = seed;
    foreach (TSource item in source)
    {
         // 今回の場合、valがx,itemがyにあたる
        val = func(val, item);
    }
   　// 今回の場合、これがzです
    return resultSelector(val);
}

