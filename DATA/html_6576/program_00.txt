// MonitorFromWindowが返したディスプレイの種類
public enum MonitorDefaultTo { Null, Primary, Nearest }
// GetDpiForMonitorが返したDPIの種類
enum MonitorDpiType { Effective, Angular, Raw, Default = Effective }
// NativeMethods
class NativeMethods {
    // ウィンドウハンドルから、そのウィンドウが乗っているディスプレイハンドルを取得
    [DllImport("user32.dll", CharSet = CharSet.Unicode, SetLastError = true)]
    public static extern IntPtr MonitorFromWindow(IntPtr hwnd, MonitorDefaultTo dwFlags);
    // ディスプレイハンドルからDPIを取得
    [DllImport("SHCore.dll", CharSet = CharSet.Unicode, PreserveSig = false)]
    public static extern void GetDpiForMonitor(IntPtr hmonitor, MonitorDpiType dpiType, ref uint dpiX, ref uint dpiY);
}
// 現在のディスプレイにおけるDPIを取得する
Dpi GetDpi() {
    // 当該ウィンドウののハンドルを取得する
    var helper = new WindowInteropHelper(this);
    var hwndSource = HwndSource.FromHwnd(helper.Handle);
    // ウィンドウが乗っているディスプレイのハンドルを取得する
    var hmonitor = NativeMethods.MonitorFromWindow(hwndSource.Handle, MonitorDefaultTo.Nearest);
    // ディスプレイのDPIを取得する
    uint dpiX = Dpi.Default.X;
    uint dpiY = Dpi.Default.Y;
    NativeMethods.GetDpiForMonitor(hmonitor, MonitorDpiType.Default, ref dpiX, ref dpiY);
    return new Dpi(dpiX, dpiY);
}

