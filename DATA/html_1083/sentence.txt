More than 1 year has passed since last update.メモ書きなので雑。1． [Forms側] Action&lt;TaskCompletionSource&lt;bool&gt;&gt; OnRequestIsEnableBackKey { get; set; } を生やす2． [Forms側] WebViewEx(WebViewを拡張したもの)に Task&lt;bool&gt; IsEnableBackKeyAsync() も生やす。実装は次のように。3． [Android側] WebViewRenderer を拡張した MyWebViewRenderer を作る。4． Xamarin.Forms の WebView で JavaScript 連携を行う(with iOS/Android共通化) - Qiita を参考に JavaScriptHandler も作る。コンストラクタで Control に加え e.NewElement as WebViewEx も渡す。引数の名前は WebViewEx outer とする。AddJavascriptInterface の第2引数は GawaApp とでもしておく。5．JavaScriptHandler のコンストラクタで OnRequestIsEnableBackKey を受信するコードを書く。ここまでの処理で、Forms 側で await webViewEx.IsEnableBackKeyAsync() が呼び出されたら、JavaScript の window.requestIsEnableBackKey() 関数が呼び出される。6．JavaScriptHandler 内に onResultCanExitApp を生やす。JavaScript側 から結果が通知されるメソッドである。次のように。JavaScript 側で GawaApp.onResultIsEnableBackKey(true or false) を呼び出すと、このメソッドがコールバックされる。
TaskCompletionSource である isEnableBackKeyComp に値を設定すれば、Forms 側の await webViewEx.IsEnableBackKeyAsync() の結果が返される。7．JavaScript 側はきっとこんな感じ途中まで実装したけど、面倒になって（JavaScript→C# に単方向の方がシンプルでいいやと思って）やめちゃったので、アイデアだけ残しておきます。


