More than 1 year has passed since last update.社内の既存システムによって作られているmdbファイルに接続してデータの読込がしたかった接続にはOleDbConnection、OleDbCommand 、OleDbDataReader とかを使うらしいOleDbConnectionコンストラクタの引数はConnectionStringで、接続先の情報とかを指定するproviderはデータベースを制御するデータベース・エンジンの種類のことらしい
mdbファイル ⇨ "Provider=Microsoft.Jet.OLEDB.4.0"
accdbファイル ⇨ "Microsoft.Ace.OLEDB.12.0"
でOKdataSourceは接続するmdbファイルのパスを指定すればOKOleDbCommandコンストラクタは第一引数にstringで記述したSQL文、第二引数にOleDbConnectionを指定するOleDbConnectionのOpen()で接続する
OleDbCommandのExecuteReader()でデータをOleDbDataReader型に読み込むデータをそのままDataTableにするならDataTableのLoad()でOleDbDataReaderを指定するだけでOK
WPFのDataGridとかに表示させるだけなら多分これが一番簡単OleDbDataReaderのRead()でレコードを読み込む
こいつは次のレコードがなくなればfalseを返すのでwhileの条件に入れている
OleDbDataReaderのGetValue()でデータが取得できる
引数には列番号をintで指定する
列とか関係なく全部取得するならでOK
ただ、これだと整形しづらい例えばこんなDBがあるとしてこんなクラスのコレクションにデータを入れたい時mdbへの接続から一連の流れも含めて書いてみる
(WPFでReactivePropertyを使って実装)ModelOleDbDataReaderはDataReaderConvertToClassメソッドに渡して読み込み、
そこでPersonクラスを作って読み込んだ値をプロパティに詰めてPersonクラスをIEnumerableで返している
返ってきた値はPersonListにAddしているPersonクラスの各プロパティは、インスタンスにGetType()してGetProperties()すると取得できる
OleDbDataReaderのGetValue()でもindexを指定するのでfor文を使って各プロパティにSetValue()している※GetProperties()すると上から順にプロパティを取得するので、DBの取得する列に合わせてプロパティを設定する必要が有るので注意ちなみに、DBの値が空白だとGetValue()した時にSystem.DBNullが返ってきて、それをSetValueすると例外がでるので回避しとくことViewModelとても単純
_PathはmdbファイルのパスでTextBoxとかにバインド
C_getDB はデータを取得するコマンドで、_Pathが空白出ない時のみ有効にしている
コマンドではModelのConnectTomdbを呼び出し、_Pathの値を渡しているView自動生成に任せるならこんな感じ
Collectionにしてバインドすると自分で列を指定していろいろカスタムすることもできる
また、DataTriggerを設定したら特定の値のある行に色をつけたりとかもできるパスをいれてボタンを押すとこんな感じで取得できる
読み込むだけならかなり簡単
とりあえず書き込みをすることはないので必要になれば調べるかも
同時接続とかは検証してない(・・;参考:MSDN/OleDbConnection


