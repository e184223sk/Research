More than 3 years have passed since last update.GUIのテスト
自分がよく開発しているWPFかつLivetのMVVM状況下でのテストGUIテストを探していてなんかよさげだったのがこれ
他は試していないけど
Friendlyってライブラリ
Codeerって会社がフリー出しているものとのことです。ありがとうございました。
- http://blog.okazuki.jp/archive/category/Friendly
- http://qiita.com/advent-calendar/2014/friendly↑のサイトとかぶっているだろうけど
Nugetでプロジェクト毎に以下のものをインストール
- Codeer.Friendly
- Codeer.Friendly.Windows
- Codeer.Friendly.Windows.Grasp
- RM.Friendly.WPFStandardControls最後のはWPFなのでこれですがほかの環境ではWinFormやUWPでは必要なのが異なるようです。基本的には↑で参考にしたかずきさんのサンプルの改造。芸がなくてすいません。
Livetにしてただボタンを増やしただけです。
コマンドのバインドのを複数とLivetCallMethodActionへの対応を考えましたGUIのアイテムを取得するやつ
これもほぼ一緒ですが複数ボタン用にしてます。LogicalTreeはIWPFDependencyObjectCollection型で
コントロールの元の集合体です。
ここからBy~で必要な奴を絞りこんで一意のものを取得します。
コントロール(TextBoxとかButton)のタイプとバインド名とかが一致すれば一意に定まるようです。
ただ最初LogicalTreeはIWPFDependencyObjectCollectionな型で
コレクションって書いてあるからよし、linqだforeachだ思ってたらできなくて焦った。
インテリセンスにもなんかでないし
デバッグで確認してもよくわからない？？
Single以外の取り出し方が？？？と思いましたが
この型の定義を確認するとthisインデクサがいました。おう。どれがどれかかいまいち不明だけどアクセスは簡単にできるじゃないか。
配列のようにアクセスできました。
全部押してbind忘れているボタンがないかとかのチェックはthisインデクサ使ってforでOKだな。
レイアウトが単純な場合はこれでも問題なさそう。
レイアウトが複雑な場合は色々と工夫をしないとハマりそう。コマンドをバインドしている場合でコマンドは同じでパラメータ違いのパターンはByBindingの後にByCommandParameterを付ければ一意に定まる。ただ同じコマンドで同じパラメータの場合はどうしたら。
ある程度Gridとかで分割されない領域にある場合は、
同じボタンが2つあるっていう設計ミス扱いって感じで
設計ミスが拾えるという認識でよいのかな？あとボタンを調べるときにCommandにバインドしていると
よくあるサンプルのように簡単だけど、
Livet使ってLivetCallMethodActionでボタンクリックを扱っている場合のバインドの方法が不明。
やり方を知っている人は教えて下さい。
現状ボタン一覧を取得してthisインデクサでアクセスしてボタン押してます。githubにおいてます。
https://github.com/kskhsn/GUITestFriendlyサンプルだと無駄にMsTest版とNunit版の2パターンのテストを置いています。WPFかつLivetのMVVMでもFriendlyのおかげでGUIテストができた。
LivetMethodCallActionの場合はボタンの番号指定で一応なんとかなる。Friendlyは優秀でGUIテストだけでなく、
GUIの定型操作をプログラミングかマウスのできるマクロより優秀そう。
GUI操作のバッチ処理みたいのもできそう。


