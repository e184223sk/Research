
using UnityEngine;
using UnityEngine.UI;

/// &lt;summary&gt;UI更新クラス&lt;/summary&gt;
public class LonLatToUI : MonoBehaviour
{
    /// &lt;summary&gt;テキストテンプレート&lt;/summary&gt;
    private const string LonLatInfoTemplate = "緯度: {0}\n経度: {1}\n住所: {2}";

    /// &lt;summary&gt;表示用テキストUIオブジェクト&lt;/summary&gt;
    private Text lonLatInfo;

    /// &lt;summary&gt;経緯度取得オブジェクト&lt;/summary&gt;
    private LonLatGetter lonLatGetter;

    /// &lt;summary&gt;逆ジオコーディングオブジェクト&lt;/summary&gt;
    private LonLatToAddr lonLatToAddr;

    /// &lt;summary&gt;初期化&lt;/summary&gt;
    private void Start()
    {
        // テキストラベルオブジェクトを保持
        lonLatInfo = GameObject.Find("LonLatInfo").GetComponent&lt;Text&gt;();

        // 経緯度取得オブジェクトオブジェクトを保持
        lonLatGetter = GetComponent&lt;LonLatGetter&gt;();

        // 逆ジオコーディングオブジェクトを取得
        lonLatToAddr = GetComponent&lt;LonLatToAddr&gt;();
    }

    /// &lt;summary&gt;経緯度の値をテキストUIに反映&lt;/summary&gt;
    private void Update()
    {
        // 経緯度の値を取得できるか判定
        if (lonLatGetter.CanGetLonLat())
        {
            StartCoroutine(lonLatToAddr.GetAddrFromLonLat(lonLatGetter.Longitude, lonLatGetter.Latitude));
            lonLatInfo.text = string.Format(LonLatInfoTemplate, lonLatGetter.Latitude.ToString(), lonLatGetter.Longitude.ToString(), lonLatToAddr.Address);
        }
        else
        {
            lonLatInfo.text = string.Format(LonLatInfoTemplate, "測定不能", "測定不能", "測定不能");
        }
    }
}

