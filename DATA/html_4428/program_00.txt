string path = "test.har";
var har = HarConvert.DeserializeFromFile(path);

List&lt;string&gt; hederList = new List&lt;string&gt;();
hederList.Add("開始日時");       // startedDateTime
hederList.Add("URL");            // request.url
hederList.Add("プロトコル");     // "HTTP"固定
hederList.Add("メソッド");       // request.method
hederList.Add("結果");           // response.status
hederList.Add("種類");           // headers.Content-Type
hederList.Add("受信");           // response.bodySize
hederList.Add("所要時間");       // time
hederList.Add("イニシエーター"); // 不明
hederList.Add("待機");           // timings.blocked
hederList.Add("開始");           // timings.send
hederList.Add("要求");           // timings.wait
hederList.Add("応答");           // timings.receive
using (StreamWriter sw = new StreamWriter(path.replace(".har",".csv"), false, Encoding.GetEncoding("utf-8")))
{
    // ヘッダー
    sw.WriteLine(string.Join(",", hederList));

    foreach (Entry ent in har.Log.Entries)
    {
        List&lt;string&gt; dataList = new List&lt;string&gt;();
        dataList.Add(ent.StartedDateTime.ToLocalTime().ToString());
        dataList.Add(ent.Request.Url.ToString());
        dataList.Add("HTTP");
        dataList.Add(ent.Request.Method);
        dataList.Add(ent.Response.Status.ToString());
        string conType = "";
        foreach(Header headers in ent.Response.Headers)
        {
            if(headers.Name == "Content-Type")
            {
                conType = headers.Value;
                break;
            }
        }
        dataList.Add(conType);
        dataList.Add(ent.Response.BodySize.ToString());
        dataList.Add(ent.Time.ToString());
        dataList.Add("");
        dataList.Add(ent.Timings.Blocked.ToString());
        dataList.Add(ent.Timings.Send.ToString());
        dataList.Add(ent.Timings.Wait.ToString());
        dataList.Add(ent.Timings.Receive.ToString());

        sw.WriteLine(string.Join(",", dataList));
    }
}

