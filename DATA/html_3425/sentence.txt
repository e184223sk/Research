More than 1 year has passed since last update.【GitHub】MicroBatchFramework より引用MicroBatchFramework is an infrastructure of creating CLI(Command-line interface) tools, daemon, and multiple contained batch program. Easy to bind argument to the simple method definition. It built on .NET Generic Host so you can configure Configuration, Logging, DI, etc can load by the standard way.コンソールアプリケーション向けのフレームワークです。こう言ってしまうと省略しすぎですが、コマンドラインで指定されたメソッドやパラメーターを簡単な手順でバインドさせることができます。.NET Core の機能拡張に伴い、マイクロサービスなどコンソールアプリケーションの用途が増えていくことが予想される中で、このようなインフラストラクチャの拡充には非常に注目しています。手始めとして、バッチクラスの定義に関する検証を行いました。MicroBatchFramework のバージョンは 1.2.0 です。定義するアセンブリと名前空間が異なる次の4つのバッチクラスを定義しました。メソッドの処理内容はすべて同じであるため割愛しています。コンソールにログを出力するだけです。list, help コマンドと、バッチクラスに定義したメソッドを実行します。RunBatchEngineAsync メソッドで起動します。RunBatchEngineAsync&lt;T&gt; メソッドで起動します。Command 属性はメソッドに対してコマンド名や説明を設定するための属性ですが、この属性が付与されていないメソッドが存在した場合、若干挙動が変わります。一つのアプリケーションに複数のメソッドを実装する場合、一つのバッチクラスに集約するか複数のバッチクラスに分割するかによってホストの起動方法が変わります。コマンドラインの指定方法も変わります。Command 属性はコマンド名や説明を設定できますし、付与することに対するデメリットはなさそうです。必ず付与するルールにしてもよさそうです。


