More than 1 year has passed since last update.問題のリンク0か1で構成された長さ$N$の文字列$S$が与えられる。0を1に変えるあるいは、1を0に変える操作を文字列に加え、0と1が交互に並ぶようにしたい。必要な操作の最小回数は何回か。文字列の最終形は0と1が交互に並んでいるものであるため、二通りが想定される。例えば長さ3であれば、$010$か$101$が最終形になる。
よって、この想定される二通りの最終形と初めに与えられる文字列を比較し、異なっている部分の数をそれぞれ数え上げ、小さい方が答えとなる。なお、実装時の注意点として string 型で比較しようとして以下のような実装をすると、TLEする。以下の記事を参照すると s += "1" のような+演算子による文字列結合は200000回で2秒以上かかっている。
文字列処理を高速に行うよって +演算子を使って文字列結合をするのではなく、 char型の配列を作って比較を行った。この時計算量は$O(N)$となる。


