More than 1 year has passed since last update.ブラウザ自動テストのデファクトスタンダードであるSelenium
基本的にSeleniumを使用して組んだプログラムは、自分自身でブラウザを起動して自動操作を開始しますしかし、起動済みのブラウザを自動操作したい！というケースもありますよね？
はたしてChromeDriverを使って起動済みのブラウザを操作することができるのか？動かせた時の感動は省略今回の手法は、Google Chrome を起動するところにポイントがあります。
コマンドライン引数で-remote-debugging-port=9222を指定してあげるのです！
 DevTools Protocol が有効な状態でブラウザが起動するので、 Selenium がアタッチできるようになるんですね。--user-data-dirの指定も忘れずに。
操作対象のブラウザ以外に Google Chrome を起動している場合、
ユーザプロファイルがあるフォルダとして同一パスをSeleniumで指定することができないようです。
私の環境ではタイムアウトエラーになってしまいました。OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://localhost:61065/session timed out after 60 seconds. ---&gt; System.Net.WebException: 要求は中止されました: 操作はタイムアウトになりました。参考：SeleniumでChromeのユーザープロファイルを指定しつつ同時に自分もChromeを使う方法ChromeOptions.DebuggerAddressにブラウザ起動時に指定したものと同じポート番号を指定します。
ブラウザ起動済みの状態で当プログラムを実行すると、見事に動き始めます。Google Chrome を起動する部分がポイントだったわけです。
ここで、手動ではなく別プログラム経由で起動されたブラウザを自動操作したい場合を考えてみます。
うまいこと-remote-debugging-portを指定してあげる必要がありますよね？やるとすればこんな感じか。。？オリジナルのchrome.exeは_chrome.exeにリネームしてしまいます。
Google Chrome の通常利用に支障が出るのはご愛敬。
参考にしたページ：
Selenium: Attach to an existing Chrome browser with C#参考になりそうでしなかったページ：
Re-using existing browser session in Selenium using C#
Reflectionをつかってprivateメンバーにアクセスしてるので黒魔術感が否めない。
そもそもやりたいことが違う雰囲気もある。


