using System.Windows;
using System.Windows.Documents;
using System.Windows.Input;

namespace Sample {
    //コマンドごとに添付プロパティを実装する
    //以下はApplicationCommands.Newにバインドする例
    public static class AttachedCommandBindings {
        public static DependencyProperty NewCommandProperty
            = DependencyProperty.RegisterAttached(
                "NewCommand",
                typeof(ICommand),
                typeof(AttachedCommandBindings),
                new PropertyMetadata(null, OnNewCommandChanged)
            );

        public static void SetNewCommand(UIElement element, ICommand value)
            =&gt; element.SetValue(NewCommandProperty, value);

        public static ICommand GetNewCommand(UIElement element)
            =&gt; (ICommand)element.GetValue(NewCommandProperty);

        private static void OnNewCommandChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e) {
            UIElement element = sender as UIElement;
            if (element == null)
                return;

            ICommand command = e.NewValue as ICommand;
            if (command == null)
                return;

            RegisterCommandBinding(element, ApplicationCommands.New, command);
        }

        private static void RegisterCommandBinding(UIElement element, RoutedUICommand routedCommand, ICommand command) {
            var binding = new CommandBinding(
                routedCommand,
                (sender1, e1) =&gt; command.Execute(null),
                (sender1, e1) =&gt; e1.CanExecute = command.CanExecute(null)
            );

            CommandManager.RegisterClassCommandBinding(element.GetType(), binding);

            element.CommandBindings.Add(binding);
        }
    }
}

