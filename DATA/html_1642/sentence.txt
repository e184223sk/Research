2020/09/17 追記
ReactiveProperty Ver. 7.0.0以降はこの記事の内容は動作しません。ReactivePropertyをMessagePackCSharpでMessagePack形式とJSON形式にシリアライズ・デシリアライズする方法を紹介します。ReactivePropertyはViewModel層で使用されることが多いライブラリですが、Model層に使用しても問題ありません。
アプリケーションの状態をファイルに保存したいときなどに、Modelのクラスをまるごと保存できると便利です。
しかしReactivePropertyは標準ではそのまま保存できません。
そこで、今回はModel層にReactivePropertyがあり、それをシリアライズ/デシリアライズする方法を紹介します。シリアライズ方法を説明する前に、使用するライブラリの紹介を簡単にしておきます。ReactivePropertyはWPFやUWPでの、MVVM + リアクティブプログラミングの組み合わせを快適にするためのライブラリです。
詳しくは以下を参照ください。
https://blog.okazuki.jp/entry/2015/12/05/221154MessagePackは、効率の良いバイナリ形式のオブジェクト･シリアライズ フォーマットです。JSONの置き換えとして使うことができ、様々なプログラミング言語をまたいでデータを交換することが可能です。しかも、JSONよりも速くてコンパクトです。詳しくは以下を参照ください。
https://msgpack.org/ja.html上記MessagePackをC#で扱うためのライブラリです。
MessagePackだけではなく、JSONにも対応しています。
同じ作者(nueueccさん)のUtf8Jsonというライブラリもありますが、ReactivePropertyを使うのであれば、対応した拡張パッケージがあるぶん、こちらの方が便利です。詳しくは以下を参照ください。
http://neue.cc/2017/03/13_550.htmlnugetで以下のライブラリを取得する。ReactivePropertyのResolverを作成して、登録します。
デフォルトに登録せず、シリアライズ/デシリアライズ時にオプションとして指定することもできます。ReactivePropertyを作成して、シリアライズします。なお、シリアライズ結果内の"3"はReactivePropertyModeです。
イベントハンドラなどはシリアライズのしようがありませんので、含まれていません。デシリアライズではJSON形式は一度MessagePack形式を経由してからデシリアライズします。なお、ReactivePropertyだけでなく、ReactivePropertySlimやIReactivePropertyでもシリアライズできます。ReadOnlyReactivePropertyはできません。
もちろんReactiveProperty単体ではなく、これを複数内包したクラスごとシリアライズすることもできます。ReactivePropertyを使用する場合、.Valueは変更されますが、ReactiveProperty自体を変更することはまずないので、プロパティのアクセッサは{get;}で十分なことが多いです。
しかし、シリアライズ/デシリアライズする場合は{ get; set; }にする必要があります。ReactivePropertyのVer5以降とMessagePack.ReactivePropertyを導入していると、
System.Reactiveのバージョン間の整合性の問題で、以下のエラーが発生します。System.Reactive.Compatibilityをnugetで導入すると解決します。クラスをまるごとシリアライズ/デシリアライズできるデモアプリを作成してみました。姓と名の入力欄があり、変更するとフルネームが代わります。[Serialize]ボタンを押下すると、下にシリアライズされたMessagePack(の16進数表示)とJSONの結果が表示されます。下のJSONの結果を一部書き換えて("Anakin"👉"Luke")から、[Desirialize]ボタンを押下すると、上のReactivePropertyの結果が変わります。全体はGithubにおいておきます。
https://github.com/soi013/ReactivePropertySerializeDemoシリアライズ対象となるクラスは以下です。シリアライズを行うMainWindowViewModelが以下です。デモではViewModel内のクラスをシリアライズして、再び表示していますが、通常はModel層のクラスをファイルなりデータベースなりに保存する形になると思います。表示するViewは以下です。VisualStudio2019
.NET Core 3.1
C#8
ReactiveProperty 6.2.0
MessagePack 2.1.90
MessagePack.ReactiveProperty 2.1.90
System.Reactive.Compatibility 4.4.1困っていたところを@okazuki さんに助けていただきました。
https://twitter.com/okazuki/status/1246384566756986881
ありがとうございます。


