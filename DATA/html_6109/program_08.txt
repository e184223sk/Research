
private static void AddWeather(WeatherModel model, AdaptiveCard card, string selectedDay)
{
    // タイトル作成
    var titleColumnSet = new ColumnSet();
    card.Body.Add(titleColumnSet);

    var titleColumn = new Column();
    titleColumnSet.Columns.Add(titleColumn);
    AddTextBlock(titleColumn, $"{model.location.city} の天気", TextSize.ExtraLarge, HorizontalAlignment.Center);

    // 本文作成
    // 天気情報をセット
    var mainColumnSet = new ColumnSet();
    card.Body.Add(mainColumnSet);


    foreach (var forcast in model.forecasts)
    {
        // Todayが取得出来ている場合は、dateLabel = "今日" の場合のみセット (=else の操作を行う)
        if (selectedDay == "Today" &amp;&amp; forcast.dateLabel != "今日")
        {
        }
        else if (selectedDay == "Tomorrow" &amp;&amp; forcast.dateLabel != "明日")
        {
        }
        else if (selectedDay == "DayAfterTomorrow" &amp;&amp; forcast.dateLabel != "明後日")
        {
        }
        else
        {
            var mainColumn = new Column();
            mainColumnSet.Columns.Add(mainColumn);

            // 天気データの取得と加工
            string day = forcast.dateLabel;
            string date = DateTime.Parse(forcast.date).Date.ToString("M/d");

            // temperature が null の場合は "--" に変換
            string maxTemp, minTemp;
            try
            {
                maxTemp = forcast.temperature.max.celsius;
                minTemp = forcast.temperature.min.celsius;
            }
            catch
            {
                maxTemp = "--";
                minTemp = "--";
            }

            // データのセット
            AddTextBlock(mainColumn, $"{day}({date})", TextSize.Large, HorizontalAlignment.Center);
            AddTextBlock(mainColumn, $"{maxTemp} / {minTemp} °C", TextSize.Medium, HorizontalAlignment.Center);
            AddImage(mainColumn, forcast.image.url, ImageSize.Medium, HorizontalAlignment.Center);

        }

    }

}

