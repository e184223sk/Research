More than 3 years have passed since last update.たいそうなタイトルにしてみましたが、やろうとしていることは以下の点です。EnumWindows 関数で効率的に Linq を使いたい。そもそも、Win32API には IEnumerable&lt;T&gt; や Linq といった概念がないいので、
EnumWindows 関数はコールバックによる列挙を行います。例えばすべてのトップレベルウィンドウを取得するためにはこのような処理になります。しかし、この方法ではすでに一度列挙が確定しているため、以下のような処理では無駄が発生します。Take() や First() のようなクエリは最後まで列挙する必要がないため特に差が出ます。複雑かつ効率的な処理をしようとすると、どんどんネストが深くなってしまいます。そこで、コールバックを Linq 的に組み上げる方法を考えました。IObservable&lt;T&gt; っぽいインターフェースを設けます。
（いい名前が思いつきませんでした。）このインターフェースを使って EnumWindow をこのように定義します。ポイントは IObservable&lt;T&gt; と違い OnNext メソッドに bool の戻り値を持たせ、それをコールバックの戻り値にします。
この戻り値が Take() や First() のように列挙を途中で終了させたいときに必要となります。細かい実装は省きますが、クエリのインターフェースはこの通りです。以上のことを使って EnumWindows() で効率的な Linq を構築することができました。ここでは EnumWindow() について話しましたが、Win32API には似たような関数がほかにもあると思うので、応用できると思います。


