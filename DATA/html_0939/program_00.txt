using System;

// type "Recursive&lt;T1, T2&gt;" is recursive
delegate Func&lt;T1, T2&gt; Recursive&lt;T1, T2&gt;(Recursive&lt;T1, T2&gt; f);

class Program
{
    static void Main(string[] args)
    {
        int fib40 = Z&lt;int, Func&lt;int, Func&lt;int, int&gt;&gt;&gt;(fib =&gt; f1 =&gt; f2 =&gt; n =&gt; n == 0 ? f1 : fib(f2)(f1 + f2)(n - 1))(0)(1)(40);
        Console.WriteLine(fib40);
    }

    static Func&lt;T1, T2&gt; Z&lt;T1, T2&gt;(Func&lt;Func&lt;T1, T2&gt;, Func&lt;T1, T2&gt;&gt; f) =&gt;
        ((Recursive&lt;T1, T2&gt;)(g =&gt; f(x =&gt; g(g)(x))))
        ((Recursive&lt;T1, T2&gt;)(g =&gt; f(x =&gt; g(g)(x))));
}

