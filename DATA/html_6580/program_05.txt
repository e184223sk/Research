
[TestClass]
    public class CSVWriterTests
    {
        [TestMethod]
        public void TestWriterHeaderLine()
        {
            using (var stream = new MemoryStream())
            using (var instance = new CSVWriter&lt;SampleBean&gt;(stream, Encoding.UTF8))
            {
                instance.WriteHeaderLine();

                instance.Flush();

                stream.Seek(0, SeekOrigin.Begin);

                var result = Encoding.UTF8.GetString(stream.ToArray());

                Check.That(result).IsEqualTo("Column1,\"Original, \"\"Name\",My Number\r\n");
            }
        }

        [TestMethod]
        public void TestWriteLine()
        {
            var bean = new SampleBean()
            {
                Column1 ="value1",
                Column2 ="value\nvalue,value\"",
                MyNumber= 1234
            };

            using (var stream = new MemoryStream())
            using (var instance = new CSVWriter&lt;SampleBean&gt;(stream, Encoding.UTF8))
            {
                instance.WriteLine(bean);

                instance.Flush();

                stream.Seek(0, SeekOrigin.Begin);

                var result = Encoding.UTF8.GetString(stream.ToArray());

                Check.That(result).IsEqualTo("value1,\"value\nvalue,value\"\"\",1234\r\n");
            }

        }

        private class SampleBean
        {

            public string Ignored { get; set; }

            [CSVColumn(1)]
            public string Column1 { get; set; }

            [CSVColumn(2, Name = "Original, \"Name")]
            public string Column2 { get; set; }

            [CSVColumn(3)]
            public int MyNumber { get; set; }
        }

    }

