
public abstract class UnityTestBase
{
    private List&lt;Mock&gt; mocks;

    private IUnityContainer diContainer;

    /// &lt;summary&gt;
    /// テストの初期処理。
    /// &lt;/summary&gt;
    [TestInitialize]
    public void BaseTestInitialize()
    {
        this.diContainer = new UnityContainer();
        this.mocks = new List&lt;Mock&gt;();
    }

    /// &lt;summary&gt;
    /// テストの終了処理。
    /// &lt;/summary&gt;
    [TestCleanup]
    public void BaseTestCleanup()
    {
        // モックが期待どおりに呼び出されたことを検証する。
        foreach (var mock in this.mocks)
        {
            mock.VerifyAll();
        }

        this.diContainer.Dispose();
    }

    /// &lt;summary&gt;
    /// Mock インスタンスを生成する。
    /// &lt;/summary&gt;
    protected Mock&lt;T&gt; CreateMock&lt;T&gt;()
        where T : class
    {
        return CreateMock&lt;T&gt;(false);
    }

    /// &lt;summary&gt;
    /// Mock インスタンスを生成する。
    /// &lt;/summary&gt;
    protected Mock&lt;T&gt; CreateMock&lt;T&gt;(bool callBase)
        where T : class
    {
        var mock = new Mock&lt;T&gt; { CallBase = callBase };

        this.diContainer.RegisterInstance(mock.Object);
        this.mocks.Add(mock);

        return mock;
    }

    /// &lt;summary&gt;
    /// テスト対象オブジェクトを構成する。
    /// &lt;/summary&gt;
    protected void BuildUp&lt;T&gt;(T instance)
    {
        this.diContainer.BuildUp&lt;T&gt;(instance);
    }
}

