環境Windows　Visual Stdudio 2019 VC++ファイル名と行数をプリント出す場合C言語では以下
C＃の場合「StackFrame」クラスを利用すると一つ前の関数の情報を呼び出せる。
これ便利だなぁと思って、VC++でSakuraMyStackFrameクラスを作成し
桜エディタで、以下のようなログを出力するようにしてみた。出力形式：タイムスタンプ＋ファイル名：関数名（行数）「・・・ログ・・・」１つ前の場合　StackFrame(1, true)
２つ前の場合　StackFrame(2, true)桜エディタのソースコード　https://github.com/sakura-editor/sakura
のsakura_coreにmyutilフォルダ追加し以下のクラスを作成する。SakuraMyStackFrameクラス　・・・関数のスタックを取得する
SakuraMyLogクラス　　　　　・・・ログ出力に関するクラス
SakuraMyStrクラス　　　　　・・・文字操作クラスコールスタッフ情報を_stackに保存し、取り出しは_frameを指定する。
vector &lt; MYSTACKFRAMES&gt; _stack;保存するファイルパスは適当に変更して下さい
mystr-&gt;writeW("G:\plog\vs2019\2020_1022_UtilDLL\sakuradebug.txt", buf);※必要であれば定義する。自分の場合、他で利用してプリプロセッサの定義で切り分けている。
プロパティ＞構成プロパティ＞プリプロセッサ＞プリプロセッサの定義に　SAKURA　を追記桜エディタのプロパティの追加インクルードディレクトリに、新規作成のパスを指定
例：
G:\plog\vs2019\2020_1022_UtilDLL\UtilDLL_master\CplusDLL\Sakura追加したクラスを利用する
WinMain.cpp　の　DEBUG_TRACEや、MYTRACEのメッセージを出力するファイルの呼び出し先がDebug1.cppStdAfx.hを修正する。最終行あたりに以下３行追加Debug1.cppに以下を追記　//追加
mylog.Setframe(3); //３つ前の関数を参照している。
std::string log = mylog.loghead(); //Debugログのタイムスタンプとファイル名＋行数を作成
log += wcstombs_new(szText);　//SJISをUNICODEに変換して連結している。
mylog.debugoutW(log);　//出力こうすると、以下のようなログを出力する.
[2020/10/31 07:56:04] WinMain.cpp:wWinMain(94) -- -- WinMain -- --もし、意図しないログの場合、mylog.Setframe(3)　の値を変更してみて下さい。以上参考URL：https://www.366service.com/jp/qa/24585ff2ce46fd450143a4b58ef0af8b


