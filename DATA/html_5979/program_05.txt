
public static IEnumerable&lt;IEnumerable&lt;T&gt;&gt; Buffer&lt;T&gt;(this IEnumerable&lt;T&gt; source, int count)
{
    if(source == null)
        throw new ArgumentNullException(nameof(source));
    if(count &lt;= 0 )
        throw new ArgumentOutOfRangeException(nameof(count));

    IEnumerable&lt;IEnumerable&lt;T&gt;&gt; BufferImpl()
    {
        for (int i = 0; source.Skip(i).Any() ; i += count)
            yield return source.Skip(i).Take(count);
    }
    return BufferImpl();
}

