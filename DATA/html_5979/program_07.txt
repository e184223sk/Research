
public static IEnumerable&lt;IEnumerable&lt;T&gt;&gt; Buffer&lt;T&gt;(this IEnumerable&lt;T&gt; source, int count)
{
    if (source == null)
        throw new ArgumentNullException(nameof(source));
    if (count &lt;= 0)
        throw new ArgumentOutOfRangeException(nameof(count));

    IEnumerable&lt;IEnumerable&lt;T&gt;&gt; BufferImpl()
    {
        using (var enumerator = source.GetEnumerator())
        {
            while (enumerator.MoveNext())
            {
                var list = new List&lt;T&gt;(count);
                for (int i = 0; i &lt; count; ++i)
                {
                    list.Add(enumerator.Current);
                    if (!enumerator.MoveNext())
                        break;
                }

                if (list.Count != 0)
                    yield return list;
            }
        }
    }
    return BufferImpl();
}

