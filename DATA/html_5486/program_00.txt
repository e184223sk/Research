public class JsonData
{
    [JsonPropertyName("item1")]
    public JsonElement? Item1Value { get; set; }

    string item1; // 一度読んだ値は保持しておく
    [JsonIgnore]
    public string Item1
    {
        get
        {
            if (item1 != null) return item1;
            if (!Item1Value.HasValue) return null; // null値の場合はGet~すると死ぬのでここで返す
            // 任意の変換処理
            return item1 = Item1Value.Value.ValueKind switch
            {
                JsonValueKind.String =&gt; Item1Value.Value.GetString(),
                JsonValueKind.Number=&gt; Item1Value.Value.GetInt32().ToString(),
                // object,arrayのコード例
                // JsonValueKind.Object =&gt; new[] {  JsonSerializer.Deserialize&lt;HogeHoge&gt;(ItemValue.Value.GetRawText()) },
                // JsonValueKind.Array =&gt; JsonSerializer.Deserialize&lt;HogeHoge[]&gt;(ItemValue.Value.GetRawText()),
                _ =&gt; throw new NotSupportedException()
            }
        }
    }
}


