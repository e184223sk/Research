
using System.Collections.Generic;

/// &lt;summary&gt;
/// リスト中から重複せずに要素を取り出すクラス
/// &lt;/summary&gt;
public class UniqueItemPicker&lt;T&gt;
{
    T[] AllItems;
    /// &lt;summary&gt;
    /// コンストラクタ
    /// &lt;/summary&gt;
    /// &lt;param name="allItems"&gt;取り出したい要素の配列&lt;/param&gt;
    public UniqueItemPicker(T[] allItems)
    {
        AllItems = allItems;
        InitIndexList();
    }

    void InitIndexList()
    {
        indexList.Clear();
        for (int i = 0; i &lt; AllItems.Length; i++)
        {
            indexList.Add(i);
        }
    }

    /// &lt;summary&gt;
    ///  リスト中から重複せずに要素を取り出す
    /// &lt;/summary&gt;
    public T GetUniqueItem()
    {
        if (indexList.Count == 0)
        {
            UnityEngine.Debug.LogError("要素がありません");
            return default(T);
        }
        return AllItems[GetIndex()];
    }

    List&lt;int&gt; indexList = new List&lt;int&gt;();
    int GetIndex()
    {
        int index = UnityEngine.Random.Range(0, indexList.Count);
        int result = indexList[index];
        indexList.RemoveAt(index);
        return result;
    }

    /// &lt;summary&gt;
    /// 使用履歴を初期化する
    /// &lt;/summary&gt;
    public void ResetUsageHistory()
    {
        InitIndexList();
    }
}

