
    /// &lt;summary&gt;
    /// コルーチン使う側
    /// &lt;/summary&gt;
    public void UseCoroutine()
    {
        //これはMonoBehaviour以外でも呼べる
        Observable.FromCoroutine(Coroutine) //これでIObasevable化
            .Subscribe(_ =&gt; Debug.Log("コルーチン終了後の処理")); //これで終了後の処理
    }


    /// &lt;summary&gt;
    /// コルーチン
    /// これがMonoBehaviourで内に定義されている必要もない
    /// &lt;/summary&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public IEnumerator Coroutine()
    {
        Debug.Log("Start");
        yield return new WaitForSeconds(1);
        Debug.Log("End");
    }

