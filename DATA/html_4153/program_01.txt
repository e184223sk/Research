
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Net.Http;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

using Amazon.Lambda.Core;

// Assembly attribute to enable the Lambda function's JSON input to be converted into a .NET class.
[assembly: LambdaSerializer(typeof(Amazon.Lambda.Serialization.Json.JsonSerializer))]

namespace AWSLambda1
{
    public class Function
    {
        private static HttpClient client = new HttpClient();

        /// Lambdaから呼ばれるメソッド
        public string FunctionHandler(JObject request, ILambdaContext context)
        {
            bool isSuccess = false;
            int customerCode = (int)(request["placementInfo"]["attributes"]["customer_code"]);  // 予め placementInfo → attributes → customer_code に設定済みの「お客様番号」をHash化
            // Azure上にある別のWebサービス(Login Portal)にアクセス
            string hashCode = GetHashCode(customerCode);
            string url = "https://loginto.azurewebsites.net/ThatButton/" + hashCode;
            string json = client.GetStringAsync(url).Result;
            // 応答(Json)の解析
            var response = JsonConvert.DeserializeObject&lt;Dictionary&lt;string, string&gt;&gt;(json);     // 単純な構造のため、KeyValue(Dictionary型)で応答をデシリアライズ
            if (response.ContainsKey("isSuccess"))                                              // 成否判定用のステータス"isSuccess"が(無事に)含まれているか？
            {
                isSuccess = Convert.ToBoolean(response["isSuccess"]);
            }
            return isSuccess.ToString();                                                        // ログインの成否 (成功="True" or 失敗="False")
        }

        /// 引数をSHA-1でHash化して返すメソッド
        private string GetHashCode(int customerCode)
        {
            System.Security.Cryptography.HashAlgorithm ha1 = new System.Security.Cryptography.SHA1CryptoServiceProvider();
            byte[] hash = ha1.ComputeHash(Encoding.UTF8.GetBytes(customerCode.ToString()));
            return BitConverter.ToString(hash);
        }
    }
}

