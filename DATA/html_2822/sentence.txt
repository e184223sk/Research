HttpClientの使ってHTTP GET/PUT/POST/DELETEのWeb APIをコールする初歩的なアプリを作成した。
作成手順を紹介する。
チュートリアル的な内容HttpClientを使うのが、初めてだった。チュートリアルやサンプルコードを検索したが、私の期待に沿うものがなかった（検索結果は下記表の通り）。Visual Studio 2019(ASP.NETの開発設定済みのもの)
　未設定の場合はこちらを参照して下さい
フレーワーク：.NET Core2.1(1)ASP.NET Coreで単純なサーバアプリを作る。
　自動生成コードを利用するため、特別な知識は不要。
(2)Web APIクライアントアプリを作成する。
(3)Visual Studioを複数立ち上げて、サーバとクライアントをデバック実行して動作確認する。ソリューションの名前は「SimpleWebServer」にした。
※名前は任意
学習目的で自分PCで動作確認するだけなので、HTTPS用の構成のチェックを外した。
プロジェクトを生成する。
生成されたプロジェクトのControllersフォルダ直下にValuesController.csが存在することを確認する。
実装内容は下記の通り。生成したプロジェクトを選択する。
Visual Studio の「プロジェクトのタブ」→「xxxxxのプロパティ(※)」を押下。デバックのタブを押下する。
[ブラウザ起動]のチェックを外す。スクロールして、URLを確認する。クライアントでURLを入れるときに使用する。
今回は.NET Core2.1を使用した。
この例では、JSONシリアライザにJSON.NETを利用する。Nugetパッケージからインストールすること。
URLはご自身のサーバの設定に合わせて、書き換えて下さい。Visual Studioのソリューションを2つ立ち上げた状態で下記手順を実施する（サーバ用、クライアント用の2つ）。①サーバを先に立ち上げる。
 ②下記メソッドにブレークポイントを貼る。
 ③デバック実行する。サーバ側のGETメソッドが呼ばれていたら、OKです。
サーバ側で返した下記文字列（※）はHTTP応答に付与されます。
※"value1", "value2"クライアント側でHTTP応答を読み取ると、サーバで返した文字列が表示される。サーバが受け取った値がクライアントの送信内容に一致するか確認する。サーバが受け取った値がクライアントの送信内容に一致するか確認する。URIに指定した値(5)をサーバが受け取れば、OK。Web APIを呼び出すサンプル実装を示した（GET/PUT/POST/DELETE）。
今回は勉強のため、HttpClientに標準で定義されたメソッドのみを利用した。記事では触れていないが、実装をより良くする手法として下記2つがある'次にクライアントを作るときは、組み込みたいと思う)。
(1)Microsoftが提供しているパッケージを使う。
例えば、Microsoft.Asp.Net.WebApi.Clientなど。
HttpClentの拡張メソッドが定義されているため、もっと楽に実装できそう。
参考(2)IHttpClientFactoryを使う。こちらに解説記事があるため、ここでは触れない。


