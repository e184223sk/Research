
[Fact]
public void Test_ValueHolder()
{
    var queuePropertyChanged = new Queue&lt;string?&gt;();
    var holder = ValueHolderFactory.Create(string.Empty);

    holder.PropertyChanged += (o, e) =&gt; queuePropertyChanged.Enqueue(e.PropertyName);

    holder.Value
        .Should().BeEmpty("初期値は空のはず");

    queuePropertyChanged
        .Should().BeEmpty("まだ通知は来ていないはず");

    const string newValue = "NEW_VALUE";
    holder.Value = newValue;

    holder.Value
        .Should().Be(newValue, "新しい値に変わっているはず");

    queuePropertyChanged.Dequeue()
            .Should().Be(nameof(ValueHolder&lt;string&gt;.Value), "Valueプロパティの変更通知があったはず");
}

