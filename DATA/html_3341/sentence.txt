Mac を使っています（が、Windows でも大抵操作は同じかと思われます）
今後Windowsに切り替える可能性も出てきます
Mac の場合は環境構築に加えて「Command + Shift + P」→「Shell」と入力し「PATH 内に 'code' コマンドをインストール」しておくと、ターミナルから VS Code を起動できるようになりますターミナルから任意のディレクトリに移動して以下のコマンドを入力します。VS Code が起動し、SampleMVCApp を開くことができました。
SampleMVCApp フォルダの中身は以下の通りになっています。プログラムを起動するには、ターミナルから以下のコマンドを入力します。localhost 上で立ち上がったので https://localhost:(ポート番号) に接続して動作確認してみます
https://localhost:(ポート番号) にアクセスし、以下のようになっていれば成功ですターミナルで「Ctrl + C」を押すとプログラムを停止できます。Controller で View や Model を制御していきます（今回は Model は出てきません）。Controllers フォルダ内に HelloController.cs を作成します。
Controllers フォルダ内に元からある HomeController.cs の中身をコピペして以下のように書き換えます。View は画面上に処理結果を出力するために必要です。まずは Views フォルダ内に Hello フォルダを作成します。
さらに Hello フォルダの中に Index.cshtml を作成します。
階層的にはこんな感じになっているかと思われます。Views/Hello/Index.cshtml の中身を編集します。
Controllerから値を受け取るには "@" を使ってバインドしてあげます。ターミナルから dotnet run で実行し、localhost 上で動作確認をします。
ルーティングの設定がデフォルトの状態（Views/Home/Index.cshtmlを参照するようになっている）なので、単純に localhost にアクセスした場合は何も変化がありません。アクションを発火させるには URL を以下のように設定します。例に倣って URL を https://localhost:&lt;ポート番号&gt;/Hello にすると以下のようになります。
Hello/Index.cshtml に向けて HelloController の Index( ) アクションが実行されています。さらに、URL の末尾に /sayHello を追加すると Hello World が成功しているはずです。
Hello/Index.cshtml に向けて HelloController の sayHello( ) アクションが実行されています。今回は非常にざっくりでしたが、VS Code で ASP.NET MVC プロジェクト (Hello World) を実行する手順を書きました。
今後、理解が深まってきたら説明できていない部分の追記および Model を使った続編を書きたいと思っています。


