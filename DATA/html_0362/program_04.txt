
IEnumerable&lt;SearchTreeEntry&gt; DataToEntries(IEnumerable&lt;Data&gt; dataList)
{
    yield return new SearchTreeGroupEntry(new GUIContent("Select Prefab"));
    var data2 = default(Data); // 1 = current, 2 = prev
    foreach (var data1 in dataList)
    {
        // DirectoryNames は、アセットパスを Path.GetDirectoryName したのち Split('/') した配列です
        var directoryNames1 = data1?.DirectoryNames;
        var directoryNames2 = data2?.DirectoryNames;
        var level = 1;
        var max = Max
        (
            directoryNames1?.Length ?? 0,
            directoryNames2?.Length ?? 0
        );
        for (var i = 0; i &lt; max; i++)
        {
            var name1 = directoryNames1?.ElementAtOrDefault(i);
            var name2 = directoryNames2?.ElementAtOrDefault(i);
            if (string.IsNullOrEmpty(name1))
            {
                break;
            }
            if (string.IsNullOrEmpty(name2))
            {
                yield return new SearchTreeGroupEntry(new GUIContent(name1)) {level = level};
            }
            else if (name1 != name2)
            {
                yield return new SearchTreeGroupEntry(new GUIContent(name1)) {level = level};
                i = max;
            }
            level++;
        }
        yield return new SearchTreeEntry(new GUIContent(data1.FileName, Constants.IconPrefab)) {level = level, userData = data1.AssetPath};
        data2 = data1;
    }
}

