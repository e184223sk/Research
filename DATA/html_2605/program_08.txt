
public class CSharpSourceCodeGenerator
{
    public CSharpSourceCodeGenerator()
    {
    }
    public String Write(TypeName typeName)
    {
        StringBuilder sb = new StringBuilder();

        sb.Append(typeName.Name);
        if (typeName.GenericTypes.Count &gt; 0)
        {
            sb.Append("&lt;");
            for (int i = 0; i &lt; typeName.GenericTypes.Count; i++)
            {
                var tp = typeName.GenericTypes[i];
                sb.Append(this.Write(tp));
                if (i &lt; typeName.GenericTypes.Count - 1)
                {
                    sb.Append(", ");
                }
            }
            sb.Append("&gt;");
        }
        return sb.ToString();
    }
}

