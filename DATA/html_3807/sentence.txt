More than 1 year has passed since last update.最近趣味でXamarinを触り始めました。
普段の仕事ではSwiftとJavaで別々にスマホアプリを作ってます。
C#初心者です。Xamarinに関する記事をネットで読み漁っていると
MVVMという単語によく出会います。私は、
「MVVMってModel - View - ViewModelの頭文字をとったものでしょ？」
くらいの知識しかなかったです。
でも最近よく聞くなぁ、と思いながら放置していました。
この機会にXamarinとMVVMを一気に勉強しよう！と思い、記事にしてみました。参考にさせて頂いたサイト
http://oxamarin.com/mvvm/ボタンを押すとラベルに表示された数字を1ずつ増やすプログラムを
XamarinでMVVMを使わずに実装してみます。まさに私がXamarinでよくやる実装です。
MainPage.xaml.csにイベントを定義し、それをコントロールに割り当てています。ちなみに、プロジェクト名はXamarinをMVVMで実装する練習なので
安直にXamvvmPracticeとしました。ネーミングセンス磨きたいです。この実装、参考サイトによると プログラミングを覚えたて？であればこのように、コントロールにイベントを割り当ててこの動作を実現させると思います。しかし、クリックイベントを使った瞬間にMVVMではなくなるわけです。 とのこと。
「クリックイベントを使ったらMVVMではない」とは？どういうことか？というと、レイアウト部分に関する事はView、つまりはXamlで完結させたい訳です。クリックイベントの紐づき先はXamlのコードビハインドであり、レイアウトとそのコードビハインドの依存関係が生まれてしまいます。このように、UIとロジックが密結合の状態であると自動テストも憚られてしまいます。コードビハインドとは？
https://ufcpp.net/study/dotnet/wpf_xamlcode.html#codebehind   ここでは、MainPage.xamlがレイアウト、MainPage.xaml.csがコードビハインドになります。（上のサイトと微妙にコードビハインドの意味が違う気がしますが、ここはニュアンスで捉えておくことにします）
MVVMを使わない実装だと、レイアウトとコードビハインドに依存関係が生じてしまいます。
規模の小さなプログラムではそんなに問題なさそうですが、規模が大きくなってくるとレイアウト部分がデザイナ待ちになったり、コードビハインドで何を実装したのか分かりにくくなりそうです。  これをに完全に分業してしまうのがMVVMということですかね。では、先ほどと同じプログラムをMVVMを使って実装してみます。
プロジェクトにを追加します。
↓のようになると思います。
ワクワクしてきました。では実装に入ります。参考サイトと順序が違いますが、まずはViewModelBaseからここで全ViewModelに共通となる、プロパティ値に変更があった時に呼ばれるOnPropertyChangedを実装しています。
ViewModelはこのViewModelBaseを継承して実装していくことになります。次にMainViewModelとCountUpCommandを実装します。Countが未実装なのでCount.Incrementにエラーが出ますが、このあと実装するのでとりあえず気にしないでおきます。MainViewModelのプロパティCurrentNumberのsetterでとしてプロパティ値が変更されたことを通知し、PropertyChangedイベントを発行しています。
何となくMVVMらしさが出てきた気がします。次はCountを実装します。このCountがModelにあたる部分です。
今回はカウントを上げる処理だけなので寂しい感じになっていますが、実際にアプリを作る時には、Modelにあたる部分が一番膨らむのかなと想像しています。最後に、MVVMを使わない実装になっていたMainPage.xamlをViewModelと紐付けて、不要になったMainPage.xaml.csのイベント処理を消します。これで実行するとMVVMを使わない実装と同様に動作することが確認できると思います。今回参考にさせて頂いたプログラムではとして、ボタンを押すとラベルに表示された数字を1ずつ増やすプログラムを
Xamarin × MVVM で実装していました。プログラムの保守性/可読性が上がる、テストがしやすいなどのメリットや
コーディング量が増える、動作が重くなるなどデメリットもあるようですが、
個人的な感想としてはなんとなくスマートに書けている感じがして好きです。笑ネットで調べているとXamarin向けのMVVMフレームワークなるものもあるんですね。
Prismくらい触ってみたいなぁと思っています。  拙文でしたがご覧頂いた方々、ありがとうございました。
不備等ございましたらコメント頂けますと幸いです。


