More than 1 year has passed since last update.DataGridやListBoxで複数のアイテムを表示しているときに、アイテム自身に上下へのボタンをつけたいことがあります。
👇 "JIRO"横の⬆をクリックMVVMでやっている場合は、アイテムごとViewModelに上下移動Commandを用意して、、、となります。
なしの場合はコードビハインドで、上下移動ボタンが押されたItemを検索して、、、となります。
どちらにしても、手間ですし他のコードで使い回せません。そこで、添付プロパティを使って、Buttonに自身が所属しているItemsControlから行上下移動させる機能を追加します。Viewだけで完結しているので、ViewModel側には追加作業は必要ありません。
MVVMを使用していない場合も、コードビハインドから呼び出して使えます。
ItemsControlを継承しているコントロールなら使えるので、ItemsControl、DataGrid、ListBox、ListView、ComboBoxでも使えます。以前投稿した、DataGridやListBox内でクリックされたら自身の行を削除するButtonを改造して作ります。
削除ボタン機能の一部を共通化して、上下移動ボタンを作ります。まず、指定されたオブジェクトが所属している操作するコレクションとオブジェクトのインデックスを検索します。
ここでのコレクションはDataGridのItemsSourceがViewModelのコレクションにBindingされているなら、それが取得されます。次に、指定されたオブジェクトを含む行を上下に移動するメソッドを定義します。
コードビハインドを使用する場合は、このメソッドをButtonのクリックイベントから呼び出しても使えます。そして、Buttonのクリックイベントでこのメソッドを呼ぶ添付プロパティを用意します。ViewModel側にこんなプロパティがあるとします。それに対して、ViewではDataGridで上記のNamesプロパティにBindingしています。ListBoxの場合は以下です。添付プロパティを使用せず、コードビハインドから使用する場合は、以下のようになりますコードビハインドに以下を追加します。DataGridなどで並び替えしていると、正しく動きません。Index算出は並び替え後のIndexですが、削除・移動時はデフォルトの並びでのIndexを指定する必要があるためです。View側での変更をViewModelに伝えるため、ItemsSourceのBindingはTwo-Wayにする必要があります。
つまり、ReadOnlyなコレクションがBindingされていた場合は使えません。VisualStudio2019
.NET Core 3.1
C#8


