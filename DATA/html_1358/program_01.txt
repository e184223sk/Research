
/// &lt;summary&gt;
/// 指定されたオブジェクトを含む行のIndexを増やす = 下の行に移動する
/// &lt;/summary&gt;
public static void IncrementItemFromParent(DependencyObject elementInItem)
{
    var (targetList, index) = GetParentListAndIndex(elementInItem);

    if (targetList == null || index &lt; 0)
        return;

    //最後の行だったら何もしない
    if ((index + 1) &gt;= targetList.Count)
        return;

    //一度削除して、1つ大きいIndexに入れ直す
    var targetElement = targetList[index];
    targetList?.RemoveAt(index);
    targetList?.Insert(index + 1, targetElement);
}

/// &lt;summary&gt;
/// 指定されたオブジェクトを含む行のIndexを減らす = 上の行に移動する
/// &lt;/summary&gt;
public static void DecrementItemFromParent(DependencyObject elementInItem)
{
    var (targetList, index) = GetParentListAndIndex(elementInItem);

    if (targetList == null || index &lt; 0)
        return;

    //最初の行だったら何もしない
    if (index &lt;= 0)
        return;

    //一度削除して、1つ少ないのIndexに入れ直す
    var targetElement = targetList[index];
    targetList?.RemoveAt(index);
    targetList?.Insert(index - 1, targetElement);
}

/// &lt;summary&gt;
/// 指定されたオブジェクトを含む行を親のItemsControlから削除する
/// &lt;/summary&gt;
public static void RemoveItemFromParent(DependencyObject elementInItem)
{
    var (targetList, index) = GetParentListAndIndex(elementInItem);

    if (targetList == null || index &lt; 0)
        return;

    targetList?.RemoveAt(index);
}

