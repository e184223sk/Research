画面サイズに合わせてフォーム全体では無く、LabelやPanel、CheckBoxやRadioButtonなどのControl毎に自在に拡大縮小ができたらいいなと思ったので、オープンソースのClassを使ってカスタマイズしてみました。意外と汎用性が高くコードも経験の浅い自分でも分かりやすかったので、備忘録としてメモしておきます。調べてみると同じ目的の実装方法は他にもいくつかありましたが、今回は下記のオープンソースのクラスをインポートして使ってみました。経験の浅い自分でもコードが分かりやすく、また導入も簡単でカスタマイズしやすいという点が良いと思います。
C# Resize ALL Controls at Runtime
環境がVisual Studioであれば同フォルダ下に置いてプロジェクトにClassを追加します。おそらく必要なファイルはclsResize.csだけの方が多いと思います。あとはリンクの導入方法を参考に進めていきます。まず以下のnamespaceは追加しておいてねーって書いてますがだいたい追加してると思います。次に対象のフォームクラスのコンストラクタに以下のようにイベントを追加します。コンストラクタに追加した各イベントメソッドを追加します。_LoadイベントはForm_Loadイベント時のフォームのデフォルトサイズを取得し、_Resizeイベントはフォームのサイズを操作し、デフォルトサイズから変更があったときにトリガがかかり自動でControlsをリサイズしてくれます。現状簡単なフォームのリサイズであれば、これだけの実装で問題ないと思います。
ですが、デフォルト設定のままだと各コントロールごとにフォントサイズを設定していた場合、全てフォーム全体で設定しているフォントサイズになってしまいリサイズイベントが起きると各コントロールのテキストレイアウトがくずれてしまうかと思います。
例)の場合フォームのフォントサイズの10pxが基準となり、その基準から拡大縮小したサイズと比率計算してリサイズ処理をするので意図したサイズ比率でリサイズ処理が行われない可能性があります。なので各コントロールごとに設定したフォントサイズの値を取得できたら、それぞれのサイズでリサイズ処理が行われ、全体としてのレイアウトが崩れずにリサイズできるのではと考えました。具体的な実装方法として思いついたの方法は以下の通りです。フォントサイズと同様に、取得したControlsからcontrol.BoundsをControlTable Dictionaryに追加していけばフォントサイズだけでなく、親コントロールに対する子コントロールの表示位置もそれぞれの値ごとに意図した比率でリサイズ処理できるようになります。改善点としては、全コントロールを取得し、それぞれの値でリサイズしていく訳なので使用しているコントロールの数によっては動きが重くなる点です。各フォントサイズを取得する為に、毎回全コントロールを取得し、Dictionaryに追加しているので一度コントロールの値を取得してどこかで保持してリサイズイベントが発火したコントロールだけ取得する。みたいな処理ができないか考えています。ですが、比較的簡単にこれらの機能を追加できるのは駆け出しエンジニアにとっては非常にメリットだと思います。
最後に、間違いや良い実装方法などありましたらお気軽にコメント頂けますと幸いです。


