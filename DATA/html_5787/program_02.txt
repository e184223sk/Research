
    public abstract class MovementBase
    {
        public abstract Vector Move(Vector position);
    }

    public class GoStraightMovement : MovementBase
    {
        public GoStraightMovement()
        {
        }

        override Vector Move(Vector position)
        {
            return position + new Vector(0, 1);
        }
    }

    public class GoBackMovement : MovementBase
    {
        public GoBackMovement()
        {
        }

        public override Vector Move(Vector position)
        {
            return position + new Vector(0, -1);
        }
    }

    public class Enemy
    {
        protected Vector Position;
        protected MovementBase Movement;

        Enemy(Vector position, MovmentBase movement)
        {
            Position = position;
            Movement = movement;
        }
        void Update()
        {
            Position = Movement.Move(Position);
        }
    }

