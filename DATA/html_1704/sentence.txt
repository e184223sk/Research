More than 1 year has passed since last update.※MVC5用世間がコロナコロナうっせーのでムシャクシャしてやった。「ここにこういう表があるじゃろ」
「これをピボットみたいにしてほしい。Excelみたいに。Excelみたいに。」
すげぇ面倒。qyen/ToPivotTable: Convert IEnumerable to pivot table on C#ざっくりとこう分けて列ヘッダだけで見ると

こういうデータ構成になってる。データ構成だけに着目するとColumn(0)..Column(n)をキーにしたツリー構造と、見ることができる。LinqのIEnumerable&lt;T&gt;.GroupBy()はIEnumerable&lt;IGrouping&lt;T&gt;&gt;を返し、IGroupingはIEnumerableのサブクラスであるため、という形で深堀りできるので、再帰を使って一気にツリーを生成してる。
ToPivotTable/PivotTable.cs at master · qyen/ToPivotTable構造的に行も列も同じ。measureは で成り立ってる。Pivotから見れば行列の座標から抽出したリストに対して集計して値を出す部分を委譲するのがこのMeasure。この図のように、あるセルを表す集合ListOfCellはそのセルの座標となる各ヘッダーセルの値で元集合をフィルターしたものになる。
そこにMeasureを通すと出力すべき値が取り出せる。小計や合計の値は、そのセルの座標となる各ヘッダーセルのうち合計ヘッダーセルでないものの値で元集合をフィルターしたものから算出できる。列定義と集計すべき値が定義としてあるんだから先にGroupBy(Column(0)..Column(n)).Select(Column(0)..Column(n),Measure(0)..Measure(m))みたいに集計しちゃえばCPUに優しい感じになりそうなんだけど、どうやって実装したもんか。コロナがすべてわるい。


