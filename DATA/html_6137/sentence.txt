More than 3 years have passed since last update.アプリケーションの状態とか各種設定値とかを保存できる機能
ウィンドウの位置・サイズを記憶させて次回起動時に復元とかよくやると思う
使い方自体は簡単なので参考を見ればわかると思う
参考：プログラマーズ雑記帳/Settings を使った WPF でのアプリケーション設定の保存 (ウィンドウの表示位置、サイズの保存ここではなるべく簡単にSettingsを使う方法を考えてみる(ΦωΦ)こんな感じでWindowを読み込んだ時閉じる時に処理を書く
これだと設定項目が増えればいちいち書き足す必要がある上、他のタイミングで保存とかしたい時に
また長々と設定項目毎にコードを書かないといけなくなる┐(´д｀)┌
Viewが一つで、設定の読み込み・保存のタイミングが固定ならこれでもいいと思うこれなら項目が増えてもメソッドに書き足すだけで済む
しかし、これだとViewが増える度に同じようにメソッドを書かないといけなくなる(ヽ´ω`)Settingsへの保存処理などが汎用的にできるクラスを作ればもっと楽になりそう例えばこんな感じのクラスを作れば、保存時の値の設定がこんな感じに書けるようになるただこれだと、インデクサでないとプロパティの指定ができないので、ジェネリックで使いやすくしたものを作ったSettingsHelper&lt;T&gt;をインスタンス化してメソッドを使うだけ
&lt;T&gt;はApplicationSettingsBaseを継承している必要がある
コンストラクタには&lt;T&gt;型のSettingsインスタンスを指定する
指定しなければ自動的にリフレクションで&lt;T&gt;内のDefaultプロパティを探してSettingsとする
(VisualStudioの
追加&gt;新しい項目&gt;設定ファイル 
で追加したものにはデフォルトで記述されている)
Settings自体はstaticとしてキャッシュしているため、あちこちでインスタンス化してもリフレクションで重くなりづらいようにしたつもり
使う際にインスタンス化してもいいが、SettingsHelper&lt;T&gt;のインスタンスを提供するクラスを作るなどしたほうが使いやすいと思う簡単なサンプルも置いておくSettingsをなるべく楽に使うためにいろいろ考えたらこうなった・ω・
ここのやり方がおかしい・もっといいやり方がある
などなどあれば教えて下さい(人∀・)


