More than 1 year has passed since last update.Azure Storage Tableへの非同期書き込みがうまくいったので、いよいよ本命のSQL Databaseへの非同期書き込みにチャレンジ！2020/02/24 追記
KeyVaultシークレット情報(接続文字列)を管理させるようにできました。後半に記載。いつも通り情報があまりないです…C#の知識があればさくっと書けるのかもしれないですが、私にはないので手探りで進めます。VisualStudioを利用してDB参照する方法は以下のサイトが非常に参考になります！
参考サイト：Azure FunctionsとSQLデータベースを連携するブレードから統合を選択し、出力から新規追加(+新しい出力)しても見当たらない。
参考サイトを元にDB作成１．アプリケーション設定にSQL Databaseの接続文字列を追加２．コード内で先ほど設定した接続文字列が参照できることを確認３．「Service Busトリガーで起動し、メッセージ内容をDBにINSERTする」処理を加えるTips. Functionsの.Net Core3.1だとSystem.Data.SqlClientの一部の機能がコンパイルエラーになりました。~2.xに変更することで解消。（それでいいのか・・・）４．Service Busに書き込まれた情報が無事SQL Databaseのnameテーブルに追加されたことを確認ブラウザから打鍵
クエリエディタからセレクトを実行
接続文字列情報をアプリケーション設定として持っておくとセキュリティ管理責任をアプリケーションも負わなければいけないので、極力KeyVaultに集約管理したい。では、KeyVaultに保管したシークレット情報を読み取る実装に変更してみよう！というお話です。現状は、Functionsがアプリケーション設定内にある接続文字列を取得するように統合時に設定後から確認する場合はアプリケーション設定から確認可能
でもこの変数名はコード内に出てこないし、接続処理はどうやってるんだ？と思っていろいろあさっているとfunction.jsonに登録されていた模様
１．マネージドIDの作成と関連付けここまでわかればKeyVaultからデータをとってくるのは容易いです。まずはFunctionsでマネージドIDを作成して、KeyVaultのシークレットに一覧・取得を権限付け。詳細は過去記事参照(KeyVaultのシークレット情報をマネージドIDを利用して取得する)
２．シークレット識別子の把握この時のシークレット情報のURL(シークレット識別子)をメモ例）ttps://KeyVault名.vault.azure.net/secrets/シークレット名/**********************３．Key Vault 参照形式に書き換えてメモ帳に用意参考：App Service と Azure Functions の Key Vault 参照を使用する参照構文
Key Vault 参照の形式は @Microsoft.KeyVault({referenceString}) です。{referenceString} は次のいずれかのオプションで置換されます。４．一番最初のアプリケーション設定の値欄にKey Vault 参照形式で貼り付け緑チェックでキーコンテナの参照　になったらOK例）@Microsoft.KeyVault(SecretUri=https://myvault.vault.azure.net/secrets/mysecret/ec96f02080254f109c51a1f14cdb1931)こちらの関数はServiceBusの接続情報とSQLDatabaseの接続情報を2つ持っているので、変更箇所が2箇所になるだけ。１．シークレット情報を作成して、シークレット識別子を入手。２．Key Vault 参照形式に変更して、アプリケーション設定の値を変更。３．以下のようになればOK４．最後にもう一回打鍵して、想定した挙動で動くことを確認して終了


