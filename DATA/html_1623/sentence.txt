More than 1 year has passed since last update.
前回の続きになります。ホーム画面からプレイ画面をダイアログ表示し
ゲームを失敗したらリザルト画面へ遷移するようにします。
丁寧に解説している故に記事が長くなってしまうのでリザルト画面は第3回に投稿します。ダイアログ表示だけを学びたい人は
前回の参照サイトをプロジェクト(Form1)の作成まで実施してください。前回：参照
ブロック崩しゲームを始めから作りたい人は→：Visual StudioとC#を初めて使ってブロック崩しゲームを作ってみた①まずはForm1の画面に別ウィンドウを追加しようと思います。画面右側の「ソリューションエクスプローラー」の「プロジェクト名」を右クリック
「追加」→「新しい項目の追加」を選択。
Windowsフォームを選択し、名前は「Form2.cs」で追加。


すると、Form2が作成されます。
これで表示される画面の準備はOK！次はボタンを設置します。
Form1からForm2に遷移させたいのでForm1の画面にボタンを設置します。
Form1のデザイン画面(Form1.cs)を表示し、「表示(V)」→「ツールボックス」→「コモンコントロール」
→「Button」をクリック。

画面にマウスホールドして適当な四角形を作ったらボタンフォームが表示されます。
（「Button」クリック後画面任意箇所クリックしても設置できます。）ボタンを右クリック→「プロパティ」でプロパティが右下に表示されるので、
ここでボタンに表示されるテキストを設定します。
ボタンをクリック時に動作させたいので
⚡マークのイベントをクリック→アクション欄にある「Click」で処理を行うメソッド名を決めます。
Form2をホーム画面にするので、ここでは「home_Click」と命名します。
すると、Form1.csにメソッドが自動生成されます。
生成されたメソッドにForm2を表示する処理を記述します。実行(F5)してみてください。
ボタンを押すと別ウィンドウが表示されるはずです。

※実はここでパドルの操作が効かなくなっています。
後のホーム画面作成時に原因・対策を追記しましたのでこのまま進めてください。一応完成しましたが、このままではボタンを押下する毎にウィンドウが表示されます。
開いた画面を閉じないと元の画面を触れないのが一般的だと思うのでダイアログ表示にします。form2.Show() → form2.ShowDialog()に変更するだけです。
初心者向け支記事なので文字補完を使ってみましょう。
「Show」にカーソルを合わせ　Ctrlとスペースキーを同時に押下すると候補が表示されるので、
ここから「ShowDialog」を選択します。
実行してみてください。
Form2を閉じないとボタンをクリックできなくなっています。Form2の画面をスタート画面にします。Form1のときと同じようにForm2にボタンを作成します。

ボタン名はスタート。
メソッド名はstart_Clickにします。メソッドが自動生成されたはずなので、
Form1へ遷移する処理を記述します。実行すると遷移できましたね。
初期起動時にスタート画面を表示するようにします。
ソリューションエクスプローラーから「Program.cs」を開きます。
ここで最初に開く画面を設定しています。
Form1から2へ変更します。
Application.Run(new Form1()); → Application.Run(new Form2());
実行してみてください。
ホーム画面が最初に表示されたらOKです。試しにゲームをしてみたらパドルが動きませんでした。
キーイベント処理がある画面でボタンを設置すると
キーイベントが発生しなくなるようです。
home_Clickとボタンを削除します。

Form2デザインから「表示」→「ツールボックス」
→「ComboBox」と「Label」を選択して画面に設置します。
各テキストは以下のように設定。
コンボボックスにリストを作成します。
作成したコンボボックスを右クリックしプロパティを開いて
「item」の「コレクション」をクリックすると
右端に「・・・」メニューが現れるのでクリック。
エディターが開くので、1行毎に選択リスト用テキストを入力します。
「Easy」「Normal」「Hard」「Expert」

コンボボックスにイベントを設定します。
以下のイベントはリスト選択する毎に処理が流れて値を取得してくれます。
ホーム画面(Form2)のコードは以下になります。解説をします。
選択したボール速度を次のForm1画面へ渡すため、
x軸をx、y軸をyとします。
C#にグローバル変数はないので、どうやってこのxy値を渡すかは以下記事参考にしました。
　　C#にグローバル変数がない！対応策
comboBox1.SelectedIndexで要素を取得できます。
中身のテキストを抜き出すコードもあるようです。
今回は要素だけを抜き出し、どのモードを選んだのかswich文で分岐させます。
後はスタートボタンクリック時の処理を書いて終わりです。Form1画面でxyを受け取れるようにします。
1行変更するだけで簡単です。
this.ballSpeed = new Vector(-4, -8)　→　this.ballSpeed = new Vector(Form2.x, Form2.y)
form2.xのようにインスタンス参照ではなく、
Form2.xであることに注意。詳細は以下「グローバル変数がない！対応策」記事を読んでください。モードを変更して実行してみてください。
Expertだと早くて、Easyだと遅ければOKです！モード選択時にテキストを書き換えられるのでこれを不可にします。コンボボックスを入力不可にするにはプロパティから
DropDownstyleの「DropDown」を「DropDownList」へ変更するだけです。(プログラムから設定する場合は以下のようにします。
comboBox1.DropDownStyle = ComboBoxStyle.DropDownList;)
するとグレーアウトし入力不可になっています。
デフォルト(Normal)とボックス内に書いていましたが消えてしまったので
ラベルを「Modo：デフォルト(Normal)」へ書き換えます。


これでホーム画面は完成です！簡単でしたね！
かなりわかりやすかったのでは？ww
丁寧すぎたかも・・・それはそれでヨシ！
ツールボックスの位置とか
プロパティの使い方に慣れてきました！
にしても未だにタスクを振られていない・・
引き続きゲーム作っていくかあ（仕事中）次はリザルト画面の作成です！↓
Visual StudioとC#を初めて使ってブロック崩しゲームを作ってみた③


