using UnityEditor;
using UnityEngine;

namespace CSharpProjectSolutions
{
    public class CustomAssetPostprocessor : AssetPostprocessor
    {
        // Unity標準のジェネレータ「以外」でC#プロジェクトを生成するかどうか返すコールバック(UnityVS等で利用).
        static bool OnPreGeneratingCSProjectFiles()
        {
            Debug.LogFormat("&lt;color=cyan&gt;OnPreGeneratingCSProjectFiles&lt;/color&gt;");
            return false;
        }

        // C#プロジェクトファイルが生成された後に、修正を適用するコールバック.
        static string OnGeneratedCSProject(string path, string content)
        {
            Debug.LogFormat("&lt;color=blue&gt;OnGeneratedCSProject:&lt;/color&gt; {0}\n\n{1}", path, content);
            return content;
        }

        // C#ソリューションファイルが生成された後に、修正を適用するコールバック.
        static string OnGeneratedSlnSolution(string path, string content)
        {
            Debug.LogFormat("&lt;color=orange&gt;OnGeneratedSlnSolution:&lt;/color&gt; {0}\n\n{1}", path, content);
            return content;
        }

        // VisualStudioのバージョンアップによってcsprojがUnityと互換性が無くなったときの「セーフガード」.
        // 後処理でcsprojを修正、または作り直す. 願わくば、これが必要になりませんように.
        // ...とソースコードに書いてあった(意訳)
        static void OnGeneratedCSProjectFiles()
        {
            Debug.Log("&lt;color=red&gt;OnGeneratedCSProjectFiles:&lt;/color&gt;");
        }
    }
}

