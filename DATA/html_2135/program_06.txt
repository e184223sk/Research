
internal class CustomCSharpCompiler : MicrosoftCSharpCompiler
{
    public CustomCSharpCompiler(MonoIsland island, bool runUpdater) : base(island, runUpdater)
    {
    }

    protected override Program StartCompiler()
    {
        // 継承元のコンパイルプロセスは即終了させる.
        var p = base.StartCompiler();
        p.Kill();

        // 最後に生成されたresponse fileを取得する.
        // 複数のファイルが生成される場合があるので、outオプションで判定する.
        var outopt = string.Format("/out:\"{0}\"", m_Island._output);
        var responsefile = Directory.GetFiles("Temp", "UnityTempFile*")
                .OrderByDescending(f =&gt; File.GetLastWriteTime(f))
                .First(path =&gt; File.ReadAllLines(path).Any(line =&gt; line.Contains(outopt)));

        // 　自作のコンパイラでresponse fileを処理する.
        var psi = new ProcessStartInfo()
        {
            Arguments = ...,
            FileName = ...,
            CreateNoWindow = true
        };

        // プロセスを開始する.
        var program = new Program(psi);
        program.Start();

        return program;
    }
}

