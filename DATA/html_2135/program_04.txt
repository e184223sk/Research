
[InitializeOnLoad]
internal class CustomCSharpInstaller
{
    static CustomCSharpInstaller()
    {
        var customLanguage = new CustomCSharpLanguage();

        // SupportedLanguagesにカスタムC#を追加.
        ScriptCompilers.SupportedLanguages.RemoveAll(x =&gt; x.GetType() == typeof(CustomCSharpLanguage));
        ScriptCompilers.SupportedLanguages.Insert(0, customLanguage);

        // CSharpSupportedLanguageはreadonlyなのでリフレクションで上書き.
        typeof(ScriptCompilers)
            .GetField("CSharpSupportedLanguage", BindingFlags.Static | BindingFlags.NonPublic)
            .SetValue(null, customLanguage);

        // こちらも上書き.
        EditorBuildRules.GetPredefinedTargetAssemblies()
            .Where(x =&gt; x != null &amp;&amp; x.Language != null)
            .First(x =&gt; x.Language.GetType() == typeof(CSharpLanguage))
            .Language = customLanguage;
    }
}

