リモートワーク、テレワーク、在宅勤務など呼び方はいろいろありますが、コロナ禍では会社に出社しない方もいらっしゃると思います。また、そのような方の中には残業が増えてしまった方も多くいるのではないでしょうか。実際に新聞では残業時間が長くなった方は 51% いるという記事もありました。テレワーク「隠れ残業」増　「通常より長時間労働になった」５１％この記事を読んでいる方の中にも残業時間が長くなった方がいるのではないかと思いますが、残業時間は漏れなく登録していますか？こんな働き方していないでしょうか？この例では一日 8 時間労働すると、 19 時まで働くと登録上は 18 時から 19 時までの 1 時間分が残業ですが、実際には 22 時から 24 時まで働いているので正確には 3 時間の残業 (2 時間の登録漏れ) です。
これを毎日繰り返すと、なんと「1 か月の労働日数 20 日 × 1 日の登録漏れの残業時間 2時間 = 月 40 時間」をサービス残業していることになります。人事労務担当としてはこのような隠れ残業、登録漏れは見過ごせませんね。（あえて見過ごすという話もあるかもしれませんが触れません）リモートワーク環境では会社のタイムカードで打刻する代わりに、自分で勤務時間を登録したり、タイムレコーダーのように出勤/退勤を記録するアプリを使ったりする方が多いのではないでしょうか。でも、このような場合、上司も人事労務担当者も登録を信用するしかありません。もし登録が正しいかを確認するとしても、チャットやメールをした時刻と登録された時間を照らし合わせてみるとか、あとはクライアント PC を監視する専用のソフトを使うなど、時間や費用がかかると思います。そこで人事労務 freee の API を活用したいと思います。（うちの会社では freee を使っていないけど、個人的には使ってほしいなと思っている）
https://www.freee.co.jp/hr/index2.html(設定次第ですが) 通常は以下の画面の真ん中の「勤務時間」から自由に登録すると思いますが、API を使った出勤、退勤の打刻をすることもできます。 勤務時間の登録について: 勤怠を入力・管理するAPI の説明: タイムレコーダー(打刻) のAPI リモートワークではノート PC を使っている方が多いと思いますが、仕事以外の時間は PC のカバーを閉じているんじゃないかと思います。なので、OS が動作している時間は常に労働時間とみなします。ただ、私の周りの様子を見ていると登録漏れの残業は以下のパターンで発生すると思います。そこで今回は PC を起動したら「出勤」の時間の登録を自動で行い（早朝残業防止）、その日何時まで PC を起動していたかを記録します。以上のポイントを踏まえて、退勤については PC の最終起動日時していた時刻をデータとしてデータベースに記録しておくだけで、今回は freee 上での「退勤」打刻は自動では行わないことにしています。
データさえあれば人事労務担当や上司が勤務時間をチェックできたり、バッチでその日の締め処理として自動的に退勤を登録もできます。登場人物は以下です。
- Windows サービス: 今回開発したバックグラウンドで動作するプログラム。クライアント PC のハートビートの役割を担う。PC の起動時に自動で起動して、1 分ごとにアクセストークンを Functions に送る。
- Azure Functions: 今回開発した関数を実行するサーバーレス基盤。人事労務 freee の API を使って、出勤していているか確認をしたり、出勤していなければ「出勤」打刻を行う。また、Table Storage に対してクライアント PC のハートビートの情報 (最終起動日時)を送る。
- Azure Table Storage: NoSQL DB、Key-Value ストア。ユーザー情報、クライアント PC のハートビートの情報 (最終起動日時) を記録する。
- freee 認可サーバー: 認可コードまたはリフレッシュトークンを送ることで、人事労務 freee の API の実行に必要なアクセストークンを発行する。
- 人事労務 freee API: 出勤や退勤の打刻をしたり、打刻可能種別を返す(出勤済のときには退勤や休憩が可能)。今回開発した Windows サービスと Azure Functions 上で動作する関数のソースコードは GitHubで公開しています。MyNewService は Windows サービス、ClockInOutFunc は Azure Functions のプロジェクトの Visual Studio プロジェクトです。打刻を行うためにはユーザーの所属する事業所 ID や事業所ごとの従業員 ID が必要です。
今回はそれらを取得するために利用します。

https://developer.freee.co.jp/docs/hr/reference#/%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%83%A6%E3%83%BC%E3%82%B6/show出勤してるかどうかの確認に使用しました。今回は「出勤」打刻をするために使用しました。
https://developer.freee.co.jp/docs/hr/reference#/%E3%82%BF%E3%82%A4%E3%83%A0%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%80%E3%83%BC(%E6%89%93%E5%88%BB)/createまだ実験中でもあるので freee のアプリとして公開はできておらず、またソースコードも散らかっているのでご注意ください...。8.べた書きなのですが、ここで事前に作成した Azure Functions のエンドポイントを入力します。9.ビルドをした後、Windows サービスのインストールを行います。これを応用することで各従業員の手動退勤はやめて、従業員全員の PC の最終起動時刻のデータを元にその日の締め時間に退勤処理をバッチで行うということもできると思います。ただ、PC の起動しっぱなしでしばらく離席、その後に再度仕事を再開するパターンなど、休憩の自動判定はなかなか難しい部分もあるので、そこは手動でしてもらうかなさそうです...
実際には各従業員の働き方や freee の権限設定などを元に運用方法をご検討いただければと思います。深夜残業、早朝残業防止については他にも記事を書いているので、とりあえず開いてみて LGTM してください！
脱深夜残業、脱早朝出勤！たった5分でkintoneの使用可能な時間帯を制限する方法



