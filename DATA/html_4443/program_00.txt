:FunctionHandlerメソッド

        /// &lt;summary&gt;
        /// A simple function that takes a string and does a ToUpper
        /// &lt;/summary&gt;
        /// &lt;param name="input"&gt;&lt;/param&gt;
        /// &lt;param name="context"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public SkillResponse FunctionHandler(SkillRequest input, ILambdaContext context)
        {
            //ResponseプロパティにAlexaに喋らせる内容などを突っ込んでいく
            var skillResponse = new SkillResponse
            {
                Version = "1.0",//お約束
                Response = new ResponseBody()//お約束
            };


            //リクエストタイプが「LaunchRequest」かそれ以外の「IntentRequest」か判別する
            //今回はスキル起動時に送られる「LaunchRequest」のときとそれ以外のときで異なるレスポンスを返すようにした。
            if (input.Request.Type == nameof(Alexa.NET.Request.Type.LaunchRequest))
            {
                skillResponse.Response.OutputSpeech = new PlainTextOutputSpeech
                {
                    Text = "スキルを起動しましたよ。"
                };
            }
            else
            {
                //LaunchRequest以外はこちら
                //つまりIntentRequestもこちら

                //IntentRequestの場合
                //SampleIntentとGreetingIntentの2種類＋ビルトインインテント数種類がある
                //今回は自分で登録したSmapleIntentとGreetingIntentだけを扱う。

                //RequestをIntentRequestにキャスト
                var intentRequest = (IntentRequest) input.Request;
                //インテント名はこのIntentRequestオブジェクトが持っている
                var intentName = intentRequest.Intent.Name;

                //インテント名で場合分け
                if (intentName == "SampleIntent")
                {
                    skillResponse.Response.OutputSpeech = new PlainTextOutputSpeech
                    {
                        Text = "サンプルインテントでした。"
                    };
                }
                else if (intentName == "GreetingIntent")
                {
                    skillResponse.Response.OutputSpeech = new PlainTextOutputSpeech
                    {
                        Text = "こんにちは。グリーティングインテントでした。"
                    };
                }
                else
                {
                    skillResponse.Response.OutputSpeech = new PlainTextOutputSpeech
                    {
                        Text = "どれでもありませんでした。"
                    };
                }
            }


            //セッション終了させる。
            skillResponse.Response.ShouldEndSession = true;

            return skillResponse;
        }

