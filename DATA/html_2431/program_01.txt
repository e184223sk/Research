

public static byte[] ReadHexString(Stream st)
{
    byte[] ret = new byte[0];

    int b = st.ReadByte();
    if ( b != '&lt;' ) {
        if ( b &gt;= 0 ) { st.Position--; }// EOFでなければ1文字戻す
        return null;
    }

    while (true) {
        do { b = st.ReadByte(); } while (IsWhiteSpace(b)); // skip whitespaces
        if ( b == '&gt;' ) {
            return ret;
        }
        int upperNibble = AsHexDigit(b);
        if ( upperNibble &lt; 0 ) {
            return null;
        }

        do { b = st.ReadByte(); } while (IsWhiteSpace(b)); // skip whitespaces
        if ( b == '&gt;' ) {
            // 奇数桁で終わっている場合は末尾に'0'を補填する( = (上位nibble&lt;&lt;4) + 0)
            ArrayAppend(ref ret, (byte)(upperNibble&lt;&lt;4));
            return ret;
        }
        int lowerNibble = AsHexDigit(b);
        if ( lowerNibble &lt; 0 ) {
            return null;
        }
        ArrayAppend(ref ret, (byte)((upperNibble&lt;&lt;4) | lowerNibble));
    }
}

static bool IsWhiteSpace(int c) { return (c==0||c==9||c==10||c==12||c==13||c==32);}
static bool IsHexDigit(int c) { return (('0'&lt;=c &amp;&amp; c&lt;='9')||('A'&lt;=c &amp;&amp; c&lt;='F')||('a'&lt;=c &amp;&amp; c&lt;='f')); }
static int AsHexDigit(int c)
{
    if ('0'&lt;=c &amp;&amp; c&lt;='9') { return c-'0'; }
    if ('A'&lt;=c &amp;&amp; c&lt;='F') { return (c-'A')+10; }
    if ('a'&lt;=c &amp;&amp; c&lt;='f') { return (c-'a')+10; }
    return -1;
}

