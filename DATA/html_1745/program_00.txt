        [SerializeField] private ButtonController _redoButtonObj, _undoButtonObj, _paintButtonObj;

        private HpPaintFunctionState _paintFunctionState;

        private void Start()
        {
            //Redoボタンが押されたらFunctionステートを変更
            _redoButtonObj.InteractableStateChanged.AddListener(modeChangeToRedo);

            //Undoボタンが押されたらFunctionステートを変更
            _undoButtonObj.InteractableStateChanged.AddListener(modeChangeToUndo);

            //Paintボタンが押されたらFunctionステートを変更
            _paintButtonObj.InteractableStateChanged.AddListener(modeChangeToPaint);
        }


        /// &lt;summary&gt;
        /// Redoモードに変更
        /// &lt;/summary&gt;
        /// &lt;param name="obj"&gt;リスナー登録時に必要な引数&lt;/param&gt;
        private void modeChangeToRedo(InteractableStateArgs obj)
        {
            if (obj.NewInteractableState == InteractableState.ActionState)
            {
                _paintFunctionState = HpPaintFunctionState.Redo;
            }
        }

        /// &lt;summary&gt;
        /// Undoモードに変更
        /// &lt;/summary&gt;
        /// &lt;param name="obj"&gt;リスナー登録時に必要な引数&lt;/param&gt;
        private void modeChangeToUndo(InteractableStateArgs obj)
        {
            if (obj.NewInteractableState == InteractableState.ActionState)
            {
                _paintFunctionState = HpPaintFunctionState.Undo;
            }
        }

        /// &lt;summary&gt;
        /// Paintモードに変更
        /// &lt;/summary&gt;
        /// &lt;param name="obj"&gt;リスナー登録時に必要な引数&lt;/param&gt;
        private void modeChangeToPaint(InteractableStateArgs obj)
        {
            if (obj.NewInteractableState == InteractableState.ActionState)
            {
                _paintFunctionState = HpPaintFunctionState.Paint;
            }
        }

