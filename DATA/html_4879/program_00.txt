static void Main(string[] args)
{
  var matchingSequence = new[] { "ZUN", "ZUN", "ZUN", "ZUN", "DOKO" };
  var historyBuffer = new Queue&lt;string&gt;();

  "3.1415926535 8979323846 2643383279 5028841971 6939937510 5820974944 5923078164 0628620899 8628034825 3421170679"//ソース文字列(円周率)
    .Where(c =&gt; char.IsDigit(c))  //数字以外の文字を除外
    .Select(degit =&gt; "02468".Contains(degit) ? "ZUN" : "DOKO")  //偶数ならZUN、奇数ならDOKO
    .All(word =&gt;
    {
      Console.Write(word + " ");//単語を出力

      historyBuffer.Enqueue(word);//履歴に追加
      while (historyBuffer.Count &gt; matchingSequence.Length)
      { historyBuffer.Dequeue(); }//古い履歴を捨てる(判定に必要なのは直近5ワードのみ)

      if (historyBuffer.SequenceEqual(matchingSequence))
      {//ZUN ZUN ZUN ZUN DOKO なら
        Console.WriteLine("KI・YO・SHI!!");//KI・YO・SHI!!と叫んで改行
        return false;//ここをコメントアウトするとデータが尽きるまでズンドコ言い続ける
      }
      return true;
    });
}

