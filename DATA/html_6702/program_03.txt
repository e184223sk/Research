
public static IObservable&lt;double&gt; ProgressAsObservable(this ButtonBase button, TimeSpan time)
{
    var down = button.PreviewMouseDownAsObservable();
    var up = button.PreviewMouseUpAsObservable();

    //100になるまでGenerateしてもらいます。この100がトリガーです。
    var progress = down
                .Select(_ =&gt; Observable
                    .Generate(0d, i =&gt; i &lt;= 100, i =&gt; ++i, i =&gt; i, i =&gt; time)
                    .TakeUntil(up));

    return progress.Switch();
}

//ProgressというボタンとProgressBarというプログレスバーがあったとします
this.Progress
    .ProgressAsObservable(TimeSpan.FromMilliseconds(1))
    .ObserveOn(SynchronizationContext.Current)
    .Subscribe(x =&gt;
    {
        this.ProgressBar.Value = x;
        if (x.Equals(100d))
            this.TestMessage.Text += $"ProgressCompleted!:{DateTime.Now}\n";
    });

