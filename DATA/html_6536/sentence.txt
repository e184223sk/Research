More than 3 years have passed since last update.ExpresionTreeを利用した動的なメソッド構築の結果をデコンパイルしようとした場合、IL Spyを使ってもDASMを使っても一筋縄ではいかない。
なぜなら、プログラムをコンパイルしてアセンブリを生成した時点じゃ、当該アセンブリの中にはExpressioTreeそのものか､ExpressionTreeを構築するためのコードがコンパイルされているだけで生成結果は当然実行時まで存在すらしてない。
なので、そのソースコードやらExoressionTreeやらを表示することは可能でもそのコンパイル結果をデコンパイルすることはかなり面倒なことだった。
そんな中、我々取材班はdnSpyを使うことでこのExpressionTreeの動的生成結果をデコンパイルはおろか、デバッグすら可能だという情報を掴み一路南米アマゾンへと飛んだ。dnSpy単体で昨日書いたとおりデバッグが可能となってる。デバッグできると言うことは対象アセンブリをdnSpyの中で実行可能と言うことだから、何も考えずにCompileメソッド通して実行すればステップイン出来るんじゃね？と甘い考えを持って試してみたこれをdnSpyに食わせてデバッグしてみたら動的にコンパイルされたactの中にステップイン出来るんじゃないかなって思ったけどactの中にステップイン出来なく、そう甘い話じゃないねーってオチだった。てなコトで、結局のステップイン出来ないってことは､中身をこじ開けることができないんじゃ無いかなって予測を立てた。これらの結果から、実行時にDynamicAssemblyでっち上げてしまえば何とかなるかなと考え出したとき、dnSpyのreadmeにSet breakpoints in any assembly, including framework assemblies, assemblies in the GAC and assemblies existing only in memoryと有ったので、Assemblyはメモリに存在してるだけで行けるんじゃねーか？と言うことで、ヘルパ作って試してみた。こんな感じに書いて､コンパイルしたモノをdnSpyに食わせる｡食わせた直後が以下
Expressionが展開されてるけど､まぁその辺は無視して､とりあえずデバッグしてみる
デフォルトだと､エントリポイントでブレークするので､ContinueをとりあえずClick!だと､先ほどまで出来なかった､ExpressionTreeの生成結果をデコンパイルしてデバッグまで出来ちゃうタネと仕掛けは以下ざくっと言うと､動的にアセンブリ･モジュール･タイプ･メソッドをでっち上げてる｡
そのときに貰ってきたExpressionを元に､Debugger.Break()をCallして､デバッグ時にそこで止まるように仕込みを入れてる｡一手間かけて南米アマゾンまで飛べばとりあえずデバッグできた　(｀・ω・´)
ヘルパの中身はそのうち気が向いたら又書きます｡


