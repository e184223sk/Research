using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MyServer
{
    class Program
    {
        static void Main(string[] args)
        {
            //ListenするIPアドレスを決める
            string host = "localhost";
            System.Net.IPAddress ipAdd
                = System.Net.Dns.GetHostEntry(host).AddressList[0];
            Console.WriteLine("ListenするIPアドレス: " + ipAdd);

            //Listenするポート番号
            int port = xxxx;

            //TcpListenerオブジェクトの生成
            System.Net.Sockets.TcpListener listener
                = new System.Net.Sockets.TcpListener(System.Net.IPAddress.Any, port);

            //Listenを開始する
            listener.Start();
            Console.WriteLine("Listenを開始しました({0}:{1})。",
                ((System.Net.IPEndPoint)listener.LocalEndpoint).Address,
                ((System.Net.IPEndPoint)listener.LocalEndpoint).Port);

            //接続要求があったら受け入れる
            System.Net.Sockets.TcpClient client = listener.AcceptTcpClient();
            Console.WriteLine("クライアント({0}:{1})と接続しました。",
                ((System.Net.IPEndPoint)client.Client.RemoteEndPoint).Address,
                ((System.Net.IPEndPoint)client.Client.RemoteEndPoint).Port);

            //NetworkStream取得
            System.Net.Sockets.NetworkStream ns = client.GetStream();

            //クライアントから送られたデータを受信する
            System.Text.Encoding enc = System.Text.Encoding.UTF8;
            bool is_connected = true;
            string resMsg;
            while (true)
            {
                is_connected = true;
                System.IO.MemoryStream ms = new System.IO.MemoryStream();
                byte[] resBytes = new byte[256];
                do
                {
                    //データの一部を受信する
                    int resSize = ns.Read(resBytes, 0, resBytes.Length);
                    //Readが0を返した時はクライアントが接続したと判断
                    if (resSize == 0)
                    {
                        is_connected = false;
                        Console.WriteLine("クライアントが切断しました。");
                        break;
                    }
                    //受信したデータを蓄積する
                    ms.Write(resBytes, 0, resSize);
                } while (ns.DataAvailable);
                //受信したデータを文字列に変換
                resMsg = enc.GetString(ms.ToArray());
                ms.Close();
                Console.WriteLine("受信メッセ―ジ: " + resMsg);
                if (resMsg.Contains("end"))
                {
                    break;
                }
            }

            if (is_connected)
            {
                //クライアントにデータを送信する
                //クライアントに送信する文字列を作成
                string sendMsg = resMsg.ToString();
                //文字列をByte型配列に置換
                byte[] sendBytes = enc.GetBytes(sendMsg);
                //データを送信する
                ns.Write(sendBytes, 0, sendBytes.Length);
                Console.WriteLine("送信メッセージ: " +  sendMsg);
            }

            //閉じる
            ns.Close();
            client.Close();
            Console.WriteLine("クライアントとの接続を閉じました。");

            //リスナを閉じる
            listener.Stop();
            Console.WriteLine("Listenerを閉じました。");

            Console.ReadLine();
        }
    }
}


