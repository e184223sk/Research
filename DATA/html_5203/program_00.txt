using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public static class IntExtension {
    // 上限値
    public const int UPPER_LIMIT = 999999999;
    // 下限値
    public const int LOWER_LIMIT = 0;

    ///&lt;summary&gt;
    /// Int同士の加算時に、加算予定の値につけて下限・上限を超えないかチェック。
    ///&lt;param name="baseVariable"&gt;加算される元の値&lt;/param&gt;
    ///&lt;example&gt; 
    ///&lt;code&gt;
    /// willAddInt.AddIntAndIntLimitCheck(BaseInt);
    ///&lt;/code&gt;
    ///&lt;/example&gt;
    ///&lt;/summary&gt;
    public static int AddIntAndIntLimitCheck(this int _willAdd, int baseVariable) {
        int checkedNum;
        // 加算する二値の和が上限値より大きい場合、上限値で上書きする。
        if (_willAdd + baseVariable &gt; UPPER_LIMIT) {
            checkedNum = UPPER_LIMIT;
        // 二値の和が下限値未満になる場合、下限値で上書きする。
        } else if (_willAdd + baseVariable &lt; LOWER_LIMIT) {
            checkedNum = LOWER_LIMIT;
        // 問題がなければ、二値の和をそのまま返す。
        } else {
            checkedNum = _willAdd + baseVariable;
        }
        return checkedNum;
    }
}

