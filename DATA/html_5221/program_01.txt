
//IObservableの実体はSubjectクラスではない
public class HotObservable : IObservable&lt;int&gt;
{
    private Subject&lt;int&gt; subject = new Subject&lt;int&gt;();

    public void Fire()
    {
        subject.OnNext(1);
        subject.OnNext(2);
        subject.OnNext(3);
    }

    //Subscribeしたとき、SubjectクラスをSubscribeするのと同じ効果がなる
    public IDisposable Subscribe(IObserver&lt;int&gt; observer)
    {
        return subject.Subscribe(observer);
    }
}
public class User
{
    public User()
    {
        IObservable&lt;int&gt; observable = new HotObservable();
        //「observable」の実体はSubjectではないが、
        // Subscribeすると実質SubjectをSubscribeしてるのと同じ
        observable.Subscribe(n =&gt; { /*何らかの処理*/ });
    }
}

