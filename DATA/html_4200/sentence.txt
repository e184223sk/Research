More than 1 year has passed since last update.こんにちは、避雷です。UTVirtualのアドベントカレンダーに勇み足で挑んだ結果何も書く内容がないことに気づいて死体になりました。先週の記事はトバしすぎて気持ちの悪いオタクと化していたので今回は初心者向けの記事です（≒クソ記事）。ログインボーナス。
はい。今回のテーマはUnity.Mathfです。
https://docs.unity3d.com/ScriptReference/Mathf.html
単純に言えば数学関数の詰め合わせなんですけど、案外見落としがちで便利なものとかキモいものとかが多いのでここでサッとおさらいしてみましょう。これらは定数です。特に使うのはPI,Deg2Rad,Rad2Degあたりだと思う。便利な関数がたくさんあります。うまく使えば簡単なif文を省略できるので見てみましょう。float特有の丸め誤差を補正する機能付きの==関数。数値を一定の区間に押し込めることができますはとほぼ同値です。
例えばキャラのHPなどの実装に使うと可読性の高いコードに出来そうです(基本的に0&lt;HP&lt;MaxHPが成り立つので)いや何に使うんだよコレ…
色温度が与えられた引数(1000K~40000K)の時の色を返します。対応はこんな感じ

https://ja.wikipedia.org/wiki/%E8%89%B2%E6%B8%A9%E5%BA%A6だから何に使うんだよ…
ガンマ色空間とリニア色空間の間で補正を掛ける関数です。Unityにおけるガンマ・リニア色空間についてはこちら

https://docs.unity3d.com/ja/2017.4/Manual/LinearLighting.html
https://docs.unity3d.com/ja/current/Manual/LinearRendering-LinearOrGammaWorkflow.html
どうやら機械が描写する明暗と人間が認知する明暗の差を補完するシステムらしいですね。線形補完です。はと同値です。
逆にInverseLerpはa,b,cを引数としてcに対応するt（パラメタ）を返します。まんまLerpの逆関数ですね。2次元のパーリンノイズを生成します。
パーリンノイズに関してはこちら
https://ja.wikipedia.org/wiki/%E3%83%91%E3%83%BC%E3%83%AA%E3%83%B3%E3%83%8E%E3%82%A4%E3%82%BA
マイクラの地形生成とかに使われてるらしいよ？第2引数へ第3引数の歩幅で移動します。第二引数を通り越さないように調整してくれます。上の様にコードを打つと下の様に動きます。
float SmoothDamp(float current,float target,ref float currentVelocity,float smoothTime,float maxSpeed,float deltaTime)currentからtargetに向かって滑らかに移動するらしいです。currentVelocityは呼び出すたびに変化し、maxspeedは最大速度制限（任意）、deltaTimeにはデフォルトでTime.deltaTimeが入っています（前回と今回の呼び出しの間の時間を代入）。上のように記述すると下のgifのように動きます。なめらか～～～～
まぁぶっちゃけ使いづらいのでiTweenでも使えばいいと思います!!!!!!!Mathfには使える関数と何に使えるのかわからない関数があってとてもよい。
特にCorrelatedColorTemperatureToRGBを活用してる事案があったら教えてください。


