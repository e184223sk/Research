    [DefaultEvent("MouseHooked")]
    public class MouseHook : System.ComponentModel.Component {
        [DllImport("user32.dll", SetLastError=true)]
        private static extern IntPtr SetWindowsHookEx(int hookType, MouseHookDelegate hookDelegate, IntPtr hInstance, uint threadId);
        [DllImport("user32.dll", SetLastError=true)]
        private static extern int CallNextHookEx(IntPtr hook, int code, MouseMessage message, ref MouseState state);
        [DllImport("user32.dll", SetLastError=true)]
        private static extern bool UnhookWindowsHookEx(IntPtr hook);
        /* 追加部分 */
        [DllImport("kernel32", CharSet = CharSet.Unicode, SetLastError = true)]
        internal static extern IntPtr LoadLibrary(string lpFileName);
        IntPtr module = LoadLibrary("user32.dll");
        /*---------*/
        private const int MouseLowLevelHook = 14;
        private delegate int MouseHookDelegate(int code, MouseMessage message, ref MouseState state);
        private IntPtr hook;
        private GCHandle hookDelegate;

        private static readonly object EventMouseHooked = new object();
        ///&lt;summary&gt;マウスが入力されたときに発生する。&lt;/summary&gt;
        public event MouseHookedEventHandler MouseHooked  {
            add {base.Events.AddHandler(EventMouseHooked, value);}
            remove {base.Events.RemoveHandler(EventMouseHooked, value);}
        }
        ///&lt;summary&gt;
        ///インスタンスを作成する。
        ///&lt;/summary&gt;
        ///&lt;exception cref="Win32Exception"&gt;フックに失敗しました。原因の詳細はエラーコードを参照してください。&lt;/exception&gt;
        public MouseHook() {
            if (Environment.OSVersion.Platform != PlatformID.Win32NT)
                throw new PlatformNotSupportedException("Windows 98/Meではサポートされていません。");
            MouseHookDelegate handler = new MouseHookDelegate(CallNextHook);
            this.hookDelegate = GCHandle.Alloc(handler);
            //IntPtr module = Marshal.GetHINSTANCE(typeof(MouseHook).Assembly.GetModules()[0]); // ここを消すかコメントアウト
            this.hook = SetWindowsHookEx(MouseLowLevelHook, handler, module, 0);
            if (hook == IntPtr.Zero)
                throw new Win32Exception(Marshal.GetLastWin32Error());
        }

