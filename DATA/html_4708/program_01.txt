
    [DefaultEvent("KeyboardHooked")]
    public class KeyboardHook : Component {
        [DllImport("user32.dll", SetLastError=true)]
        private static extern IntPtr SetWindowsHookEx(int hookType, KeyboardHookDelegate hookDelegate, IntPtr hInstance, uint threadId);
        [DllImport("user32.dll", SetLastError=true)]
        private static extern int CallNextHookEx(IntPtr hook, int code, KeyboardMessage message, ref KeyboardState state);
        [DllImport("user32.dll", SetLastError=true)]
        private static extern bool UnhookWindowsHookEx(IntPtr hook);
        /* 追加部分 */
        [DllImport("kernel32", CharSet = CharSet.Unicode, SetLastError = true)]
        internal static extern IntPtr LoadLibrary(string lpFileName);
        IntPtr module = LoadLibrary("user32.dll");
        /*---------*/
        private delegate int KeyboardHookDelegate(int code, KeyboardMessage message, ref KeyboardState state);
        private const int KeyboardHookType = 13;
        private GCHandle hookDelegate;
        private IntPtr hook;
        private static readonly object EventKeyboardHooked = new object();
        ///&lt;summary&gt;キーボードが操作されたときに発生する。&lt;/summary&gt;
        public event KeyboardHookedEventHandler KeyboardHooked {
            add {base.Events.AddHandler(EventKeyboardHooked, value);}
            remove {base.Events.RemoveHandler(EventKeyboardHooked, value);}
        }
        ///&lt;summary&gt;
        ///KeyboardHookedイベントを発生させる。
        ///&lt;/summary&gt;
        ///&lt;param name="e"&gt;イベントのデータ。&lt;/param&gt;
        protected virtual void OnKeyboardHooked(KeyboardHookedEventArgs e) {
            KeyboardHookedEventHandler handler = base.Events[EventKeyboardHooked] as KeyboardHookedEventHandler;
            if (handler != null)
                handler(this, e);
        }
        ///&lt;summary&gt;
        ///新しいインスタンスを作成する。
        ///&lt;/summary&gt;
        public KeyboardHook() {
            if (Environment.OSVersion.Platform != PlatformID.Win32NT)
                throw new PlatformNotSupportedException("Windows 98/Meではサポートされていません。");
            KeyboardHookDelegate callback = new KeyboardHookDelegate(CallNextHook);
            this.hookDelegate = GCHandle.Alloc(callback);
            //IntPtr module = Marshal.GetHINSTANCE(typeof(KeyboardHook).Assembly.GetModules()[0]); // ここを消すかコメントアウト
            this.hook = SetWindowsHookEx(KeyboardHookType, callback, module, 0);
        }

