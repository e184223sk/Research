public class LinqTest
{
    public IEnumerable&lt;int&gt; a;
    public List&lt;int&gt; b;
    public int[] c;
    public IEnumerable&lt;int&gt; d;

    public LinqTest()
    {
        //普通のIEnumerable
        a = System.Linq.Enumerable.Range(0, 100_000_000);
        //List
        b = a.ToList();
        //配列
        c = a.ToArray();
        //無駄にWhereしてみる
        d = a.Where(x =&gt; x == x);
    }

    [Benchmark]
    public int WhereCountA()
    {
        return a.Where(x =&gt; x % 4 == 0).Count();
    }
    [Benchmark]
    public int CountA()
    {
        return a.Count(x =&gt; x % 4 == 0);
    }
    [Benchmark]
    public int WhereCountIndexA()
    {
        return a.Where((x, i) =&gt; x % 4 == 0).Count();
    }

    [Benchmark]
    public int WhereCountB()
    {
        return b.Where(x =&gt; x % 4 == 0).Count();
    }
    [Benchmark]
    public int CountB()
    {
        return b.Count(x =&gt; x % 4 == 0);
    }
    [Benchmark]
    public int WhereCountIndexB()
    {
        return b.Where((x, i) =&gt; x % 4 == 0).Count();
    }

    [Benchmark]
    public int WhereCountC()
    {
        return c.Where(x =&gt; x % 4 == 0).Count();
    }
    [Benchmark]
    public int CountC()
    {
        return c.Count(x =&gt; x % 4 == 0);
    }
    [Benchmark]
    public int WhereCountIndexC()
    {
        return c.Where((x, i) =&gt; x % 4 == 0).Count();
    }

    [Benchmark]
    public int WhereCountD()
    {
        return d.Where(x =&gt; x % 4 == 0).Count();
    }
    [Benchmark]
    public int CountD()
    {
        return d.Count(x =&gt; x % 4 == 0);
    }
    [Benchmark]
    public int WhereCountIndexD()
    {
        return d.Where((x, i) =&gt; x % 4 == 0).Count();
    }
}

