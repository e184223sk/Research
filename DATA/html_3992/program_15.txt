
public static TSource First&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, bool&gt; predicate)
{
    if (source == null)
    {
        throw Error.ArgumentNull("source");
    }
    if (predicate == null)
    {
        throw Error.ArgumentNull("predicate");
    }
    foreach (TSource item in source)
    {
        if (predicate(item))
        {
            return item;
        }
    }
    throw Error.NoMatch();
}

public static TSource Last&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, bool&gt; predicate)
{
    if (source == null)
    {
        throw Error.ArgumentNull("source");
    }
    if (predicate == null)
    {
        throw Error.ArgumentNull("predicate");
    }
    TSource result = default(TSource);
    bool flag = false;
    foreach (TSource item in source)
    {
        if (predicate(item))
        {
            result = item;
            flag = true;
        }
    }
    if (flag)
    {
        return result;
    }
    throw Error.NoMatch();
}

public static TSource Single&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, bool&gt; predicate)
{
    if (source == null)
    {
        throw Error.ArgumentNull("source");
    }
    if (predicate != null)
    {
        TSource result = default(TSource);
        long num = 0L;
        foreach (TSource item in source)
        {
            if (predicate(item))
            {
                result = item;
                num = checked(num + 1);
            }
        }
        switch (num)
        {
        case 0L:
            throw Error.NoMatch();
        case 1L:
            return result;
        default:
            throw Error.MoreThanOneMatch();
        }
    }
    throw Error.ArgumentNull("predicate");
}

public static bool Any&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, bool&gt; predicate)
{
    if (source == null)
    {
        throw Error.ArgumentNull("source");
    }
    if (predicate == null)
    {
        throw Error.ArgumentNull("predicate");
    }
    foreach (TSource item in source)
    {
        if (predicate(item))
        {
            return true;
        }
    }
    return false;
}

