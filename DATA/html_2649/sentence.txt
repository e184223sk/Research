More than 1 year has passed since last update.なんでこんなにややこしいものを、ややこしいまま呼ばないといけないかって、手を入れずに単体テストを追加したいからですが……. 書いたやつ出てこい! (時間が無い中、新人が書いたスパゲティコードを最低限だけ直した8年前の私なんですが)リフレクションするコードをググると Assembly.GetExecutingAssembly を使う例が多いですが、当然別アセンブリなので使えません. とりあえず Assembly.LoadFrom で動いたのでよしにしましたが、なんかダサいですね、ファイル名を渡してるし.抽象クラスはインスタンス化できないので、派生クラスを new するわけですが、派生クラスにはメソッドが生えていないので、結果として抽象・派生両方の型情報を引っ張る必要があります.Type.GetMethod するとき、対象が static メソッドでなかったり、public メソッドでなかったりするときは BindingFlags の指定が必要なようです. また、オーバーロードしている場合は、一意になるように引数の型情報を指定する必要があります. また、当然ですが、生えている抽象型の方で GetMethod します.MethodInfo.Invoke するときは、派生型のインスタンスを渡します.以上をまとめると以下のようなコードになります.


