More than 3 years have passed since last update.いろんなプロジェクトで関数の引数が多いコードを見かける。人間が理解できるのはせいぜい７個までという話はあるし、減らすことを考えてほしい。
何より重要なのは処理の分割をちゃんと考えていれば引数が多くなることは、ほとんどないという点である。
実際の例を元にサンプルコートを書いてみた。画面に8個のテーブルからデータを取得して画面に表示することを考える。一番目を引くのは８個の引数を持った関数が２個あり、片方は存在理由が不明な点である。おそらく、より分かりやすい関数名にしたかったのだろうと推測している。また引数が多いだけでなく、無駄に長い変数スコープのせいで、SetTable関数の引数をどうやって取得しているか追うのが大変である。
ちなみに、実際のコードでは、この関数を他で呼んでいるということもない。変数スコープを短くするだけで、スッキリする。ついでに、引数は少ないけど問題がある例も出しておく。見た目はスッキリしたが、バグの発生率は格段にあがる。private変数を使用している点が問題で、この変数がいつ更新されたのかを理解するのは非常に難しい。サンプルでは代入箇所が一箇所なので分かりやすいが、大抵の場合、別のイベント処理でprivate変数を更新してバグが発生することが多い。スコープを短くすると引数を短くすることが可能なため、実践してほしい。また引数が多くなった場合、減らす方法を考えるべきであるが、private変数を使用するのも良くない。
引数をクラスにまとめるという方法もあるが、変数スコープを考えてからやるほうが良い。今回の場合、クラスにまとめる必要すらないからだ。
補足）サンプルの元となった実際のコードは現役で動いており、調査の必要がでるたびに担当者を悩ませている。前の記事(Bool型の扱い)次の記事(関数呼び出しと条件分岐を分離できないか)目次


