タイトルの通り、C#のリフレクションのTIPS集です。これから示すコードは、以下のusingディレクティブが前提のコードとなってます。普段はvarキーワードをよく使ってますが、ここでは変数の型がわかるようにvarキーワードの利用はできるだけ控えています。
それと、いくつかのコードはdynamic使ったほうが簡単に書ける場合もありますが、あくまでもリフレクションのサンプルということでご容赦を。もし、objが、BaseClassから派生したクラスのインスタンスだった場合、このコードは、"BaseClass"は出力されません。ここでは、IEnumerable&lt;T&gt;を実装しているかを調べている。これで、intとstringが取り出せます。DateTimeは構造体なので、falseが出力される。あるオブジェクトと同じ型のインスタンスを生成したい時などに利用これを使える場面はあまりないかなーBaseClassから継承しているかを調べている上記はstatic メソッドにも対応している。
ちなみに、現在の（インスタンスメソッドの）オブジェクトのクラス名を調べるには、以下のコード。Hogeメソッドを呼び出す例ここでは、Hoge静的メソッドの戻り値の型を求めている。dynamicにすれば,もっと簡単。でも、コーディング時にメソッド名がわかっていればの話。MyPropertyの値を取り出しているMyPropertyに987を設定しているこのコードは、MyTestAttribute属性が付加されていることを前提としている。この属性のMyPropertyプロパティの値を表示。このコードは、MyTestAttribute属性が付加されていることを前提としている。この属性のMyPropertyプロパティの値を表示。                                        PropertyInfo, MethodInfo型のオブジェクトに対しても、IsDefinedメソッドは使えます。


