More than 3 years have passed since last update.　Unityを使わずに、C#からHTML5に変換するライブラリ「Bridge.net」のメモ書きです　少し前からSFMLを使っていたのですが、クロスプラットフォームの利点を全然いかせてない気がして、
C#からクロスプラットフォームのHTML5に変換する方法を探していたところ、こういうライブラリを見つけました　Bridge.netは、Google検索をしたところ、日本語情報が見つからないので、
この記事が数少ない日本語情報となるでしょうか　この記事では、ライブラリの準備と使い方までを記述しています下記URLを開くと、Bridge.netを使ったテストプログラムを書くことができます
https://deck.net/PCはWindowsで、またVisual Studioを使っていること前提の説明です
バージョン16.8.2時点での情報です導入方法は３つあります
（Nugetからインストールするのが一番楽です）Visual StudioのNugetの検索バーに「Bridge.net」を入力すると出る、
「Bridge」をインストールすると完了です
（インストール後に、”mscorlib.dllを参照しない”という設定に
自動でされてしまうので間違ってインストールしないように気を付けてください）WebGLも使うのであれば、「Bridge.WebGL」も併せてインストールしましょう(この方法ならば、Bridge.net関連のライブラリもインストールして導入することもできます)１・まずは下のURLにアクセスします
https://bridge.net/２・青字のDownloadボタンをクリックします

３・For Visual Studioの下のDownloadボタンをクリックします

４・緑色のDownloadボタンをクリックし、インストーラをダウンロードします
５・Bridge.NET.16.8.2.vsixをダブルクリックで起動します
６・インストールをクリックでインストールが開始されます。インストールが終わったら事前準備の完了です↓からZipをダウンロードし解凍、できたプロジェクトファイルをビルドします
https://github.com/bridgedotnet/Bridge（ソースファイルなどを改造してビルドすると、
mscorlib.dllを使うプロジェクトからでも参照できるようになるかもしれません）　準備を整えたら、Visual Studioを起動し、「ファイル」から「新しいプロジェクト」を選択すると、
項目に「Bridge.net」が出ます。そこの「Class Library」が、Bridge.netを使うためのプロジェクトテンプレートです
　このテンプレートを使って、新プロジェクトを作ったら、
コードを書いて、コンパイルすると、HTML5とJavaScriptに変換されます
（ビルド出力先の、bridgeフォルダ内のindex.htmlが実行ファイルです）DllImport属性が存在しない（よってネイティブdllは使用不可）
System.IO.Fileは存在するものの、使用はできない←ローカル上のGoogleChromeでファイル読み込みエラーが出る
ポインタは使用不可
例外処理も使用不可←使えました
ローカル関数とValueTupleも使用不可←最新バージョンの17.0.0(ベータ版)をインストールすると使用可能
Nugetのライブラリは、使えない物が多い
（Bridge.netのdllはmscorlib.dllを参照していないため。
ただし、Bridge.net派生ライブラリやRetyped派生ライブラリは使用可能だが、
JSファイルが必要になるかもしれない）＊JavaScriptでできないことは、このライブラリを使ってもおそらくできない＊
＊また、ブラウザによって動作が違うこともあります＊このライブラリに足りない機能はJSファイルを書くことで、処理を付け足すことが可能ですJSファイルは埋め込みリソース化したものを読み込むようにすると、出力されるindex.htmlを毎回書き換える必要がなくて楽使いたいjsファイルのビルドアクションを「埋め込みリソース」にするだけ
これでプログラムでリソース読み込み処理で読み出すことが可能Bridge.netやRetyped関連ライブラリに足りない機能は、
外部JSファイルを使うことで付け足したりできる　デスクトップアプリかブラウザアプリのどちらか１つだけあればいいという場合は、
このライブラリは使わないほうがいいです　このライブラリを使う場合は、ブラウザ用として作るのが手間がなくていいと思います
どうしてもデスクトップ用も作りたいという場合は、
ソースファイルのリンク機能や条件コンパイルなどを駆使して、
デスクトップアプリ用の処理とブラウザアプリ用の処理を書きましょう　HTML5とJavaScriptの知識と、C#を書けるスキルがあれば問題なく使えるってところでしょうか
JavaScriptを書かずとも、C#でウェブアプリが作れるのがいいところでしょう　問題は、大体のマネージdllを使用できないというのが厄介なのと、
このライブラリと別のGUIライブラリを使って
デスクトップ用とブラウザ用を両方作るというのはかなり厳しいということですね・・・
　ブラウザアプリ作るためのライブラリでしょうから仕方ないですね
第一、デスクトップアプリではできることも
ブラウザアプリだとできないということもあるので・・・・MonoGame On Web
https://github.com/MonoGame/MonoGame/issues/3895
Monogameを使用したコードを
HTML5に変換するライブラリ　このライブラリだけでなく
HTML5もJavaScriptも分からないことが多いので、
もう少し検証したいと思います　元のブログ記事（一応）
http://mini09memo.blog.fc2.com/blog-entry-357.html


