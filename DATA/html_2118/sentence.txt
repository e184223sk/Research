More than 1 year has passed since last update.この記事では透過されたpng画像をSpriteにし、Polygon Collider 2Dを使って当たり判定を自動でつけるところまでやりますMac Mojave : 10.14.6
Unity :    2019.2.4f1
Rider : 2019.1
.Net : 4.xまず、元となるSprite画像を用意します。
今回はテストで作ったので、fire alpacaというソフトを使って背景透過のpng画像を描きアニメーションさせました。今回はこの7枚の背景透過画像を元にします。
このとき注意しないといけないのが、攻撃するときに当たり判定をつけたい画像（武器など）と当たり判定をつけたくない画像（プレイヤー自身）などの出力を分ける必要があるということです用意したpngファイルをそのままUnityのAssets内に置く
Assets/Resources/Sprites/Player/Attack3/Weaponとしました。このままではUnityで使えないのでSpriteに変換していきます。まず、importした画像を全部選択します
次に、Inspectorから、Texture TypeがDefaultになっているのをSprite(2D and UI)にしますInspectorの下の方にApplyというボタンがあるので、そこをクリックします
すると、pngの画像をSpriteとして扱えるようになりました
ここまでで、透過画像のimportおよびSpriteへの変換が行えました。最後に、自動でColliderを生成してくれるPolygonCollider2Dを使います。流れはこれだけなのですが、順番が問題でこの順番じゃないとPolygonCollider2Dは自動で生成してくれません。また、アニメーションさせたくてScriptから連続でSpriteを変更し、自動的にそのSpriteから当たり判定を付与したいときはこのようにDestroyメソッドの中にGetComponent()を入れて削除し、またAddComponentで追加し自動生成を行うといっためんどくさい作業をしないといけないみたいです。
エディター上のPolygonCollider2DをResetすれば自動でColliderをつけてくれますが、Scriptからこのように書くと、Resetがoverrideされるみたいで、ここに買いた処理がResetボタンを押した時の処理になるみたいです。なので、処理は重いですがこういう形にしました。もっとこうした方がいいよとかここ間違ってる等ありましたらご指摘ください！


