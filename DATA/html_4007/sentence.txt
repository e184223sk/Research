More than 1 year has passed since last update.前回の記事はAOJのITP1_1について解説しました。今回はAOJのITP1_2の解説です。ITP1_2は条件分岐がテーマになっています。if文が出てくるかんじですね。問題
２つの整数 a, b を読み込んで、a と b の大小関係を出力するプログラムを作成して下さい。制約
-1,000 ≤ a, b ≤ 1,000数値例
1)
input : 1 2
output : a &lt; b2)
input : 4 3
output : a &gt; b3)
input : 5 5
output : a == b解法
数値を読み込んで、if文で、の3つに条件分岐するだけです。コメント
if文は二つの分岐のときはifとelseで、3つ以上の分岐の時は、ifとelse ifで最後の分岐がelseとなります。あと最後のelseの時は()の条件指定は必要ないです。なお、入力の部分のやり方は、string型の配列で読み込み、それをint型に変換するというやり方をとっています。けっこうよく使うので覚えておくといいです。問題
３つの整数a, b, cを読み込み、それらが a &lt; b &lt; cの条件を満たすならば"Yes"を、満たさないならば"No"を出力するプログラムを作成して下さい。制約
0 ≤ a, b, c ≤ 100数値例
1)
input : 1 3 8
output : Yes2)
input : 3 8 1
output : No解法
a &lt; b &lt; c であることを判定すればよいので、if文の条件式をがa &lt; b &amp;&amp; b &lt; cであればYes、そうでなければNoを返すプログラムにすればよいです。a &lt; b &lt; cと一気に書くことはできないので、ANDを表す論理演算子&amp;&amp;を使います。ちなみにORを表したい場合は||です。コメント
特にないですが、書いていて自分ですごく気になったのがなんでa &lt; b &lt; cという書き方はできないのかってことですね。ゴリゴリの機械学習エンジニアやってる友だちによると、この書き方をサポートしている言語もあって構文解析がめんどくさいからではないかということを言われました。slackでぱって聞いただけだったので、今度ちゃんと話聞いたり、いろいろ調べてまとめようと思います。問題
３つの整数を読み込み、それらを値が小さい順に並べて出力するプログラムを作成して下さい。制約
1 ≤ ３つの整数 ≤ 10,000数値例
input : 3 8 1
output : 1 3 8解法
いくつか解き方があります。最も基本的なのは、3つの数値の大小関係を把握して大きい順に並び替えて出力するというものです。B問題の要領で、という形式になると思います。今回僕がやってるのはLINQというC#のライブラリを使っています。
int[] x = Console.ReadLine().Split().Select(int.Parse).ToArray();
これはConsole.ReadLine().Split()で読み込んだ文字列をSelect(int.Parse)でint型に変換し、ToArrayで配列に格納しています。そしてここからがLINQのすごく便利なところなのですが、Sortメソッドを使えば、一発で昇順に並び替えてくれます。あとはそれを出力するだけです。コメント
LINQについては僕もまだまだ学んでる途中なのですが、すごく便利なのでC#やる時は調べとくといいです！特に配列などの処理は便利なものが多いのです！！問題
長方形の中に円が含まれるかを判定するプログラムを作成してください。次のように、長方形は左下の頂点を原点とし、右上の頂点の座標 (W,H) が与えられます。また、円はその中心の座標 (x,y) と半径 r で与えられます。
制約数値例
1)
input : 5 4 2 2 1
output : Yes2)
input : 5 4 2 4 1
output : No解法
だめなパターンは何か？を考えると解けます。まずxとyがともに正の値を取る第一象限にある場合は、となる時がだめなパターンです。次に、xまたはyが負の値を取るときもだめなパターンです。
なのでこれのパターンをコードに落として、if文の条件文に入れたらおっけーです。その際、ANDじゃなくてORで記述することに気をつけて。コメント
今回のようにダメなパターンをだして潰すというやり方はけっこう有効な場合が多いので、問題解決のメソッドとして身につけておくとよいと思います。競プロだけでなく他の多くの事象にも当てはまると思うので。読んでくれてありがとうございます。
説明の過不足や言葉の誤用あれば指摘オネガイシマス。（ないはずだが...）


