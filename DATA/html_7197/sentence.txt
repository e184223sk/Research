More than 5 years have passed since last update.以前 hatena の方でAvalonDock について書いてました。
http://lriki.hatenablog.com/entry/2014/12/23/215723
http://lriki.hatenablog.com/entry/2014/12/01/235751が、実務とかで役立ちそうな技術情報は Qiita の方がいいかなと思ったので一部こっちにお引越しです。さてさて、AvalonDock を MVVM で使い倒してこんなの作ります。プロジェクト一式はコチラです。
https://github.com/lriki/WPFSkeletonIDE/tree/GenericTheme1プロジェクトは Livet のテンプレートで作り、AvalonDock を NuGet から引っ張ってきています。以下、自分で用意したクラスです。AvalonDock のサンプルでは C# コードで ViewModel の型に対応するテンプレートやスタイル、初期レイアウトを決定していますが、一方これらのクラスは XAML 上で ViewModel の型との対応付けを完結させるためのユーティリティです。そのまま他のプロジェクトにコピペして使えると思います。各ウィンドウの中身をユーザーコントロールとして作ります。何のウィンドウの内容なのかを区別できるようにするため、適当に TextBlock を置いておきます。
View に対応する ViewModel を黙々と作ります。
だいたい次のようなクラスがたくさんできます。とりあえず今回の中身はウィンドウタイトルと「コンテンツID」と呼ばれる値のプロパティ2つです。
コンテンツID はレイアウトの保存・復元などで使用します。アプリケーション内で1つしかないAnchorableなどはクラスの完全修飾名を返しておけばOKです。ソースコードを編集するドキュメントウィンドウはインスタンスが複数作られるので、例えばそのウィンドウで編集中のソースファイル名を返したりします。MainWindowViewModel は、Document の ViewModel コレクションと、AnchorablePane の ViewModel コレクションの2つをプロパティに持ちます。
また、コンストラクタで ViewModel を作ってます。まずはこんな感じで名前空間を追加します。DockingManager 要素です。
MainWindow の Gird の下とかに配置します。DocumentsSource="{Binding DockingDocumentViewModels}"
AnchorablesSource="{Binding DockingPaneViewModels}"
で、MainWindowViewModel のコレクションをバインドしています。
ViewModel 側で DockingDocumentViewModels に何か Add すればドキュメントウィンドウがどんどん増えて行くようになります。ウィンドウの中身はユーザーコントロールで用意しましたが、タイトルやタブ文字列のバインドは MainWindow 側でする必要があります。
タブにアイコンを増やしたりなどもココで行います。ViewModel に対応する View (先ほど用意したユーザーコントロール) を指定します。
例えば MainWindowviewModel.DocumentsSource に ProjectSettingDocumentViewModel が Add されたら ProjectSettingDocument.xaml ユーザーコントロールが配置されたウィンドウが表示されます。v:LayoutInitializer では、ViewModel の ContentId で示されるウィンドウが、どの名前のエリアに配置されるか指定します。
そのエリアの配置は「初期レイアウト」の部分で行います。なお、ここの v:LayoutInitializer や ContentId、名前で配置先を指定する機能は AvalonDock の機能ではなく、冒頭で紹介したヘルパークラスの機能です。本家のサンプルだけでは「結局ビハインドコード書かなければ新しいウィンドウ増やせないのでは？」とか思ってしまいますが、今回のようなヘルパークラスを用意しておけば後はもう XAML だけで完結できます。私が初めてAvalonDockを使ったのももう3年くらい前になりますが、MVVM ベースで非常に使い易くまとまっているドッキングウィンドウライブラリは未だにこれだけな気がします。これはもう完成されたアーキテクチャなのかな。(MaterialDesignInXamlToolkit とかありますが、あれはIDE向きじゃなさそうだしなぁ・・・) 


