
    /// &lt;summary&gt;
    /// 選択した項目の内容をテキストに出力します。
    /// &lt;/summary&gt;
    /// &lt;param name="item"&gt;選択した項目&lt;/param&gt;
    /// &lt;param name="useIndent"&gt;インデント処理するか&lt;/param&gt;
    /// &lt;param name="limitDepth"&gt;子アイテムを読み込む深さ&lt;/param&gt;
    /// &lt;param name="depth"&gt;再起処理用のカウンタ(内部用)&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public string CreateText(GridItem item, bool useIndent, int limitDepth = int.MaxValue, int depth = 0)
    {
      string ret = "";
      if (useIndent)
      {
        int depth_max;
        depth_max = getDepthFromGridItem(item, limitDepth);
        ret = createTextWithIndent(item, limitDepth, depth_max);
      }
      else
      {
        ret = createTextWithoutIndent(item, limitDepth);
      }

      return ret;
    }

    /// &lt;summary&gt;
    /// GridItemからツリーのコピーテキストを取得します。
    /// &lt;/summary&gt;
    /// &lt;param name="item"&gt;PropertyGridのアイテム&lt;/param&gt;
    /// &lt;param name="limitDepth"&gt;最大の深さ&lt;/param&gt;
    /// &lt;param name="maxDepth"&gt;最も深いノードの深さ(getDepthFromGridItemで取得する)&lt;/param&gt;
    /// &lt;param name="currentDepth"&gt;再帰処理用の内部カウンタ。呼び出す際は指定しない。&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    private string createTextWithIndent(GridItem item, int limitDepth, int maxDepth, int currentDepth = 0)
    {
      StringBuilder ret = new StringBuilder();
      //インデントのため、タブを現在の深さ分挿入する。
      ret.Append(new string('\t', currentDepth));
      //子アイテムがあるときの記号。自由に設定してください。
      string expandSign = "";
      if (item.GridItems.Count &gt; 0)
        expandSign = "▼";
      //プロパティ名の追加
      ret.Append($"{expandSign}{item.Label.TrimStart('\t')}");
      //プロパティ名と値の間のスペースを追加
      ret.Append($"{new string('\t', maxDepth - currentDepth + 1)}");
      //値の出力
      ret.AppendLine($"{item.Value}");
      //サブツリーの展開
      if (currentDepth &lt; limitDepth)
      {
        foreach (var child in item.GridItems)
        {
          ret.Append(createTextWithIndent(child as GridItem, limitDepth, maxDepth, currentDepth + 1));
        }
      }
      return ret.ToString();
    }

    /// &lt;summary&gt;
    /// GridItemからツリーのコピーテキストを取得します。(インデント無し版)
    /// &lt;/summary&gt;
    /// &lt;param name="item"&gt;PropertyGridのアイテム&lt;/param&gt;
    /// &lt;param name="limitDepth"&gt;最大の深さ&lt;/param&gt;
    /// &lt;param name="maxDepth"&gt;最も深いノードの深さ(getDepthFromGridItemで取得する)&lt;/param&gt;
    /// &lt;param name="currentDepth"&gt;再帰処理用の内部カウンタ。呼び出す際は指定しない。&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    private string createTextWithoutIndent(GridItem item, int limitDepth, int currentDepth = 0)
    {
      StringBuilder ret = new StringBuilder();
      ret.AppendLine($"{item.Label}\t{item.Value}");
      if (currentDepth &lt; limitDepth)
      {
        foreach (var child in item.GridItems)
        {
          ret.Append(createTextWithoutIndent(child as GridItem, limitDepth, currentDepth + 1));
        }
      }
      return ret.ToString();
    }

