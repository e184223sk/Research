More than 1 year has passed since last update.この記事でC#でDynamoDBにテーブルを作成する方法を書きました。
これは、AlexaスキルをC#で作成する際に、セッションをまたいでデータを保存するために必要になるからです。公式トレーニング第4回　データの保存にある永続アトリビュートというのがそれですね。その後、調べていくうちにいろいろわかっていなかったことがわかったので、改めて整理してみました。
今回はシンプルにAlexaスキルに必要な構成だけにしぼって書きます。テーブル作成のコード的な手順を一つずつ説明していきたいと思います。まずはこれがなければ始まりません。
このクラスがDynamoDBにテーブルを作成したり、テーブルにデータを追加したりする役割を一手に担います。テーブル作成の基本的な流れはざっくりこんな感じです。CreateTableRequestクラスを使ってテーブル作成リクエストを構成します。
Alexaスキルで使用するテーブルは、初期状態では「id」列（プライマリキー）だけを持つ構造で、データ追加時に「id」に加えて「attributes」列も追加されるようになっています。ここでは列の名前やデータのタイプといった基本的な構造を指定します。
AttributeDefinitionsプロパティに必要な列情報（AttributeDefinition）を入れていきます。AttributeDefinitionはAttributeNameとAttributeTypeという2つのプロパティを持っていて、それぞれ列名とその列のデータの種類を指定します。
AttributeTypeの指定方法ですが、いくつかあるタイプの中から1つを選び、それを文字列で指定します。
選択できるタイプは以下のとおりです。ですので、上の例では「id」列のデータの種類に「N」、つまり数値データを指定しています。ここではプライマリキーの指定を行います。「id」列をプライマリキーにするので、KeyTypeにKeyType.HASHを指定します。ここはとりあえずNode.js版と同じ設定にしておきます。
公式のここに説明がありますが、なんとなくはわかります。スループットといっているので読み書きの性能に関わるとは思います。このCreateTableRequestをCreateTableAsyncメソッドに渡すと、テーブルが作成されます。シンプルに、DynamoDBクライアントをインスタンス化して、リクエストを作って、CreateTableAsyncメソッドに渡す、ことでAlexaスキル用のテーブルを作成できます。
実際に使う場合は、以前の記事のようにメソッドに切り出したりして、使いやすいようにしてください。次は、データの追加のやりなおしです。


