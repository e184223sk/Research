
using UnityEngine;

public class TpsLockOnCameraPrototype : MonoBehaviour
{
    /// &lt;summary&gt;
    /// 取りつくキャラクター
    /// &lt;/summary&gt;
    [SerializeField]
    private Transform _attachTarget = null;

    /// &lt;summary&gt;
    /// 取りつくキャラクターからのカメラオフセット位置
    /// &lt;/summary&gt;
    [SerializeField]
    private Vector3 _attachOffset = new Vector3(0f, 2f, -5f);

    /// &lt;summary&gt;
    /// 注視ターゲット
    /// &lt;/summary&gt;
    [SerializeField]
    private Transform _lookTarget = null;

    /// &lt;summary&gt;
    /// 現在の注視点
    /// &lt;/summary&gt;
    private Vector3 _lookTargetPosition = Vector3.zero;


    private void LateUpdate()
    {
        _lookTargetPosition = _lookTarget.position;

        // ターゲットへのベクトル
        Vector3 targetVector = _lookTargetPosition - _attachTarget.position;

        // ターゲットへのベクトルを前方とするクォータニオン
        Quaternion targetRotation = targetVector != Vector3.zero ? Quaternion.LookRotation(targetVector) : transform.rotation;

        // 位置と向き
        Vector3 position = _attachTarget.position + targetRotation * _attachOffset;
        Quaternion rotation = Quaternion.LookRotation(_lookTargetPosition - position);

        transform.SetPositionAndRotation(position, rotation);
    }
}

