
[assembly: ResolutionGroupName("Effects")]
[assembly: ExportEffect(typeof(TouchEffect), "TouchEffect")]
namespace Test.Droid
{
    class TouchEffect : PlatformEffect
    {
        Android.Views.View view;
        Element element;
        TEffect tEffect;

        static Dictionary&lt;Android.Views.View, TouchEffect&gt; list = new Dictionary&lt;Android.Views.View, TouchEffect&gt;();

        protected override void OnAttached()
        {
            view = Control == null ? Container : Control;
            element = Element;
            if (view != null)
            {
                view.Touch += OnTouch;
                list.Add(view, this);
                tEffect = (TEffect)element.Effects.FirstOrDefault(e =&gt; e is TEffect);
            }
        }

        protected override void OnDetached()
        {
            if (list.ContainsKey(view))
            {
                view.Touch -= OnTouch;
                list.Remove(view);
            }
        }

        private void OnTouch(object obj, Android.Views.View.TouchEventArgs ev)
        {
                int actID = ev.Event.ActionIndex;
                int pointID = ev.Event.GetPointerId(actID);
                float x = ev.Event.GetX(actID);
                float y = ev.Event.GetY(actID);

                switch(ev.Event.Action){
                    //ここに各イベントごとの呼び出し処理を書く 
                }
        }
    }

}

