
class PlayerAi
{
    public Skill DetermineSkill(BattleContext context, Skill[] skills)
    {
        // 最も優先度が高い候補を保持する変数。より優先度の高いスキルが現れれば、その都度更新される
        (Skill, int priority) candidate = (null, -context.Enemy.Hp);

        foreach (var skill in skills)
        {
            // A. シミュレーション中に敵が受けるダメージを実際には反映しないためのクローン
            var clone = new EnemyBattler()
            {
                Hp = context.Enemy.Hp,
                Defense = context.Enemy.Defense
            };

            // B. スキルを実際に適用してみる
            skill.Run(context, clone);

            // C. スキルの仕様結果を評価する。
            // 敵のHPが少ないほど好ましい状況のはず
            var priority = -clone.Hp;
            if (candidate.priority &lt; priority)
            {
                candidate = (skill, priority);
            }
        }

        return candidate.Item1;
    }
}

