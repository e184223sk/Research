
class MainWindowViewModel : BindableBase
{
    private readonly IContainerExtension _container;
    private readonly IRegionManager _regionManager;

    public DelegateCommand AddCommand { get; }
    public DelegateCommand ClosedCommand { get; }

    public MainWindowViewModel(IContainerExtension container, IRegionManager regionManager)
    {
        _container = container;
        _regionManager = regionManager;

        AddCommand = new DelegateCommand(() =&gt; AddModule&lt;ViewA&gt;("ContentRegion"));
    }

    // 指定リージョンにモジュールを追加
    private void AddModule&lt;T&gt;(string regionName) where T : UserControl
    {
        var name = typeof(T).Name;

            // 重複チェック対策
        var viewTarget = _regionManager.Regions[regionName].Views
            .FirstOrDefault(x =&gt; x.GetType().Name == name);

        if (viewTarget == null)
        {
            var view = _container.Resolve&lt;T&gt;();
            _regionManager.Regions[regionName].Add(view, name);
        }
    }
}

