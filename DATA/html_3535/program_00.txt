    public static class Function1
    {
        [FunctionName("Function1")]
        public static async Task&lt;IActionResult&gt; Run(
            [HttpTrigger(AuthorizationLevel.Function, "get", "post", Route = null)] HttpRequest req,
            ILogger log)
        {
            string requestBody = await new StreamReader(req.Body).ReadToEndAsync();
            dynamic data = JObject.Parse(requestBody);
            string userdicpath = ConvertUserDic(data);

            await Program.Main(new[] { (string)data.exec, "-userdic", userdicpath });

            return (ActionResult)new OkObjectResult("OK");
        }

        private static string ConvertUserDic(dynamic data)
        {
            if ((data is JObject j) &amp;&amp; (j["userdic"]["$content"].Value&lt;string&gt;() is string s))
            {
                var dic = System.IO.Directory.CreateDirectory(Path.Combine(Environment.GetEnvironmentVariable("TMP"), "dic"));
                var userdic = Path.Combine(dic.FullName, "user.dic");

                using (var stream = new MemoryStream(System.Convert.FromBase64String(s)))
                {
                    using (var file = File.Create(userdic))
                    {
                        stream.CopyTo(file);
                        file.Close();
                    }
                }

                return userdic;
            }
            else
            {
                throw new ArgumentException("userdic", data?.userdic);
            }
        }
    }

