
// Array.Sort で
int[] array2 = new int[array1.Length];  // ソート結果を別配列にするための準備
array1.CopyTo(array2, 0);  // array1 を array2 にコピー
int[] idx = Enumerable.Range(0, array2.Length).ToArray();  // 連番の配列 0,1,...
Array.Sort(array2, idx);  // 別配列も一緒に並べ替えるオーバーロードがあるのでこれを使う
for(var i=0; i &lt; array2.Length; i++)  // ついでに表示
{
    Console.WriteLine($"key: {array2[i]}, idx: {idx[i]}");
}

// LINQ で
var sortedPair = array1
    .Select((x, i) =&gt; new KeyValuePair&lt;int, int&gt;(x, i))
    .OrderBy(x =&gt; x.Key);
var array2 = sortedPair.Select(x =&gt; x.Key).ToList();
var idx = sortedPair.Select(x =&gt; x.Value).ToList();

// 分かりやすい名前でタプル（ペア）を作りそのまま使ってしまうのもあり
var sortedPair = array1
    .Select((x, i) =&gt; (Key: x, Index: i))  // C# 7 (.NET Framework 4.7 など)
    .OrderBy(x =&gt; x.Key)
    .ToList();
sortedPair.ForEach(x =&gt; {  // ついでに表示
    Console.WriteLine($"key: {x.Key}, idx: {x.Index}");
});

