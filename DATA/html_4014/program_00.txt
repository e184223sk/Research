using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows;
using System.Windows.Media;

namespace Sample {
    public static class DependencyObjectExtensions {
        public static IEnumerable&lt;DependencyObject&gt; Children(this DependencyObject obj) {
            if (obj == null)
                throw new ArgumentNullException(nameof(obj));

            return Enumerable.Range(0, VisualTreeHelper.GetChildrenCount(obj))
                .Select(i =&gt; VisualTreeHelper.GetChild(obj, i))
                .Where(x =&gt; x != null);
        }

        public static IEnumerable&lt;DependencyObject&gt; Descendants(this DependencyObject obj) {
            if (obj == null)
                throw new ArgumentNullException(nameof(obj));

            foreach (var child in obj.Children()) {
                yield return child;
                foreach (var grandChild in child.Descendants())
                    yield return grandChild;
            }
        }

        public static IEnumerable&lt;T&gt; Descendants&lt;T&gt;(this DependencyObject obj) where T : DependencyObject {
            if (obj == null)
                throw new ArgumentNullException(nameof(obj));

            return obj.Descendants().OfType&lt;T&gt;();
        }
    }
}

