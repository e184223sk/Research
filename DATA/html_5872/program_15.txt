
private static readonly Dictionary&lt;Type, Action&lt;ILGenerator&gt;&gt; LdcDictionary = new Dictionary&lt;Type, Action&lt;ILGenerator&gt;&gt;
{
    { typeof(bool), il =&gt; il.Emit(OpCodes.Ldc_I4_0) },
    { typeof(byte), il =&gt; il.Emit(OpCodes.Ldc_I4_0) },
    { typeof(char), il =&gt; il.Emit(OpCodes.Ldc_I4_0) },
    { typeof(short), il =&gt; il.Emit(OpCodes.Ldc_I4_0) },
    { typeof(int), il =&gt; il.Emit(OpCodes.Ldc_I4_0) },
    { typeof(sbyte), il =&gt; il.Emit(OpCodes.Ldc_I4_0) },
    { typeof(ushort), il =&gt; il.Emit(OpCodes.Ldc_I4_0) },
    { typeof(uint), il =&gt; il.Emit(OpCodes.Ldc_I4_0) },
    { typeof(long), il =&gt; il.Emit(OpCodes.Ldc_I8, 0L) },
    { typeof(ulong), il =&gt; il.Emit(OpCodes.Ldc_I8, 0L) },
    { typeof(float), il =&gt; il.Emit(OpCodes.Ldc_R4, 0f) },
    { typeof(double), il =&gt; il.Emit(OpCodes.Ldc_R8, 0d) },
    { typeof(IntPtr), il =&gt; il.Emit(OpCodes.Ldc_I4_0) },
    { typeof(UIntPtr), il =&gt; il.Emit(OpCodes.Ldc_I4_0) },
};

