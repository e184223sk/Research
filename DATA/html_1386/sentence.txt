下記のように、割合はすべて、16.666の場合、{16.7、16.7、16.7、16.7、16.7、16.7} 四捨五入率後割合合計100％超えちゃいます。リストが四捨五入率後割合合計100％になる方法を調べました。最大端数と最小端数のindexを算出、最大端数が0.1になるまで最小端数を移動というやり方で成功しました.初期四捨五入数列：16.7 , 16.7 , 16.7 , 16.7 , 16.7 , 16.7 sum=100.2
.初期端数：-0.0333333333333 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333
  LOOP1回目
   hasu_temp1:-0.0333333333333 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333
   1番目最小端数:[-0.0333333333333]  1番目最大端数：[-0.0333333333333]
    B 端数すべて同じ max&lt;0 minindex数-add add:0.0666666666667
    -&gt; 移動後：-0.1000000000000 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333
    端数を試し計上：16.6 , 16.7 , 16.7 , 16.7 , 16.7 , 16.7 sum=100.1
  LOOP2回目
   hasu_temp2:-0.0333333333333 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333
   2番目最小端数:[-0.0333333333333]  2番目最大端数：[-0.0333333333333]
    B 端数すべて同じ max&lt;0 minindex数-add add:0.0666666666667
    -&gt; 移動後：-0.1000000000000 , -0.1000000000000 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333 , -0.0333333333333
    端数を試し計上：16.6 , 16.6 , 16.7 , 16.7 , 16.7 , 16.7 sum=100.0.初期四捨五入数列：33.3 , 33.3 , 33.3 sum=99.9
.初期端数：0.0333333333333 , 0.0333333333333 , 0.0333333333333
  LOOP1回目
   hasu_temp1:0.0333333333333 , 0.0333333333333 , 0.0333333333333
   1番目最小端数:[0.0333333333333]  1番目最大端数：[0.0333333333333]
    C 端数すべて同じ max&gt;=0 minindex数+add add:0.0666666666667
    -&gt; 移動後：0.1000000000000 , 0.0333333333333 , 0.0333333333333
    端数を試し計上：33.4 , 33.3 , 33.3 sum=100.0.初期四捨五入数列：33.3 , 33.3 , 33.3 , 0.1 sum=100.0
.初期端数：0.0 , 0.0 , 0.0 , 0.0.初期四捨五入数列：16.7 , 16.7 , 16.7 , 50.0 sum=100.1
.初期端数：-0.0415875016884 , -0.0415875016884 , -0.0415875016884 , 0.0247625050651
  LOOP1回目
   hasu_temp1:-0.0415875016884 , -0.0415875016884 , -0.0415875016884 , 0.0247625050651
   1番目最小端数:[-0.0415875016884]  4番目最大端数：[0.0247625050651]
    A maxindex != minindex 各自maxindex数+add,minindex数-add add:-0.0415875016884
    -&gt; 移動後：0.0000000000000 , -0.0415875016884 , -0.0415875016884 , -0.0168249966233
  LOOP2回目
   hasu_temp2:-0.0415875016884 , -0.0415875016884 , -0.0168249966233
   2番目最小端数:[-0.0415875016884]  4番目最大端数：[-0.0168249966233]
    A maxindex != minindex 各自maxindex数+add,minindex数-add add:-0.0415875016884
    -&gt; 移動後：0.0000000000000 , 0.0000000000000 , -0.0415875016884 , -0.0584124983117
  LOOP3回目
   hasu_temp3:-0.0415875016884 , -0.0584124983117
   4番目最小端数:[-0.0584124983117]  3番目最大端数：[-0.0415875016884]
    A maxindex != minindex 各自maxindex数+add,minindex数-add add:-0.0584124983117
    -&gt; 移動後：0.0000000000000 , 0.0000000000000 , -0.1000000000001 , 0.0000000000000
  LOOP4回目
   hasu_temp4:-0.1000000000001
   3番目最小端数:[-0.1000000000001]  3番目最大端数：[-0.1000000000001]
    B 端数すべて同じ max&lt;0 minindex数-add add:-0.0000000000001
    -&gt; 移動後：0.0000000000000 , 0.0000000000000 , -0.1000000000000 , 0.0000000000000
    端数を試し計上：16.7 , 16.7 , 16.6 , 50.0 sum=100.0


