More than 1 year has passed since last update.値型の等価判定には気をつけるべき点があります。
以下の例で、Assert.IsTrue なら () 内が 真、Assert.IsFalse なら () 内が 偽です。
★印の箇所は注意が必要です。ここまではいいでしょう。
次は少し注意が必要です。DataRow の各フィールド値（インデクサ／Itemプロパティ）なども Object 型なので、比較の際は注意しましょう。ここまではいいでしょう。
以降は注意が必要です。おまけです。値型（struct/Structure）の Equals メソッドは、既定ではリフレクションを使用して全フィールド（自動実装プロパティのバッキングフィールドを含む）を定義された型の Equals メソッドで比較します。
値型を自分で作成する場合、Equals メソッドをオーバーライドすることで、この比較処理をカスタマイズすることができます。等価演算子（==）を使用するためには、「==」「!=」のオーバーロードを定義する必要があります。値型を定義する場合には、Equals メソッドのオーバーライドと等価演算子のオーバーロードが推奨されています。《参考》コード分析（FxCop）
CA1815: equals および operator equals を値型でオーバーライドします[.NET] 値型 等価判定の思わぬ落とし穴（一般編）
[.NET] 値型 等価判定の思わぬ落とし穴（特殊編）
[.NET] 参照型 等価判定の思わぬ落とし穴（一般編）
[.NET] 参照型 等価判定の思わぬ落とし穴（特殊編）


