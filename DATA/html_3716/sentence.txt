More than 1 year has passed since last update.今回の記事はオンラインゲームなどを開発する際における難関の一つ「NAT越え」についてです。元の記事はこちらの中にある記事になります。こちらも参考にしてみてください～＾簡単に説明すると「オンラインネットワークでつながった複数ホスト間の接続を確立すること」です。詳しくはGoogleで検索や元の記事を参考にしてみてください。オンラインゲームを作成する上でプロトコルは早さを求めるためUDPを使用したいと考えました。その上でNAT越えをする為に私が思いついた方法は、
・UDP ホールパンチング
・UPnP
でした。
どちらでも出来そうでしたが、今回は簡単そうなUPnPを使って挑戦してみることにしました。
今回はゲームということだったので作成・動作環境はUnityを使いました。(のちにXamarin.Form + Android での動作確認済み)探索の為に「M-Search」リクエストを送信先「239.255.255.250:1900」(ブロードキャスト)にUDPで送信します。リクエスト内容ビルドしたアプリでスマホからM-Searchした時のキャプチャ
リクエストに成功すると送信元IPアドレス+送信ポート(上キャプチャの場合 PORT:5999)に応答が来ます。成功すると応答はHTTP/1.1 200 OKです。先ほどのルーターからの応答を元に詳細情報(xmlデーター)をルーターに要求します。
HTTP/GETリクエストで受信要求をします。C#でリクエストを送信するのに以下のようなプログラムを用いました。要求に成功するとこちらも「HTTP 200 OK」が返され、XML形式のルーターの詳細情報を入手することができます。なお、今回はXMLの中のタグ内の情報を使います。先ほど得た情報controlURLはルーター操作用のアドレスになっているのでこのアドレス宛に HTTP / POST でリクエスト内容(SOAPプロトコル)を送信します。 上の例ではポート「12345」の通信をipアドレス「192.168.0.12」の端末に転送するといった設定をする例です。リクエストを送信し処理に成功すると、
このようにHTTP/1.1 200 OKで成功したとルーターが教えてくれます。
上の矢印のPOSTで送信している部分が依頼したリクエストです。なお、失敗だと「 HTTP/1.1 500 Internal Server Error 」が返されます。主な失敗原因としては
・既にポートが使用中
・UPnP設定の上限まで達している
などが挙げられます。何も返ってこない場合、そもそもどこかが間違えているはずですので再確認してみてくださいね。ルーターから成功と返ってきたとしてもこのリクエストが正しく動作しているか確認する必要があります。
リクエストに成功しているとこのようにUPnPのところに登録されているはずです。
上の画像は先ほどのリクエストをルーター(HUMAX)に行った後に確認したものになります。
なお、Activeになっていることも確認してくださいね。
今回検証に使ったのはAndroidのスマートフォンです。
UDPの送信テストに使ったのは以前作ったアプリでシンプルなパケットを送るだけのものです。(※ソースコードは記事内にあり)スマートフォンのWi-fiをOFFにした後(キャリア回線で試さないと外部ではない)アプリでパケット(0101)を送信してみます。

成功するとこのように外部から登録したIPアドレスにデーターが送信されていることが確認できるはずです。NAT越えってゲーム開発だけでなくIoT開発とか様々な分野でも必要な知識だから大切だと思った。この記事が何かの参考になれば幸いですー※このソースコードを使ったUPnPリクエストを送信するアプリを友達の為に作ったのでパケットキャプチャーなどを用いてもしよければ参考程度ににしてみてください。


