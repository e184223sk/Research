
public static IEnumerable&lt;TResult&gt; Execute&lt;TResult&gt;(this DbCommand command, Func&lt;IDataRecord, TResult&gt; parse)
{
    if (command == null) throw new ArgumentNullException(nameof(command));
    if (parse == null) throw new ArgumentNullException(nameof(parse));
    try
    {
        command.Log();
        return command.ExecuteYield(parse);
    }
    catch (Exception ex)
    {
        throw new ApplicationException("Attempt to ExecuteReader failed.", ex);
    }
}

private static IEnumerable&lt;TResult&gt; ExecuteYield&lt;TResult&gt;(this DbCommand command, Func&lt;IDataRecord, TResult&gt; parse)
{
    using (var reader = command.ExecuteReader())
    {
        while (reader.Read()) yield return parse(reader);
    }
}

