
/// &lt;summary&gt;
/// Converts the specified curried delegate to a uncurried delegate.
/// &lt;/summary&gt;
/// &lt;typeparam name="T1"&gt;&lt;/typeparam&gt;
/// &lt;typeparam name="T2"&gt;&lt;/typeparam&gt;
/// &lt;typeparam name="T3"&gt;&lt;/typeparam&gt;
/// &lt;typeparam name="TResult"&gt;&lt;/typeparam&gt;
/// &lt;param name="func"&gt;&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
public static Func&lt;T1, T2, T3, TResult&gt; Uncurry&lt;T1, T2, T3, TResult&gt;(this Func&lt;T1, Func&lt;T2, Func&lt;T3, TResult&gt;&gt;&gt; func)
{
    return (arg1, arg2, arg3) =&gt; func(arg1)(arg2)(arg3);
}

// ä¾‹
internal static DateTime GetDate(int year, short month, byte day)
{
    return new DateTime(year, month, day);
}

Func&lt;int, short, byte, DateTime&gt; f = GetDate;
Func&lt;int, Func&lt;short, Func&lt;byte, DateTime&gt;&gt;&gt; curry = f.Curry();
Func&lt;int, short, byte, DateTime&gt; uncurry = curry.Uncrry();

var result1 = curry(2018)(2)(28);
var result2 = uncurry(2018, 2, 28);


