
//SomeObservableの購読を提供する読み取り専用インターフェイス
public interface IObservableSome
{
    IObservable&lt;int&gt; SomeObservable { get; }
}

class PublishClass : IObservableSome
{
    //1. 仲介役となるSubject&lt;T&gt;インスタンスをprivateフィールドで内部に持ちます
    private Subject&lt;int&gt; m_someSubject = new Subject&lt;int&gt;();

    //2. そのSubject&lt;T&gt;をIObservable&lt;T&gt;で公開します
    public IObservable&lt;int&gt; SomeObservable =&gt; m_someSubject.AsObservable();

    private void PublishValue(int num)
    {
        //3. Subject&lt;T&gt;にOnNextして値を発行します
        m_someSubject.OnNext(num);
    }
}

class ReceiveClass
{
    //1. 値を発行するクラスのインスタンスを取得します
    private IObservableSome publisher = new PublishClass();

    public ReceiveClass()
    {
        //2. 値を発行するクラスから公開された`IObservable&lt;T&gt;`インターフェイスの`Subscribe`メソッドを呼び出し、引数に値を受け取ったときの処理を指定します
        publisher.SomeObservable.Subscribe(n =&gt; Console.WriteLine($"{n}を受け取りました");
    }
}

