
class EventPublisher
{
    //..中略..
    public IObservable&lt;int&gt; SomeObservable { get; }
    //..中略..
}

//EventPublisherのインスタンスを直接保持しているクラス
class HogeClass
{
    private EventPublisher publisher = new EventPublisher();
    private MogeClass moge;

    public HogeClass()
    {
        //MogeClassにイベントの購読権を引き渡す
        moge = new MogeClass(publisher.SomeObservable);

        //自分は当然イベント購読が可能
        publisher.SomeObservable.Subscribe(n =&gt; { /* 何らかの処理 */ });
    }
}

//EventPublisherのインスタンスを保持していないクラス
class MogeClass
{
    public MogeClass(IObservable&lt;int&gt; observable) //イベントの購読権を受けるようにする
    {
        //取得した購読権を使用して、イベントを購読可能！
        observable.Subscribe(n =&gt; { /* 何らかの処理 */ });
    }
}


