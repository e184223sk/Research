
// EdgeElement.cs

using UnityEngine;
using UnityEngine.UIElements;
using UnityEditor;

public class EdgeElement : VisualElement
{
    public SerializableEdge serializableEdge;  // データを持っておく

    public NodeElement From { get; private set; }  // 元ノード
    public NodeElement To { get; private set; }  // 先ノード

    public EdgeElement(SerializableEdge edge, NodeElement from, NodeElement to )
    {
        serializableEdge = edge;
        From = from;
        To = to;
    }

    public void DrawEdge()
    {
        if(From != null &amp;&amp; To != null)
        {
            DrawEdge(
                startPos: From.GetStartPosition(),
                startNorm: From.GetStartNorm(),
                endPos: To.GetEndPosition(),
                endNorm: To.GetEndNorm());
        }
    }

    // GraphEditorElementからそのまま移した
    private void DrawEdge(Vector2 startPos, Vector2 startNorm, Vector2 endPos, Vector2 endNorm)
    {
        Handles.color = Color.blue;
        Handles.DrawBezier(
            startPos,
            endPos,
            startPos + 50f * startNorm,
            endPos + 50f * endNorm,
            color: Color.blue,
            texture: null,
            width: 2f);

        Vector2 arrowAxis = 10f * endNorm;
        Vector2 arrowNorm = 5f * Vector3.Cross(endNorm, Vector3.forward);

        Handles.DrawAAConvexPolygon(endPos,
            endPos + arrowAxis + arrowNorm,
            endPos + arrowAxis - arrowNorm);
        Handles.color = Color.white;
    }
}

