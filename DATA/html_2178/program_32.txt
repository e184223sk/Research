
// GraphEditorElementクラス

    List&lt;EdgeElement&gt; m_Edges;  // エッジもノードと同じくまとめて保持しておく

    public GraphEditorElement(GraphAsset graphAsset)
    {
        m_GraphAsset = graphAsset;

        style.flexGrow = 1;
        style.overflow = Overflow.Hidden;

        this.AddManipulator(new ContextualMenuManipulator(OnContextMenuPopulate));

        m_Nodes = new List&lt;NodeElement&gt;();

        foreach(var node in graphAsset.nodes)
        {
            CreateNodeElement(node);
        }

        // すべてのノードの生成が終わってからエッジの生成を行う
        // エッジが持っているノードIDからノードを取得するため
        m_Edges = new List&lt;EdgeElement&gt;();

        foreach(var node in m_Nodes)
        {
            foreach(var edge in node.serializableNode.edges)
            {
                CreateEdgeElement(edge, node, m_Nodes);
            }
        }
    }

    // エッジの生成
    public EdgeElement CreateEdgeElement(SerializableEdge edge, NodeElement fromNode, List&lt;NodeElement&gt; nodeElements)
    {
        var edgeElement = new EdgeElement(edge, fromNode, nodeElements[edge.toId]);
        Add(edgeElement);
        m_Edges.Add(edgeElement);

        return edgeElement;
    }

    // GraphEditor.OnGUI() 内で呼ばれる。描画処理をエッジに移したので小さくなった
    public void DrawEdge()
    {
        foreach(var edge in m_Edges)
        {
            edge.DrawEdge();
        }
    }

