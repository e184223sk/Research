More than 1 year has passed since last update.UnityでTensorFlowで書いたモデルを動かせたらいいのに..
Unityでできるシミュレーションの幅がかなり広がりそうな事案ですよね。
学習済みモデルをUnityで動かせないか色々画策していました
(1年前に書いていたのを投稿するのを完全に忘れていたので，最新状況は知らないです)tensorflowで書かれたモデルをUnity上で動かす。今回は学習済みであるVGG16モデルを使って
Unity上で1000クラスの画像識別を行います。Python3.6
Unity 2017.2
TensorFlow
TensorFlowSharp
MacbookPro 2017 先日@peace098beatさんがC#で学習済みVGG16モデルを使ってアプリを作る方法を投稿しておられ、
C#でできるならばUnityでも再現できるだろう...と思って早速使用してみました。sess.run(init)の部分で初期化が生じてしまっています。これにより学習済みモデルの重みがリセット
されてしまっていて正しく動いてくれないという問題が発生していました...
ならばこの部分のコードを削ればいいのでは？と削って実行してみたのですが、今度は重みを定数にする段階でエラーを吐きました。
kerasから重みを正しくインポートできていないようです。その後もkerasから重みを持ってくるのに失敗してしまい（上手くいった方法があったら知りたいです...）はじめからTensorFlowで構築されているVGG16のモデルを書き出すことにしました。TensorFlowで書かれたVGG16モデルとして、こちらが上手くいきそうな予感がしたのでなんなりしてダウンロードします。VGG16モデルとVGG19モデルが入っているのですが、今回はVGG16モデルを使用します。学習済みVGG16モデルを使用する場合、事前に学習済みの重みを入手しておく必要があるので、ここからダウンロードしてvgg16.pyと同じ階層に置いておきます。あとはvgg16.pyを、前節のmy_vgg.pyに倣って書き換えていきます出力ノードの名前を指定のところで指定しておいたレイヤーをあとあとC#用にバインドされたTensorFlowSharpで読み出すことができます。ここでは、TensorFlowで書かれたモデルをC#上にバインドするTensorFlowSharpを使います。UnityでのTensorFlowSharpはここからプラグインを導入してください。導入後は、Edit-&gt;'Project Settings'-&gt;'other settings'から、Scripting Runtime VersionをExperimental(.NET 4.6 Equivalent)に、Scripting Define SymbolsにENABLE_TENSORFLOWを追加します。
(赤線のところ)TensorFlowSharpについてはまだ勉強中なのですが、先人の文献を参考にこのように書きました。pluginsフォルダ以下に先ほどpythonで出力したtmp/beginner-export/beginner-const-graph.pbを置いておきます。画像ファイルはコードを参考に適当に入れられます。また、識別結果を出力する際、出力結果はsoftmax関数の最大値として返ってくるので、それに対応したラベルを用意しておく必要があります。これは、VGG16のpythonモデルをダウンロードした際にvgg16.pyと同階層にあるsynset.txtが対応しているので同じく置いておきます。後はスクリプトを適当なオブジェクトに貼り付けて実行するだけです！
今回は識別する画像としてこちらの猫を用意しました
識別結果は...
81%の確率でEgyptian cat と識別出来ていますね！成功です！ただし，起動するまでにかなり時間がかかります．これはmodelをロードする上での問題でしょうね
また，速さ的な点で言えばプラグインを書いてUnityからpythonを直で動かす方がいいです．これは強化学習で有名なml-agentsが実現しているのでうまいこと勉強したいですね


