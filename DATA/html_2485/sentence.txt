More than 1 year has passed since last update.やり方をよく忘れるので記録。健忘症どころじゃない。
今回はロガーの初期化（設定読み込み）とロガーインスタンス取得に的を絞るため、設定ファイルの詳細については書かない。・IDEはVisual Studio 2017を使用ソリューションエクスプローラでプロジェクトを右クリックし「NuGetパッケージの管理」を選択する。NuGetからlog4netを検索してインストールする。
　※この時の最新版は2.0.8でした。
今回はプロジェクト直下に配置する。
ソリューションエクスプローラでプロジェクトを右クリックして「追加」→「新しい項目」を選択し、開いたダイアログで「アプリケーション構成ファイル」を選択log4net.configという名前でファイルを追加する。
設定の書き方は下記のサイトが参考になる↓
　・オープンソースのロギング・サービス「log4net」を使う
　・[log4net] log4netの設定
　初めてロガーを使う方は、最初はサイトの設定ファイルを丸コピして動作確認し、それから独自の設定に変えるようにしたほうがベターだと思われる。
　
ソリューションエクスプローラでlog4net.configをクリックしてプロパティを表示させ、下記のように変更する。
　・「ビルドアクション」：なし
　・「出力ディレクトリにコピー」：新しい場合はコピーする
　2つ目の設定をしないと「エラーはでないのにログが全然吐かれない!」という事態が起きるので注意。　・AssemblyInfo.csファイルを開く(居場所は下の画像を参照)
AssemblyInfo.csに下記の初期化コードを追記する
　※ConfigFile = にはlog4netの設定ファイルの相対パスを指定している。今回設定ファイルはプロジェクト直下にあるためファイル名の頭に何もくっつけてない。ちなみに初期化は任意のクラスでできる。クラスのフィールドに下記のようにして書けばそこに制御が移った時に初期化が行われる。
ただこの場合はロガーを使用する前に初期化が済んだ状態になるよう、処理の順序に気を付ける。　ロガーを使用するクラスのフィールドに下記のコードを書く。GetLoggerメソッドでロガーインスタンスを取得するが、そのときに自身の型（正確に言えばこのメソッドの呼び出し元が宣言されているクラス）を渡し、自身がどこのクラスかを教えている。ログレベルに応じたメソッドを用い、出力したい文字列を引数に渡す。
try-catch句で使えば第2引数にExceptionオブジェクトを渡してスタックトレースを出力する事も可能。下記はサンプル　低レベルなことではまってますがご参考までに。
・出力したいログと設定ファイル(log4net.config)のログレベルの設定はマッチしているか？
　自身が出力したいレベルより高いレベルを設定していないかな・・・
・log4net.configファイルのプロパティ「出力ディレクトリにコピー」は「コピーしない」になっていないか？ロガーインスタンスを取得するコードはフィールドの一番上に書く。
というのも、ログ出力は色々なタイミングで行うであろうものなので、その準備はクラス初期化時の最初に終わらせた方が良い。・log4netの処理について深堀したいときに参考にさせて頂いた
　きなこもち.net


