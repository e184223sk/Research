未経験からプログラマーになるなら出来たらカッコいいことについてをまとめていきたいと思います。第１回目は、「ファイル操作」これはどんな職場に行こうが、絶対に必要になる技術なのでマスターして行ってお、こいつはできるじゃないかと思わせましょう！プログラミングをやるのであればこのファイル操作は避けては通れない道です。なぜなら、あらゆるソフトウェアで使われているからです。例えば、エラー処理のためのログの書き出しその他にも設定ファイルを読み込んだり、顧客や様々なデータをファイルから読み込んだり書き出したりする必要があります。C#からファイルでPythonを呼ぶときなどもそうです。つまり、どんなプロジェクトでもファイル操作をすると言っても過言ではありません。以上の理由から、まず始めに未経験であるならばファイル操作をマスターして行きましょう。これより以下からサンプルコードを提示していきます。
今回は、駆け出しの方に向けてプログラムが落ちないようにというところに注力してますので
あらゆるコードをExceptionを使っての例外処理してますが、このようにすべてに対してExceptionの例外処理してしまうと、落ちる根本原因があいまいになってしまうので、慣れてきたら例外処理を使わずに動かし、落ちないように努力し、その上で適した例外処理を当てていくようにしましょう。変数のfilePathに＠が使われていますが、これはエスケープ文字「￥」「\」を無効にさせます。なので、＠なしでコーディングしようと思ったら
string filePath = "C:\\test.txt";とコーディングしましょう。
System.IO.FileStreamの引数は、以下のURLに細かな説明があります。
https://docs.microsoft.com/en-us/dotnet/api/system.io.filemode?view=net-5.0引数を色々変えてテストしてみると理解が深まりますよ！以下のコードでFileStream（第一引数のFileStm）で開いたものを読み込めます。第二引数で文字コードをUTF-8としていますが、Shift-JISを求められたり他の文字コードを求められたりするので会社でファイル操作をお願いされた場合は、この文字コードも確認すると良いでしょう。System.IO.StreamReaderで作成したインスタンスStmRdrの最後までループを回します。！が頭に付いているのは、falseという意味なので以下のコードと同じ意味になります以上のコードを実行するとファイルの作成を行い作成したファイルに任意の文字列を書き込みます。
もう一度実行してしまうと、始めに記載した内容が消えて書き直してしまいます。文字列をファイルに追加で書き込みたい場合は、以下のコードのようにAppendを使用しましょう。以上になります。
少しでもエンジニアの方のためになれば幸いです。


