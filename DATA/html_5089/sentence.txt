More than 3 years have passed since last update.EFのデータファーストが最高なので、INotifyPropertyChangedに対応したらもっとサイコーになるよね。
的な。なのでハイパー最高なNuGetのPropertyChanged.Fodyを使う。
INotifyPropertyChangedを自動実装してくれるPropertyChanged.fodyが超便利 - Azureはじめました上の記事はPropertyChanged.Fodyのかなり古いバージョンなので今この通りに実装するとそんな古い形式使ってんじゃねーよばーかばーか的なエラーになるので注意。これをこうする。後はプロジェクトにFodyWeavers.xmlというファイルを追加してこうするだけ。超便利。edmxを構成するモデル出力用のT4テンプレートを直接編集すればOKPropertyChanged.Fodyで追加する記述はなのでそれぞれ追記する。usingを出力しているのは codeStringGenerator.UsingDirectives()なのでそこに追記class定義を出力してるのはcodeStringGenerator.EntityClassOpening()(entity.BaseType使わないので横着した。使う場合は適宜修正を。)テンプレートの先頭の方にあるEntityClassOpening(entity)の後に直接記述ただPropertyChangedEventHandlerを追加しただけだと CS0067(未使用のメンバ)が表示されて大変鬱陶しいのでpragma warning disable - restoreを使って警告表示を抑制してみた。[C#]コンパイル時の警告を抑制する | anoparaあとはファイルを保存してコンパイルすればOK。
こんな感じに出力される。いいね!INotifyPropertyChanged吐けばWinFormsのDataBindingとかWPFのBindingとかが勝手にリセットしてくれるので、ViewModel的に使ったりマジなんでもありでサイコー。


