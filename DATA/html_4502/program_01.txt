

    internal sealed class ClientStreamWriterWrapper&lt;T&gt; : IClientStreamWriter&lt;T&gt;
    {

        internal ClientStreamWriterWrapper(
            IClientStreamWriter&lt;T&gt; streamWriter
            , Func&lt;IClientStreamWriter&lt;T&gt;, Task&gt; onComplete
            , Func&lt;IClientStreamWriter&lt;T&gt;, T, Task&gt; onWrite)
        {
            m_StreamWriter = streamWriter;
            m_OnComplete = onComplete;
            m_OnWrite = onWrite;
        }

        private readonly IClientStreamWriter&lt;T&gt; m_StreamWriter;
        private readonly Func&lt;IClientStreamWriter&lt;T&gt;, Task&gt; m_OnComplete;
        private readonly Func&lt;IClientStreamWriter&lt;T&gt;, T, Task&gt; m_OnWrite;

        public WriteOptions WriteOptions
        {
            get { return m_StreamWriter.WriteOptions; }
            set { m_StreamWriter.WriteOptions = value; }
        }

        public Task CompleteAsync()
        {
            return m_OnComplete(m_StreamWriter);
        }

        public Task WriteAsync(T message)
        {
            return m_OnWrite(m_StreamWriter, message);
        }

    }

