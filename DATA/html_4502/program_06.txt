

    /// &lt;summary&gt;
    /// レスポンスの取得に対する割り込みを行います。
    /// &lt;/summary&gt;
    protected virtual Task&lt;TResponse&gt; InterceptGetResponse&lt;TRequest, TResponse&gt;(
        Task&lt;TResponse&gt; getReponse
        , ClientInterceptorContext&lt;TRequest, TResponse&gt; context
    )
        where TRequest : class
        where TResponse : class
    {
        return getReponse;
    }

    /// &lt;summary&gt;
    /// レスポンスヘッダーの取得に対する割り込みを行います。
    /// &lt;/summary&gt;
    protected virtual Task&lt;Metadata&gt; InterceptGetResponseHeaders&lt;TRequest, TResponse&gt;(
        Task&lt;Metadata&gt; getReponseHeaders
        , ClientInterceptorContext&lt;TRequest, TResponse&gt; context
    )
        where TRequest : class
        where TResponse : class
    {
        return getReponseHeaders;
    }

    /// &lt;summary&gt;
    /// ステータスの取得に対する割り込みを行います。
    /// &lt;/summary&gt;
    protected virtual Status InterceptGetStatus&lt;TRequest, TResponse&gt;(
        Func&lt;Status&gt; getStatus
        , ClientInterceptorContext&lt;TRequest, TResponse&gt; context
    )
        where TRequest : class
        where TResponse : class
    {
        return getStatus();
    }

    /// &lt;summary&gt;
    /// トレーラーの取得に対する割り込みを行います。
    /// &lt;/summary&gt;
    protected virtual Metadata InterceptGetTrailers&lt;TRequest, TResponse&gt;(
        Func&lt;Metadata&gt; getTrailers
        , ClientInterceptorContext&lt;TRequest, TResponse&gt; context
    )
        where TRequest : class
        where TResponse : class
    {
        return getTrailers();
    }

    /// &lt;summary&gt;
    /// リクエストの書き込みに対する割り込みを行います。
    /// &lt;/summary&gt;
    protected virtual Task InterceptClientWriteRequest&lt;TRequest, TResponse&gt;(
        Func&lt;TRequest, Task&gt; writeRequest
        , TRequest request
        , ClientInterceptorContext&lt;TRequest, TResponse&gt; context
    )
        where TRequest : class
        where TResponse : class
    {
        return writeRequest(request);
    }

    /// &lt;summary&gt;
    /// リクエストの完了通知に対する割り込みを行います。
    /// &lt;/summary&gt;
    protected virtual Task InterceptClientCompleteRequest&lt;TRequest, TResponse&gt;(
        Func&lt;Task&gt; completeRequest
        , ClientInterceptorContext&lt;TRequest, TResponse&gt; context
    )
        where TRequest : class
        where TResponse : class
    {
        return completeRequest();
    }

