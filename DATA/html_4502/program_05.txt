

    private IClientStreamWriter&lt;TRequest&gt; CreateClientStreamWriter&lt;TRequest, TResponse&gt;(
        IClientStreamWriter&lt;TRequest&gt; streamWriter
        , ClientInterceptorContext&lt;TRequest, TResponse&gt; context
    )
        where TRequest : class
        where TResponse : class
    {

        Task onComplete(IClientStreamWriter&lt;TRequest&gt; writer)
        {
            async Task func()
            {
                await writer.CompleteAsync().ConfigureAwait(false);
            }
            return InterceptClientCompleteRequest(func, context);
        }

        Task onWrite(IClientStreamWriter&lt;TRequest&gt; writer, TRequest request)
        {
            async Task func(TRequest req)
            {
                await writer.WriteAsync(req).ConfigureAwait(false);
            }
            return InterceptClientWriteRequest(func, request, context);
        }

        return new Core.ClientStreamWriterWrapper&lt;TRequest&gt;(streamWriter, onComplete, onWrite);
    }


