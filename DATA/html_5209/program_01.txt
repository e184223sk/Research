

       public decimal CalculatePaymentPriceAfterRefactoring(decimal price, bool canRemoveTax, bool canDiscount)
        {
            // エラー回避
            if (price &lt; 0)
            {
                throw new ArgumentOutOfRangeException("商品価格は0以上の数値を入力してください。");
            }

            // 消費税率確定
            decimal taxRate;
            if (canRemoveTax)
            {
                taxRate = 0m;
            }
            else
            {
                taxRate = 0.08m;
            }

            // 割引率確定
            decimal discountRate;
            if (canDiscount)
            {
                discountRate = 0.9m;
            }
            else
            {
                discountRate = 1.0m;
            }

            // 支払価格を計算する
            return price * (1m + taxRate) * discountRate;
        }

