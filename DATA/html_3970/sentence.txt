More than 1 year has passed since last update.gRPC ではリクエスト／レスポンスのデータサイズに上限があります。既定値は4MBです。
データオブジェクト単体でこの上限を超えることはあまり多くはありませんが、データオブジェクトの数が多い場合にはその合計サイズが上限を超えたりします。
上限を変更することはできますが、データサイズが不定である場合はストリームを用いることが一般的です。リクエスト／レスポンスの一つ一つが上限を超えなければサイズ超過エラーは発生しません。この方法を採用しても、リクエスト／レスポンスの一つ一つのデータサイズが上限を超える場合はサイズ超過エラーが発生します。リクエスト／レスポンスの型がリスト構造を内包するような場合、データサイズは内包するオブジェクトの数に比例します。数が不定であればデータサイズも不定になります。次のような場合の実装を考えてみました。そもそもアプリケーション設計や API 設計を見直した方がよいような気もしますが、サーバーサイドでできるだけバッファを持たずにクライアントへ返すように実装するようなケースにも転用できる考え方だと思います。今回のサンプルで使用する複合オブジェクトです。ComplexHeader, ComplexItem, ComplexSubItem を内包します。ComplexItem, ComplexSubItem の数が不定で、非常に多い可能性があるものとします。
FillResponse メソッドを呼び出して受信したオブジェクトを詰め込んでいきます。今回は ProtocolBuffers で定義しました。oneof を使用しています。取得した ComplexHeader, ComplexItem, ComplexSubItem オブジェクトを一つずつクライアントに送信しています。レスポンスとして受け取ったオブジェクトを ComplexObject に格納していきます。ComplexHeader, ComplexItem, ComplexSubItem オブジェクトが格納された ComplexObject が返されます。


