More than 3 years have passed since last update.ミニゲームを作ってUnityを学ぶ！[タンクウォーズ編]前回はプロジェクト起動から実際にゲームをプレイするまでのシーンの流れを実装しました。
今回はプレイ中から終了に至るまでの流れと、リスタート機能を実装していきます。今回のゲームは双方に分かれた戦車がお互いに弾を撃ちあい、相手戦車のHPを先にゼロにしたほうが勝ちというルールです。第5回の弾の命中処理を実装する際に、HPがゼロになった戦車は死亡フラグ(mIsDead)がtrueになるようなコードを書いていますので、今回はこちらのフラグをTankManageから監視することでゲームの終了タイミングを判定します。CheckResult()ではプレイヤーの操作する戦車と相手戦車の死亡フラグを取得し、その組み合わせに適した結果をintで返還しています。さらに、このCheckResult()を実行するためにSceneMainのコードを修正します。SceneMainでは状態がゲームプレイ中の際に、TankManagerの終了判定を更新毎に呼び出しています。
そして終了条件を満たした場合にはUiManagerのShow~()とTankManagerのStopAllTanks()を呼び出したあと、最後に自分の状態をRESULTに変更します。RESULTは状態としては定義されていますが具体的な処理は一切ありませんので、このタイミングでSceneMainのUpdate()は何も判定せず何も実行しないようになります。＊TankManagerのStopAllTanks()とUiManagerのShow~()は後述します。ゲームの終了判定に続いて、今度はゲームを終了する際に必要な処理を実装していきます。ゲームが終了した際、それ以降に戦車が移動したり弾を撃ったりできないように制御しているのがTankManagerのStopAllTanks()です。このメソッドを実装する前に、まずはFireControllerとTankModelに新しいメソッドを追加します。SleepAllBullets()ではListに格納されている全ての弾について、それが休眠状態でない場合にはSleep()を呼び出して休眠状態へ遷移させます。Stop()は自身をその場に停止させて操作を受け付けない状態にするのと同時に、先ほどのSleepAllBullets()によって自分の撃った弾を全て休眠状態にします。そしてこのStop()を呼び出すのがTankManagerのStopAllTanks()です。StopAllTanks()ではリストに格納されている全てのTankModelに対してStop()を呼び出しています。
つまりこのメソッドを実行することで全ての戦車が機能を停止し、同時に画面上から全ての弾が消えることになります。次はゲームの結果を表示する機能を実装していきます。
SceneMainから呼び出していたUiManagerのShow~()の部分です。それぞれのメソッドでは開始時にカウントダウンとして使用していたTextCountDownを流用して、勝敗に合わせたWIN・LOSE・DRAWの文字列を画面中央に表示しています。現時点のプロジェクトでは勝敗が画面中央に表示され、戦車が操作できなくなってからはプレイヤーができることはありません。自動的にゲーム起動時の状態に戻してももちろん良いのですが、今回はゲームを開始したときと同じようにこちらもプレイヤーのタイミングでゲームを最初の状態に戻すような機能を実装します。SceneMainに新しくCheckSystemInput()を追加し、現在の状態に関係なく常にBackSpaceキーの入力を監視するようにしました。
そしてBackSpaceキーの入力を感知した場合にはGameControllerのOnRestartButton()が呼び出されます。OnRestartButton()では現在のシーンを再読み込みすることで、ゲームを起動直後の状態に戻します。
これでゲームがどんな状態であってもBackSpaceキーを押すことで最初からやり直しができるようになりました。＊ゲームをリスタートした際に画面が暗くなってしまう場合は以下の設定を行ってください。BackSpaceキーでやり直す仕組みが実装できましたので、開始時のEnterキーと同様にそれを促すテキストを表示します。
今回はそれと一緒に戦車の操作方法も表示してしまいましょう。これでプレイヤーはいつでも操作方法を見ることができるようになりました。最後にプロジェクトを実行して、今回の内容が正しく実装されているか確認します。次のページに進む
イントロダクションに戻る



