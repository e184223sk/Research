
[TestClass]
public class WebApiExceptionFilterTests
{
    public void OnException_アプリケーションエラー()
    {
        // Setup
        Mock&lt;HttpContext&gt; httpContextMock = new Mock&lt;HttpContext&gt;();
        httpContextMock.Setup(m =&gt; m.Request.Headers["x-access-token"])
                .Returns(new StringValues("aaaaaaaaa-bbbbbbbbb-cccccc-dddddd"));
        HogeException exception = new HogeException();
        ActionContext actionContext = new ActionContext(httpContextMock.Object, new RouteData(), new ActionDescriptor());
        ExceptionContext context =
                new ExceptionContext(actionContextnew List&lt;IFilterMetadata&gt;()) { Exception = exception };
        WebApiExceptionFilter target = new WebApiExceptionFilter();

        // Act
        target.OnExecute(context);
        JsonResult result = context.Result as JsonResult;
        HogeResult hoge = resultJson.Value as HogeResult;

        // Assert
        Assert.AreEqual((int)HttpStatusCode.InternalServerError, result.StatusCode);
        Assert.AreEqual("11111", hoge.Code);
        Assert.AreEqual("アプリケーションエラー", hoge.Message);
    }
}

