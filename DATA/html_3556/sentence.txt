ちょうどまとまっている資料が見つからなかったので、まとめてみました。C# - Winodws Form Application (Visual Studio 2017 , .NET Framework 4.5)自作のフォームアプリをマルチモニタ対応するために色々弄ってみました。
こういうマルチモニタ環境があるとします。

小さいディスプレイをサブモニタとして使用している私の環境です。
この状態では、表示領域はこうなってます。

プライマリディスプレイの左上が(0,0)であり、セカンダリディスプレイはその左側にあるのでX座標はマイナスになります。
つまり、フォームのLeft,Topプロパティに雑に座標を指定すれば自動的にその位置に応じたディスプレイ上に表示させることができます。
結論として、フォームの移動や配置についてのケアは殆ど要らないと言えるでしょう。逆に言うと、「座標がマイナスならディスプレイからはみ出ている」というロジックの方を改めなければなりません。System.Windows.Forms.Screen.FromControlメソッドにフォームを引数で渡せばScreenオブジェクトを取ることができます。
あとはBoundsでディスプレイ領域の矩形が、WorkingAreaでタスクバーを除いた領域が取れます。結果（矩形）だけが欲しいのなら、Screen.GetBoundsでも良いようです。２つのモニタを跨った場合は、最大部分を保持するディスプレイの方が返されます。中央の座標を含む方ですね。今の“アクティブ”なディスプレイは、マウスのある位置ではないかと思います。マウスのあるディスプレイにフォームを移動させたいこともあるでしょう。
ScreenにFromPointがあります。また、GetBoundsの引数にpoint型も渡せます。基本的にはScreen.FromControlで行けると思いますが、ディスプレイの方から探す方法も抑えておくと良いかも。これははみ出てない事に対するチェック。ちなみにこれ、モニタ２つを跨っている場合ははみ出てる判定になります。あとはまぁ、適当にやればよろしいかと。これを入れておけば、「モニタ外してからアプリを起動したら行方不明に！」という事態は避けられると思います。独学のため正確でない可能性があります。
（っ・ｘ・）っ きゅ


