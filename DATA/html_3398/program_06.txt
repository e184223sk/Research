
    [CustomPropertyDrawer(typeof(FadeParameter))]
    public class CharacterDrawer : PropertyDrawer
    {
        public override void OnGUI(Rect position,SerializedProperty property, GUIContent label)
        {
            //元は 1 つのプロパティーであることを示すために PropertyScope で囲む
            using (new EditorGUI.PropertyScope(position, label, property))
            {
                //ラベル領域の幅を調整
                EditorGUIUtility.labelWidth = 100;

                position.height = EditorGUIUtility.singleLineHeight;

                //各プロパティーの Rect を求める
                Rect panelColorRect = new Rect(position)
                {
                    y = position.y + EditorGUIUtility.singleLineHeight + 1
                };

                Rect fadeTimeRect = new Rect(panelColorRect)
                {
                    y = panelColorRect.y + EditorGUIUtility.singleLineHeight + 2
                };

                Rect alpha_PanelRect = new Rect(fadeTimeRect)
                {
                    y = fadeTimeRect.y + EditorGUIUtility.singleLineHeight + 2
                };

                //各プロパティーの SerializedProperty を求める
                SerializedProperty panelColorProperty = property.FindPropertyRelative("panelColor");
                SerializedProperty fadeTimeProperty = property.FindPropertyRelative("fadeTime");
                SerializedProperty alpha_PanelProperty = property.FindPropertyRelative("alpha_Panel");

                //各プロパティーの GUI を描画
                panelColorProperty.colorValue =EditorGUI.ColorField(panelColorRect,"フェードの色",panelColorProperty.colorValue);
                fadeTimeProperty.floatValue= EditorGUI.FloatField(fadeTimeRect, "フェードの時間", fadeTimeProperty.floatValue);
                alpha_PanelProperty.floatValue = EditorGUI.Slider(alpha_PanelRect, "透明度",alpha_PanelProperty.floatValue, 0, 1);
            }
        }
    }

