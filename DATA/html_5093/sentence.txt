More than 3 years have passed since last update.前回の”C#でAWS Lambda ～ 一番基礎的な使い方”のやり方で、VS2017でコードを書いて、Lambdaにアップロードできている状況になっていることソリューションファイルの中にLambda用のプロジェクトがある。
VSからLambdaにPublishして、動作確認ができている。
が、
このままだと、いちいちPublishしないと実行結果が確認できないし、デバッグもできないorz
なので、
ソリューション内にテスト用ドライバを作って、VSの実行ボタンで簡単に実行でき、かつデバッグもできるようにする。１ソリューションに１プロジェクトだと、ソリューションエクスプローラにソリューションが見えない（？）ので、ファイル→追加→新規プロジェクトの追加をする

多分、AWS Lambda Project with Testsでやるんだろうが

ここはあえて、.NET Core標準のプロジェクトを作る
ConsoleApp1という名前にしておきます。

コンソールアプリ（.NET Core）を選択。
¥bin の下に、exeが作られてDOS画面で実行するイメージですね。で、VSの緑三角を押すと、このコンソールアプリが実行するようにします。
ConsoleApp1プロジェクトで右クリック、スタートアッププロジェクトに設定

はい。

ConsoleApp1から、Lambda用プロジェクトを使えるようにします。
プロジェクトを参照設定します。
依存関係→参照の追加

Lambda用プロジェクトが見えますね。これをチェック

これで、コンソールプロジェクトが起動して、Lambda用プロジェクトを呼び出せるって事になります。もういっちょ
Lambda用プロジェクトのFunctionには、入力パラメータとして・・・string　の方は、入力パラメータとしてわかりますが
ILambdaContext はなんぞ。。
多分ログを書いたりするもののようなので、このオブジェクトを作って渡して上げる必要がありそうです。NugetからAmazon.Lambda.TestUtilitiesを入れませう。

はい。
コンソールアプリが起動されると、Mainが動きますんで
Mainの中身を弄ります。↓こんな感じに。この状態でとりあえず実行してみませう。
はい。
あとはブレークポイントを置けばなんとかなります。


