今回は画面レイアウトの続きと、別画面の表示の仕方についてやります。[注意]
これまでの回で説明済みの操作方法等は、説明を省略したり簡略化している場合があります。まず、画面が入り組んでくると便利なツール、ドキュメントアウトラインを表示しておきます。
メニューの「表示」 - 「その他のウィンドウ」 - 「ドキュメントアウトライン」を選択します。
フローティング状態にするなりドッキングするなり好きな場所に配置してください。
コントロールの階層構造がツリー形式で表示でき、ここからコントロールの選択もできます。
Gridを3行、2カラムにします。
ドキュメントアウトラインでGridを選択し、画面デザイナのGrid上端あたりにマウスをポイントしてください。
そうすると黄色い線が表示されるはずなので、大体真ん中あたりでクリックしてください。
はい、Gridが2カラムになりました。
次にGridの左端の上の方をマウスクリックしてください。
もう一か所、1行目と同じぐらいの行の高さになるようクリックしてください。
これで3行になります。
Gridの1行目左側にButtonをドラッグ＆ドロップしてください。
Gridの1行目右側、3行目左側、3行目右側にそれぞれButtonをドラッグ＆ドロップしてください。
画面デザイナで4つのボタンを全て含むよう、対角線上にドラッグしてください。
4つのボタンが選択状態になりました。
プロパティウィンドウで「レイアウト」カテゴリのWidthに150、Heightに30、HorizonalAlignmentとVerticalAlignmentにCenterを設定してください。
Marginプロパティ右端の■をクリックして「リセット」を選択してください。
これでボタン配置時に設定されたMarginプロパティを削除します。
Marginプロパティが無くなったので、4つのボタンがそれぞれのセルの中央に表示されるようになりました。
ButtonのContentプロパティを以下のように設定してください。TextBlockをGridの2行目・左側にドラッグ＆ドロップし、
名前（x:Name）にtextBlockとつけてください。
新しい項目でウィンドウを1つ追加してください。
名前はDialogWindow1.xamlにします。
以下のように画面を作成してください。
WindowのWindowStyleプロパティは最小化ボタン・最大化ボタンが無いToolWindowに設定します。
2つのボタンはダブルクリックしてイベントハンドラを設定します。DialogResultプロパティに値を設定するとウィンドウが終了します。
処理を確定するような終了の場合はtrueを、キャンセル的な終了の場合はfalseを設定します。MainWindow.xamlに戻り、Contentがダイアログ１のボタンをダブルクリックして以下の処理を記述します。
先ほど作成したダイアログを表示する処理です。イベント名を右クリックし、「名前の変更」でdialogButton_Clickに書き換えて「適用」ボタンを押します。
MainWindow.xamlのボタン定義で、Contentがダイアログ２の方にクリックイベントをコピペし、2つのボタンが同じイベントハンドラを呼び出すようにします。ここまでで一度実行してみましょう。「ダイアログ１」ボタンを押します。
ダイアログが表示されました。
呼び出し元のボタンのContentがメッセージ部分に表示されています。
ShowDialogで表示したウィンドウは閉じるまで呼び出し元の画面には戻れません。
OKボタンで終了します。
MainWindowのテキストが設定されました。

次は「ダイアログ２」ボタンを押してみます。今度も呼び出し元のContentがメッセージに反映されています。

キャンセルで閉じてみます。MainWindowのテキストに反映されました。
新しい項目の追加でウィンドウを追加してください。
名前はWindow1.xamlにします。Gridの淵をクリックして3×3に分割します。
縦横中央を細めにしてください。
ツールボックスにgを入力してフィルタリングし、GridSplitterを2つ、ドラッグ＆ドロップしてください。
GridSplitterが配置されました。
タグを以下のように編集してください。真ん中のカラム幅を調整します。
赤枠のあたりにマウスをポイントしてください。
ドロップダウンを開いてAutoを選択してください。
行も同じくGridの真ん中の行、左端あたりにマウスカーソルを持っていき、Autoを選択してください。
4つのセルにRectangleをドラッグ＆ドロップします。
タグを以下のように書き換えます。ボタンを配置し、Contentを前の画面に戻るに設定してください。ボタンをダブルクリックし、Clickのイベントハンドラに以下を入力してください。ドキュメントアウトラインでWindowを選択し、プロパティのイベントでClosingの欄をダブルクリックします。ウィンドウ終了時の処理、Closingイベントに以下の処理を書きます。MainWindow.xamlに戻り、「次の画面に移動」ボタンのイベントハンドラを作成します。動かしてみましょう。
「次の画面に移動」ボタンを押します。
MainWindowが隠れてWindow1が表示されます。
真ん中の部分をドラッグしてサイズを変えられます。
「前の画面に戻る」ボタンを押すとWindow1は終了し、非表示にしていたMainWindowが表示されます。
普通のウィンドウ表示をやります。
新しい項目の追加でウィンドウを追加してください。
名前はWindow2.xamlにします。MainWindowの「新しい画面表示」ボタンのイベントハンドラに以下を入力してください。実行してみます。「新しい画面表示」ボタンを押すとWindow2がMainWindowの上に表示されます。
ダイアログ表示ではないのでMainWindowも触ることができます。
「新しい画面表示」ボタンを何度も押すと、どんどんWindow2が新たに表示されます。
MainWindowとすべてのWindow2を閉じるとプログラムが終了します。
おしまい＜＜ 最初の記事 　 ＜ 前の記事 　 次の記事 ＞


