using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UniRx;
using UniRx.Triggers;

public class PinchEventHandler : MonoBehaviour
{
    private Subject&lt;float&gt; onPinch = new Subject&lt;float&gt;();

    public IObservable&lt;float&gt; OnPinch { get { return onPinch; } }

    void Start()
    {
        //ピンチ終了
        var multiTapEndStream = this.UpdateAsObservable()
            .Where(_ =&gt; !MultiTapping());

        //ピンチ
        this.UpdateAsObservable()
            .Where(_ =&gt; MultiTapping()) //2箇所以上タップされている
            .Select(_ =&gt; GetMultiTapDistance()) //2点間の距離にメッセージを変換
            .Buffer(2, 1) //バッファに詰める
            .Select(distances =&gt; distances[1] - distances[0]) //前フレームとの距離の差にメッセージを変換
            .TakeUntil(multiTapEndStream) //ピンチ操作が終わったらバッファをクリアにする(TakeUntil+RepeatUntilDestory)
            .RepeatUntilDestroy(this)
            .Subscribe(delta =&gt;
            {
                onPinch.OnNext(delta);
            });
    }

    private bool MultiTapping()
    {
        return Input.touchCount &gt;= 2;
    }

    private float GetMultiTapDistance()
    {
        return Vector2.Distance(Input.GetTouch(0).position, Input.GetTouch(1).position);
    }

}

