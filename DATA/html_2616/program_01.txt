

    [SerializeField, Header("選ばれる間隔を操作")] 
    float m_interval = 2;

    List&lt;GameObject&gt; m_tmpListObj = new List&lt;GameObject&gt;();

    [HideInInspector]
    public List&lt;GameObject&gt; g_listObj = new List&lt;GameObject&gt;();

    float m_randomValue;

    void Start()
    {
        //子のオブジェクトを全部リストに入れとく
        foreach(Transform child in this.gameObject.transform)
        {
            m_tmpListObj.Add(child.gameObject);
        }
    }

    //Startボタン押したら呼ばれる
    public void AutoSelectStart()
    {
        StartCoroutine(AutoSelectStartCoroutine());
    }

    //レベルに応じて自動で選ばれる回数を変える
    IEnumerator AutoSelectStartCoroutine()
    {
        for(int i = 0; i &lt; m_levelGetFromSlider.GetLevel(); i++)
        {
            yield return new WaitForSeconds(m_interval);

            //ここでどれが選ばれるかランダムに決める
            m_randomValue = Random.Range(0, m_tmpListObj.Count);

            //選ばれたときのイベント呼び出し
            m_tmpListObj[(int)m_randomValue].GetComponent&lt;PanelSelectedEvent&gt;().BlinkPanel();
            m_tmpListObj[(int)m_randomValue].GetComponent&lt;PanelSelectedEvent&gt;().CorrectSoundPlay();

            //選んだオブジェクトをリスト化する
            g_listObj.Add(m_tmpListObj[(int)m_randomValue]);
        }

    }

    //レーザーで選んだら次が光ってリストを更新
    public void  ToNextSelect()
    {
        //ここでどれが選ばれるかランダムに決める
        m_randomValue = Random.Range(0, m_tmpListObj.Count);

        //選ばれたときのイベント呼び出し
        m_tmpListObj[(int)m_randomValue].GetComponent&lt;PanelSelectedEvent&gt;().BlinkPanel();

        //選んだオブジェクトをリスト化する
        g_listObj.Add(m_tmpListObj[(int)m_randomValue]);
    }

