C#のWPF3Dを使ってテクスチャを貼り付けたモデルを表示しようとしたときに嵌まった点について記載します。用意したテクスチャ画像の（画像端を含まない）一部をポリゴンに貼り付けようとしたときに、期待したテクスチャ画像の領域が使われないケースがありました。想定：WPF3DのTextureCoordinatesには画像全体を[0-1]とみなした座標系の座標を指定することで、画像内の任意の領域をテクスチャとしてポリゴンに貼り付けることができる。問題：画像の内側の一部をテクスチャとして貼り付けたい場合、期待したテクスチャとは異なる範囲が貼り付けられる結果：WPF3DはTextureCoordinatesに含まれる座標群のMinMaxを[0-1]に正規化して、使用するテクスチャ領域を求めているような挙動を確認した。ダミーの座標を与えることで、期待した領域をテクスチャとして貼り付けることができた。サンプルコードは以下の3つのステップについて書かれています。次のような画像を使ってテクスチャとしてポリゴンに貼り付けていきます。外側から黒、青、緑、赤の四角で構築された画像です。成功した場合、以下のようなモデルが表示されます。サンプルコードのリポジトリは以下になります。WPF3DTextureTestという名前のプロジェクトを作成しています。Visual Studio 2019WPF.NET Core 3.1画像の左下、右下、左上を三角ポリゴンに貼り付けます。コードを実行すると以下のような画面が表示されます。期待したように動作します。画像の右下、右上、左上を三角ポリゴンに貼り付けます。今度はテクスチャとして使う範囲を黒ではなく青にするためにTextureCoordinatesに入れる値を[0-1]から[1/8-7/8]に変更します。コードを実行すると以下のような画面が表示されます。右下、右上、左上の三角は青から始まるようにしたかったのですが、サンプルコードその1の時と同じように黒から始まるテクスチャが貼られています。サンプルコードその2の挙動から、TextureCoordinatesに含まれる座標は[0-1]に正規化されて使用されているように思います。そのため、テクスチャ画像の内側の一部を使って貼り付けたい場合、ポリゴンと紐づかないダミーの点群を登録し、TextureCoordinatesに(0, 0)と(1, 1)の座標を与えて正規化の影響を受けないようにします。コードを実行すると以下のような画面が表示されます。右下、右上、左上の三角は青から始まるテクスチャが貼られており、期待したように動作します。TextureCoordinatesに入力された座標のMinMaxが[0-1]に正規化されるのであれば、TextureCoordinatesに入力する座標は元のテクスチャ画像の座標でも問題なさそうです。例えば、サンプルコードその1を以下のように書き換えても動作しました。


