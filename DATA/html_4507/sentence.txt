More than 1 year has passed since last update.とりあえず、Unityからスプレッドシートに書き込みが行えたので備忘録として残しておく。たぶん.Net 4.xでビルドできるバージョンであれば問題ないと思う。
ちなみに、私が実証したバージョンは2018.2.10f1。OSはWin10。Googleのドキュメントにはライブラリのインストール方法がNugetの方法しか載っていないため、Nugetでインストールする。
だが、ここでUnityのPlayer SettingsにおいてScripting Runtime Versionが.Net 3.5 Equivalentなど4.x未満のバージョンが設定された状態だとインストール時にエラーとなる。
そのためPlayer Settingsを開き、Scripting Runtime Versionを .Net 4.x Equivalent に設定する。

そして、適当なGameObjectを選択し、InspectorでAddComponentボタンをクリックし、新規のC#スクリプトファイルを作成。
(ファイル名は適当でいいのだが、今回はサンプルコードのクラス名を"GoogleSheetsApiTest"としている)
そのC#スクリプトのEditをクリックし、Visual Studioを起動。
Visual Studioでツール→Nugetパッケージマネージャー→パッケージマネージャーコンソールをクリックすると、パッケージマネージャーコンソールが開くので
PM&gt; Install-Package Google.Apis.Sheets.v4
を実行しインストールする。インストールしたら、Visual Studio上ではライブラリが認識されているが、インストールされる場所がAssetsフォルダ配下外であるため、Unityからは認識されない。なので、このまま実行しようとすると"Google"というネームスペースが見つからないといったエラーが発生して実行できない。
Unityでライブラリを使えるようにするには、Assets/Pluginsフォルダにライブラリ(dll)をコピーする。
ライブラリのインストール先は参照プロパティのパスでわかる。

コピーするdllは以下の７つ
* Google.Apis.Auth.dll
* Google.Apis.Auth.PlatformServices.dll
* Google.Apis.Core.dll
* Google.Apis.dll
* Google.Apis.PlatformServices.dll
* Google.Apis.Sheets.v4.dll
* Newtonsoft.Json.dllAssets/Pluginsフォルダにコピーしたら、Unity上からでもライブラリが使用できるようになる。これらの手順は【もう迷わない】Pythonでスプレッドシートに読み書きする初期設定まとめに詳しく書かれているのでこの記事を参考にAPIの使用の設定を行い、書き込みサンプル用にスプレッドシートを新規作成し、共有設定を行う。
APIの使用設定において、認証情報のJSONファイルがダウンロードされるので、このJSONファイルをAssets/StreamingAssetsフォルダにコピーまたは移動する。これで準備が整ったので、コードを書いて実行すれば、シートに値が書き込まれる。
コードはC#.NETでGoogle Sheets API 4を使ってSpreadSheetを読み書きしてみるのサンプルコードをほぼコピペ。
ただ、このサンプルコードは無限ループで一定間隔で書き込むコードとなっているため、1回だけ書き込むように修正。
また、//CredentialファイルがcredPathに保存されるというコメントが書かれたコードでエラーが発生したので、この行も修正したのが以下のコード。
これを適当なGameObjectにアタッチして実行すればシートに書き込まれた。


