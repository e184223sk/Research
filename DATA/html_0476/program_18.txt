

        #region stopボタンクリック
        private void button2_Click(object sender, EventArgs e)
        {
            // BackgroundWorkerが処理中の時だけ実行
            if (MainBackgroundWorker.IsBusy)
            {
                // 処理をキャンセルします
                MainBackgroundWorker.CancelAsync();
            }
        }
        #endregion

       #region  並列処理実行処理
           private void OnDoWork(object sender, System.ComponentModel.DoWorkEventArgs e)
            {
                for (int i = 0; i &lt; 1000; i++)
                {
                    // ループ処理の途中にキャンセルされたかを確認する
                    if (MainBackgroundWorker.CancellationPending)
                    {
                        //キャンセルされてた場合の処理
                        e.Cancel = true;
                        return;
                    }
                    //実行処理
                }
        #endregion

       #region 並列処理終了処理
        private void OnRunWorkerComleted(object sender, System.ComponentModel.RunWorkerCompletedEventArgs e)
        {
            if (e.Cancelled)
            {
                MessageBox.Show("処理はキャンセルされました");
            }
            else
            {
                MessageBox.Show("処理完了");
            }

            txt_status.Visible = false;
        }
        #endregion



