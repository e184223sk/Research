
  #region csvを読み込む処理
        private void read_csv(string file_path)
        {
                var records = new List&lt;Csv&gt;();

            var config = new CsvConfiguration(new CultureInfo("ja-JP", false))
            {
                HasHeaderRecord = false,
                HeaderValidated = null,
                MissingFieldFound = null
            };


            //read
            using (var reader = new StreamReader(file_path, Encoding.GetEncoding("utf-8")))
            using (var csv = new CsvReader(reader, config))
            {
                csv.Context.RegisterClassMap&lt;CsvMap&gt;();

                records = csv.GetRecords&lt;Csv&gt;().ToList();

            }

            foreach (var i in records)
            {
                if (i.Name0 == "Account" || i.Name0 == "User")
                {
                    //Console.WriteLine(i.Name0);
                    string[] csvdata = {
                                        i.Name0,
                                        i.Name1,
                                        i.Name2,
                                        i.Name3,
                                        i.Name4
                        };
                    listView_Contents.Items.Add(new ListViewItem(csvdata));
                }
            }
        }

        public class Csv
        {
            public string Name0 { get; set; }
            public string Name1 { get; set; }
            public string Name2 { get; set; }
            public string Name3 { get; set; }
            public string Name4 { get; set; }
        }
        public sealed class CsvMap : ClassMap&lt;Csv&gt;
        {
            public CsvMap()
            {
                Map(m =&gt; m.Name0).Index(0);
                Map(m =&gt; m.Name1).Index(1);
                Map(m =&gt; m.Name2).Index(2);
                Map(m =&gt; m.Name3).Index(3);
                Map(m =&gt; m.Name4).Index(4);
            }
        }

        #endregion

