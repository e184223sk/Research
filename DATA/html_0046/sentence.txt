なんとなく色々な言語向けにPythonのRange関数と同等の処理を行うコードをまとめた。まず、Pythonのrange関数をおさらい。詳細は公式ドキュメント参照。上記のa,b,cの変数を定義して処理書くこととする。
返ってくる値が特殊型だったりすると困ることもあるので、とりあえず言語ごとに用意された動的配列的な型に代入することとした。
あとは昇順のみとする。
ステップ値を負にすると狂いそうなやつもあるのでそれは随時修正のこと。[実装]
今回の基準となるrange関数。
リストに包んだだけ。特筆なし。[実装]
C++11からのiotaが使える。
素直な関数として書けない辺り凄くC言語らしい。
ステップ値は設定できないので後処理で加える。
初期値は設定できるけど、ステップ値と一緒に処理を加えた方が楽。[実装]
Pythonのrangeとほぼ同じ仕様のiotaがある。
arrayで配列に変換。[実装]
rangeと名に付くEnumerable.Rangeが使える。
ステップ値の設定はできないみたい。
なのでLINQの後加工でいい感じに。[実装]
元々JavaScriptはrange的な構文を持ち合わせていなかったが、スプレッド構文やArray.fromの追加によって比較的容易に連番の配列を生成できるようになった。
連番の追加方法もArray.keysまたはArray.mapの第2引数など何通りかある。
初期値とステップ値はArray.mapで追加する。[実装]
C#と同じ。
特記なし。HSPには専用の構文は存在しない。
配列を生成して、foreachを回して連番と初期値とステップ値を追加。[実装]
loopマクロのcollectで柔軟に連番のリストが生成できる。
降順にする場合はbelowをaboveに変更すること。[実装]
SRFI 1にiotaが存在する。
Pythonのrangeとは違い、上限値が生成要素数になっていることを注意。[実装]
Pythonと同仕様のrangeが存在。
特筆なし。たまーにこういうどうでもいいプログラムを書きたくなる。


