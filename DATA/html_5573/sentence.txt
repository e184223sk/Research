More than 3 years have passed since last update.Unityでゲームを作っていると、GameObjectにComponentを沢山、ぶらさげていくことになります。この時に、コンポーネント同士でお互いの機能を使うために参照するなど、「互いに必須のコンポーネント」が要るようになります。そうした場合の方法を考えてみましょう。UnityEngineで用意された、Require Componentを使うと、同じGameObjectでアタッチされたコンポーネントをチェックして、それがないとビルドでエラーになるようにできます。例えば、以下のコードがあったとします。TestClassAというコンポーネントから、TestClassB,TestClassCを参照しているとします。ただし、GameObjectにアタッチされているかは判りませんから、場合によってはGetComponentが失敗することがあります。それを防ぐために、以下の形にします。TestClassAをアタッチすると、Require Componentで指定されたコンポーネントTestClassB、TestClassCが自動的にアタッチされます。

また、指定されアタッチされたコンポーネントは外せません。この例の場合では、TestClassAを外さないままでTestClassBを外そうとすると、エラーになります。
書式は以下になります。[RequireComponent(typeof(追加したいコンポーネント名))]上記でコンポーネントの追加を自動化できましたが、Start()でGetComponentするまで、参照は入りません。初期化で負荷がかかるので、同様のGameObjectが多い場合には、起動前に代入しておきたいものです。その時にEditor上で実行できるメソッドがReset()です。前記コードを以下に変更します。これを実行すると、コンポーネント追加やギアアイコンからResetしたときに、Reset()が実行されます。同じようにTestClassAだけ追加していますが、今度はTestClassB、TestClassCが自動的にアタッチされると同時に、参照の代入も実行されます。必須になるものをGameControllerにいろいろ記述して参照できるようにしておくと、Scene内での相互参照したいGameObject同士のアクセスが楽になります。そうした場合に、上記方法を使うと便利ですね。


