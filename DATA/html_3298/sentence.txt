More than 1 year has passed since last update.昔、特定の文字列を含んだツイートを送るとその相手のTwitterの名前を変えられるといったサービスがありました。
名前も覚えてないし何年も前ですし、もうサービスは終了してるかもしれません(ユーザーストリームの廃止とかありましたし)
なので今回は自分で作ってみることにしました。C#
CoreTweet①1分ごとに自分宛てのツイートを検索する
②『お前の名前は「???」だ』という定型文を含み、かつ10分前までで、かつ未ふぁぼのツイートに絞る
③絞ったツイートの中からランダムで採用
④そのツイートをふぁぼり、名前を変える。報告ツイートもする。↓①の一分毎に検索、というのは、TwitterAPI取得の制限によるものです。検索は15分に15回制限があるので1分毎に検索をかけます。
②の未ふぁぼのツイートに絞るのにも理由があります。同じツイートを何度も採用するのはよくないということから、④の段階でふぁぼります。
採用したツイートはふぁぼってあるので②の段階で排除されるわけです。
10分以内、というのは、めちゃめちゃ前のツイートを拾うのを防止してます。
③のランダムというのは、対象のツイートが複数あった場合、何を選べば良いかわからなかったのでとりあえずランダムにしてます。実装はC#のCoreTweetを使いました。
C#Twitterライブラリで一番情報量が多そうだったので。とりあえず、Debugモードでも動けばいいということで、コマンドライン引数からAPIKeyを入力するようにしました。コードに直接書くのは嫌だったので。keyWord・・・検索するワードです。今回はログインした自分のIDです。
expressionn・・・定型文です。判定と名前部分の抜粋を正規表現でやっています。トークンを再利用するによると、また、 tokens.UserId と tokens.ScreenName は Tokens.Create を使った場合、自動で取得されることはありません。 Account.VerifyCredentials で取得してください。ということなので、アクセスキーがあるときとないときで方法を分けています。
また、このアプリはセキュリティうんぬんは考えていないので、安易にファイルに保存するという方法を取っています。採用したツイートを後でふぁぼる、という仕様上、ツイートと正規表現で抜いた文字をセットにしてDictionaryで返しています(まあ分ければいいんですけど)
この関数は10分以上前のツイート、ふぁぼ済みのツイートを排除しています。
公式Twitterによると、名前の文字数の上限は50文字までらしいので、50文字以上の名前も排除しています。メイン関数です。Thread.Sleepメソッドを使っているので、60秒ごとにwhileが実行されます(あまりよくないっぽいですねこれ)ふぁぼったり名前変えたりツイートしたりします。(使わんかったけど供養)これはメイン関数で使ってたのですが、ツイート検索関数でふぁぼされてるかを個別に調べたので使いませんでした。
それにしても、tweet.IsFavoritedの中にふぁぼ済みかそうじゃないかが入ってないとかどんな罠ですか……なんのためのプロパティなんですかこれ……なにがあってもFalseしか返ってこなくて、この方法にたどりつくまで時間がかかりました……というわけで、このプログラムが起動してる間は一分毎に検索、ツイートを選別し名前を変えられるようになりました。
サーバーレスでここまでできるとすごいですね。自分はPCをつけっぱにして出かけたり寝たりするので割とずっと動いてます。
実質サーバーみたいなものですね……最後まで記事を見てくださりありがとうございました。
ノリから始まり、一晩で作ったものですが、Qiitaに書いて！という要望で記事にさせていただきました。
CoreTweetの記事を無限に読み漁ってたので、みなさんに感謝です。Home(日本語)
[C#]CoreTweetでtwitterBot作ってみた
TwitterのAPI制限 [2018/08/26現在]


