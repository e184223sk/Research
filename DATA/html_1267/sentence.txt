More than 1 year has passed since last update.Unity-DOTSで作る2D弾幕シューティングの例の四回目です。このゲームは可能な限りパフォーマンスの出る弾幕シューティングにしたかったので、
ComponentSystemは極力並列化できるJobComponentSystemを使います。さっそくですがコードを記載します。Jobを記述するstructには頭文字Jをつけるようにしています。OnCreateでは、Entityの種別ごとに利用するクエリを組み立ててキャッシュしておきます。
OnUpdateでは、銃Entityの処理を実行する前に、親として設定されているEntityがまだ存在しているかをチェックして、いなければそのEntityは破壊します。
そのあと、本体となる下記三つのJobを順番に実行していきます。
JReadParentDataは、親となるEntityの情報を銃が拾うためのものです。主に親の座標を拾って自分の位置を更新するのに使います。その際、親の向いている角度も拾っておき、射撃角度のベースとして使用します。このゲームでは、銃が射撃を開始する場合、設定されている連射数の数だけマガジンに弾をセットします。それを連射間隔に応じて撃っていき、マガジンの残数が0になったら設定されている待機時間になるまで待機カウンタを回します。
JUpdateとJShotでは、銃が射撃可能な状態かどうかをチェックし、可能であれば弾Entityを作成します。
複数Wayの射撃を行うため、射撃の際は射撃Wayの数だけループを行います。その内部で、Wayごとに複数の弾を撃つ場合は、さらにループを回します。例えば、3Wayの射撃で、三つの方向に角度が若干ランダム化された弾を五つずつ撃ちたいというような場合に使えます。コードが長い割にやっていること自体は単純かもしれません。


