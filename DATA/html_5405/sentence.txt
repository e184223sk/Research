今回は夏休みの自由研究と称して
7SegLEDにCPU使用率を表示してみたいと思いますFPS(主にApex)にはまっている自分がぱっと見でCPU使用率を把握して
ゲームでカクついているときに何が悪いのかをあたりを付けるという意味で作成しました7segLEDに現在のCPU使用率を1秒おきに転送し、表示すること
完成したものはこちらです夏休みの自由研究Arduino uno + C#でCPU使用率を7セグLEDに表示してみたマルチスレッドとかSerial.readStringの仕様とかいろいろ学ぶところあったので後日qiitaに投稿しようかな pic.twitter.com/99eoPnAssx
CPU-Zで負荷をかけるとそれに応じてタスクマネージャと一緒に7SegLEDの表示が変わっていることがわかると思いますブレッドボードは回路の試作のためなので
いつかユニバーサル基盤に実装したいと思いますまずは表示を担う7SegLEDの回路を設計します
今回使う7SegLEDは秋月電子通商で買えるこちらにしました

ダイナミック接続４桁赤色７セグメントＬＥＤ表示器ですこいつのデータシートを見るとアノードコモンでダイナミック接続との記載があるので
アノード側の表示させたい桁に5Vをかけ
カソード側で表示する数字に対応する部分を出力する方式で行きます回路図は

デジタル10番ピンからからデジタル13番ピンまでがアノードで5Vをかけること
デジタル2番ピンからデジタル9番ピンまでは表示したい部分をLOWにすることで表示、
HIGHにすることで非表示という制御になりますので4.7kΩでプルダウンしてあります例えば
デジタル10番ピンがHIGHの時にデジタル3番ピン,4番ピンにLOW
残りの2,5,6,7,8,9番ピンにHIGHがかかっていると7SegLEDの一桁目に「1」が表示されます回路図をもとにブレッドボードに配線を行っていきます

ぐちゃぐちゃですがこんな感じC#(PC)側はCPUの使用率を取得し、シリアル経由でArduinoの文字列として送信する役割を持ちますArduinoとの通信はSerialPortで行いますシリアルポートの利用可能なものを列挙して
選択式のコンボボックスに格納していますボタンが押されるとコンボボックスで選択されたCOMポート名を指定して
serialPort1.Open()で通信開始
serialPort1.Close()で切断していますC#でCPU使用率をとるならPerformanceCounterでしょ！という安直な考えです…
ひたすらwhileで回してserialPort1.Write();で一秒おきに送信していますSerialPort1.Write(CPUperStr + "\0");の最後になぜナル文字(\0)が入っているかは
Arudino側のプログラムでわかりますArduino側はPCからCPU使用率の数字を文字列(100.0とか58.5とか)として送信されたものを
しかるべきLEDに表示する役割を持ちますこちらの記事 arduinoで並列処理(ノンプリエンプティブ)を参考に
7segLEDの表示タスクと
USBのシリアル通信でCPU使用率の数字を受け取るタスクに分けて
並列処理として実装してますLED表示タスクは各桁を5msごとにダイナミック点灯させて制御しています
0-9までの表示は各関数に定義してどの桁でその表示を行うかを引数に渡すことでダイナミック点灯を実現していますシリアル通信タスクは少し試行錯誤しましたSerial.readString();でUSBシリアル通信で来た文字列を受信しているのですが
以下の様な動作になりました

データが来てから表示されるまでに謎のラグがあります
このラグをどうにかしてなくしたい！！
とArduinoの言語リファレンスをよく読んでみるとSerial.readString()は、シリアルバッファから文字を読み、文字列に書き込む。この関数はタイムアウトすれば終了するとの記述を発見
この受信してからデータが表示されるまでのラグは
受信のタイムアウトをわざわざ待っていたということに気が付きましたその後リファレンスを見返すとSerial.readStringUntil()は、シリアルバッファから文字を読み、文字列に書き込む。この関数は、終端文字を検出するかタイムアウトすれば終了する(Serial.setTimeout()参照)。めちゃくちゃいい関数あんじゃん！！！ということで以下のように変更しましたSerial.readString()をSerial.readStringUntil()に書き換え
終端文字としてナル文字を指定、C#側でナル文字を文字列の末尾につけて送信するようにしましたすると…

ラグがなくなってすんなりと表示ができるようになりました冒頭で宣言したタスクをcheckすることで起動しています上記の様な感じで0-9までの表示を行っています完成しました
これを表示しながらゲームするなり
レンダリングするなりベンチマークとったりすると非常に面白いです夏休みの自由研究Arduino uno + C#でCPU使用率を7セグLEDに表示してみたマルチスレッドとかSerial.readStringの仕様とかいろいろ学ぶところあったので後日qiitaに投稿しようかな pic.twitter.com/99eoPnAssx夏休みの自由研究(暇つぶし)としてやってみましたが
所要時間3時間程度で終わってしまったため
また何かネタを探してちょろちょろやっていきたいと思いますとても参考になりました
ありがとうございました


