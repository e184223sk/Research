
// Copyright(c) 2017 Takahiro Miyaura
// Released under the MIT license
// http://opensource.org/licenses/mit-license.php

private void OnAudioFilterRead(float[] buffer, int numChannels)
{
    if (!_isStart) return;

    lock (this)
    {
        foreach (var f in buffer)
        {
            samplingData.Add(FloatToInt16(f));
        }
    }
}

/// &lt;summary&gt;
///     The bytes that we get from audiograph is in IEEE float, 
/// &lt;/summary&gt;
/// &lt;param name="value"&gt;sampling Data&lt;/param&gt;
/// &lt;returns&gt;waveform data(16bit)&lt;/returns&gt;
private static short FloatToInt16(float value)
{
    var f = value * short.MaxValue;
    if (f &gt; short.MaxValue) f = short.MaxValue;
    if (f &lt; short.MinValue) f = short.MinValue;
    return (short) f;
}

