More than 3 years have passed since last update.前回作ったライブラリを使うことで、翻訳したデータを取得することは可能になります。あと必要なものとして、翻訳したいデータを音声としてサービスへ送るためにリアルタイムに音声データをサンプリングしていく必要があります。色々方法を調べるとUnityだけでできる方法とHoloToolkitを組み合わせる方法がありましたので、紹介します。試した限りはUnityだけの方が安定した品質のデータをとれている気がします。環境については以下の通りです。サンプルコートは以下の場所にgithubに公開しています。UnityプロジェクトはHoloLens用にビルドできる形にしています。リアルタイム音声入力についてはUnityだけ、HoloToolkitを使う方法両方を含めています。Unityのみ、HoloToolkitを組み合わせる方法両方でのやり方について紹介します。Unityだけで実現する場合はAudioSourceとMicrophoneを利用します。AudioSourceの再生対象としてclipにマイクのソースを設定します。その後マイクの初期化を待ってAudioSourceを再生します。サンプリングレートはAudioSettings.outputSampleRateの値を設定します。停止についてはAudioSourceの停止とマイクの終了を実行します。マイクからの音声情報の取得についてはMonoBehaviour.OnAudioFilterReadメソッドで可能です。このメソッドは定期的に（～20ms）呼び出され、その時のサンプリングデータを取得することが可能です。引数としてサンプリングデータとチャネル数が返ります。サンプリングデータは-1.0f～1.0fの配列となります。このfloat値に量子化ビットに応じた値を掛けることで、Waveデータの情報を生成します。サンプルでは量子化ビットを16bitで処理するためにShortに変換してます。変換は単純にMAX値で掛け算するだけです。なお、チャネル数が2で返ってきている場合は、bufferの配列情報は添え字の奇数と偶数で右音声、左音声が入っています。サンプルではリアルタイムで収集した音声データをいったんバッファリングし停止時にファイルに出力しています。実際の処理ではOnAudioFilterReadメソッドの処理でリアルタイムに何かをするという実装になると思います。ただし、OnAudioFilterReadメソッドは通常のUnityのメインスレッドとは異なるスレッドで駆動するため、直接GameObjectなどを操作することはできません。いったんフィールドに値を設定し、Updateメソッド側で処理させる必要があります。HoloToolkitを利用する場合はAudioSourceとMicStreamを利用します。
MicStreamというのがHoloLensで音声系の機能を利用する際のライブラリになります。
上記のUnityのみと同じことを実施する際の実装方法を以下に紹介します。なお、MicStreamの使い方についてはサンプルコートがHoloToolkitのInput\Tests\Scrpits\MicStreamDemo.csにあります。Cubeなどの3DオブジェクトにAudioSourceとMicStreamDemoコンポーネントを追加すると、マイクの音声でCubeの大きさが変わるのを確認することができます。音声入力の準備についてはMicStream.MicInitializeCustomRateメソッドで初期化を行い、 MicStream.MicStartStreamメソッドで開始します。MicInitializeCustomRateメソッドは音声の品質を設定します。品質は引数で設定し、品質のレベル（High,Low,Room）とサンプリングレートを指定します。
MicSetGainはいわゆるボリュームに相当します。マイクの音声が小さいときにこの値を
大きくします。デフォルトは１です。停止についてはMicStream.MicStopStream()メソッドを呼び出します。マイクからの音声情報の取得についてはUnityでの方法と同様にMonoBehaviour.OnAudioFilterReadメソッドで行います。ただし、このメソッドの引数のBufferにはデータが入っていません。データについてはMicStream.MicGetFrame
メソッドを呼び出して値を取得します。それ以外の考え方はUnityの方法と同様です。思ったよりも容易にリアルタイムで音声入力のデータをとることができました。サンプルは音声の品質はかなり高めなので割と再現性が高いです。HoloLensでもリアルタイムに音声入力できるといろいろと面白いことができると思います。
ここまでくれば、HoloLensでリアルタイム翻訳まであと一歩です。


