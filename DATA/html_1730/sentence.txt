　Ｗｉｎ１０化も、すんだはず？ですかね。なので、.NET Frameworkが入っているかどうかは、Ｗｉｎ１０標準搭載の．ＮＥＴ４．８が入っているかと同意語に近いでしょう。
　でも、ときどき、古いのが見つかりますね。社内ツール的な、限定環境で動くものでも、令和が表示されないやつとか、Ｗｉｎ７のやつとか。問題を抱えるから発覚するのです。問題が発生しないように、新バージョンに乗り換えているのに、本末転倒ですね。いろいろ事情はあると推測はしますが。
　やっぱり、チェックあるのみですね。こちらも事情があります。ビシッと、『動きません。』と主張しましょう。Windows10 64bit home 21H1 
VisualStudio 2019 Community 16.10.2 C#
.Net Framework 4.8.04084　プロジェクトは簡単にしたいので、Ｗｉｎｄｏｗｓフォームアプリで、FrameworkDescriptionを使います。バージョンチェックの話はレジストリの記事が多いようですが、簡単にバージョン情報を取得できるようになっていたのですね。
　FrameworkDescription自体は．ＮＥＴ４．７．１から使えるようになったようですが、我々は、．ＮＥＴ４．８まで使用許可がでているのです。何も問題ありません。　．ＮＥＴ４．５．２ぐらいでも動くとしても、環境を合わせるためにも．ＮＥＴ４．８は入れてほしい。オフラインインストールをいくつも用意するのも面倒ですし。　今まで、少しでも下のバージョンを選択していましたが、もう遠慮なく選択できますね。最終バージョンなのですから。今まで使っていなかったのなら、追加でインストールが必要かもしれません。

Visual Studio Installerを起動します。

.NET Framework 4.8 targeting Packを入れてなかったら、入れましょう。
．ＮＥＴ４．８が選択できてます。

できました。
skuで．ＮＥＴ４．８が指定されていますね。
EXEといっしょにconfigも配ると、．ＮＥＴ４．８が必要なツールですと宣言しているようなものです。　今、．ＮＥＴ４．８のプロジェクトを作ったばかりなのに、入ってない環境は作りたくないです。でも、メッセージは載せたいので、いい加減方式でします。

架空のバージョンを指定しました。
何も知らずに、チェックしてくれるはずです。

これです。このメッセージでよければ、対応は楽々です。いやなところ　ボタンだけ日本語になっていますね。フレームワークとホームワークの違いが判らない人が何人いるか知っているのですかね。
　好きでオフラインインストールを使っているのではないのです。環境的な制約等のしがらみがあったりします。
　シンプルに、『管理者に連絡してください。』程度にしたいです。
　なので、FrameworkDescriptionにしました。．ＮＥＴ４．０を指定すれば、ほぼ意味がなくなり、英語のメッセージは抑制されます。いっそのこと、configを配らないのもいいです。　もし、．ＮＥＴ３．５だけなら、日本語のメッセージがでるので驚きです。英語のメッセージと同じぐらい、意味は伝わらないとは思います。しかたないです。
『このアプリケーションを実行するには、最初に以下の.NET Frameworkバージョンのいずれかをインストールする必要があります。
　　V4.0
.NET Frameworkの適切なバージョンの取得方法に関しては、アプリケーション発行者に問い合わせてください。』
Ｗｉｎ７端末で、このメッセージとともに、ＯＫボタンが１つでした。一応、コンパイルしときます。

．ＮＥＴ４．８のプロジェクトですが、余裕でビルドできてます。　システムを完全に使わせないため、Main()に組み込みます。余計なロジックは、フォームには入れたくないので。

できました。
バージョンは、固定文字列判定です。最終バージョンなので、問題ないでしょう。
とりあえず、FrameworkDescriptionを取得したところまで、デバッグ実行してみました。
うまく動きそうです。
そのままでは、動いてしまうので、エラーになるように小細工します。

とりあえず、メッセージがとれました。もちろん、日本語です。　FrameworkDescriptionは新参者のため、使える環境的は４．７．１、４．７．２、４．８の３パターンだけです。エラーとなるのは、実質２パターンということになります。４．０～４．７までは判定できないのは寂しいので、改造します。

できました。
FrameworkDescriptionを別の関数に分割しました。４．７までの古いバージョンだったら、アセンブリが存在しないため、例外処理に引っ掛かってくれます。　さずがに、ばりばりのＶｉｓｕａｌＳｔｕｄｉｏ環境では、４．７までの古いバージョンの動作は試せないのですが。Ｗｉｎ７端末と、いくつかの．ＮＥＴのオフラインインストールがあれば試せますね。Ｗｉｎ７端末は、なかなか役に立ちますね。
　ほぼ、Ｗｉｎ７端末を排除するためのチェックを作成しておいて、よく言うよという感じですが。
．ＮＥＴ５．０でもFrameworkDescriptionは存在しますが、環境を考慮してくれているようです。そのため、.NET Frameworkプロジェクトでは４．８止まりのようです。賢いですね。これで、未来永劫、このチェック処理は変更無しです。
　．ＮＥＴ４．８は、しつこく残るのでしょうね。


