WPFでタスクトレイ（通知領域）常駐アプリを作ろうとしたら想像以上に手間がかかったので備忘録として初投稿です。新しいプロジェクトの作成からWPF App(.NET)を作成しておく。まずタスクトレイにアイコンを表示させるためicoファイルを作成しておきます。
Inkscape等のドローソフトを使うのが一番楽だと思います。
ちなみにウインドウズ標準形式アイコン作成等のサイトを使用すれば簡単にマルチアイコンが作成できます。
icoファイルを作成し終えたらソリューションエクスプローラから既存の項目として追加します。

その後プロパティのビルドアクションをリソースに変更してください。
多分一番躓きやすいポイントだと思います。
他のサイトだと参照を追加してくださいとか色々書かれてると思いますが今はプロジェクトファイルの&lt;PropertyGroup&gt;内にと追記することでFormクラスを扱うことができます。長い準備も終わったため、いよいよタスクトレイのプログラミングです。App.xaml.csのOnStartupメソッドに以下のように書いてください。変数iconのicon.icoには自分が用意したicoファイルの名前を使用してください。
Textはタスクトレイのアイコンにマウスオーバーしたときに出るツールチップのテキストです。
Items.Addでコンテキストメニューを追加します。

またMouseClickイベントで左クリックの動作を決めることもできます。これでタスクトレイに表示をすることができましたが、常駐ソフトなのに実行時にいちいちウィンドウが表示されるのは鬱陶しいため実行時にはウィンドウが表示されないようにします。
App.xamlのStartupUriを削除すればウィンドウは表示されずに動作します。
WPFでタスクトレイを扱うには&lt;UseWindowsForms&gt;true&lt;/UseWindowsForms&gt;が必要。
OnStartupメソッドに処理を書き込む。
ついでにApp.xamlのStartupUriを削除する。Windowsのタスクトレイ常駐型アプリを作る
Using System.Windows.Forms classes in a .net core 3.0 preview9 project
[WPF] リソースの画像から BITMAP オブジェクトを生成する
C#のタスクトレイ常駐アプリの作り方のご紹介！
C# Right mouse click on button does not raise mouseclick event


