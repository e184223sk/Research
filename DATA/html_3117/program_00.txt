/// &lt;summary&gt;ドット区切り数字列を比較する&lt;/summary&gt;
/// &lt;param name="a"&gt;対象文字列A&lt;/param&gt;
/// &lt;param name="b"&gt;対象文字列B&lt;/param&gt;
/// &lt;param name="number"&gt;比較する列数 (0なら全て)&lt;/param&gt;
/// &lt;returns&gt;A-Bの符号 (1, 0, -1)&lt;/returns&gt;
public static int CompareVersionString (this string a, string b, int number = 0) {
    var aSeries = a.Split ('.');
    var bSeries = b.Split ('.');
    int aNum, bNum;
    number = (number &gt; 0) ? Mathf.Min (number, aSeries.Length) : aSeries.Length;
    for (var i = 0; i &lt; number; i++) {
        if (i &gt;= bSeries.Length) { return 1; }
        aNum = 0; int.TryParse (aSeries [i], out aNum);
        bNum = 0; int.TryParse (bSeries [i], out bNum);
        if (aNum &gt; bNum) { return 1; } else if (aNum &lt; bNum) { return -1; }
    }
    return (aSeries.Length == bSeries.Length) ? 0 : -1;
}

