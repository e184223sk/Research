More than 1 year has passed since last update.MagicOnion についてはこちらをご覧ください。
一般的なマルチプレイゲームでは、マッチング→メインのゲーム→リザルト といったふうに、複数のシーンでストリーミング接続を繋ぎっぱなしにする事が多いと思います。
その場合、1シーンで使う場合に比べ気をつける必要がある点がいくつかあるので、それぞれに対して自分がやっている対応を紹介します。接続全体を1つのインターフェースにまとめることになるので、シーンごとに一部のメソッドしか使わないことになります。
一方、IHogeHubReceiver を実装するクラスでは当然すべてのメソッドを定義しなければいけません。
このままでは非常に扱いづらいのですべてのメソッドを UniRx の Observable に変換してしまうと良さそうです。
インターフェイスの明示的実装を使えば同名のPublicなプロパティが生やせます。これを手動で書くのはめんどくさくてしょうがないのでエディタ拡張で自動生成しましょう。接続が不要になったら切断するというは大事で、これをしないと Unity エディタがすぐフリーズします。
単独のシーンで使うならシーンで使うスクリプトの OnDestroy で切断すれば良いですが、
複数シーンの場合は、接続を管理するオブジェクトを作り DontDestroyOnLoad に設定しておくのが良いでしょう。というイメージです。
ついでに参加者の保持管理もこのクラスでやってしまうと後のシーンで使いやすくて便利です。


