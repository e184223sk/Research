More than 1 year has passed since last update.マウスやキーボードが使えなくて、入力装置がLeapMotionしかない状況で、 Main Camera を動かす方法を考えてみました。実際に作ったのはこんな感じです。（表示しているのはLookingGlassですが、趣旨とは関係ないので説明を省きます。）#LookingGlass 用のアプリを作成中。 #LeapMotion で取得した手の動きで、Unity内のカメラを動かしてみました。手をグーの形にしている間はカメラを動かせます。グーの形じゃなくなったら終了します。マウスドラッグみたいな感覚で使えるの便利です。更に、前後にも動かせます！ pic.twitter.com/fE8lM754vW手の形がグーのときは、手の動きに合わせてカメラを動かします。グーじゃないときは動かしません。
マウスドラッグの3D版みたいな感じです。手前や奥にも動かせます。こんな感じのコードを作りました。このコードをカメラのオブジェクトにアタッチすれば、動くはずです。 UniRx を使っています。Update() をストリームに変換したものです。こちらの記事が丁寧でとても参考になります。
UniRx入門 その4 -Updateをストリームに変換する方法とメリット-ここで、手が グー の形かどうか判定しています。
まず、 hands.Count で、LeapMotionが検出している手の数が1つかどうかを確認しています。
そして、 hands[0].Fingers.ToArray().Count(x =&gt; x.IsExtended) で、開いている指の数を数えています。
この数が0ならじゃんけんの グー だと判断します。この手法はこちらの記事を参考にさせていただきました。
LeapMotion+Unityでグー・チョキ・パーを認識するという違いがあったので、z座標の正負を反転させています。手がグーじゃなくなったときにバッファを破棄するために、 TakeUntil を使っています。
この処理をしないと、グーじゃなくなった直前の手の位置がバッファに保持され、次に手をグーにしたときに、一気にカメラが動きます。こちらの記事を参考にさせていただきました。
【UniRx】ピンチイン・アウトをちゃちゃっと作る両手を使えばピンチイン・アウトとかもできそうですね！やってみようと思います。2019年4月22日追記
両手編を書きました！
【LeapMotion+UniRx】手の動きでカメラを動かす：両手編


