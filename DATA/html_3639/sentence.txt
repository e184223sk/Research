More than 1 year has passed since last update.テキストエディタや、ExcelやWordなどのアプリケーションに採用されてる「元に戻す」、「やり直し」操作の機能、便利ですよね。
MVVMアプリケーションでは、バインディング通知の処理を一部書き換えることにより、Undo(元に戻す)、やり直し(Redo)の機能を組み込むことが比較的簡単にできたりします。
当記事では、Infragistics社製のUndo/Redo フレームワークを利用して、Undo(元に戻す)、やり直し(Redo)の実装事例をご紹介したいと思います。今回用意したサンプルはこちら。
入力系のコントロールを配置し、画面操作の履歴を保持、元に戻す。やり直すボタンをクリックすると入力内容の復元などを行っています。GitHub
https://github.com/furugen/wpf-samples-undoredo/tree/master/wpf-samples-undoredoソースコードが長いですが、プロパティの宣言によるものが多いです。
UndoMangagerを利用するうえでのポイントを紹介します。Undo/Redoの対象となるViewModelを登録します。
csharp
this.UndoManager.RegisterReference(this);
Undoに記憶させる履歴はPropetyChangeの通知時を行う際に、UndoManagerにも履歴を登録します。
共通的なメソッドにて、UndoManagerに登録することで各プロパティは意識せずに履歴管理を行うことができます。例えば、テキストボックスにバインドしているTextBoxValueは、SetPropertyメソッドをコールし、バインド通知および履歴登録をしています。Undo/Redo用のコマンドが用意されているのでUndoManagerをパラメータで指定してあげればよしなに管理してくれます。Undo/Redoの管理を実現してくれるUndo/Redo フレームワークの紹介でしたが如何でしょうか。
今回、ご紹介しきれませんでしたが、一連の操作の流れをまとめて履歴登録したり、記録の一時停止/再開する機能なども提供しているコンポーネントなので痒い所にもよく手が届きますよ。
入力画面でUndo/Redoを実装したい場合はぜひご検討くださいませ！


