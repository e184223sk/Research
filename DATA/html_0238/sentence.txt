皆さんUnityのDebugクラスよく使いますよね？ Debug.Log()とか。
でもたまに不便だな～って思う時ありません？配列を表示したい時とか
↑配列なことぐらいわかってるわ！要素が欲しいんじゃ！
こういう場合はforeachなどで回すか、LINQでゴニョゴニョするとかしか無いんですよね、、、非常にめんどくさい！！というわけで作りました。その名もDebugExtentions！
まだ制作途中で、機能が豊富とは言えませんが、一部をgithubに公開いたしましたので今回はそれをご紹介したいと思います。DebugExtensions機能一覧
・普通のDebugクラスの機能全部（もしかしたら実装漏れがあるかも）
・命名の関係上ClearDeveloperConsole() → ClearConsoleError()になっています。
・多少制限はあるけど、structも表示できます。
・Colorクラスの表示が見やすくなった
・Array, List, HashSet, Dictionaryの要素表示（Format系は対応してないですごめんなさい、、）
・ログのテキスト保存
・コンソール全クリア
・リッチテキストを簡単に使えるぞ個人的に一番最初に実装したかった機能。
こんな感じで表示されます。Array・List・HashSetDictionaryDictionaryの冒頭2行は、KeyとValueの型情報を表示してくれています。
突っ込むだけで、簡単に要素を表示してくれるのでかなり便利になりました。しかし、筆者の表示形式のセンスが無いので、あまり統一感がありません。
この表示形式は、これからのアップデートで改善していく予定です。RecordStart()とRecordStop()の間で、ロギングが行われた場合、情報が保存されます。
RecordStop()が実行されたときに保存されるので注意。
デフォルトではDebugExtensions/Logsに保存されますが、設定で変えることができます。その名の通り、まとめてログを全削除します。Consoleではリッチテキストを使うことができるので、string型の変数に上記のようなメソッドを連結することで、リッチテキストに変換することができます。
コンソールの文字をちょっといじりたいときなどに便利です。
LogSavePath: ログファイルを保存するパス
SaveStackTrace: ログの下の部分にくっついている、呼び出し元のトレース情報をログファイルに書き込むか
Dictionary Key,Value: Dictionaryをコンソールに表示するときの色結構頑張ればもっと使いやすくなると思うので、これからブラッシュアップしていけたらなと思います。
リリースできるようになれば、アセットストアなどに出す予定です。!!告知!!
現在、チームでShoutousというFPSゲームを開発しています！～Shoutousとは？～
 ◉大規模な現代戦を題材にした
 ◉どんな遊び方でも皆活躍できる
 ◉今のFPSの良いとこ取りをした
 ◉e-Sports味の全くない、貴方の為の
 ◉意識低い系高画質お祭りFPSゲーム!公式ツイッターのフォローよろしくお願いいたします！
Twitter: https://twitter.com/ShoutousJP3Dデザイナーや、Unityエンジニアなども募集しているので、興味があればぜひTwitterID:@harumar0nにDMいただけるとありがたいです！


