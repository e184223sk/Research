
using System;
using UnityEngine;
using Zenject;

public class GoodbyeHandler : IDisposable
{
    public void Dispose()
    {
        Debug.Log("Goodbye World!");
    }
}

public class HelloHandler : IInitializable
{
    public void Initialize()
    {
        Debug.Log("Hello world!");
    }
}

public class Greeter : Kernel
{
    public HelloHandler HelloHandler { get; }
    public Greeter(HelloHandler helloHandler)
    {
        HelloHandler = helloHandler;
        Debug.Log("Created Greeter!");
    }
}

public class TestInstaller : MonoInstaller
{
    public override void InstallBindings()
    {
        Container.BindInterfacesAndSelfTo&lt;Greeter&gt;()
            .FromSubContainerResolve().ByMethod(InstallGreeter).AsSingle();
        Container.Bind&lt;HelloHandler&gt;()
            .FromResolveGetter&lt;Greeter&gt;(g =&gt; g.HelloHandler).AsSingle();
    }

    void InstallGreeter(DiContainer subContainer)
    {
        subContainer.Bind&lt;Greeter&gt;().AsSingle();

        subContainer.BindInterfacesTo&lt;GoodbyeHandler&gt;().AsSingle();
        subContainer.BindInterfacesAndSelfTo&lt;HelloHandler&gt;().AsSingle();
    }
}

