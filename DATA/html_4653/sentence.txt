More than 3 years have passed since last update..NET Framework 用のテキストテンプレートエンジン NVelocity の簡単な使い方を説明します。Java のテキストテンプレートエンジンVelocityの .NET 移植版です。
SOURCEFORGE にあるものは 0.4.1 を最後に開発が停止しており、現在は Castle Project に移管されているようです。残念ながら活発に開発が継続されているようではありませんが…。【SOURCEFORGE】
【Castle Project】projects
【NuGet】NVelocityここには NVelocity に関する情報はほとんどありません。Other Projects の欄に GitHub へのリンクがありますが、リファレンスなどを見つけることはできませんでした。機能的にはほぼVelocityと同じですので、Velocityのリファレンスを参照するとよいです。実行時にテンプレートファイルを外部から読み込んでテキストを生成するアプリケーションを簡単に作ることができます。.NET Framework 用のテキストテンプレートエンジンといえばT4が最も有名ですが、事実上 VisualStudio 専用と言えるT4との使い分けができると思います。変数名の前に $ をつけます。大文字小文字は区別されます。変換は行われず、そのまま出力されます。変数名に使用できる文字は a～z A～Z 0-9 _ - です。
このうち先頭の文字として使用できるのは a～z A～Z _ です。変数名は {} で囲むことを推奨します。どこまでが変数名であるかがわかりやすくなります。なお、変数名のすぐ後ろに a～z A～Z 0-9 _ - が続く場合は {} で囲まないと正しく変数名が認識されません。$ と変数名の間に ! を付加すると、コンテキストで値が指定されなかった、または null が指定されたときに "" に変換されます。変数に指定した値の型に定義されているプロパティやメソッドを呼び出すことができます。メンバ名の大文字小文字は区別されないようです。C# の if とほぼ同じです。C# の for each とほぼ同じです。
$velocityCount でループカウンタの値を取得することができます。1 オリジンです。
0 オリジンのカウンタが必要である場合、set 構文を用いて演算した結果を出力します。カウンタ変数を用いた for ループを行いたい場合、配列を使用して次のように記述します。[0..4] は 0 ～ 4 の配列を表します。単一行コメントは ## です。
複数行コメントは #* *# で囲みます。


