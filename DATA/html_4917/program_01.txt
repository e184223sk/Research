
    public class SomeProcessExecutor
    {
        public event EventHandler&lt;GenericEventArgs&lt;string&gt;&gt; MainProcessHandler;
        public event EventHandler&lt;GenericEventArgs&lt;Exception&gt;&gt; ExceptionHandler;

        public void Execute()
        {
            try
            {
                //共通の前処理の実施

                //（イベント発生】呼び出し元個別の処理
                //呼び出し元でイベント発生時の処理を記述
                ExecuteMainProcessHandler(new GenericEventArgs&lt;string&gt;("Hello World!"));

                //共通の後処理を実施

            }
            catch(Exception e)
            {
                //呼び出し元でイベント発生時の処理を記述
                ExecuteExceptionHandler(new GenericEventArgs&lt;Exception&gt;(e));
            }
        }

        private void ExecuteMainProcessHandler(GenericEventArgs&lt;string&gt; arg)
        {
            //イベントが呼び出し元で定義されている場合のみイベント処理を実施
            EventHandler&lt;GenericEventArgs&lt;string&gt;&gt; handler = this.MainProcessHandler;
            if (handler != null)
            {
                handler(this, arg);
            }
        }

        private void ExecuteExceptionHandler(GenericEventArgs&lt;Exception&gt; arg)
        {
            //イベントが呼び出し元で定義されている場合のみイベント処理を実施
            EventHandler&lt;GenericEventArgs&lt;Exception&gt;&gt; handler = this.ExceptionHandler;
            if (handler != null)
            {
                handler(this, arg);
            }
        }
    }

