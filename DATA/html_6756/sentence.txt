More than 3 years have passed since last update.本記事は、Vol.2 : プログラム作成編（Page-1）の続きです。ここからは、AnalogWatchFaceEngineクラスのメソッドを実装していきます。OnCreateメソッドは、AnalogWatchFaceEngineのインスタンスが生成された時に実行します。
ここでは主に、以下の処理を行います。Android.Content.Res.Resources.GetColorメソッドは、Android SDK Level 23以降では非推奨となっており、代わりにAndroid.Support.V4.Content.ContextCompat.GetColorメソッドが推奨されています。しかし、そのメソッドの戻り値はColor型でなく、ARGB値を格納したint型であり、PaintオブジェクトのColorプロパティ（Color型）に代入するには、一工夫が必要です。OnDestroyメソッドは、AnalogWatchFaceEngineのインスタンスが破棄される時1に実行します。OnApplyWindowInsetsメソッドは、現在のWindowInsetsを適用する時に実行します。例えば、Android Wearデバイスのウィンドウの形状（丸形 or 四角形）を判別する時に利用します。OnPropertiesChangedメソッドは、Android Wearデバイスのプロパティが定められた時に実行します。主に、Low-Bit制限及び焼き付き防止を必要とするかどうかのフラグを設定します。OnTimeTickメソッドは、Android Wearのモードにかかわらず、1分ごとに実行します。OnAmbientModeChangedメソッドは、Android Wearデバイスで「インタラクティブモード」と「アンビエントモード」を切り替えた時に実行します。引数のinAmbientModeから、アンビエントモードかどうかを判別します。OnInterruptionFilterChangedメソッドは、Interruptionフィルターが変更された時に実行します。主に、Android Wearデバイスの通知のON / OFF状態を判別する時に利用します。OnTapCommandメソッドは、ユーザーが画面をタップした時に実行します。※このメソッドを実行するには、WatchFaceStyle.Builderにて、SetAcceptsTapEventsメソッドの引数にtrueを指定し、タップイベントを有効にする必要があります。
※このメソッドは、Android Wear 1.3以上に対応しています。OnDrawメソッドは、現在時刻を取得し、Watch Faceの画面を描画します。※このメソッド内の処理は、できるだけ短く終えるようにし、リソースの読み込みやグラフィックスオブジェクトの生成などは、なるべくOnCreateメソッドで行うようにします。画面全体を背景色で塗りつぶし、前回描画した内容を上書きします。インタラクティブモードの時は、リソースから読み込んだ背景色で描画し、アンビエントモードの時は、黒色で塗りつぶします。DrawColorメソッドは、画面全体を指定した色で塗りつぶします。
DrawRectメソッドは、指定した左上と右下のXY座標とPaintオブジェクトからなる矩形を描画します。秒針は、1秒あたり$2\pi / 60$ [rad]なので、$s$秒の時の秒針の角度$\theta_s$は、以下の式で求められます。分針も同様に、$m$分の時の分針の角度$\theta_m$は、以下の式で求められます。時針は、1時間あたり$2\pi / 6$ [rad]ですが、時の値$h$だけでなく分の値$m$も考慮して、角度$\theta_h$を求めていきます。12時の位置を基準に、現在の針の角度を$\theta$ [rad]、針の長さを$l$とすると、針の先端のXY座標は以下の式で求められます。あとは、DrawLineメソッドで描画します。OnVisibilityChangedメソッドは、Android Wearデバイスの画面の表示・非表示が切り替わった時に実行します。※Android Wearデバイスの設定で「常に画面表示」をOFFにした時、インタラクティブモードで一定時間が経つと、一旦アンビエントモードに移行してから画面を消灯します。従って、OnVisibilityChangedメソッドを実行する前にOnAmbientModeChangedメソッドを実行します。（逆に、画面消灯からインタラクティブモードへの移行では、OnVisibilityChangedメソッドの実行後にOnAmbientModeChangedメソッドを実行します。）完成後のコードを以下に示します。※コメント付きのバージョンはGistにて公開しています。Watch Faceアプリの基本的なプログラムの作成は以上です。お疲れ様でした。今回作成したプログラムをエミュレーターやAndroid Wearデバイス上で実行すると、以下のようなアナログ時計を表示します。次回は、背景画像やアナログ針の画像を描画し、よりリッチなWatch Faceアプリを作っていこうと思います。それでは、See you next!例えば、現在のウォッチフェイスから別のウォッチフェイスに切り替えた時に呼び出されます。 ↩


