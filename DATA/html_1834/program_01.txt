
using System;
using System.IO;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;
using Microsoft.Azure.WebJobs.Extensions.DurableTask;

namespace FunctionApp1
{
    public static class TaskActivity
    {
        [FunctionName("TaskActivity")]
        public static async Task&lt;int&gt; Run(
            //[HttpTrigger(AuthorizationLevel.Function, "get", "post", Route = null)] HttpRequest req,
            [ActivityTrigger] int number,
            ILogger log)
        {
            log.LogInformation("TaskActivity start. index:" + number.ToString());
            log.LogInformation("Run datetime:" + DateTime.Now.ToString());
            await Task.Delay(1000);

            if ((number % 4 == 0) &amp;&amp; (number != 0))
            {
                // 0以外の4の倍数の時に例外をスロー
                throw new Exception("number:" + number.ToString() + " is a mulriple of 4.");
            }

            return number;
        }
    }
}

