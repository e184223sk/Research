
using System;
using System.Runtime.InteropServices;
using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Loggers;
using BenchmarkDotNet.Running;

namespace NativeBinarySurvey
{

    public static class Calc
    {
        public const int Iteration = 10_000_000;

        public const double Constant = 42.0;
        public static double Field = 42.0;

        public static double UseField()
        {
            var accum = 0.0;

            for (int i = 0; i &lt; Iteration; i++)
            {
                accum += Math.Atan2(Field, Field);
            }

            return accum;
        }

        public static double UseConst()
        {
            var accum = 0.0;

            for (int i = 0; i &lt; Iteration; i++)
            {
                accum += Math.Atan2(Constant, Constant);
            }

            return accum;
        }
    }

    [ShortRunJob]
    public class ConstantFolding
    {
        [Benchmark]
        public double UseFieldNoChange() =&gt; Calc.UseField();

        [Benchmark]
        public double UseConstant() =&gt; Calc.UseConst();
    }

    class Program
    {
        static void Main()
        {
            BenchmarkRunner.Run&lt;ConstantFolding&gt;();
        }
    }
}


