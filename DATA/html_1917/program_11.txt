
using Newtonsoft.Json;
using System.Diagnostics;

using JsonNetTest2_1;

namespace JsonNetTest
{
    class Program
    {
        static void Main(string[] args)
        {
            var child1 = new Child1() { Prop0 = "Child1", Prop1 = 1234 };
            var child2 = new Child2() { Prop0 = "Child2", Prop2 = 1.234 };
            string child1Json = JsonConvert.SerializeObject(child1);
            var child1FromJson = JsonConvert.DeserializeObject&lt;Child1&gt;(child1Json);
            Debug.WriteLine($"Child1.Prop0: {child1.Prop0 == child1FromJson.Prop0}");
            Debug.WriteLine($"Child1.Prop1: {child1.Prop1 == child1FromJson.Prop1}");

            string child2Json = JsonConvert.SerializeObject((Parent)child2);
            var child2FromJson = JsonConvert.DeserializeObject&lt;Child2&gt;(child2Json);
            Debug.WriteLine($"Child2.Prop0: {child2.Prop0 == child2FromJson.Prop0}");
            Debug.WriteLine($"Child2.Prop2: {child2.Prop2 == child2FromJson.Prop2}");

            Parent[] parents = new Parent[] { child1, child2 } ;
            var jss = new JsonSerializerSettings() { Formatting = Formatting.Indented};
            string parentsJson = JsonConvert.SerializeObject(parents, jss);
            Parent[] parentsFromJson = JsonConvert.DeserializeObject&lt;Parent[]&gt;(parentsJson, jss);
            foreach (var child in parentsFromJson)
            {
                Debug.WriteLine(JsonConvert.SerializeObject(child));
            }
        }
    }
}

