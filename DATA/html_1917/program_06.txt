
// 親クラスのコンバータ Child1Converter、Child2Converterの処理を呼び出す
class ParentConverter : JsonConverter
{
    public override bool CanConvert(Type objectType)
    {
        return objectType == typeof(Parent);
    }

    public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
    {
        JsonConverter converter;
        if (value is Child1)
        {
            converter = new Child1Converter();
        }
        else if (value is Child2)
        {
            converter = new Child2Converter();
        }
        else
        {
            throw new JsonReaderException();
        }
        converter.WriteJson(writer, value, serializer);
    }

    public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
    {
        JObject jobject = JObject.Load(reader);
        JsonConverter converter;
        switch ((int)jobject["ChildType"])
        {
            case 1:
                converter = new Child1Converter();
                break;
            case 2:
                converter = new Child2Converter();
                break;
            default:
                throw new JsonReaderException();
        }
        var newReader = jobject.CreateReader();
        return converter.ReadJson(newReader, objectType, existingValue, serializer);
    }

