
// 子クラス専用のコンバータ Child2に対しても同様に定義する
class Child1Converter : JsonConverter
{
    public override bool CanConvert(Type objectType)
    {
        return objectType == typeof(Child1);
    }

    public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
    {
        JObject jobject = JObject.Load(reader);
        return new Child1()
        {
            Prop0 = (string)jobject["Prop0"],
            Prop1 = (int)jobject["Prop1"]
        };
    }

    public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
    {
        var child1Value = (Child1)value;

        writer.WriteStartObject();
        writer.WritePropertyName("ChildType");
        writer.WriteValue(1);
        writer.WritePropertyName("Prop0");
        writer.WriteValue(child1Value.Prop0);
        writer.WritePropertyName("Prop1");
        writer.WriteValue(child1Value.Prop1);
        writer.WriteEndObject();
    }
}

