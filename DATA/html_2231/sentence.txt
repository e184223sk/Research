More than 1 year has passed since last update.この記事ではサーバーサイドから PlayFab を利用する方法を紹介します。サーバーサイドの言語や FW は何でも良いのですが、今回は C# (ASP.NET Core) を使って Web API を用意してみます。サンプルでは用意した Web API を通して PlayFab の TitleInternalData（クライアントでは扱うことができない内部データ）を取得して表示します。対象読者は PlayFab やサーバーサイドの初心者の方です。
これらにある程度詳しい方には以下の 3 行の情報で事足りると思います。GameManager にログインして、自分のタイトルを開いて [歯車アイコン] を押します。
[タイトルの設定] を押します。
[シークレットキー] を押します。
[名前] に任意の名前を入力して [シークレットキーを保存] を押します。
発行されたシークレットキーを控えてこきます。
Visual Studio を起動して [新しいプロジェクトの作成] を押します。
[web] を検索して [ASP.NET Core Web アプリケーション] を選択して [次へ] を押します。
任意の [プロジェクト名] [場所] [ソリューション名] を入力して [作成] を押します。
[API] を選択して [作成] を押します。
暫く待つとプロジェクトが作成されてこのような画面が表示されます。
NuGet パッケージマネージャーを開きます。
[参照] を押してから [PlayFab] を検索します。
[PlayFabAllSDK] が表示されたら選択してインストールします。
[OK] を押します。
ソリューションエクスプローラーで [Controllers] を右クリックし、コントローラーを追加します。
[読み取り/書き込みアクションがある API コントローラー] を選択して [追加] を押します。
任意のコントローラー名を入力して [追加] を押します。
TitleDataController.cs を開いて using を追加します。TitleDataConrtoller.cs の最初の Get メソッドを下記の通りに書き換えます。Startup.cs を開いて using を追加します。Configure メソッドで PlayFab の接続情報（TitleID と SecretKey）を設定します。GameManager で タイトル内部データに任意のデータを登録します。
Visual Studio でデバッグ実行します。
ブラウザが起動したら /api/titledata へアクセスすると PlayFab から取得した TitleInternalData が表示されます。
Unity への導入も簡単ですがサーバーサイドへの導入も簡単ですね。
ゲーム以外の Web アプリなどのバックエンドとして使っても良いかなと思いました。


