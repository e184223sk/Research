
private async Task ReadCsvAsync()
    {
        if (!string.IsNullOrWhiteSpace(ImportPath))
        {
            var tempDatas = new ObservableCollection&lt;KenAllCSV&gt;();

            await Task.Run(() =&gt;
            {
                CultureInfo cultureInfo = new CultureInfo("ja-JP");
                using (var r = new StreamReader(ImportPath, Encoding.GetEncoding("SHIFT_JIS")))
                using (var csv = new CsvHelper.CsvReader(r, cultureInfo))
                {
                    // ヘッダーtrueはしない
                    // csv.Configuration.HasHeaderRecord = true;

                    //読み込み を先に行う
                    csv.Read();
                    // ヘッダー　を次に行う
                    csv.ReadHeader();

                    // マッピングルールを登録　は使用しない
                    //csv.Configuration.RegisterClassMap&lt;CsvMapperKenAll&gt;();

                    // データを読み出し
                    var records = csv.GetRecords&lt;KenAllCSV&gt;();

                    // DataGridに出力
                    tempDatas = new ObservableCollection&lt;KenAllCSV&gt;();
                    foreach (var record in records)
                    {
                        tempDatas.Add(new KenAllCSV()
                        {
                            PostalCode = record.PostalCode,
                            PrefectureKana = Microsoft.VisualBasic.Strings.StrConv(record.PrefectureKana, VbStrConv.Wide),
                            MunicipalityKana = Microsoft.VisualBasic.Strings.StrConv(record.MunicipalityKana, VbStrConv.Wide),
                            TownAreaKana = Microsoft.VisualBasic.Strings.StrConv(record.TownAreaKana, VbStrConv.Wide),
                            Prefecture = record.Prefecture,
                            Municipality = record.Municipality,
                            TownArea = record.TownArea,
                            TownAreaContainAnyPostalCode = record.TownAreaContainAnyPostalCode,
                            PostalCodeContainAnyTownArea = record.PostalCodeContainAnyTownArea
                        });
                    }
                }
            });

            AddressDatas = new ObservableCollection&lt;KenAllCSV&gt;(tempDatas);
        }
    }

