今回はC#を用いて、Android アプリを作成していきます。
（似たようなことが書かれた記事が既にあるため、今更感はありますが…）
Androidアプリで Hello Worldするだけならプロジェクトを作ってそのまま実行するだけで済むため、今回はもう少し動きを付けようかと思います。window10
Visual Studio
android7端末（android10端末を使用したら実行できなかった…）一から説明するとなるとVisual Studioのインストールからということになりますが、インストールの手順は以前に書いた記事があるため、今回は省きます。
androidアプリ用プロジェクトを作成するとなると、それ用のフレームワークが必要になるため、Visual Studioインストーラーを起動してダウンロードします。
「ツール」「ツールと機能を取得」を押下して、Visual Studioインストーラーを起動し、「.NETによるモバイル開発」をダウンロード、インストールします。

フレームワークのインストールが終わったら、プロジェクトを作成します。
今回作成するのは「Androidアプリ(Xamarin)」です。
androidのバージョンに関して、実機を使用する場合は、実機に合わせたバージョンを使用しましょう。（バージョンの縛りがいろいろあったかと思うので、うまくデバッグできない場合はいろいろ試してみると良いかと思います。）
プロジェクトを作成したら、その時点でHello Worldができる状態になっています。
ファイル構成に関しては、「/Resource/layout/」下に .xmlファイルがあり、デザインを見ながら編集することができます。
アプリに動きを付けたい場合は「MainActivity.cs」ファイルを編集するか、別の.csファイルを作成してロジックを作成します。デバッグの方法に関しては、エミュレータを使用する方法と実機を使用する方法があり、今回は実機を使用します。
エミュレータを使用する場合は、デバッグ時に上部の「Android Emulator」を選ぶと、PC内にandroidのエミュレータを作成することができます。
実機でデバッグする場合には「開発者オプション」と「USBデバッグ」を有効にする必要があります。
調べるとすぐわかるため、細かく書きませんが、設定画面のビルド番号を複数回押下すると開発者オプションが変更可能になり、開発者オプション内のUSBデバッグをONにすると準備が整います。
個人的には、エミュレータを使用しようとすると1GBぐらいダウンロードする必要があり、動きも重い印象があるため、実機でデバッグする方が楽かと思います。今回はコーディングでボタン押下時のイベントを追加しようかと思います。
既存の状態ではボタンがないため、「content_main.xml」のデザイン画面を開き、下記の様にRelativeLayout内にボタンを作成します。作成したボタンに動きを付けたいため、「MainActivity.cs」に書き込みを行います。
OnCreate()がアプリ起動時に走るため、その中にボタンのClickイベントを設定します。
表示画面上のボタンオブジェクトを取得するにはFindViewById()でボタンのidを指定してオブジェクトを取得し、.Clickイベントを設定します。
コードは下記の通りです。デバッグを実行すると、USBで接続しているandroid端末で今回作成したアプリが立ち上がり、動作を確認できます。実行結果は下記の画像の様になります。
下記はボタン押下時です。
因みに、スマートフォン上のアプリのロゴは下記の様な表示になります。
今回は自身で初めてスマートフォンアプリを作成しました。
androidアプリの作成ということならandroid studioでjavaを使えば良いという話になるのですが、筆者が所属している会社では、支給されているデバイスはiosで、社内でもandroidは使用されていないため、今回学習した内容を生かすということを考えるとjavaだと都合が悪いと思い、iosアプリもandroidアプリも作成できるC#について学び、記事にしました。
（筆者自身はandroid端末を四台も持っていますが、ios端末は会社支給の一台しか持っていません（笑））
Visual Studioを使用すればiosアプリも作成できるはずなので、いずれiosでも試そうかと思います。
また、せっかくスマートフォンアプリの作成方法について学んだので、今度はもっと複雑なロジックを作ってみようかと思います。あと、android10 の端末でデバッグ実行しようとしたら、エラーが出て実行できなかったので、いずれこの問題は解決しようかと思います。


