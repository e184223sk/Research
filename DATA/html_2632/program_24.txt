
public class UniTaskCallbackSample : MonoBehaviour
{
    void Start()
    {
        var token = this.GetCancellationTokenOnDestroy();
        SendGetSceneAsync(token).Forget();
    }

    // AutoResetUniTaskCompletionSource を利用する。
    // これはasync指定がなく、UniTaskを返す「普通のメソッド」。
    // 直接UniTaskのインスタンスを返しているので、awaitで待つことができる。
    public UniTask&lt;bool&gt; SendGetSceneAsync(CancellationToken token)
    {
        var utcs = AutoResetUniTaskCompletionSource&lt;bool&gt;.Create();
        HogeCB(input, r =&gt; utcs.TrySetResult(r));
        token.Register(() =&gt; utcs.TrySetCanceled()); // CancellationToken対応
        return utcs.Task;
    }

    Action&lt;bool&gt; callback;

    // コールバック方式の非同期メソッドの例
    void HogeCB(string input, Action&lt;bool&gt; onResult)
    {
        callback = onResult;
        Invoke("AfterWait", 3.0f);
    }

    void AfterWait()
    {
        callback(true);
    }
}

