More than 1 year has passed since last update.この記事は「Native C++ と C#ライブラリを CLI を使わずにどうしても連携させたい！！」という, とてもニッチな思いに応えるためのものです. 普通の人には必要のない技術情報です.  【DllExport】を利用して, .NETライブラリをC++から呼び出せるようにしてあげます.
なんてすばらしいアプリケーションなんだぁ～.最新版をダウンロードしておいてください.まず, VisualStudioを起動して, 【新しいプロジェクトの作成...】を押下します.
【Visual C#】→【クラス ライブラリ (.NET Framework)】→【OK】の順に押下します.
必要であれば, プロジェクト名やソリューション名も変更します.
以下のようなコードを記述します.
この時点ではエラーが発生していますが, あとで解消するので気にしないでください.
コピペ用ソリューションエクスプローラの【ソリューション】にカーソルを合わせて右クリックを押下し,
【エクスプローラーでフォルダーを開く】をクリックします.
フォルダが表示されると思いますので, DllExport.batをコピーします.
【PowerShell】または【コマンドプロンプト】を起動します.
サンプルではPowerShellを利用しています.【cd】コマンドを利用して, ソリューションファイルがあるフォルダに移動します.
エクスプローラのフォルダパスをクリックするとコピーできるので, それを貼り付けると楽ちんです.
【cd [フォルダパス]】と入力できたらEnterキーを押下して, 実行しましょう.
【./DllExport.bat -action Configure】と入力してEnterキーを押下します.
そうすると, 以下のようなウィンドウが起動するので,
【installed】→【(86+64)】→【Apply】の順に選択していきます.
すぐに実行が完了するので, VisualStudioに戻ります.
すると, 以下のようなアラートが出てくるので, 【すべて再読み込み】を選択します.
読み込みが完了すると先ほどまであったエラーが消えていると思います.
ここまでくれば, あとはビルドをするだけです！【ビルド】→【ソリューションのビルド】を選択してビルドします.
すると出力タブにビルドされたdllのパスが載っているので, そこをエクスプローラで開きます.
そこにdllの他に【x86】と【x64】フォルダができあがっています.
その中にあるdllがC++から直で呼び出せるようになっているので, C++から呼び出す際はこのフォルダ内のdllを利用します.
それぞれ【x86=32bit版】/【x64=64bit版】用なので, C++アプリでは適宜使い分けしてください.
まず, VisualStudioを起動して, 【新しいプロジェクトの作成...】を押下します.
【Visual C++】→【Windows コンソール アプリケーション】→【OK】の順に押下します.
必要であれば, プロジェクト名やソリューション名も変更します.
そうすると, 以下のような画面が表示されます.
おもむろにコードを修正します.
ついでに不要なコメントも削除しておきましょう.
コピペ用コードの編集が完了したら, サクッとビルドしてみます.
今回はx86でビルドしましたが, x64でも構いません. ただし, このサンプルとは利用するdllが異なりますのでその点は注意してください.
ビルドが完了すると出力タブに実行ファイルの出力先フォルダが表示されますので、そこをエクスプローラで表示します.
C#のdll(x86版)を実行ファイルのあるフォルダにコピーしてあげます.
そうしましたら, PowerShell or コマンドプロンプトを起動して, 実行ファイルのあるフォルダパスに cd コマンドで移動します.
移動できたら, exeを実行します.
そうすると, 以下のように, Netive C++ から C#ライブラリを呼び出すことに成功していることが確認できます.
C++からC#のライブラリを使いたいならC++/CLIを利用するのが一般的だと思いますが, さまざまな事由でそれができない場合があると思います. 私もその中の一人です.今回ご紹介したものは非常にニッチな技術なのであまり一般的ではないと思いますが, もし私のような状況におかれた方がいらっしゃいましたら, 利用してみてください.また, DllExport.batに関しては, 現状【C# + .NET Framework】のみ利用可能な感じでした. F#でも利用を試みましたが, 失敗に終わるという残念な結果となりましたが, リトライしてみようとは思います.
もちろん .NET Core には非対応でしたので, ご注意ください.今回の記事は 【Youtube Live】 で放送しながら調査したものをまとめたものとなっています.
記事にしないだけで, こんな感じの特殊な技術(ニッチな技術？)を調べたり, 普通にコーディングしたりしていますので, 興味がある方がいらっしゃいましたらぜひおこし下さい.また, 基本的に毎日放送しているので記事のことや.NET関連の質問等がある方は, コメント等でお気軽にご質問ください. 答えられる範囲でお応えいたします. 【ホームページ】にはE-mailアドレスも記載させていただいていますので, そちらから今回の記事以外のことでもご質問・ご意見等がございましたら, コンタクトしていただければと思います.


