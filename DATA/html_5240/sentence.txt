書籍を読んだり、ググったりして、自分に分かりやすいようにまとめた記事です。
より詳しく知りたい方は、下記の参考文献を読んでみてください。Clean Architecture　達人に学ぶソフトウェアの構造と設計 | Amazon
Adaptive Code　～　C#実践開発手法 | Amazon
C#の設計の基本【SOLID原則】まとめ
Unity開発で使える設計の話＋Zenjectの紹介
C# で SOLID の原則に違反する危険性それぞれの敵の行動パターンを管理する Shadow クラス、 Gigas クラス、 DarkInferno クラスを作成します。
（敵の元ネタはキングダムハーツです。分からない人はすみません…）
それぞれのクラスは、以下の行動を行います。もし変なところがあったら教えて下さい。
（特にクラス図とか…）


