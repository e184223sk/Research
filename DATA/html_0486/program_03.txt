
// イベント受け取る方
public class Subscriber
{
    // ISubscirberからIAｓｙncSubscirberに変更
    [Inject] private IAsyncSubscriber&lt;MyEvent&gt; _asyncSubscriber;

    public void Subscribe()
    {
        _asyncSubscriber
            .Subscribe(async (x, ctr) =&gt;
            {
                var time = Time.realtimeSinceStartup;

                // ここで非同期処理が可能
                // 大体1秒待機する
                await UniTask.Delay(TimeSpan.FromSeconds(1), cancellationToken: ctr);
                time = Time.realtimeSinceStartup - time;

                Debug.Log($"イベント受信完了 待機秒数: {time}秒");
            });
    }
}

