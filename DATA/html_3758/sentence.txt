More than 1 year has passed since last update.単体テストと副作用 - 第1話 はじまり
単体テストと副作用 - 第2話 オブジェクト指向
単体テストと副作用 - 第3話 DIとモック
単体テストと副作用 - 第4話 副作用の回避
単体テストと副作用 - 第5話 オブジェクト指向への反乱今度は失敗しないお(・ω・)
後で副作用をモックオブジェクトにすり替えることを意識して書くお。GitHubリンクまずはデータ型の種類を定義。続いて、値とデータ型の組である TypedValue を作る。
今度はコンソール出力を排除するお。ここからは、副作用を持つ機能を定義してゆく。
まずはインターフェイスから。そして、具象クラスを記述する。これで、一通りの機能が揃った。
では、これらを使うプログラム全体の流れを書いてみる。
今回は、コンソール入出力や指定時間待機を直接呼ばず、さっき定義したインターフェイスのみを使用するよ。これでプログラムは完成したお。
後はテストだけだね。
まずは TypedValue のテスト。
前回できなかった文字列表現のテストもできるよ。最後に、前回全くテストできなかった MainFlow のテストをやるお。(＾ω＾)副作用を完全に回避できたお。
もしも副作用の機能をテストしたいなら、ConsoleWrapper と TaskWrapper　を個別にテストすれば事足りるね。
やったお！
単体テスト完全に理解したお(・∀・)！『…きこえますか…今…あなたの頭の中の空洞に…直接呼びかけています…』とうとう脳味噌すら無くなったお…(´・ω・｀)『…今回のお題は基礎に過ぎません…いい気にならないでください…』それは薄々感じているので、大丈夫だお(´・ω・｀)『…次回はいよいよ最後の審判…最終回です…。愚かな人の子よ…反乱です…反乱を起こすのです…』なんか物騒なことを言い出したお。
何に対して反乱を起こせばいいのかな(・ω・)？『…あなた方の慣れ親しんだ概念…』『…C#とは切り離せない…重要なパラダイム…』『…"オブジェクト指向"に…反乱を起こすのです…』～ 次回へ続く ～単体テストと副作用 - 第1話 はじまり
単体テストと副作用 - 第2話 オブジェクト指向
単体テストと副作用 - 第3話 DIとモック
単体テストと副作用 - 第4話 副作用の回避
単体テストと副作用 - 第5話 オブジェクト指向への反乱


