
public AnalogWatchFaceEngine( CanvasWatchFaceService owner ) : base( owner ) {

    // CanvasWatchFaceServiceクラスを継承したオブジェクトの参照をセットします。
    this.owner = owner;
    // 時刻を更新する時の処理を構成します。
    updateTimeHandler = new Handler(
        message =&gt; {
            // Whatプロパティでメッセージを判別します。
            switch( message.What ) {
                case MessageUpdateTime:
                    // TODO : 時刻の更新のメッセージの時の処理を入れます。
                    // ウォッチフェイスを再描画します。
                    Invalidate();
                    // UpdateTimeHandlerを動作させるかどうかを判別します。
                    if( ShouldTimerBeRunning ) {
                        long timeMillseconds = DateTime.UtcNow.Ticks / TimeSpan.TicksPerMillisecond;
                        // delayMs = 更新間隔 - ( 現在時刻（ミリ秒） % 更新間隔) -&gt; 更新間隔との差
                        long delayMilliseconds = InteractiveUpdateRateMilliseconds - ( timeMillseconds % InteractiveUpdateRateMilliseconds );
                        // UpdateTimeHandlerにメッセージをセットします。
                        // SendEmptyMessageDelayedメソッドは指定した時間後にメッセージを発行します。
                        updateTimeHandler.SendEmptyMessageDelayed( MessageUpdateTime, delayMilliseconds );
                    }
                    break;
            }
        }
    );

    // TimeZoneReceiverのインスタンスを生成します。
    timeZoneReceiver = new TimeZoneReceiver(
        // BroadcastReceiver.OnReceiveメソッドの実行時に実行します。
        intent =&gt; {
            // 新しいタイムゾーンを設定します。
            nowTime.TimeZone = Java.Util.TimeZone.Default;
        }
    );
}

