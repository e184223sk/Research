More than 3 years have passed since last update.こんにちはー！ニアです。
今回はWatch Faceアプリのプログラムをコーディングしていきます。※Vol.2はコンテンツの量が多いので、2記事に分割しています。Watch Faceアプリのクラスは、CanvasWatchFaceServiceクラスを継承し、CanvasWatchFaceService.Engineの派生クラスの定義と、WallpaperService.Engineを作成するメソッドをオーバーライドしたもので構成されています。以下に、今回作成するプログラムでよく使用する名前空間を示します。よく使用する名前空間はusingディレクティブを利用すると、コードを短く記述することができ、便利です。まず、Watch Faceのサービスクラスを定義します。※本記事では「AnalogWatchFaceService」と名付けています。先ほど宣言したAnalogWatchFaceServiceクラスに、クラスの属性を追加して、AndroidのマニフェストのService要素を構成します。「Service」属性を追加し、LabelフィールドにWatch Faceの名前を、Permissionフィールドに「android.permission.BIND_WALLPAPER」1を設定します。「MetaData」属性を3つ追加します。1つは、引数に「android.service.wallpaper」を、Resourceフィールドに「@xml/watch_face」（※Vol2.で作成した、Resources/xml/watch_face.xmlが参照されます。）を指定します。残りの2つは、プレビュー画面に表示する画像のパスを指定します。※リソースのパスを指定する時、「-nodpi」などの修飾子は不要です。WallpaperServiceクラスに、1つのIntentフィルターを追加します。2.1.1.～2.1.3.のクラス属性をまとめると、以下のようなコードになります。設定したクラスの属性は、ビルド時にAndroidManufest.xmlへ統合されます。AnalogWatchFaceServiceクラスに、以下のようにメンバーを定義します。次に、Watch Faceの動作の要となるEngineクラスをAnalogWatchFaceServiceクラスの中に定義し、作成していきます。※本記事では「AnalogWatchFaceEngine」と名付けています。CanvasWatchFaceServiceクラスのOnCreateEngineメソッドを、AnalogWatchFaceServiceクラスでオーバーライドします。メソッド内では、AnalogWatchFaceEngineクラスのコンストラクター（※）を呼び出し、生成したインスタンスを返します2。※コンストラクターは3.4節で作成します。AnalogWatchFaceEngineクラスに、以下のようにメンバーを定義します。※TimeZoneReceiverクラスは3.3節で作成します。Xamarin.Androidでは、以下の3つの日付・時刻のクラス及び構造体を利用できます。但し、Android.Text.Format.TimeクラスはAndroid API Level 22以降では非推奨3となっているので、後者2つのいずれかを利用することをオススメします。Android Wearには「インタラクティブモード（Interactive mode）」と「アンビエントモード（Ambient mode）」の2つのモードがあります。インタラクティブモードは、Android Wearにおける通常のモードで、画面に触れたり、デバイスを傾けたりするとこのモードに移行します。アンビエントモードは、いわゆる省電力モードで、インタラクティブモードの状態から一定時間が経つとこのモードに移行します。Android Wearのデバイスによっては、アンビエントモード時にアンチエイリアスを無効にしたり、焼き付き防止の工夫をしたりする必要があります。BroadcastReceiverクラスを継承した派生クラスを、AnalogWatchFaceServiceクラスの外で作成します。
Action&lt;Intent&gt;型のデリゲート1つを定義し、オーバーライドしたOnReceiveメソッドで呼び出すように構成します。AnalogWatchFaceEngineクラスのコンストラクターを定義します。CanvasWatchFaceService型1つを引数4にとり、基底クラスのコンストラクターの引数に渡します。コンストラクターの中では、時刻を更新する時の処理を行うハンドラーと、タイムゾーンを変更した時に通知を受け取るレシーバーの初期化をします。※変数名は「nowTime」であるとします。Vol.2 : プログラム作成編（Page-2）に続きます。WallpaperServiceクラスを利用する時に必要です。 ↩CanvasWatchFaceService.Engineクラスは、WallpaperService.Engineを継承しています。 ↩Android.Text.Format.Timeクラスでは、2032年までしか扱えないためです。 ↩Watch Faceアプリにて、実際に受け取っているのは、AnalogWatchFaceServiceクラスのインスタンスです。 ↩


