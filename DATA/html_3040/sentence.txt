More than 1 year has passed since last update.夏休みの自由研究という名のお遊び。(僕たちはもう夏休みです！)大きく分けて問題が三つ
1. Cinema4D(モデリングソフト、有料版)等で作った3DモデルをUnityにインポート。当たり判定を付ける。
2. カメラについてマウスでFPSゲームみたいに視点を移動(一人称視点)
3. プレイヤーオブジェクトについて向いてる方向に移動
こんなんでゲームは作れそうです。モデリングソフト、ツールは問いませんが、オブジェクトファイルにエクスポートできると思います。Blenderで作ったモデルだとUnityはプロジェクトファイルのままでも読み込んでくれますがこれは使用しません。必ず一つのオブジェクトとしてエクスポートしてください。一つのオブジェクトとしてというのは一つのメッシュとしてというのと同義です。後でUnityに配置したときに以下のように子オブジェクトが一つであれば大丈夫です。
ファイル形式は.objを推奨します。(マテリアルは適応されません)このままではオブジェクトがすり抜けてしまいますので当たり判定を付けましょう。しかし、Unityではこの当たり判定の設定、勝手にやってくれないんです。そこで使うのがSAColliderBuilderというアセットです。アセットストアから「SAColliderBuilder」と検索すれば出てきます。Dawnloadしてimportしましょう。Sceneディレクトリ内に.objファイルをドラッグアンドドロップして、Hierarchyにそれを配置しましょう。この時2.1の画像のようになってればオッケーです。子オブジェクトが複数あるときは設定しなおしてください。子オブジェクト(2.1の画像ではdefault)を選択してください。右のInspectorにMesh FilterもしくはMesh Renderという項目がなければエクスポートからやり直してください。あればSAColliderBuilderは適応できます。選択した状態でInspectorの一番最後、Add Componentをおして検索窓からSAまで入れると何個かに絞られます。そこでSA Mesh Collinder Builderを選択しましょう。

追加されたコンポーネント内のShape TypeをMeshに、Mesh TypeをConvex HullにしたらProcessを押して適応を始めましょう。しばらくかかるので少し待ちましょう。

これで完了です。モデリングの仕方によって当たり判定の範囲が異なりました。特に階段など、一部を切り取る感じでモデリングすると変な当たり判定になります。ですが、当たり判定が想像していた形より小さくなることはないので、メッシュに埋まることはないと思います。一人称視点(追従)とマウスによる視点移動を実装します。まとめてCameraSetter.csというファイルにしてしまいましょう。Wキーで前に、Sキーで後ろに移動しましょう。三角関数を使うのでわからない人はggってね★カメラをプレイヤーオブジェクトの目の位置に設置して、CameraSetter.csをカメラにPlayerSetter.csをプレイヤーオブジェクトに適応しましょう。あとはそれぞれのInspectorで適応したファイルの設定をすませばOKです。あ、プレイヤーオブジェクトにリジッドボディのコンポーネントを付けるのを忘れないようにしてください。ということでこんなちょっとしたコードでFPSで大地を駆け回ることができました。キャラクターの動かし方ですが、AddForceでよかったのでしょうか？ちょっと違和感を感じます。(特にジャンプとか)
どなたか教えていただけると幸いです。ではよい夏休みを！
Twitter: https://twitter.com/Cyber_Hacnosuke (フォローしてくださいお願いします。)


