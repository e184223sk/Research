More than 1 year has passed since last update.Web APIを作成することになりました。「とりあえず動くもので良い」という指示が、とても不安です。絶対、仕様変更がたくさん入ります。というわけで、よくあるAPIバージョンをパスに入れてみることを検討することにしました。参考にしたのは次のURLです。Qiitaに近いhttp://qiita.com/api/v2/な感じのURLを目指すことにします。実は詳細なサンプルがあるので、これに倣います。
- Versioning via the URL PathASP.NET Core Web アプリケーション &gt; APIで、サンプルを含んだプロジェクトが作成されます。実行すると、https://localhost:44376/weatherforecastをブラウザで起動します。これを変更するには、プロジェクトのプロパティ &gt; デバッグ &gt; 「ブラウザーの起動」の値を設定することで実現できます。おもむろにservices.AddApiVersioning();をStartup.csのConfigureServicesに追加します。WeatherForecastController.csのWeatherForecastControllerクラスのパス（Route）を書き換えます。Qiitaのバージョン番号は整数のようですが、好みとしては小数点が入ってる方です。そこでとりあえず、1.0を設定してみます。ここで実行してみると、https://localhost:44376/weatherforecast（ポート番号は違うかもしれませんが）をブラウザで起動し、404エラーになります。が、構わずhttps://localhost:44376/api/v1.0/weatherforecastに接続してみると、正しくJSONデータが表示されるようになります。バージョン1.1を追加してみます。当然、同じメソッド名は使えないので、異なるメソッド名を作成し、1.1をマッピングするようです。結果が分かりやすいようRange(1, 5)をRange(1, 1)に変更してみました。で、https://localhost:44376/api/v1.1/weatherforecastにアクセスしてみると、先ほどは5データ返されていましたが、1データのみ返されるようになりました。成功、ですね。あまりに簡単でびっくりしました。
Microsoftさんすごい。


