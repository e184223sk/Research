GameManagerを用いた制作をよくするんですが、GameManagerに変数とか、プロパティとかをまとめていくと、段々ぐちゃぐちゃしてきませんか？

私はよくなっちゃうんですよね。
#regionでまとめちゃってもいいんですけど、なんとなくデータはデータだけでまとめちゃいたい！

・・・ってことで、データをまとめたクラスを別に作っちゃおう！ってお話です。
特に書くこともないので、ざっくりまとめちゃってます。
（ちょっと読みにくいかもしれないです・・・）

まずは、Dataクラスを作成します。
Dataクラスは、色々な場面で使用されるようなデータをまとめて管理するクラスです。

私は以下のような形で作ってます。
ここには、例えばキャラクターの基本パラメータ(移動速度、ジャンプ力など)、操作キーやTag名の情報、ゲーム全体に関わるフラグ管理なんかはまとめますが、プレイヤーが移動し続けている時間のような１つのクラスでしか使わないような情報はまとめずに、使うクラス上で定義してあげるといいと思います。（うまい例えが思いつかなくて、すみませｎ。。。）

では、GameManagerクラスから呼び出してみましょう。

呼び出し方は以下のようになります。
カンタンですね！
比較的、短く可読性も上がると思うので、オススメです！以下のようなクラスを作成して、inspectorにオブジェクトをアタッチします。次にDataクラスでは、以下のような部分を作成することで、Serializeクラスの情報をDataクラスから取得できるようにします。Serializeクラスからデータを取得するために、serializeDataという変数を用意し、OnStart()メソッドでSerializeクラスの情報を設定しています。呼び出しは先ほど同様、以下のように書くことで、使用できます。後半、書いているうちに時間が無くなっちゃって、ババっとまとめちゃったので読みにくいかもしれません！ごめんなさい！！！また、時間あるときに、文章は直しておきます！


