
public static MethodReference MakeHostInstanceGeneric(MethodReference @this, params TypeReference[] genericArguments)
{
    GenericInstanceType genericDeclaringType = new GenericInstanceType(@this.DeclaringType);
    foreach (TypeReference genericArgument in genericArguments)
    {
        genericDeclaringType.GenericArguments.Add(genericArgument);
    }

    MethodReference reference = new MethodReference(@this.Name, @this.ReturnType, genericDeclaringType)
    {
        HasThis = @this.HasThis,
        ExplicitThis = @this.ExplicitThis,
        CallingConvention = @this.CallingConvention
    };

    foreach (ParameterDefinition parameter in @this.Parameters)
    {
        reference.Parameters.Add(new ParameterDefinition(parameter.ParameterType));
    }

    foreach (GenericParameter genericParam in @this.GenericParameters)
    {
        reference.GenericParameters.Add(new GenericParameter(genericParam.Name, reference));
    }

    return reference;
}

