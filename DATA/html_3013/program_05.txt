
private static MethodDefinition DefineMain(ModuleDefinition mainModuleDefinition, ModuleDefinition systemModuleDefinition)
{
    MethodDefinition mainMethodDefinition = new MethodDefinition("Main", MethodAttributes.Static | MethodAttributes.Public, mainModuleDefinition.TypeSystem.Void);

    ParameterDefinition argsParameterDefinition = new ParameterDefinition("args", ParameterAttributes.None, new ArrayType(mainModuleDefinition.TypeSystem.String));
    mainMethodDefinition.Parameters.Add(argsParameterDefinition);

    MethodBody body = mainMethodDefinition.Body;
    ILProcessor processor = body.GetILProcessor();

    static bool Predicate(MethodDefinition method) =&gt; method.Name == "WriteLine" &amp;&amp; method.Parameters.Count == 1 &amp;&amp; method.Parameters[0].ParameterType.Name == "String";

    MethodReference writeLine = mainModuleDefinition.ImportReference(systemModuleDefinition.GetType("System", "Console").Methods.Single(Predicate));

    processor.Append(Instruction.Create(OpCodes.Ldstr, "Hello, world!"));
    processor.Append(Instruction.Create(OpCodes.Call, writeLine));
    processor.Append(Instruction.Create(OpCodes.Ret));

    return mainMethodDefinition;
}

