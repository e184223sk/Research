
private static void DefineConstructor(ModuleDefinition mainModuleDefinition, TypeDefinition serializer, TypeReference resolverTypeReference, FieldDefinition resolverFieldDefinition, MethodReference objectCtorImportReference)
{
    MethodDefinition constructorMethodDefinition = new MethodDefinition(".ctor", MethodAttributes.Public | MethodAttributes.HideBySig | MethodAttributes.RTSpecialName | MethodAttributes.SpecialName, mainModuleDefinition.TypeSystem.Void);
    ParameterDefinition resolverParam = new ParameterDefinition("resolver", ParameterAttributes.None, resolverTypeReference);
    constructorMethodDefinition.Parameters.Add(resolverParam);

    ILProcessor processor = constructorMethodDefinition.Body.GetILProcessor();
    // base呼び出し
    processor.Append(Instruction.Create(OpCodes.Ldarg_0));
    processor.Append(Instruction.Create(OpCodes.Call, objectCtorImportReference));

    // this.resolver = resolver;
    processor.Append(Instruction.Create(OpCodes.Ldarg_0));
    processor.Append(Instruction.Create(OpCodes.Ldarg_1));
    processor.Append(Instruction.Create(OpCodes.Stfld, resolverFieldDefinition));
    processor.Append(Instruction.Create(OpCodes.Ret));

    serializer.Methods.Add(constructorMethodDefinition);
}

