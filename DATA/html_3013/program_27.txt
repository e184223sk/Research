
public unsafe long TryWrite(Class1 value, byte* destination, long capacity)
{
    if (capacity &gt;= 7L)
    {
        *destination = 123;
        byte* intPtr = destination + 1;
        *intPtr = 88;
        byte* intPtr2 = intPtr + 1;
        *intPtr2 = 89;
        byte* intPtr3 = intPtr2 + 1;
        *intPtr3 = 90;
        byte* intPtr4 = intPtr3 + 1;
        *intPtr4 = 58;
        byte* ptr = intPtr4 + 1;
        capacity -= 5L;
        long num;
        if ((num = resolver.Get&lt;int&gt;().TryWrite(value.XYZ, ptr, capacity)) &gt;= 0 &amp;&amp; (capacity -= num) &gt;= 1)
        {
            ptr[num] = 125;
            return num + 0L;
        }
        return -6 + num;
    }
    return -7L;
}

