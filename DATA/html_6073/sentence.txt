More than 3 years have passed since last update.オブジェクト指向においては、内部の値を直接変更、参照することを避けるようにということはよく言われる。
あるクラスのメンバへの代入、参照を許さず、メソッドを通して代入、参照するようにする。
そのとき、どうやって値を設定・取得するようにするべきか考えてみる。仮で下記のようなIndexerのみのクラスを使用して色々試してみる。このクラスを使用する側はNameという文字列とLowerAddressというAddressを小文字化した文字列をインスタンスから引き出せるようにする。まず最初に考えるのがコンストラクタ内で全て値を入れておくパターン。プロパティであるもののメンバと変わらない。
今回であればあまり行数を必要とするコードではないので大丈夫だが、場合によってはコンストラクタ内のコードが大きく膨れ上がる可能性がある。コンストラクタ内の行数を少なくするためにメソッドに切り出してみた。これであれば行数が増えようと大丈夫。
ただし、インスタンスがただのデータ置き場のようになっている。privateなメンバに、加工に必要な値を保持し、それを使用して各メソッドで求める値を加工・参照する必要な値のみ保持し、必要な時に都度加工した値を参照できるようになった。C#ではGetterプロパティが使用できるのでメソッドではなくインスタンスのプロパティとしてアクセスできる形式に変えてみた。かなりスマートになってきた気がする。
この形式であればSingletonなんかも容易に行うことができる。加えてテストコードも書きやすい。基本的にコンストラクタで設定された値は最低限の加工でインスタンスのprivateなメンバとして保持し、各メソッド、プロパティで加工・参照を行う形がよさそう。


