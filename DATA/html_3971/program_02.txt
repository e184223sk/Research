
public class ChatteringFiltered
{
    public event PropertyChangedEventHandler PropertyChanged;

    public ReactiveProperty&lt;bool&gt; Sensor { get; private set; }

    private ReactiveProperty&lt;bool&gt; _chatteringSensor;

    public ChatteringFiltered(ReactiveProperty&lt;bool&gt; chatteringSensor)
    {
        Sensor = new ReactiveProperty&lt;bool&gt;(false);
        _chatteringSensor = chatteringSensor;

        _chatteringSensor
        //指定時間 Sensor_Chattering.Valueを溜めて
        .Buffer(TimeSpan.FromMilliseconds(3000))
        .Subscribe(list =&gt;
        {
            Console.WriteLine(
                DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss.fff")
                + " : Buffer.Subscribe list.Count = " + list.Count);

            if (list.Count == 0//つまり値の変化が無かった
            )
            {
                Sensor.Value = _chatteringSensor.Value;
            }
        });

        Sensor.Subscribe(_ =&gt; 
            Console.WriteLine(
                DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss.fff") 
                + " : Filtered ! : " + Sensor.Value)
        );

    }
}


