
public class ChatteringSensor : INotifyPropertyChanged
{
    public event PropertyChangedEventHandler PropertyChanged;

    public ReactiveProperty&lt;bool&gt; Sensor { get; private set; }

    public ChatteringSensor()
    {
        Sensor = new ReactiveProperty&lt;bool&gt;(false);

        Sensor.Subscribe(val =&gt; 
            Console.WriteLine(
                DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss.fff") 
                + " : Chattering ! : " + val)
            );

    }

    private IDisposable _chattering;

    /// &lt;summary&gt;
    /// チャタリング動作の模擬
    /// 一定時間Sensor_Chattering.Valueをガチャガチャします。
    /// &lt;/summary&gt;
    public void Start()
    {
        //値をガチャガチャする
        _chattering = Observable.Interval(TimeSpan.FromMilliseconds(500))
                .Subscribe(_ =&gt; Sensor.Value = !Sensor.Value);
    }

    public void Stop(bool lastValue)
    {
        //値をガチャガチャするやつを消す
        _chattering.Dispose();

        Sensor.Value = lastValue;
    }
}

