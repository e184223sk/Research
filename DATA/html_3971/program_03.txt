
public class ChatteringFiltered
{
    public event PropertyChangedEventHandler PropertyChanged;

    public ReactiveProperty&lt;bool&gt; Sensor { get; private set; }

    private ReactiveProperty&lt;bool&gt; _chatteringSensor;

    public ChatteringFiltered(ReactiveProperty&lt;bool&gt; chatteringSensor)
    {
        Sensor = new ReactiveProperty&lt;bool&gt;(false);
        _chatteringSensor = chatteringSensor;

        _chatteringSensor
        .Throttle(TimeSpan.FromMilliseconds(3000))
        .Subscribe(value =&gt;
        {
            Console.WriteLine(
                DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss.fff")
                + " : LatestValue = " + value.ToString());
            Sensor.Value = value;

        });

        Sensor.Subscribe(_ =&gt; 
            Console.WriteLine(
                DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss.fff") 
                + " : Filtered ! : " + Sensor.Value)
        );

    }
}



