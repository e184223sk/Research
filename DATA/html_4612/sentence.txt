More than 1 year has passed since last update.私は、.msi形式のインストーラが苦手です。別にそこまで嫌っている訳ではありませんが、「.exe形式のインストーラと.msi形式のインストーラのどちらがいいか」と訊かれたら、速攻で前者を選びます。

だって、msiのインストール面倒なんだもん！

いや、全部のmsiがそうだと言う訳ではなく、管理者権限が必要なmsiだと面倒だと言う話です。
Windowsを長く使っていた人なら、msiを普通にインストールしようとして、エラーを吐かれた経験が1度はあるかと思います。そう、.exe形式なら、右クリックして「管理者として実行」を選べば良いだけなのに…！一方でmsiの場合は、…という手順を踏まなければなりません。これは、msiexec.exeを呼び出すと同時にインストーラのパスを渡す、かつmsiexec.exeを管理者として実行する方法がほかにない為です。
管理者権限を持つコマンドプロンプトから呼び出してやれば、自ずとmsiexec.exeにも管理者権限が付与されるというワケ。

…いやいや、面倒すぎ。確かにそこまで手間ではないかもですけど、なんか釈然としない解決方法に思えます。あと、Windows 8や10なら 比較的簡単に管理者権限でコマンドプロンプトを実行できますが、Windows 7だとこれがまた少し手間なんですよね。msi形式のインストーラを何回もテストしなければならない開発者の方もいるはずですし、私としてもなんとかしたい…！
Microsoftも対処してくれない…！そこで、.msiファイルのコンテキストメニューに「管理者としてインストール」を表示する方法を模索してみます。まずは、msiexec.exeを呼び出す為のプログラムを書きます。C#で。
プログラム名は…EasyMsiでいいや。インストーラのパスをMain関数の引数として受け取り、そのままmsiexec.exeに横流しするプログラムです。
超短い上に、超シンプル。コンソールアプリケーションで書きましたが、コマンドプロンプトがいちいち表示されると鬱陶しいので、後からWindowsアプリケーションに変更します。これでコマンドプロンプトが表示されなくなります。これまた釈然としない方法ですが、ほかに有効策は見当たりませんでした。
ビルドしてできた「easymsi.exe」をPCのどこかに置いて完成。

あとは、コンテキストメニューをどうするかです。コンテキストメニューの操作といえば、やっぱりレジストリですよね。特定の拡張子にのみ対応するコンテキストメニューを編集したい場合は、HKEY_CLASSES_ROOTの中から該当のキーを探し出します。
msiの場合は、Msi.Packageキーがこれに該当します。Msi.Package\shellに、「runasadmin」キーを作成します。キーの値は「管理者としてインストール(&amp;A)」にします。アルファベットの前に&amp;を付加すると、そのアルファベットがショートカットキーとして認識されます。&amp;は表示されません。次に、runasadminキーの中に「Icon」文字列値を作成します。この値に画像のパスを入れてやれば、コンテキストメニューにアイコンが表示されるようになります。
今回は管理者権限の盾アイコンが欲しいので、Windows内蔵のimageres.dllを利用します。ここにはWindowsで使用されるアイコンがどっさり入っていて、盾アイコンは73番目に格納されています。という訳で、文字列値の値は「C:\Windows\System32\imageres.dll,73」にします。
imageres.dllは64bit版WindowsだとSysWOW64に入っていますが、自動でリダイレクトされるのでこのままでも問題ないはずです。最後に、runasadminキーの傘下に「Command」キーを作成します。キーの値は「"~\easymsi.exe" "%1"」にします。
~\easymsi.exeの部分にはeasymsi.exeのパスを入れます。
%1の部分には、右クリックしたファイルのパスが入るようになっているので、そのままeasymsi.exeに引数として送られます。最終的にこんな感じになるはずです。

この方法で行くと、easymsi.exeの場所は固定しておかなければなりません。また、そのパスをレジストリに登録しておく必要があります。となると、インストーラも用意した方が手っ取り早いですね。
easymsi.exeはProgram Filesにでも置いておいて、そのパスをレジストリに書き込む処理をしてやれば良いのです。という訳で、インストーラも作ってしまいましょう。
今回は、インストーラ作成ツールとしてInno Setupを採用しました。下記がそのスクリプトです。どうせなら英語にも対応してみたかったので、日本語でインストールするときは「管理者としてインストール(A)」を、英語でインストールするときは「Install as administrator」を表示するようにしました。
命令文の最後にLanguage: xxxオプションを付加すると、言語によって処理を切り替えられます。これを利用して、書き込むレジストリの値を変更します。アンインストール時にレジストリが削除されるよう、Flags: uninsdeletekeyも忘れずに。[Code]セクションでは、.NET Framework 4.6以降が入っていないときに警告を出すコードを書いてあります。これも見よう見まねですが、おそらく問題ないはず。あまり試してはいませんが…できた！先ほど手動で編集したレジストリを元に戻して、恐る恐るEasyMsiをインストールしてみると…おお！ちゃんと表示されています。これからはmsiとも仲良くやっていけそうな気がする。プログラム云々よりも、Inno Setupの扱いに手間取りました。Pascalとか書いた事ないし…このEasyMsiは無料で配布しますので、こちらからどうぞ。
Windows Vista以降、.NET Framework 4.6以降、そして0.7MBのディスク容量が必要です。一応ウイルスチェックはしてありますが、気になる方は自分でもウイルスチェックをお願いします。


