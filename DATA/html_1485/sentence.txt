タイトルの通りですが、ASP.NET Core Web API から Client Credentials Flowを使ってユーザー認証なしで Microsoft Graph API を呼び出してみます。Microsoft Graph API の呼び出しには Microsoft Graph SDK を利用します。User Principal Name を指定してユーザー情報を取得するシンプルな Web API を開発していきたいと思います。Azure Active Directory にアプリを新規登録して必要なアクセス許可を付与します。Visual Studio を開いて新しいプロジェクトを作成します。
ASP.NET Core Web API を選択して次へをクリックします。
プロジェクト名と場所を入力して次へをクリックします。
設定を確認して作成をクリックします。
Microsoft Graph SDK と MSAL.NET をインストールします。プロジェクト直下の appsettings.json を開いてアプリの登録で確認した アプリケーション (クライアント) ID/ディレクトリ (テナント) ID/クライアントシークレット（値） の情報を設定します。オプションパターンを使用して appsettings.json に設定した情報を取得するため。AzureAdAppSettingsOptions クラスを追加して Startup クラスの ConfigureServices メソッドを修正します。Microsoft Graph Client のインスタンスを作成するために IAuthenticationProvider の実装を用意します。参照Graph API からのレスポンスを受け取るためのクラスを用意します。DI のためにインターフェースを用意します。Microsoft Graph Client を生成して Graph API を呼び出すサービスクラスを用意します。サービスを呼び出すコントローラーを用意します。DI のために AddSingleton を追加します。シングルトンにしておくとアクセストークンの期限内は既存のアクセストークンを利用し、期限が切れると自動的に新規のアクセストークンを取得してくれます。（AddScoped AddTransient にするとリクエストのたびにアクセストークンを新しく取得します）デバッグ実行後、以下の URL にアクセスしてユーザー情報が返ってくることを確認します。（user@example.com の部分は実在する User Principal Name に置き換えてください。IIS Express で実行した場合は正しいポート番号を正しい番号に置き換えてください。）


