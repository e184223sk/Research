・はじめに
・Windowsフォームアプリ作成結果
・フォームアプリ作成準備
・C#プログラム　BLE対応のEnOceanスイッチ_Easyfit(EWSDB)を購入した。
　まずは前回にあるように動作確認してみた。
https://qiita.com/get_itchy_feet/items/0e29cda011fce7da7b73
　このデバイスの詳細はスイッチサイエンスさんのホームページにある。
https://www.switch-science.com/catalog/6526/
　今回はこの動画の後半にあるようなスイッチを押したことがわかるアプリの作成を行いたい。
　スマホのアプリは作成できないため、PCアプリで作成を行う。UWPとかもわからんのでフォームアプリである。　実際に作成したアプリは以下の通りである。
スイッチサイエンスさんでEnOcean BLE スイッチ Easyfit(EWSDB)を買ってみたhttps://t.co/1WWYqH44zZWindowsでBLEを受信できるようにアプリを作成してみたが、感度がすごく悪い。こんなものなのかなあ…。 pic.twitter.com/NJNbyQgAw1　アドバタイズパケットに含まれているデータから目的のデータ（SwitchStatus）を取り出したい。
　まずはManifacture Dataを取り出す必要がある。
　以下の記事にアドバタイズパケットの中身の詳細があるので参考にした。
　https://qiita.com/gebo/items/2e51bebd3d26a3025d9f
　
　BLEの送受信は以前に以下の記事でやってみている。
　https://qiita.com/get_itchy_feet/items/a61c49fed9c9fe46b5f0
　ただし、今回はScanのみである。
　まずは【Microsoft Visual Studio Community 2019】から新しいプロジェクト【Windowsフォームアプリケーション .NET Framework】を作成する。使用する言語は【C#】となる。
　BLEを扱えるようにするために【Microsoft.Windows.SDK.Contracts】アドオンをいれる。
　
　以下のようにフォームアプリをデザインする。
　テキストボックスにデバイスアドレス（スイッチの裏面に記載のあるID）を記入
　→【Scan Start】ボタンをおすと、Scanを開始し、スイッチからのデータが受信できるようになる。
　→スイッチを押すと押された場所に該当するPicture Boxの色が灰色から青に変わる。スイッチを離すと灰色に戻る。
　実際のFormのプログラムは以下の通りである。　ボタンが押されるとテキストボックスの中身を読み込み、ulong型に変換する。
　WatcherのStatusの中身を確認し、Scan中ならScanをやめ、Scanしていない場合は【BleScanStart()】でScanを開始する。あと終了作業中及びエラー発生時というステータスがあるらしいが、この場合にどうすればよいんかわからなかったため、何も起こらないようにした。
　スキャンを開始すると、周囲のBLEデバイスのアドバタイズデータを取得し始める。
　スキャン要求もできるようにしているが、必要かどうかがわからない。たぶん必要ないと思われる。
　デバイスのアドレスが Easyfit(EWSDB)のアドレスと合った場合にManifactureDataを取得する。Statusは4番目に格納されているため、4番目のデータの中身を確認し、4つあるPicture Boxに反映させている。　以上である。
　アドバタイズデータの取得に関してはWindowsよりAndroidとかのほうが安定していそうな感じではあるな。
　


