    float Calculate(double X, double Y)
    {
        float s= (float)Math.Sin(X*5);
        float s1 = 1 + (float)0.05 *UnityEngine.Random.value + (float)0.05 *(float)s;
        //float s1 = UnityEngine.Random.value;
        return s1;
    }
    IEnumerator UpdateTerrainCoroutine()
    {
        var heights = new float[terrainData.heightmapWidth, terrainData.heightmapHeight];
        while (true)
        { 
            renderArea *= 0.98;
            var startX = baseX - renderArea / 2.0;
            var startY = baseY - renderArea / 2.0;
            var renderAreaPerWidth = renderArea / terrainData.heightmapWidth;
            var renderAreaPerHeight = renderArea / terrainData.heightmapHeight;
            for (int x = 0; x &lt; terrainData.heightmapWidth; x++)
            {
                for (int y = 0; y &lt; terrainData.heightmapHeight; y++)
                {
                    heights[x, y] = Calculate(
                        startX + x * renderAreaPerWidth,
                        startY + y * renderAreaPerHeight);
                    heights[x, y] = heights[x, y]/ 2;
                }
            }
            terrainData.SetHeights(0, 0, heights);
            yield return null;
        }
    }
}

