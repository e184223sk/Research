More than 3 years have passed since last update.こちらの記事を参考に、C#で点と扇形の内外判定を実装してみました。
[Python3]2次元平面の扇型の内外判定 - Qiita流れとしてははじめに貼ったリンクの通りではあるのですが、一応解説です。まず扇型を元となる円の内部にあるかどうかを判定します。三平方の定理から判定しています。引数からこんな感じで扇型の形が決まります。外積(GetCross2d(Vector2 a, Vector2 b))を計算すると、ベクトルaからみてベクトルbがどちら側にあるかを判定することができます。まずif (GetCross2d(startVec, endVec) &gt; 0)が真であれば、endVecはstartVecより左側、つまり扇型の角度は180度以下であることが分かります。
上の図でいうと、赤い線がstartVecで、青い線がendVecです。次に、それぞれの場合においても判定していきます。startVecよりも、原点から判定したい点に伸びるベクトルが左側にある
かつ
endVecよりも、原点から判定したい点に伸びるベクトルが右側にある
時、点は扇型の内部にあると言えます。さっきの逆で、
startVecよりも、原点から判定したい点に伸びるベクトルが右側にある
または
endVecよりも、原点から判定したい点に伸びるベクトルが左側にある
時、点は扇型の内部にあると言えます。EditModeでテストを書いてみました。
あんまり書き方わかってないのでアドバイスとかあればお待ちしております。
当たり前の話なんですけど、一回通ったテストがあると、リファクタリングとか最適化がやりやすかったです。EditModeの使い方は、Editorフォルダ以下にコードを置く方法と、Assembly Definition Filesを使う方法があります。
詳しくはこちらを参照してください。
Unity2017.3のAssembly Definition Filesを適切に設定してコンパイルにかかる時間を削減する - Qiita


