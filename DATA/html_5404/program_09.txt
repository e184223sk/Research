

    public class BulletModel : MonoBehaviour
    {

        private Transform mTrans;
        private Rigidbody mRigid;

        void Awake()
        {
            mTrans = GetComponent&lt;Transform&gt;();
            mRigid = GetComponent&lt;Rigidbody&gt;();
        }

        // 攻撃力
        private int mAttackValue;

        //------------------------
        // 初期化・休眠・再活性化 //
        //----------------------------------------------------------------------------------------

        // 休眠状態
        private bool mIsSleep;
        public bool IsSleep { get { return mIsSleep; } }

        /// &lt;summary&gt;
        /// 生成時の初期化
        /// &lt;/summary&gt;
        /// &lt;param name="attackValue"&gt;攻撃力&lt;/param&gt;
        /// &lt;param name="bulletSpeed"&gt;弾の速さ&lt;/param&gt;
        public void Spawn(int attackValue, float bulletSpeed)
        {
            mIsSleep = false;
            mAttackValue = attackValue;
            mRigid.velocity = mTrans.forward * bulletSpeed;
        }

        /// &lt;summary&gt;
        /// 休眠状態から再活性化の初期化
        /// &lt;/summary&gt;
        /// &lt;param name="attackValue"&gt;攻撃力&lt;/param&gt;
        /// &lt;param name="bulletSpeed"&gt;弾の速さ&lt;/param&gt;
        /// &lt;param name="position"&gt;リスポーン位置&lt;/param&gt;
        /// &lt;param name="rotation"&gt;リスポーン角度&lt;/param&gt;
        public void Respawn(int attackValue, float bulletSpeed, Vector3 position, Quaternion rotation)
        {
            gameObject.SetActive(true);
            mTrans.SetPositionAndRotation(position, rotation);
            mIsSleep = false;
            mAttackValue = attackValue;
            mRigid.velocity = mTrans.forward * bulletSpeed;
        }

        public void Sleep()
        {
            mIsSleep = true;
            mRigid.velocity = Vector3.zero;
            gameObject.SetActive(false);

            // FireControllerに通知
            dOnSleep();
        }

        //-------------
        // デリゲート //
        //----------------------------------------------------------------------------------------

        private delegate void OnSleep();
        private OnSleep dOnSleep;

        public void SetDelegate(FireController fireController)
        {
            dOnSleep = fireController.OnSleepBullet;
        }

    }


