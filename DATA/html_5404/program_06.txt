

        // 発射地点のTransformから正面方向に1.0f進んだ座標に弾を生成する
        private readonly float BULLET_OFFSET = 1.0f;

        // 生成された弾オブジェクトをプーリング
        private List&lt;BulletModel&gt; mBulletList = new List&lt;BulletModel&gt;();

        // 弾の攻撃力
        private int mBulletAttack = 10;

        // 弾の速さ
        private float mBulletSpeed = 40.0f;

        /// &lt;summary&gt;
        /// 弾オブジェクトの生成
        /// &lt;/summary&gt;
        private void CreateBullet()
        {
            // 休眠状態の弾オブジェクトがある場合はそれを再利用する
            foreach(BulletModel model in mBulletList)
            {
                if (model.IsSleep)
                {
                    model.Respawn(mBulletAttack, mBulletSpeed, mTransFirePoint.position + mTransFirePoint.forward * BULLET_OFFSET, mTransFirePoint.rotation);
                    return;
                }
            }

            // 再利用できるオブジェクトが無かった場合は新しく生成してリストに格納する
            GameObject bulletGo = Instantiate(mBulletPrefab, mTransFirePoint.position + mTransFirePoint.forward * BULLET_OFFSET, mTransFirePoint.rotation) as GameObject;
            bulletGo.transform.parent = mTransBulletGroup;
            BulletModel bulletModel = bulletGo.GetComponent&lt;BulletModel&gt;();
            bulletModel.SetDelegate(this);
            bulletModel.Spawn(mBulletAttack, mBulletSpeed);
            mBulletList.Add(bulletModel);
        }


