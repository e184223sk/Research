
using MagicOnion;

// MessagePack.UnityShims を利用することで、
// Unity の Vector3 や Quaternion を通信でやり取りすることが可能になる
using UnityEngine;

using MessagePack;
using System.Threading.Tasks;

// サーバで gRPC が実行された際に、
// 実行結果をクライアントに返すためのコールバック関数を定義する
public interface IGamingHubReceiver
{
    void OnJoin(Player player);
    void OnLeave(Player player);
    void OnMove(Player player);
}

// クライアントがサーバ側で gRPC 実行可能な関数を定義する
public interface IGamingHub : IStreamingHub&lt;IGamingHub, IGamingHubReceiver&gt;
{
    Task&lt;Player[]&gt; JoinAsync(string roomName, string userName, Vector3 position, Quaternion rotation);
    Task LeaveAsync();
    Task MoveAsync(Vector3 position, Quaternion rotation);
}

// gRPC 通信で独自に定義したメッセージ Player を扱うための宣言
// Player はプレイヤー名, 位置(Vector3), 回転(Quaternion) の変数を所持している
[MessagePackObject]
public class Player
{
    [Key(0)]
    public string Name { get; set; }
    [Key(1)]
    public Vector3 Position { get; set; }
    [Key(2)]
    public Quaternion Rotation { get; set; }
}

