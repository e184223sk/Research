
public class MacroCommand : ICommand
{
    private Stack&lt;ICommand&gt; commands = new Stack&lt;ICommand&gt;();

    // 実行
    public void Execute()
    {
        if (commands.Count &gt; 0)
        {
            IEnumerator enumerator = commands.GetEnumerator();
            while (enumerator.MoveNext())
            {
                ICommand obj =(ICommand)enumerator.Current;
                obj.Execute();                
            }
        }
    }

    // 追加
    public virtual void Apppend(ICommand addCommand)
    {
        if (addCommand != this) commands.Push(addCommand);
    }

    // 削除
    public void Undo()
    {
        if (commands.Count &gt; 0) commands.Pop();
    }

    // 全件削除
    public void Clear() =&gt; commands.Clear();
}

