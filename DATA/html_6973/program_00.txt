using System.Collections.Generic;
using static System.Console;

class SamplePG
{
    static void Sample()
    {
        //約数を算出したい値
        long N = 100;
        //算出した約数を格納するリスト
        List&lt;long&gt; ans = new List&lt;long&gt;();

        //--------
        //約数列挙
        //--------
        //iが割り切れたらiの2乗も割り切れるので、Forループの条件はi*iで加算していくように設定する
        //大きな値にも対応できるようlong型でループする
        for (long i = 1; i * i &lt;= N; i++)
        {
            if (N % i == 0)
            {
                //iの値が割り切れるなら約数なのでリストに追加
                ans.Add(i);

                //iと(N/i)が同じ値でない時は(N/i)の値もリストに追加する(約数である)

                //ex:N=100のとき、i=2,N/i=50
                //ex:N=100のとき、i=10,N/i=10

                //↑昇順と降順で走査してるのでいずれ値がぶつかる。
                //ぶつかった値を入れてしまうと同じ値が二重にリストに追加されてしまうのでそれを避ける。
                if (i != N / i)
                {
                    ans.Add(N / i);
                }
            }
        }

        //リストを昇順にならべかえ
        ans.Sort();

        //順番に出力
        foreach (var item in ans)
        {
            WriteLine(item);
        }
    }
}

