
protected override void  SetVAO()
{
    GL.GenVertexArrays( 1, out Buf.VaoHandle[ 0 ] );
    GL.BindVertexArray( Buf.VaoHandle[ 0 ] );

    GL.BindBuffer( BufferTarget.ArrayBuffer, Buf.VboID[ 0 ] );

    int  pnt0Location  = GL.GetAttribLocation( fProgramObj.ShaderProgramID(), "vertPnt0"  );
    int  pnt1Location  = GL.GetAttribLocation( fProgramObj.ShaderProgramID(), "vertPnt1"  );
                          :
    int  pnt12Location = GL.GetAttribLocation( fProgramObj.ShaderProgramID(), "vertPnt12" );
    int  pnt13Location = GL.GetAttribLocation( fProgramObj.ShaderProgramID(), "vertPnt13" );

    GL.EnableVertexAttribArray( pnt0Location  );
    GL.EnableVertexAttribArray( pnt1Location  );
                          :
    GL.EnableVertexAttribArray( pnt12Location );
    GL.EnableVertexAttribArray( pnt13Location );

    GL.VertexAttribPointer( pnt0Location,  3, VertexAttribPointerType.Float, false, VertexInfo.Length, 0 );
    GL.VertexAttribPointer( pnt1Location,  3, VertexAttribPointerType.Float, false, VertexInfo.Length, ( Vector3.SizeInBytes * 1  ) );
                          :
    GL.VertexAttribPointer( pnt12Location, 3, VertexAttribPointerType.Float, false, VertexInfo.Length, ( Vector3.SizeInBytes * 12 ) );
    GL.VertexAttribPointer( pnt13Location, 3, VertexAttribPointerType.Float, false, VertexInfo.Length, ( Vector3.SizeInBytes * 13 ) );

    GL.BindVertexArray( 0 );
}

