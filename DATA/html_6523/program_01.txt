

        /// &lt;summary&gt;
        /// Gets the set of &lt;see cref="IWebHookFilterProvider"/&gt; instances discovered by a default 
        /// discovery mechanism which is used if none are registered with the Dependency Injection engine.
        /// &lt;/summary&gt;
        /// &lt;returns&gt;An &lt;see cref="IEnumerable{T}"/&gt; containing the discovered instances.&lt;/returns&gt;
        public static IEnumerable&lt;IWebHookFilterProvider&gt; GetFilterProviders()
        {
            if (_filterProviders != null)
            {
                return _filterProviders;
            }

            IAssembliesResolver assembliesResolver = WebHooksConfig.Config.Services.GetAssembliesResolver();
            ICollection&lt;Assembly&gt; assemblies = assembliesResolver.GetAssemblies();
            IEnumerable&lt;IWebHookFilterProvider&gt; instances = TypeUtilities.GetInstances&lt;IWebHookFilterProvider&gt;(assemblies, t =&gt; TypeUtilities.IsType&lt;IWebHookFilterProvider&gt;(t));
            Interlocked.CompareExchange(ref _filterProviders, instances, null);
            return _filterProviders;
        }

