More than 1 year has passed since last update.これは私がILについて調べたことを忘れないようにメモする場所です。前提知識が確実に欠如しております。
間違いがございましたらご指摘お願いします。
特に明示しない場合は .NET Framework 4.8 を使い、規格はECMA-335に準ずるものとします。
どんどん更新していきます。（気分次第）のTは!0になる。よって上記のコードは簡単に書くと※C`1&lt;T&gt;はC&lt;T&gt;でもOK。ただし、class C&lt;T&gt;とclass Cが両方あると.NET言語では片方しか参照できない。最初に書いた方が参照できる。ECMA-335 II.7.1 Types では、型定義のジェネリックパラメータは'!' Int32、メソッド定義のジェネリックパラメータは'!!' Int32となっている（Int32は0から数えたindex）。つまり、Class&lt;T,U&gt;.Method&lt;V&gt;()があったとすると、Tは!0、Uは!1、Vは!!0となる。SharpLabで見てみると ldtoken !Tとかldtoken !!Vとかになってるじゃないですか！　ldtoken !0、ldtoken !!0じゃないの？ilasm.exe で以下のようなコードをコンパイルしてみた。え、普通にいけるやん……。
ECMA-335ではこんな記法書いてなかったんだけどな……。ジェネリクスの共変性・反変性については MSDN を参照。
※ MSDN の タイトルは「ジェネリックの共変性と反変性」になってるけど、元（英文）だと "Covariance and Contravariance in Generics" だから、ジェネリクスじゃないかな？ジェネリクスの共変性・反変性は、C# では &lt;in T&gt; や &lt;out T&gt; に当たる。
ECMA-335 II.9.5 Generics variance によると、&lt;out T&gt; は &lt;+T&gt;、&lt;in T&gt; は &lt;-T&gt; と書くらしい。では、I`1&lt;+T&gt; は、 I`1&lt;string&gt; → I`1&lt;object&gt; の代入はできて、 I`1&lt;object&gt; → I`1&lt;string&gt; の代入はできないはず。 あら？ できた……。なんで例外吐かないの？もちろん、C# ではコンパイルエラーになる。
確かめるために近似したコードを書いてコンパイルしてみる。コンパイルエラー。


