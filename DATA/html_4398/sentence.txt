More than 1 year has passed since last update.※この記事は【VB6・VB】古いコードのリプレース のシリーズその１です。まあVB6ではよくあるパターン。むしろ無いほうが珍しい。
VB6には表みたいな機能がろくになかったので、表のようにラベルやテキストをコントロール配列でぺたぺた貼ってぐるぐる回して処理してたんですよねー。※以下、"Button1","Button2","Button3"という名前のボタンコントロール３つが画面で宣言されており、
これをコントロール配列として扱いたいとする。大体はこれで解決するんですが、コメント内にあるように、いくつか注意点があります。1.順番を考慮して配列にセットする必要がある2.イベントをまとめたい場合、ForEachで回す以外方法がない3.イベント内で配列の何番目かを取得するには、実際に配列の中身を探しに行かなくてはいけない以下、注意点について追記します。このうち１が多分一番面倒。場合によっては何百個も入れることになるので、手書きは辛い。
ということで以下に自動で配列に入れる例を紹介します。特定の条件を満たすものを自動で配列に入れたい！
全て手動で配列に入れるにはたくさんあって面倒！そういうときはこんな感じ。こうやって条件に合うコントロールだけを配列に入れていけば良い。
例では、"B"から始まるボタンコントロールをタブインデックス順に放り込んでいる。＊なお、Me.Controlsから取得するControlCollectionクラスはIEnumerable(Of T)を実装してないので全部まとめるのは無理。追記：Me.ControlsはIEnumerable(Of T)は実装していませんが、IEnumerableは実装しています。
IEnumerableにはOfTypeやCastメソッドが用意されており、これはIEnumerable(Of T)を出力します。
そのため、以下のように全てラムダ式に書き換えることが可能です。
System.Linqを宣言しておくことまた、2.は割とどうしようもないです。
全てのイベントを取得し、そのうち使用されているものだけを探す…ような処理自体はあるみたいですが、かなりややこしいです。
結局１つ１つ書くほうが早いです。3.もこれ以上の短縮は面倒です。
どうしても短縮したい場合は、Indexを保存した拡張コントロールを作成して、それに全部差し替えることになると思います。
(TagやTabIndexなどに配列のインデックスとなる値を入れておくというズルはできますが、デザイナから変えられるため確実性が無い。)


