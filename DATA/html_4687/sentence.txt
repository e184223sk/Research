More than 3 years have passed since last update.ASP.NET MVCでWebアプリのプロジェクトを作った時、デフォルトのルーティングルールはApp_Start/RouteConfig.csに書かれています。内容は以下の通り。しかしこれは柔軟性が低いです。まずidはすべてのハンドラに必要ではありません。しかしこのままではすべてのハンドラでid付きでアクセスできてしまいます。そのような違いをMapRouteをモリモリ追加していくことで表現できるんですが複雑で読みづらくなります。デフォルトのまま運用しているところも多いのでは。もちろんこれだけでなく、属性ベースのルーティングが採用できます。以下の通り。MapMvcAttributeRoutesを指定すると、Route属性やRoutePrefix属性が指定でき、パスを任意のパラメータとして指定できるなどとても便利です。というわけで属性だけでいいじゃんと思うんですが、これを併記したらどうなるかを調べました。なんとなく両方のパスでアクセスできるんじゃないかと考えたんですがどうなるでしょうか。MapRouteの後にMapMvcAttributeRoutesをコール。というわけで併用できません。ちなみにRazorの@Html.ActionLink()はアクセス不可でも動いてくれます。MapRouteの方で。だからなんだという感じですが。MapRouteより先にMapMvcAttributeRoutesをコール。併用できました。Route属性の有無でどちらが適用されるか変わります。片方しか適用されないのは理想的ですね。ただしRoute属性なし,RoutePrefix属性のみだとRoutePrefix属性が無視されるので、うっかりRoute属性を省略するとPrefix通りにアクセスできません。
@Html.ActionLink()もちゃんと動いてくれます。上記の通りできるとはいえ、併用すると書く場所が発散しちゃうのでできるだけMapRoute側をシンプルに保つなどの工夫が必要です。調べるきっかけになった記事。
https://exceptionnotfound.net/attribute-routing-vs-convention-routing/


