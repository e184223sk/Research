
/// &lt;summary&gt;タスク拡張&lt;/summary&gt;
public static class TaskEx {

    /// &lt;summary&gt;休止間隔&lt;/summary&gt;
    private const int Tick = 16;

    /// &lt;summary&gt;1フレーム待機&lt;/summary&gt;
    public static Task DelayOneFrame =&gt; Task.Delay (Tick);

    /// &lt;summary&gt;条件が成立する間待機&lt;/summary&gt;
    public static async Task DelayWhile (Func&lt;bool&gt; predicate) {
        while (predicate ()) {
            await Task.Delay (Tick);
        }
    }

    /// &lt;summary&gt;条件が成立するまで待機&lt;/summary&gt;
    public static async Task DelayUntil (Func&lt;bool&gt; predicate) {
        do {
            await Task.Delay (Tick);
        } while (!predicate ());
    }

}

