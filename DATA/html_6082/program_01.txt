
using AdvanceSoftware.VBReport8;
using System.Windows;
using System.Windows.Controls;

namespace VbReportSampleApp.Views
{
    /// &lt;summary&gt;
    /// ViewerControlEx.xaml の相互作用ロジック
    /// &lt;/summary&gt;
    public partial class ViewerControlEx : UserControl
    {
        public ViewerControlEx()
        {
            InitializeComponent();
        }

        public Document Document
        {
            get { return (Document)GetValue(DocumentProperty); }
            set { SetValue(DocumentProperty, value); }
        }

        // Using a DependencyProperty as the backing store for Document.  This enables animation, styling, binding, etc...
        public static readonly DependencyProperty DocumentProperty =
            DependencyProperty.Register("Document", typeof(Document), typeof(ViewerControlEx), new PropertyMetadata(null, new PropertyChangedCallback(OnDocumentChanged)));

        private static void OnDocumentChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)
        {
            var ctrl = d as ViewerControlEx;
            if (ctrl == null) return;

            ctrl.viewer.Document = e.NewValue as Document;
        }

    }
}

