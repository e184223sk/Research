

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class SceneMain : MonoBehaviour
{

    private GameController mGame;
    [SerializeField]
    private BlockManager mBlock;
    [SerializeField]
1:  private UiManager mUi;

    void Awake()
    {
        mGame = GameController.Instance;
        mGame.Init();
    }

    //-------------
    // 状態と更新 //
    //---------------------------------------------------------------------------------

    private enum STATE
    {
        LOADING = 0,
        WAIT_START,
        PLAY,
        RESULT
    }
    private STATE mState = STATE.LOADING;

    void Update()
    {
        switch (mState)
        {
            // ステージ生成
            case STATE.LOADING:
                LoadStage();
                break;
            // スタートボタンが押されるまで何もしないで待機（取り外してOK）
            case STATE.WAIT_START:
                break;
            // プレイ中：ゲームの終了条件を監視し、終了でない場合はプレイヤーの入力を受け付ける
            case STATE.PLAY:
                if (mBlock.IsGameClear)
                {
                    EndGame(true);
                    return;
                }
                if (mBlock.IsGameOver)
                {
                    EndGame(false);
                    return;
                }
                mBlock.CheckMouseInput();
                break;
            // 結果表示中:
            case STATE.RESULT:
                break;
        }
    }

    //---------------------
    // ゲームの開始と終了 //
    //---------------------------------------------------------------------------------

    private void StartGame()
    {
        mUi.RenewStartText("RESET", "red");
        mState = STATE.PLAY;
    }

    private void EndGame(bool clearFlg)
    {
        if (clearFlg)
        {
            mUi.ShowResultText("GAME CLEAR!");
        }
        else
        {
            mUi.ShowResultText("GAME OVER");
        }
        mState = STATE.RESULT;
    }

    //-----------------
    // ステージの生成 //
    //---------------------------------------------------------------------------------

    private void LoadStage()
    {
        int gameLevel = GameController.LEVEL_EASY;
        mBlock.CreateField(gameLevel);
        mUi.RenewStartText("START", "blue");
        mState = STATE.WAIT_START;
    }

    //-----------
    // 入力待機 //
    //---------------------------------------------------------------------------------

    public void OnStart()
    {
        switch (mState)
        {
            case STATE.WAIT_START:
                StartGame();
                break;
            case STATE.PLAY:
            case STATE.RESULT:
                break;
        }
    }

}


