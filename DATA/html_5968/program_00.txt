using Reactive.Bindings;
using Reactive.Bindings.Extensions;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reactive.Linq;

namespace AllowOnlyOneOpen.Extensions
{
    public static class Ext
    {
        public static IDisposable AllowOnlyOneTrue(this IEnumerable&lt;IReactiveProperty&lt;bool&gt;&gt; source)
            =&gt; source
            .CombineLatest()
            .Pairwise()
            .Where(x =&gt; x.NewItem.SkipWhile(n =&gt; !n).Skip(1).Any(n =&gt; n)) // コントロールの個数を考えるとCount()を素直に使ってよさそうですね
            .Subscribe(p =&gt; p.OldItem
                .Select((v, i) =&gt; (v, i))
                .Where(x =&gt; x.v)
                .Select(x =&gt; source.ElementAt(x.i).Value = false)
                .ToList());
    }
}

