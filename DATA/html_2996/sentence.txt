More than 1 year has passed since last update.こんにちは、のんびりエンジニアのたっつーです。
ブログを運営しています、今回はこの記事の転載になります。Unityのネットワークライブラリの Photon を使う場合に、自分で定義したデータを同期したい場合がありますよね。
そこで今回は自分で同期処理を書いてみます。PUN 2 – FREE （無料版）
Photon PUN 2+ （有料版）Photon とはマルチプレイヤーゲームを作る場合にネットワーク部分を担当してくれるネットワークライブラリになります。例えば、モンストなどのゲームを作る場合には同時プレイしている４人の画面の情報を同期しないといけないですよね？そんな時に Photon を使うとネットワーク部分のめんどくさい部分を一括して担当してくれます。まずは、Photon は同期するオブジェクトに PhotonView のスクリプトをアタッチします。
この PhotonView ではそのオブジェクトがどのクライアントの持ち主（オーナー）かを管理しています。データを同期する際には、オーナー側がデータを送信して、オーナー以外がデータを受信する動きをします。
オーナー以外がデータを送信する側になりたい場合、一度オーナー権限を取得してからデータを送信する処理を書きましょう。今回はサンプルとして、文字列（テキスト）を同期するスクリプトを書いてみます。１つ目ポイントとなるのは、OnPhotonSerializeView メソッドでオーナー側、オーナー以外側の処理を同時に記載しています。２つ目のポイントは、Textプロパティを変更すると、オーナーのリクエストを発行して非オーナーでもデータの変更（同期）が可能となっています。
※ Text変更毎にオーナーがどんどん変わっていきます。Photonでサポートされている型 をみると基本的な部分は使えそうですね。い方は、下の３ステップになります。
※ すでに PhotonView が追加されている場合は、Observed Componetnsのプラスボタンで複数追加できるようになるので増やして使ってください。１．PhotonView を追加してください。
２．PhotonTextView （今回作成したスクリプト） を追加してください。
３．PhotonTextView を PhotonView.ObservedComponets に紐づけてください。
４．PhotonViewの Owner＝Request に変更してください。それでは実行してみましょう、以下のようなクライアントになります。
　左側が、オーナー側で送信側
　右側が、非オーナー側で受信側よければ ブログ「Unity+AssetStoreおすすめ情報」の方にも色々記載しているのでぜひご参照いただければと思います。


