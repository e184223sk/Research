
using System;
using UnityEngine;
using UnityEngine.InputSystem;
using UniRx;

public class TestInput : MonoBehaviour,IDisposable
{

    [SerializeField]
    private InputActionMap inputAction;

    private ReadOnlyReactiveProperty&lt;bool&gt; attack = default;
    //ボタンに変換したIReactivePropertyを公開
    public IReadOnlyReactiveProperty&lt;bool&gt; Attack =&gt; attack;

    private ReadOnlyReactiveProperty&lt;float&gt; mouseX = default;
    //Mouseの移動量に変換したIReactivePropertyを公開
    public IReadOnlyReactiveProperty&lt;float&gt; MouseX =&gt; mouseX;

    /// &lt;summary&gt;
    /// 2ボタンで-1 0 1出力
    /// &lt;/summary&gt;
    private ReadOnlyReactiveProperty&lt;float&gt; horizontal = default;
    //Mouseの移動量に変換したIReactivePropertyを公開
    public IReadOnlyReactiveProperty&lt;float&gt; Horizontal =&gt; horizontal;

    private void OnEnable()
    {
        inputAction.Enable();
    }

    private void OnDisable()
    {
        inputAction.Disable();
    }

    private void Awake()
    {
        attack =inputAction.FindAction("Attack").GetButtonProperty();
        mouseX = inputAction.FindAction("MouseX").GetDeltaAxisProperty();
        horizontal = inputAction.FindAction("Horizontal").GetAxisProperty();
    }

    private void OnDestroy()
    {
        Dispose();
    }

    public void Dispose()
    {
        inputAction?.Dispose();
        attack?.Dispose();
        mouseX?.Dispose();
        horizontal?.Dispose();
    }
}

