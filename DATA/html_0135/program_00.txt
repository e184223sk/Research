using System.Collections;
using System.Collections.Generic;
using UniRx;
using UnityEngine;
using UnityEngine.InputSystem;

public static class InputSystemExtension
{
        public static ReadOnlyReactiveProperty&lt;bool&gt; GetButtonProperty(this InputAction inputAction)
        {
            return Observable.FromEvent&lt;InputAction.CallbackContext&gt;(
                    h =&gt; inputAction.performed += h,
                    h =&gt; inputAction.performed -= h)
                .Select(x =&gt; x.ReadValueAsButton())
                .ToReadOnlyReactiveProperty(false);
        }

        //Axis入力だと0等が反応しないためGetDeltaAxisPropertyのみの使用でもよさそうです
        public static ReadOnlyReactiveProperty&lt;float&gt; GetAxisProperty(this InputAction inputAction)
        {
            return Observable.FromEvent&lt;InputAction.CallbackContext&gt;(
                    h =&gt; inputAction.performed += h,
                    h =&gt; inputAction.performed -= h)
                .Select(x =&gt; x.ReadValue&lt;float&gt;())
                .ToReadOnlyReactiveProperty(0);
        }

        //Delta入力はUpdate基準なのでUpdate基準に変換(主にマウスで使用)
        public static ReadOnlyReactiveProperty&lt;float&gt; GetDeltaAxisProperty(this InputAction inputAction)
        {
            return Observable.EveryUpdate().Select(_ =&gt; inputAction.ReadValue&lt;float&gt;()).ToReadOnlyReactiveProperty(0);
        }

}

