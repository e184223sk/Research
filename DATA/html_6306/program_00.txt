public static IEnumerable&lt;IEnumerable&lt;T&gt;&gt; Perm&lt;T&gt;(this IEnumerable&lt;T&gt; items, int? k = null)
{
    if (k == null)
        k = items.Count();

    if (k == 0)
    {
        yield return Enumerable.Empty&lt;T&gt;();
    }
    else
    {
        var i = 0;
        foreach (var x in items)
        {
            var xs = items.Where((_, index) =&gt; i != index);
            foreach (var c in Perm(xs, k - 1))
                yield return c.Before(x);

            i++;
        }
    }
}

// 要素をシーケンスに追加するユーティリティ
public static IEnumerable&lt;T&gt; Before&lt;T&gt;(this IEnumerable&lt;T&gt; items, T first)
{
    yield return first;

    foreach (var i in items)
        yield return i;
}

