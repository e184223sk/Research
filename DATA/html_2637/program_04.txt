
// CameraScreenViewModel.cs

 public class CameraScreenViewModel : BindableBase, IConfirmNavigationRequest, IJournalAware, IRegionMemberLifetime
    {
        public bool KeepAlive =&gt; false;

        private IRegionNavigationService RegionNavigationService { get; set; }

        /// &lt;summary&gt;
        /// 次画面に行くコマンド
        /// &lt;/summary&gt;
        public DelegateCommand NextCommand { get; }

        /// &lt;summary&gt;
        /// コンストラクタでコマンドを初期化してセット
        /// &lt;/summary&gt;
        public CameraScreenViewModel()
        {
            NextCommand = new DelegateCommand(() =&gt;
            {
                var param = new NavigationParameters();
                param.Add("TargetData", Visibility.Visible); // パラメータをkeyとvalueの組み合わせで追加

                // 第二引数にパラメータを渡すと、viewが切り替わった先でパラメータを受け取る
                RegionNavigationService.RequestNavigate(nameof(SelectScreen), param);
            });
        }

        public void ConfirmNavigationRequest(NavigationContext navigationContext, Action&lt;bool&gt; continuationCallback) =&gt; continuationCallback(true);

        public bool IsNavigationTarget(NavigationContext navigationContext) =&gt; true;

        public void OnNavigatedFrom(NavigationContext navigationContext)
        {
        }

        /// &lt;summary&gt;
        /// 画面遷移された時の処理
        /// 自分の画面をShellに登録？
        /// &lt;/summary&gt;
        /// &lt;param name="navigationContext"&gt;&lt;/param&gt;
        public void OnNavigatedTo(NavigationContext navigationContext)
        {
            RegionNavigationService = navigationContext.NavigationService;
        }

        public bool PersistInHistory() =&gt; true;
    }

