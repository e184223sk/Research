
class MyResponseStream&lt;T&gt; : IAsyncStreamReader&lt;T&gt;
{
    private Action&lt;byte[]&gt; _interceptor;
    private IAsyncStreamReader&lt;T&gt; _baseStream;

    public MyResponseStream(Action&lt;byte[]&gt; interceptor, IAsyncStreamReader&lt;T&gt; baseStream)
        =&gt; (_interceptor, _baseStream) = (interceptor, baseStream);

    // キモの部分
    public T Current
    {
        get
        {
            // 読み取る前にintercept
            _interceptor(_baseStream.Current as byte[]);
            return _baseStream.Current;
        }
    }

    // 以下、インターフェースを満たすための実装
    public Task&lt;bool&gt; MoveNext(CancellationToken cancellationToken) =&gt; _baseStream.MoveNext(cancellationToken);
    public void Dispose() =&gt; _baseStream.Dispose();
}

