
public abstract class Response&lt;TErrorCode&gt; {
  // エラーがあるときに利用するコンストラクタ
  protected Response(IEnumerable&lt;ErrorContainer&lt;TErrorCode&gt;&gt; errors){
    Errors = errors.ToArray();
  }

  // エラーがないときに利用するコンストラクタ
  protected Response(){
    Errors = [];
  }

  public ErrorContainer&lt;TErrorCode&gt;[] Errors { get; }

  public bool HasError(){
    return errors.Any();
  }

  public string ToErrorMessage() {
    if (!HasError()) {
      return "";
    }

    foreach (var code in Errors.Select(x =&gt; x.ErrorCode)) {
      if (code.GetType() == typeof(UserUpdateError)) {
        var updateErrorCode = (UserUpdateError) (object) code;
        switch (updateErrorCode) {
          case UserUpdateError.UserNotFound: return "ユーザが存在しません";
          case UserUpdateError.Duplicated: return "すでに存在しているユーザ名です";
          case UserUpdateError.InvalidUserName: return "利用できない文字が利用されています";
          default: throw new Exception("What's the code: " + code);
        }
      }
    }

    throw new Exception("Unregistered error code: ");
  }
}

