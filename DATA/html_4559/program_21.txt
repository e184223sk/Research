
public static class ResponseExtensions {
  private static ConcurrentDictionary&lt;Type, IErrorMessageProvider&gt; providers = new ConcurrentDictionary&lt;Type, IErrorMessageProvider&gt;();

  public static string ToErrorMessage&lt;TErrorCode&gt;(this Response&lt;TErrorCode&gt; response, IMessageFormatter aFormatter = null) {
    if (!response.HasError()) {
      return "";
    }

    var formatter = aFormatter ?? new NewLineMessageFormatter();
    var provider = getProvider&lt;TErrorCode&gt;();
    var message = formatter.Format(response.Errors, provider);

    return message;
  }

  private static ErrorMessageProvider&lt;TErrorCode&gt; getProvider&lt;TErrorCode&gt;() {
    var type = typeof(TErrorCode);
    var provider = providers.GetOrAdd(type, _ =&gt; new ErrorMessageProvider&lt;TErrorCode&gt;());
    return (ErrorMessageProvider&lt;TErrorCode&gt;)provider;
  }
}

