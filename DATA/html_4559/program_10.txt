
public abstract class Response&lt;TErrorCode&gt; {
  protected Response(TErrorCode error)
      : this(new []{ error }){
  }

  protected Response(IEnumerable&lt;TErrorCode&gt; errors)
      : this(errors.Select(x =&gt; new ErrorContainer&lt;TErrorCode&gt;(x))){
  }

  protected Response(IEnumerable&lt;ErrorContainer&lt;TErrorCode&gt;&gt; errors){
      Errors = errors.ToArray();
  }

  // エラーがないときに利用するコンストラクタ
  protected Response(){
    Errors = new ErrorContainer&lt;TErrorCode&gt;[]{};
  }

  public ErrorContainer&lt;TErrorCode&gt;[] Errors { get; }

  public bool HasError(){
    return Errors.Any();
  }
}

// エラー情報としてコード以外の情報を含めることもできるようにしておく
public class ErrorContainer&lt;TErrorCode&gt;{
  public ErrorContainer(TErrorCode code, object item = null){
    ErrorCode = code;
    Item = item;
  }

  public TErrorCode ErrorCode { get; }
  public object Item { get; }
}

