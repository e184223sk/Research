More than 3 years have passed since last update.C#では、throw eで、例外を再スローすると、スタックトレースが上書きされるので、throw eは使わないほうが良いです。上記を実行すると、コンソールには以下のように出力されます。発生元（スタックトレースの一番上）が、Method2になっていますね。
実際には、Method1で発生しているのですが、throw eのせいで、スタックトレースが上書きされています。C#で、スタックトレースを上書きされないように再スローするには、以下のようにMethod2を変更すればOKです。このように、throwだけであれば、以下のようにスタックトレースが上書きされなくなります。私が今まで経験したプロジェクトにおいて、スタックトレースの上書きが必要であったことは、一度もありません。
JavaやJavaScriptでは、同様の記述をしてもスタックトレースは上書きされないので、C#でなぜこのような仕様になっているのか、調査をしても私には分かりませんでした。もし、C#がthrow eでスタックトレースを上書きする理由をご存知の方がいらっしゃいましたら、ぜひ、コメントで教えてください！


