
using VContainer;
using VContainer.Unity;

namespace VContainerSayHello
{
    public sealed class SayHelloInstaller : MonoInstaller
    {
        [SerializeField] private SayHelloMonoBehaviour sayHello = default;

        public override void Install(IContainerBuilder builder)
        {
            builder.Register&lt;IPerson, Parent&gt;(Lifetime.Singleton);
            builder.Register&lt;SayHello&gt;(Lifetime.Singleton);
            builder.RegisterInstance(sayHello);
            builder.Register&lt;SayHelloMonoBehaviourInjector&gt;(Lifetime.Singleton).As&lt;IInitializable&gt;();
            //SayHelloMonoBehaviourInjectorがInitializeの発火でResolveされる。
            //その際、コンストラクタ引数にSayHelloMonoBehaviourがあるのでsayHelloインスタンスがResolveされる。
            //builder.RegisterEntryPoint&lt;SayHelloMonoBehaviourInjector&gt;(Lifetime.Singleton);
            //で代用可能。
        }
    }
}

