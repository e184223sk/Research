More than 1 year has passed since last update.ニコニコにてたまにスプラトゥーン生放送をしてます。コケいろがなんかするコミュニティ-ニコニコミュニティ
https://com.nicovideo.jp/community/co1292012(最近放送してねーなコイツ。。。)放送画面に直近10戦の勝敗とキルデス数を表示しています。(右下の開いてるスペースにはニコ生のコメントが反映されます)と思い、プログラムを自作して実現しました。戦績を自動取得し、放送画面UIに自動反映・更新しています。この機能を実現するためにやってることは大きく分けて下記２つです。それぞれの実装方法について紹介します。先述の通り、スプラトゥーン2の公式スマホアプリ「イカリング2」の非公開APIを使用して戦績を取得します。この非公開APIを利用するためにはCookieに含まれる「iksm_session」というセッションキーが必要です。「iksm_session」は通信をキャプチャして取得することになりますが、イカリング2の度重なるアップデートにより取得するための手段に対して制限が厳しくなっています。取得方法について記述したとしてもすぐ情報が古くなってしまうだろうと考えているため、この記事では記述しません。私はsplatnet2statinkのWikiを参考にNoxを用いて取得しました。英語になってしまいますが、最新バージョンの情報までまとめられてて大変助けられてます。ちなみにこのsplatnet2statinkは戦績を自動取得し、stat.inkという戦績記録サービスにデータを送信するpythonプログラムです。で、「iksm_session」を取得したらCookieに食わせてやることで非公開APIを利用できます。非公開APIなのでドキュメントありません。雰囲気で使う必要があります。APIのエンドポイントは「iksm_session」取得過程の通信キャプチャで何となく分かるほか、splat2statinkを参考にすることであたりを付けることができます。それらを参考に、C#向けに自作クライアントを作りました。今回のプログラムを実装するに当たり必要なAPI対応しかしていないため、叩けるAPIは非常に限定的です。こんな感じのリクエストパラメータ設定、エンドポイントでAPIが利用できます。GetBattleResultsメソッドやGetBattleResultDetailメソッドを用いることでで勝敗やキルデス数、スペシャル利用数やカウントの進み具合と行った戦績に関するデータが取得できます。戦績良かったときはニヤニヤできます。次はこれらを配信ソフトであるOBSに反映していきます。OBSでは入力ソースにBrouserSourceがあります。これはWebのURLを指定してやることでそこを表示したり、ローカルのHTMLパスを指定してやることでそれを表示したりできます。OBSにはテキストソースもあるのですが、フォントやレイアウトについて調整したくなると辛みがあります。ので、今回はCSS使って簡単に見た目整えられるBrowserSourceを採用しました。で、先程取得してきた戦績情報を下記のようなHTMLとして出力し、そいつを読み込ませています。そんなに長くならんので、出力したHTMLとcss両方載せます。(Web公開されるHTMLじゃないのでダサい系HTMLのまま。。)配信で肝となるのがBattleResult.htmlのリロード処理です。OBSのBrowserSourceは(少なくともローカルファイルをターゲットとした場合)自動リロードが入りません。明示的にリロード処理挟まないといつまで経っても昔の戦績が表示されてしまうため、無理やり自己リロードさせています。OutputHtmlBase.htmlという基本となるHTMLがあって、そこにRecentBattleResultHtmlEditorってやつで必要なデータを足してます。以上で、戦績を取得して配信画面に反映するところまで自動化できました。おめでとー。今回の記事はエンジニア向けの、主に実装方法に関する記事になりました。非エンジニア向けの利用方法まとめについては別途気が向いたら書こうとおもいます。需要なさそうなんで多分書かないです。OBSのBrowserSourceのリロード処理を改善したい感あります。現在、HTMLページ全体のリロードとなってしまっていますが、JavaScriptを用いて部分的な更新にすることでよりスムーズになります。HTMLページ全体をリロードすると稀にcssの適用が遅れて？レイアウト崩れを起こすことがあります。崩れる頻度はそれほど高くなく、仮に崩れたとしてもすぐにcss適用されて？期待通りのレイアウトになるため雑な無料放送なら問題ないのですがもにょっています。ニコ生のコメントをOBS表示するために使ったりするHTML5コメントジェネレーターではJavaScriptを用いたいい感じの更新処理が行われています。この辺を参考に実装したいなーって感じです。現在、戦績は5分に一度取得しています。非公開APIなので毎秒叩いたりするとBANくらうかもしれないとビビって長めのインターバルにしています。または、試合終わったタイミングで手動で更新ボタンみたいなの押すと戦績取得してきます。1操作で戦績更新までの遅延を最大5分短くできます。最大5分遅れるダサさ、1操作するダサさを軽減するため、リアルタイム画像解析を組み込み「試合終わったなー」というタイミングで自動でAPIを叩くという機能を入れたいと思っています。すでに録画ファイルに対して画像解析して試合の頭から終わりまでのみを切り出すことはできています。その処理をOBS経由のストリーム対応できれば行ける想定。。


