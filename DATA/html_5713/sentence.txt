More than 3 years have passed since last update.テキストエディタは大抵、現在のカーソル位置（列、行）をステータスバーとかに表示できる。
そして、やはり大抵は、いわゆる全角文字（漢字とか）は、いわゆる半角文字（アルファベットとか）の２文字分列を占める。
水平タブは（エディタの設定によるが）一定文字数に合わせるように占めるサイズが変わる。この辺を加味した、改行を含む文字列における文字の列と行を取得する処理を C# のコードで考える。Shift JIS で使う文字に必ず収まるならでいけるが、そうでない場合は面倒...
Unicode標準の附属書の一つに「東アジアの文字幅」があり、そのデータを使用することである程度決められる。
http://www.unicode.org/Public/UCD/latest/ucd/EastAsianWidth.txtしかし、特性値 A （曖昧）の文字は「文脈によって半角として扱うか全角として扱うか変わる」となっており、どう扱うかは必要に応じて決めるしかない...
先のコードでは特性値 A は半角としている。通常 char が unicode の１文字にあたるが、サロゲートペアや結合文字は２個以上の char で１個の文字を表す。
System.Globalization.StringInfo.GetTextElementEnumerator メソッドを使うと、サロゲートペアや結合文字を加味した１文字分の string を順次切り出し列挙してくれる TextElementEnumerator を得られるので、これを使用させてもらうのが方法として容易かと考える。１文字分の文字列が char ２個以上からなる（Length &gt; 1 の）とき、が真ならサロゲートペア、そうでなければ結合文字、と考えられる。サロゲートペアの場合、単純に「東アジアの文字幅」特性から判断しうる。
結合文字の場合、後述のサンプルコードでは１文字目に合成されるものとして、単に１文字目の特性だけ見ているが、表示も持つシステムにあっては結合できない場合にどう表示するか（個々に表示するのか等）も加味する必要があるだろう。。。Windows系（0x0D 0x0A）、Unix系（0x0A)、古いMacOS系（0x0D）とまちまちだが、TextReader.GetLine() はこの辺を加味し、末尾改行コードを含まない文字列を返してくれるので、後述のサンプルコードでは改行判定はこれに任せるようにし、見かけ '\n' (0x0A) が存在しているように扱っている。１タブを半角スペース何個で扱うかと、水平タブの出現時の列がわかっていれば、単に計算で導出できる。水平タブと改行コード以外は 幅 0 扱いで...TextReader をソースとして、１文字ずつ読み進める Cursor クラスこれを使用したサンプル2017/12/18 改行コードのところの記述が間違っていたので修正...


