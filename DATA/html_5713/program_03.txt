
using System;
using System.Globalization;
using System.IO;

namespace eawtest
{
    public class Cursor
    {
        private EastAsianWidth eaw;
        private TextReader sr;
        private int column;
        private int row;
        private string current;
        private EastAsianWidth.Kinds kind;
        private TextElementEnumerator line;
        private int tabspace;

        public string Current
        {
            get { return this.current; }
        }

        public int Column
        {
            get { return this.column; }
        }

        public int Row
        {
            get { return this.row; }
        }

        public EastAsianWidth.Kinds Kind
        {
            get { return this.kind; }
        }

        public Cursor(TextReader sr, EastAsianWidth eaw)
        {
            this.eaw = eaw;
            this.sr = sr;
            this.current = string.Empty;
            this.column = 1;
            this.row = 1;
            this.tabspace = 4;
        }

        private int GetWidth(char c)
        {
            return this.eaw.IsZenkaku(c) ? 2 : 1;
        }

        private int GetWidth(int cp)
        {
            return this.eaw.IsZenkaku(cp) ? 2 : 1;
        }

        public bool Next()
        {
            if (line == null)
            {
                string linetext = this.sr.ReadLine();
                if (linetext == null)
                {
                    this.current = string.Empty;
                    return false;
                }
                this.line = StringInfo.GetTextElementEnumerator(linetext);
            }
            if (!this.line.MoveNext())
            {
                this.line = null;
                this.row++;
                this.column = 1;
                this.kind = EastAsianWidth.Kinds.Anbiguous;
                this.current = "\n";
                return true;
            }
            string elm = this.line.GetTextElement();
            if (elm.Length &gt; 1)
            {
                if (elm.Length == 2 &amp;&amp; char.IsSurrogatePair(elm, 0))
                {
                    // サロゲートペアの場合
                    int cp = char.ConvertToUtf32(elm[0], elm[1]);
                    this.column += this.GetWidth(cp);
                    this.kind = eaw.GetKind(cp);
                }
                else
                {
                    // 結合文字は、１文字目だけで判定
                    this.column += this.GetWidth(elm[0]);
                    this.kind = eaw.GetKind(elm[0]);
                }
            }
            else
            {
                char c = elm[0];
                this.kind = eaw.GetKind(c);
                if (c == '\t')
                {
                    this.column = ((((this.column - 1) / this.tabspace) + 1) * this.tabspace) + 1;
                }
                else if (!char.IsControl(c))
                {
                    this.column += this.GetWidth(c);
                }
            }
            this.current = elm;
            return true;
        }
    }
}

