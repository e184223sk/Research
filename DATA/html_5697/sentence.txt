More than 3 years have passed since last update.kerasやtensorflowをpythonを使って機械学習をやっている．
良く抽象化されとても使いやすい．しかし，アルゴリズムを作成後，アプリケーションとしてユーザへ提示したい場合に, Pythonだと少々壁がある．と感じている．これまではPySideやPyQtを使って，デモアプリを作っていた．しかし，リアルタイムでの動画処理や音声処理をやっていくと，とてつも無く遅い．個人的には C# + Pythonで"AIアプリ”をつくりたい．ひとまずIronPython3の完成を待っているのだが，後半年～1年程かかりそう．そんなとき，TensorflowのC#ラッパーを発見した．こちらどうもモデルのロードに対応している．それならPythonで学習させたもでるをロードさせてサクサク動く，仕事やっている感がでるあぷりをつくってみようと思う．がハマリまくったのでVGG16を動かすまでの方法を載せるとなるKerasでTensorFlowShaprの読めるかたちでモデルを吐き出す(保存する)keras標準のVGG16はInput要素にname="input"が指定されていない．これだとTensorflowSharpで層の指定ができない．TensorfloSharpでモデルを利用するためには，最低でもinputの要素とoutputの要素が必要ここでは，kerasのVGG16関数を改造して使うので，下のConvert_VGG16.pyと同じ階層にmy_vgg16.pyとして作成し，input要素に名前をつけてあげる．変更は1行だけ．Convert_VGG16.pyではmy_vgg16からVGG16を読み出す．その後，吐き出しとして利用する層のoutput要素をtfの型?に適当に変更(ここでは0を足しているだけ)(良い方法があるはずなので，だれか教えてください). そして,nameを指定している．あとはおまじないgraphの吐き出しにはwrite_graphを使っている．write_graphを使う場合には，convert_variables_to_constantsを使うかどうかがあるみたい．その名前のとおり，値を持った変数としての重みを，constに変換している．これにより，C#で「重みが初期化されていません」みたいなエラーがでなくなる．し．かつ．軽量になるらしい．VGG16は重たいからそのほうが嬉しい．my_vgg16.py1行だけ変更しているあとimportの部分を変更している．もっと良い方法があると思うのでだれか教えてくらさいいつもはkerasユーザでtensorflowはほとんど触ったことが無かったので，基本が分からずはまりまくった．これでVGG16を使ったそれっぽいデスクトップアプリが作れるはず．[意見求む]もっとスマートなやりかたがあると思いますので，賢者のみなさまのご意見をお待ちしています．よろしくおねがいします．


