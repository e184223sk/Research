namespace DlegateEvent
{
    // 1.delegate
    delegate void Handler(char ch);

    // 2.field
    class DelegateClass
    {
        public event Handler KeyHit;

        public void OnKeyHit(char ch)
        {
            if (KeyHit != null)
                KeyHit(ch);
        }
    }

    // 3.handler
    class Show
    {
        int sum = 0;

        public void KeyShow(char ch)
        {
            if (Char.IsDigit(ch))// Char chがIsDigit(10進数)なら加算
            {
                int a = int.Parse(ch.ToString());// こっちの方がいいかも
                //(int)char.GetNumericValue(ch);
　　　　　　　　　//↑castしたcharをdoubleとしてGet()内は変数 ※入力のReadKeyがASCII値のため
                sum += a;
                Console.Write($"+{a}\n");
                Console.Write($"={sum}\n");
            }
            else if (ch == 'c')// cならクリア
            {
                sum = 0;
                Console.Write("合計がクリアされました\n");
            }
            else return;
        }
    }

    // 4.Main
    class Event2
    {
        public static void Main()
        {
            ConsoleKeyInfo cki;

            DelegateClass dc = new DelegateClass();
            Show s = new Show();

            dc.KeyHit += new Handler(s.KeyShow);// 必須。ｲﾍﾞ名 += new ﾃﾞﾘ名(実行ﾒｿｯﾄﾞ)

            while (true)
            {
                if (Console.KeyAvailable)// 有効なキーなら
                {
                    cki = Console.ReadKey(true);
// ReadKey(true)入力検知だけで表示をしない、falseは表示する[何もないReadKey()と等価] 呼出はcki.KeyChar
                    if (cki.KeyChar == 'x')
                    {
                        Console.Write("終了");
                        break;
                    }
                    else dc.OnKeyHit(cki.KeyChar);// Event発生
                }
            }
        }
    }

}

