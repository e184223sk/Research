
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Text;
using System.Windows.Forms;
using System.IO.Compression; // to use zip

class ZipTest : Form
{
    ZipTest()
    {
        var btn = new Button(){
            Size = new Size(200,25),
            Text = "Save zip file",
        };
        btn.Click += (s,e)=&gt;{
            string destPath = Path.Combine(System.Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory), "ZipTest_Output.zip");
            CreateZipFile(destPath);
        };
        Controls.Add(btn);

    }

    void CreateZipFile(string destZipPath)
    {
        try {
            //  ZipFile.Open で Zipを作成するとき、すでにファイルが存在していると例外が発生する。
            //  上書きしたい場合は、すでにファイルが存在する場合は削除しておく。
            // if (File.Exists(destZipPath)) {
            //     File.Delete(destZipPath);
            // }

            using( ZipArchive archive = ZipFile.Open(destZipPath, ZipArchiveMode.Create) ) {
                ZipArchiveEntry entry;

                entry = archive.CreateEntry("Test1.txt", CompressionLevel.Optimal);
                using (StreamWriter writer = new StreamWriter(entry.Open()))
                {
                    writer.WriteLine("FileContentSample-1");
                }

                entry = archive.CreateEntry(@"hoge\Test2.txt", CompressionLevel.Optimal);
                using (StreamWriter writer = new StreamWriter(entry.Open()))
                {
                    writer.WriteLine("FileContentSample-2");
                }

                // 既存のファイル（第一引数）を読み込んでzip内にファイルをつくる場合
                // archive.CreateEntryFromFile( @"C:\Test.txt", "a.txt", CompressionLevel.Optimal );
            }
        }
        catch(IOException e) {
            MessageBox.Show(e.ToString());
        }        
        catch(UnauthorizedAccessException e) {
            MessageBox.Show(e.ToString());
        }
    }

    [STAThread]
    static void Main(string[] args)
    {
        Application.Run(new ZipTest());
    }
}


