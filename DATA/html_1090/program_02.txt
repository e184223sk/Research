
using System;
using static System.Linq.Expressions.Expression;

static class InnerValueHashCode
{
    public static int Get&lt;T&gt;(T value) =&gt; Impl&lt;T&gt;.Delegate(value);
    private static class Impl&lt;T&gt;
    {
        public static Func&lt;T, int&gt; GenerateFunc()
        {
            var nullableValue = Parameter(typeof(T), "nullableValue");

            var underlyingType = Nullable.GetUnderlyingType(typeof(T));

            var callExpression = Call(
                Property(nullableValue, typeof(T), "Value"),
                underlyingType.GetMethod("GetHashCode", Type.EmptyTypes));
            var lambda = Lambda&lt;Func&lt;T, int&gt;&gt;(callExpression, nullableValue);
            return lambda.Compile();
        }

        internal readonly static Func&lt;T, int&gt; Delegate = GenerateFunc();
    }
}
 long? value = long.MaxValue;
InnerValueHashCode.Get(value);

