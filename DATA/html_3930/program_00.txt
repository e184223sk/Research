using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UniRx;
using UniRx.Triggers;

public class GameManager : MonoBehaviour {

  [SerializeField] string FilePath;

  [SerializeField] Button Play;
  [SerializeField] Button SetChart;

  [SerializeField] GameObject Don;
  [SerializeField] GameObject Ka;

  [SerializeField] Transform SpawnPoint;
  [SerializeField] Transform BeatPoint;

  string Title;
  int BPM;
  List&lt;GameObject&gt; Notes;

  void OnEnable() {
    Play.onClick
      .AsObservable()
      .Subscribe(_ =&gt; play());

    SetChart.onClick
      .AsObservable()
      .Subscribe(_ =&gt; loadChart());
  }

  void loadChart() {
    Notes = new List&lt;GameObject&gt;();

    string jsonText = Resources.Load&lt;TextAsset&gt;(FilePath).ToString();

    JsonNode json = JsonNode.Parse(jsonText);
    Title = json["title"].Get&lt;string&gt;();
    BPM = int.Parse(json["bpm"].Get&lt;string&gt;());

    foreach(var note in json["notes"]) {
      string type = note["type"].Get&lt;string&gt;();
      float timing = float.Parse(note["timing"].Get&lt;string&gt;());

      GameObject Note;
      if (type == "don") {
        Note = Instantiate(Don, SpawnPoint.position, Quaternion.identity);
      } else if (type == "ka") {
        Note = Instantiate(Ka, SpawnPoint.position, Quaternion.identity);
      } else {
        Note = Instantiate(Don, SpawnPoint.position, Quaternion.identity); // default don
      }

      Notes.Add(Note);
    }
  }

  void play() {
    Debug.Log("Game Start!");
  }
}

