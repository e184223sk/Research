More than 1 year has passed since last update.Unity上でシングルトンなクラスはあまり多く作ると管理がいろいろ面倒になったりする
シーンに依存するマネージャ( そのシーンでだけ利用するマネージャ )にシングルトンを利用するのも若干非効率なためランタイムに生成し、該当シーンが終了したら削除されるようなマネージャがあると勝手が良いかも???
あくまで一つの案として...まずはゲームマネージャが管理できるランタイムマネージャのベースクラスの作成GameManagerクラスではDictionaryで管理するためキー値用のstringを取得するためのToString()メソッドをオーバーライドする続いてGameManagerクラス↑スクリプト中にある SingletonMonoBehaviour に関しては UnityでMonoBehaviourのシングルトンを参考に作成しています今回の実装では簡単にランタイムマネージャの登録処理,ランタイムマネージャの取得処理,シーンの変更時にランタイムマネージャの破棄処理を行っている
ランタイムマネージャの破棄用メソッドを用意していないのはどのみちシーン遷移時に破棄されるため後はお好みでゲームに必要な処理を追加していけばよいと思う
難点としてはGameManagerに依存しがちになってしまうのでGameManagerが神クラス化してしまわないかなど...
あるいはManagerProviderという名前にしてGameManagerとは別のクラスでやればGameManagerがやるべき仕事と分離できるかも?


