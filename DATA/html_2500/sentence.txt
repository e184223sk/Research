More than 1 year has passed since last update.前回：ASP.NET Core MVCであみだくじを作ってみる 1 (開発環境の準備)
今回は、ビューを追加してHome画面から呼び出せるようにします。ソリューションエクスプローラーの「Controllers」を選択します。
右クリックでメニューを表示し、追加⇒コントローラーを選択します。
「MVCコントローラー-空」を選択します。

名前を設定します。コントローラーは「xxxController」という名称で作ります。
今回は「KujiController」とします。

作成直後のコードは以下のようになっています。自動でIndexアクションが作成されています。
ビューを表示するアクションです。ビューの置き場所は「Views\コントローラー名」フォルダの直下です。
ビューのファイル名は「アクション名.cshtml」で作ります。ソリューションエクスプローラーの「Views」を選択します。
右クリックでメニューを表示し、追加⇒新しいフォルダを選択します。
「Kuji」フォルダを作成します。「Views\Kuji」を選択し、右クリックでメニュー表示、追加⇒新しい項目を選択します。
「Razor ビュー」を選択します。Indexアクションのビューを作るので、ファイル名は「Index.cshtml」のままです。

呼び出した時に分かりやすいように、タイトルと背景色を変えます。
コードを以下のようにします。「Views\Shared\_Layout.cshtml」を開きます。
ビューのヘッダや外枠など、共通テンプレートを定義しています。
(このファイルは、プロジェクト生成時に自動で作成されています。)
ヘッダのナビに「あみだくじ」メニューを追加してみます。&lt;!-- あみだくじメニューを追加 --&gt;の下の&lt;li&gt;項目を追加しました。デバッグ実行します。

「あみだくじ」メニューが追加されました。押下してみます。

無事、切り替わりました。
URLも「https : //localhost:44344/」の後に「Kuji」が付いています。
これは、KujiControllerのIndexアクションのURLです。今回は、ビューを追加してHome画面から呼び出せるところまでを行いました。
次回は、モデルを追加してビューと紐付けます。
次回分はこちら⇒ASP.NET Core MVCであみだくじを作ってみる 3 (モデルの追加)


