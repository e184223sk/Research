
using System;
using System.Text;
using Newtonsoft.Json;
using uPLibrary.Networking.M2Mqtt;

namespace RasPiClient
{
    internal class Program
    {
        private const string MQTT_ORDER_TOPIC = "/IR/Order";
        private const string MQTT_LOG_TOPIC = "/IR/Logs";

        private string MQTT_BROKERHOSTNAME;
        private int PORT;
        private string APPLICATION_ID;
        private string USERNAME;
        private string PASSWORD;
        private static MqttClient _mqttClient;

        public Program()
        {
            // M2Mqttの起動
            APPLICATION_ID = Guid.NewGuid().ToString();
            _mqttClient = new MqttClient(MQTT_BROKERHOSTNAME, PORT, false, null, null, MqttSslProtocols.SSLv3);
            _mqttClient.Connect(APPLICATION_ID, USERNAME, PASSWORD);
        }

        private static void Main(string[] args)
        {
            // コンソールで何の処理を行うかをユーザに尋ねる
            var program = new Program();
            Console.WriteLine("[RASPICLIENT] LAUNCHED");

            while (true)
            {
                Console.WriteLine("Type \"record\" or \"playback\" to do action.");
                var incoming = Console.ReadLine();

                MessageType type;
                switch (incoming)
                {
                    case "record":
                        Console.WriteLine("Set parameter :");
                        type = MessageType.Record;
                        break;
                    case "playback":
                        Console.WriteLine("Set parameter :");
                        type = MessageType.PlayBack;
                        break;
                    default:
                        continue;
                }

                var message = Console.ReadLine();
                var param = new RasPiData(){Message = message, MessageType = type};
                _mqttClient.Publish(MQTT_ORDER_TOPIC, Encoding.UTF8.GetBytes(JsonConvert.SerializeObject(param)));
            }
        }
    }
}

