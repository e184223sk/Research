More than 3 years have passed since last update.（僕の周りで）あまり見かけないけど、使いこなせれば強力な LINQ メソッドの紹介です。2つのシーケンスをインデックス順にマージして一つのシーケンスにします。はみ出る要素は無視されます。Unionは2つのシーケンスの少なくともどちらかに含まれている要素（和集合）のシーケンスを返します。Intersectは2つのシーケンスのどちらにも含まれる要素（積集合）のシーケンスを返します。Exceptは対象のシーケンスからもう一方のシーケンスに属する要素を取り除いたシーケンスを返します。シーケンスの取り除かれる側と取り除く側を入れ替えると、結果も変わります。ToDictionaryはシーケンスや配列などをDictionaryに変換します。
Dictionary型に変換することでキーで高速に値にアクセスできます。以下のようなBookクラスのリストがあるとします。ToLookupはシーケンスや配列などをILookup型に変換します。
Dictionaryはキーに対し1つの値が割り当てられますが、
ILookUpはキーに対しコレクションが割り当てられます。ToLookupはGroupByとよく似ていますが、ToLookupは即時実行、GroupByは遅延評価です。
ToLookupならlookup[2000]のようにインデクサでアクセスできます。値にリストを持つDictionaryを作る場合にはGroupByとToDictionaryを使います。
ToLookUpとToDcitinaryを組み合わせると2度ループが回ってしまいます。メジャーかもしれませんが、僕の周りではあまり見ないので載せます。
シーケンスから重複した要素を削除したシーケンスを返します。2つのシーケンスをグルーピングするGroupByと、
2つのシーケンスを結合するJoinを、同時にやってしまうメソッドです。以下のような漫画雑誌と漫画のリストがあるとします。上記2つのリストを結合し、漫画雑誌毎に漫画を振り分けます。LINQ には便利なメソッドがたくさんあります。
普段よく使うもの以外にもハマるとシーケンス・コレクション操作を強力にサポートしてくれるものがたくさんあるので、ぜひ使いこなしたいです。


