More than 1 year has passed since last update.最小全域木とは簡単に説明するとグラフのすべての頂点は最も少ないコストの辺で構成された木のことです。
使用しているアルゴリズムはクラスカル法です。
これも簡単に言うとグラフから最もコストの少ない辺をループができないように追加するという処理を繰り返してすべての頂点を選択したところで終了します。クラスカル法を実装するにあたってどの頂点がどの木に所属しているかという判定が必要になります。
同じ木に属している場合ループができるのでこれを防ぐ必要があります。
この時、効率よく判定するデータ構造としてUnion Find木というのが使われます。
簡単にいうと木の根(ルート)が同じだと同じ木だと判断するという考えです。上記のコードのList&lt;int&gt; parはiの親ノードを表していてます。言い換えるとi番目のノードの親はpar[i]ということです。
same()は親ノードを辿って同じルートに行き着くなら同じ木という判断をします。
uniteは同じ根を持つ木をつなげます。IComparableを実装することによって比較できるようにします。edge.Sort()することによって辺を重みごとに並べます。
あとは辺を重みが低い順に追加していきますが、頂点が同じ木に属している時は追加しません。コードの全景です。


