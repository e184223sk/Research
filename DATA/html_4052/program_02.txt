
using System;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using Serilog;

Log.Logger = new LoggerConfiguration()
      .Enrich.FromLogContext()
      .WriteTo.Console(formatter: new Serilog.Formatting.Json.JsonFormatter())
      .CreateLogger();

var serviceProvider = new ServiceCollection()
    .AddLogging(configure =&gt; configure.AddSerilog())
//  .AddLogging(configure =&gt; configure.AddJsonConsole())
    .BuildServiceProvider();
var loggerFactory = serviceProvider.GetRequiredService&lt;ILoggerFactory&gt;();
var logger = loggerFactory.CreateLogger("mylogger");
// LogTemplateに@を付けると、プロパティーの構造をそのままログに出してくれる
logger.LogError ("Hello {@aaa}", new Hoge { Id = 0, Name = "あいうえお"});

public class Hoge 
{
    public int Id {get;set;}
    public string Name {get;set;}
}

