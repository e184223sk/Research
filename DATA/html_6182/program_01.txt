
private int _myProperty;

public int MyProperty
{
    get { return _myProperty; }
    set { SetValue(MyPropertyProperty, value); }
}

// Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...
public static readonly DependencyProperty MyPropertyProperty =
    DependencyProperty.Register("MyProperty", typeof(int), typeof(ownerclass),
        new PropertyMetadata(0, (s, e) =&gt; ((ownerclass)s)._myProperty = (int)e.NewValue));

