More than 1 year has passed since last update.UnityのUniRxは便利ですし、ネットの記事を読むことで基本的な事は理解できるでしょう
しかし、いざ応用するとなるとなかなか感覚を掴めませんそこで、ダブルクリック判定は、UniRxの扱いを入門するのにちょうどいいものだと思い、
UniRxによるシングル、ダブルクリック判定法を3つ書いてみました今回実装するダブルクリック判定の仕様は次のようです
・シングルクリックとダブルクリックをどちらも判定できる
・ダブルクリック時に、シングルクリックは判定しない
・連打時の事も考えるまずはクリック判定だけ取っておきましょう先に言っておきます。シングルとダブルの判定は同じObservable内でbool型で判定します
シングルクリックならfalseを流し
ダブルクリックならtrueを流すことにしますまずは、ネットでUniRx ダブルクリックなど検索するといくらか目にする例ですクリックをした時間差で判定する方法ですね
余計に前の状態をBufferで取ってこなくてはいけませんが、UniRx初心者が理解しやすい内容と言えます。
連打時の挙動は、
最初にシングルクリック、次にダブルクリックが流れ、
後はまったく流れないです今度はストリームの合成の概念を使います今度は、シングルクリック判定をしたら、シングルクリック判定をやめて
ダブルクリック判定を一定時間するという方法です
・ Returnにより、一旦シングルクリック判定を流し、
・ Mergeにより、ダブルクリック判定につなげます
・ SelectManyは
　元々のObservbleにイベントが流れた時に、
　引数に渡したObservableからイベントを取り始めますThrottleFirstによって、シングルクリック判定を一定時間やめておき、
そのうちに、ダブルクリック判定をしています
判定時間を2回指定しなければいけないので少々気持ち悪いです連打時の挙動は
シングルクリックとダブルクリックの判定が交互に流れます
素直な挙動です理解の難易度が高いオペレータを使いますが、一番シンプルな実装方法です
僕はこの方法が一番好きですConcatを使っていますがこれは
　直前のObservableがOnCompletedしたら、引数に渡したObservableに切り替える
というものです
また、引数を渡さないこともでき、その場合は
　直前にSelectで指定したObservableを使う
　　(この場合は一時的にIObservable&lt;IObservable&lt;T&gt;&gt;という型になる）
というようになりますシングルクリック判定が起こってから、
ダブルクリック判定をはじめて、
すべて終了すれば RepeatSafe()により最初から判定を行う
という感じです
RepeatSafe()はOnCompletedが連続で流れれば繰り返しを終了します
Repeat()なんて使うな！無限ループが怖いぞ！連打時には
シングルクリックとダブルクリックの判定が交互に行われるので
シングルクリックとダブルクリックが交互に出力されます最後にDebug.Logの出力だけ書きます(1つ目のところでもちらっと書きました）doubleClickにdClick1や2をいれれば、そちらの方の実装を試せますダブルクリックというのは単純なようですが、
実際に判定を取る事を考えると奥が深い処理ですこの記事を書くにあたって、Concatを覚えられて良かったですUniRxはまだまだ学習コストが高いですね


