Xamarin.AndroidでCardboardアプリを作成する方法について説明します。Cardboardアプリとはスマホで手軽にVR体験できる以下のようなアプリです。
Cardboardアプリを作成するためには、Cardboard SDKを利用する必要があります。Cardboard SDKは以前はソースコードは提供されず、AARやJARのようなライブラリで提供されていました。その後2019年11月6日、オープンソース化が発表され、現在はNDKでの提供に変更されました。しかし、Googleから提供されているSDKは、Xamarinでは直接、利用できません。AARやJARを「Xamarinバインドライブラリ」という仕組みで利用したり、NDK経由で呼び出す必要があり、簡単に利用することができませんでした。ある時、rassunさんがCardboard SDKをデコンパイルして、Javaソースコードにしたものを、githubで公開しているのを見つけました。今回、このソースコードをC#で書き直し、Xamarin上で動作させることができましたので、以下のリポジトリにて公開します。
https://github.com/secile/CardboardXamarinこのソースコードを利用すれば、従来のようにAARやJARを利用することなく、Cardboardアプリを作成することができます。赤い三角形がくるくる回るサンプルプログラムが含まれていますので、すぐに動作確認することもできます。実行しても赤い三角形が見つからない場合は、左右をキョロキョロ探してください。ただし、このソースコードは、作成の元になったCardboard SDKのバージョンが古く、最新のCardboard SDKにある機能の一部はありませんが、基本的なVRアプリの作成には問題ないと思います。
なお、Cardboardアプリの作成には、3DグラフィックライブラリであるOpenGLの知識を必要とします。サンプルプログラムでは、そのままOpenGLを利用するのではなく、C#でOpenGLを利用するためのライブラリ「OpenTK」を利用しています。MainActivityはCardboardActivityを継承します。OnCreateでCardboardViewとVrRendererを作成します。VrRendererは描画を担当するクラスです。CardboardView.StereoRendererインタフェースを実装します。VrRendererが作成されると、OnSurfaceCreatedが呼ばれますので、初期化を実行します。ここで使用しているShaderとShapeは私が作成したクラスで、Shaderは描画を、Shapeは三角形を表します。画面の更新が開始されると、OnNewFrame→OnDrawEye(左目)→OnDrawEye(右目)→OnFinishFrameの順番で繰り返し呼ばれます。OnNewFrameで状態を更新して、OnDrawEyeで描画します。今回のサンプルでは、OnNewFrameで描画する三角形の回転角度を更新しています。OnDrawEyeは、現在の視点にtransform.GetEyeView()をかけると、自動的に左目または右目の視点になりますので、今どっちの目を描画しているのか意識する必要はありません。以上、簡単でしたが、XamarinでCardboardアプリを作成する方法を説明しました。Cardboardは現在ではあまりクローズアップされることはありませんが、初めて体験したときの感動は忘れられません。ぜひ皆さんも、Cardboardアプリの作成にチャレンジしてみてください。


