
    public float Velocity_0, theta;
    public bool Bulletmove_flag;
    public Vector2 Lpos;

    Rigidbody2D rid2d;

    private void Start() {
        //Rigidbody取得
        rid2d = GetComponent&lt;Rigidbody2D&gt;();
    }

    private void Update() {
        //アクティブになった時の弾の動き
        if (Bulletmove_flag) {
            //角度を考慮して弾の速度計算
            Vector2 bulletV = rid2d.velocity;
            bulletV.x = Velocity_0 * Mathf.Cos(theta);
            bulletV.y = Velocity_0 * Mathf.Sin(theta);
            rid2d.velocity = bulletV;
            Bulletmove_flag = false;
        }


        //弾の座標とランチャーから送られてきた座標で距離を計算
        Vector2 Bpos = transform.position;
        float Distance_to_Luncher = Vector2.Distance(Bpos, Lpos);

        //今回はランチャーからの距離が消滅の条件
        if (Distance_to_Luncher &gt;= 50) Object_false();
    }

    //非アクティブになる前に座標をリセット
    void Object_false() {
        transform.position = Lpos;
        gameObject.SetActive(false);
    }

