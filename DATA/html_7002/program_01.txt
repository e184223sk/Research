
public class Startup1 {
    public void Configuration(IAppBuilder app) {
        // アプリケーションの設定方法の詳細については、http://go.microsoft.com/fwlink/?LinkID=316888 を参照してください
        app.Run(context =&gt; {
            StringBuilder sb = new StringBuilder();

            switch(context.Request.Path.Value) {
            case "/":
                context.Response.Redirect("/select");
                break;

            case "/select":
                sb.AppendLine(@"&lt;!DOCTYPE HTML&gt;");
                sb.AppendLine(@"&lt;html lang=""ja""&gt;");
                sb.AppendLine(@"&lt;head&gt;");
                sb.AppendLine(@"&lt;meta charset=""UTF-8""&gt;");
                sb.AppendLine(@"&lt;meta name=""viewport"" content=""width = 300""&gt;");
                sb.AppendLine(@"&lt;title&gt;画像転送&lt;/title&gt;");
                sb.AppendLine(@"&lt;/head&gt;");
                sb.AppendLine(@"&lt;body&gt;");
                sb.AppendLine(@"&lt;h1&gt;画像転送&lt;/h1&gt;&lt;br/&gt;");
                sb.AppendLine(@"&lt;form action=""upload"" method=""post"" enctype=""multipart/form-data""&gt;");
                sb.AppendLine(@"&lt;input type=""file"" name=""upfile"" multiple=""multiple""/&gt;&lt;br/&gt;&lt;br/&gt;");
                sb.AppendLine(@"&lt;input type=""submit"" value=""転送""/&gt;");
                sb.AppendLine(@"&lt;/form&gt;");
                sb.AppendLine(@"&lt;/body&gt;");
                sb.AppendLine(@"&lt;/html&gt;");

                context.Response.Write(sb.ToString());
                break;

            case "/upload":
                for(int i=0; i&lt;context.Request.Files.Count; i++) {
                    string fileName = Path.GetFileName(context.Request.Files[i].FileName),;
                    fileName = Regex.Replace(fileName, @"(?=\.\w+$)|(?&lt;!\.\w+)$", DateTime.Now.ToString("yyyyMMddHHmmssfff"));
                    context.Request.Files[i].SaveAs(Path.Combine(imgPath, fileName));
                    Thread.Sleep(1);
                }

                sb.AppendLine(@"&lt;!DOCTYPE HTML&gt;");
                sb.AppendLine(@"&lt;html lang=""ja""&gt;");
                sb.AppendLine(@"&lt;head&gt;");
                sb.AppendLine(@"&lt;meta charset=""UTF-8""&gt;");
                sb.AppendLine(@"&lt;meta name=""viewport"" content=""width = 300""&gt;");
                sb.AppendLine(@"&lt;title&gt;画像転送&lt;/title&gt;");
                sb.AppendLine(@"&lt;/head&gt;");
                sb.AppendLine(@"&lt;body&gt;");
                sb.AppendLine(@"&lt;a href=""select""&gt;&lt;button&gt;戻る&lt;/button&gt;&lt;/a&gt;");
                sb.AppendLine(@"&lt;/body&gt;");
                sb.AppendLine(@"&lt;/html&gt;");

                context.Response.Write(sb.ToString());
                break;

            default:
                context.Response.StatusCode = 404;
                break;
            }

            return context.Response.WriteAsync(string.Empty);
        });
    }
}

