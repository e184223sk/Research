
static class ExtClass {
    static public string GetString(this Stream Me, Encoding encoding, int length) {
        byte[] work = new byte[length];
        Me.Read(work, 0, length);
        return encoding.GetString(work);
    }

    static public string GetLine(this Stream Me, Encoding encoding) {
        List&lt;byte&gt; work = new List&lt;byte&gt;();
        while(!work.IsLineEnd())
            work.Add((byte)Me.ReadByte());
        return encoding.GetString(work.ToArray()).TrimEnd('\r', '\n');
    }

    static public long SkipLine(this Stream Me) {
        for(byte b1 = (byte)Me.ReadByte(), b2 = 0; !(b2 == '\r' &amp;&amp; b1 == '\n'); b1 = (byte)Me.ReadByte())
            b2 = b1;
        return Me.Position - 2;
    }

    static public bool IsLineEnd(this List&lt;byte&gt; Me) {
        if(Me.Count &lt; 2) return false;
        return (Me[Me.Count - 2] == '\r') &amp;&amp; (Me[Me.Count - 1] == '\n');
    }

    static public bool IsFileEnd(this Stream Me, Encoding encoding, string boundary) {
        byte[] work = encoding.GetBytes(boundary);
        foreach(byte b in work)
            if(b != Me.ReadByte()) {
                Me.Seek(-1, SeekOrigin.Current);
                return false;
            }
        return true;
    }
}

