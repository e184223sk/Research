
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class SceneManager : MonoBehaviour
{

    // クエリちゃん設定
    public QueryAnimationController queryAnim = null;
    public QueryEmotionalController queryEmo = null;
    public QuerySoundController querySound = null;

    // 回転対象
    public GameObject cameraPivot = null;

    private void Awake()
    {
        // 【Unite Tokyo 2018】Oculusで作るスタンドアローン・モバイルVRコンテンツ
        // https://www.slideshare.net/UnityTechnologiesJapan002/unite-tokyo-2018oculusvr-96453609/UnityTechnologiesJapan002/unite-tokyo-2018oculusvr-96453609
        // 上記スライドを参考にした設定

        // アイバッファ解像度 scale 1.0 == 1024x1024
        UnityEngine.XR.XRSettings.eyeTextureResolutionScale = 1.25f;

        // 外枠側のレンダリング設定。&gt;&gt;HIGH　外側の解像度が減っていく
        OVRManager.tiledMultiResLevel = OVRManager.TiledMultiResLevel.LMSLow;

        // 72Hzモード（フレームレートは上がるが綺麗）
        OVRManager.display.displayFrequency = 72.0f;
    }

    void Start()
    {
        // 浮いてるアニメーション再生
        queryAnim.ChangeAnimation(QueryAnimationController.QueryChanAnimationType.FLY_IDLE);

    }

    void kaiten()
    {
        // kaiten !
        // 5,5,5!な斜め方向に。
        cameraPivot.transform.GetComponent&lt;Rigidbody&gt;().AddTorque(new Vector3(5f, 5f, 5f));
    }

    void Update()
    {
        // 接続確認したいとか
        //if (OVRInput.IsControllerConnected(OVRInput.Controller.RTrackedRemote))

        // GetMouseButtonDownで、UnityEditor上で動作確認できます。
        if (OVRInput.Get(OVRInput.Button.PrimaryIndexTrigger) || Input.GetMouseButtonDown(0))
        {
            kaiten();
        }
    }
}

