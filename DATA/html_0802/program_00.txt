using DxLibDLL;

namespace Qiita
{
    class Program
    {
        /// &lt;summary&gt;
        /// メイン関数
        /// &lt;/summary&gt;
        public static void Main()
        {
            const int WIN_W = 960, WIN_H = 720;

            DX.SetOutApplicationLogValidFlag(DX.FALSE);
            DX.SetAlwaysRunFlag(DX.TRUE);
            DX.SetWindowSizeChangeEnableFlag(DX.TRUE);
            DX.SetFullScreenResolutionMode(DX.DX_FSRESOLUTIONMODE_DESKTOP);
            DX.SetWindowText("シューティングゲーム");
            DX.ChangeWindowMode(DX.TRUE);
            DX.SetGraphMode(WIN_W, WIN_H, 32);

            // DXライブラリの初期化
            if (DX.DxLib_Init() == -1) return;

            DX.SetDrawScreen(DX.DX_SCREEN_BACK); //裏画面処理を設定する

            int image = DX.LoadGraph("img/jiki.png");
            float x = WIN_W / 2.0F, y = WIN_H - 100.0F;
            const float MOVE_SPEED = 3.0F;

            while (DX.CheckHitKey(DX.KEY_INPUT_ESCAPE) == 0)
            {
                DX.ProcessMessage();
                DX.ClearDrawScreen(); //裏画面をクリアする

                if (DX.CheckHitKey(DX.KEY_INPUT_LEFT) == 1) x -= MOVE_SPEED;
                if (DX.CheckHitKey(DX.KEY_INPUT_RIGHT) == 1) x += MOVE_SPEED;
                if (DX.CheckHitKey(DX.KEY_INPUT_UP) == 1) y -= MOVE_SPEED;
                if (DX.CheckHitKey(DX.KEY_INPUT_DOWN) == 1) y += MOVE_SPEED;

                //自機の画面外へのはみ出しをチェックする
                if (x &lt; 0.0F) x = 0.0F;
                if (x &gt; WIN_W) x = WIN_W;
                if (y &lt; 0.0F) y = 0.0F;
                if (y &gt; WIN_H) y = WIN_H;

                DX.DrawRotaGraphF(x, y, 1.0F, 0.0F, image, DX.TRUE);
                DX.ScreenFlip(); //2つの画面を入れ替える
            }

            DX.DxLib_End();
        }
    }
}

