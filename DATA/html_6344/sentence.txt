More than 3 years have passed since last update.UnityのWebGL出力に簡単に無料でグローバルランキングを実装できる仕組みを考えてみた の続きになります。まず、 https://github.com/divide-by-zero/GSSA/ をチェックアウトし、
projects/Assets/Samples/Empty/Sample1_ChatChatChat/ChatChatChat.unity を開きます。※こちら、ある程度作ってあるけれど重要なところが空のプロジェクトです。　完成品はCompleteフォルダ配下にあるので、チマチマと講座なんてみるより完成品見た方が早い！　というかたはそちらを見てくれればいいと思います。初期のソースコードは以上な感じで、実行しても何も起きない状態です。
徐々に処理を追加していきます。NameのInputFieldとMessageのInputFieldは用意してありonEndEditにAddListenerでSendChatMessageを呼ぶところまではできています。　が、中身が空なので、何もできていない状態です。
ここで、onEndEdit＝Enterキー押下 のたびに名前とメッセージをSpreadSheetに登録するよう処理を書きます。この時点で名前を入れて、メッセージを入力してエンターを押すたびに、サーバに1行データが保存されるようになるはずです。
＜EX＞

すでにサーバーにはデータがたまっているので、たまったデータを取得して、画面に表示すればチャットの大枠の出来上がりです。上の何もない空間がTextField(logText)なので、ここにサーバーから取得したログを表示いれてあげます。
キモは、queryにOrderByDescendingでcreateTimeを指定して、生成日時の大きい＝新しいデータ順にしているところ。
＋Limitに20を指定して、最新データ20だけに抑えているところです。
これをしないと、表示しきれないほどのデータを毎回サーバーから取得しようとするので、通信量がなかなかな事になりかねません。しかし、これでもまだ無駄が多いです。

SpreadSheetSettingのIs Debug Log Outputにチェックを入れて、通信ログを取得するとわかるのですが

常に最新データ上20件を取得するので、まったくデータが更新されていなくても同じデータが5秒に1回来てしまいます。
これは・・・あかんですよ・・・。そんなわけで、↑これに尽きるんですが、どうやってすでに取得したものかどうかを判断するか。
今回の例だと、自動で生成されるcreateTimeを保持しておいて、Queryオブジェクトに条件を追加すればよさそうです。最後に取得した時間(long)を取っておくための変数
private long lastGetTime;をフィールド変数として用意し、
Queryオブジェクトに、保持しているlastGetTimeよりも新しいデータだけほしいというWhereを追加してあげます。
query.OrderByDescending("createTime").Limit(20); →query.OrderByDescending("createTime").Where("createTime","&gt;",lastGetTime).Limit(20);加えて、この変更によって、Queryで返却される件数が0の場合があります（データ更新が無い場合、lastGetTimeよりも新しいデータが無いため）
そのためのif追加や、Logを継ぎ足していくだけではなく、表示しきれない範囲分は消していかなくてはいけないため、いきなりlogTextにログを追加するのではなく、Listの形で表示分の文字列リストを作成してからlogTextにセットするようにします。※要注意！：createTimeは実際にはlongでデータが入っていますが、SpreadSheetObject上ではobject型なので、よしなにキャストしてあげる必要がありますこの修正により、ローカルにあるデータは来なくなるので、通信量の削減につながります。
たかが、チャット。　しかも5秒に1回しか更新しない、プル型のチャットですが、いろいろな基本が詰まっており、これが出来れば大体のことができるんじゃないかと思ってます。
次回は、実際にゲームにランキング機能を付けて行きたいと思います。


